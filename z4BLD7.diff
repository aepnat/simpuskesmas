diff --git a/cek_login.php b/cek_login.php
index 2ec7d041f719c02ccef4048f4476d4bf46ea3abd..3138db96f7bb17bad3b6a97204bbf1e24356527d 100755
--- a/cek_login.php
+++ b/cek_login.php
@@ -1,88 +1,78 @@
-<?php
-include "config/koneksi.php";
-function anti_injection($data){
-  $filter = mysql_real_escape_string(stripslashes(strip_tags(htmlspecialchars($data,ENT_QUOTES))));
-  return $filter;
-}
-
-//$pass=md5($_POST[password]);
-
-$userid     = anti_injection($_POST[userid]);
-$pass       = anti_injection($_POST[password]);
-$module     = anti_injection($_POST[module]);
-
-$login=mysql_query("SELECT a.*,b.id_tipe_sales 
+<?php
+include 'config/koneksi.php';
+function anti_injection($data)
+{
+    $filter = mysql_real_escape_string(stripslashes(strip_tags(htmlspecialchars($data, ENT_QUOTES))));
+
+    return $filter;
+}
+
+//$pass=md5($_POST[password]);
+
+$userid = anti_injection($_POST[userid]);
+$pass = anti_injection($_POST[password]);
+$module = anti_injection($_POST[module]);
+
+$login = mysql_query("SELECT a.*,b.id_tipe_sales 
                     FROM user a LEFT JOIN groups b
                     on a.id_groups = b.id_groups
-                    WHERE a.id_user='$userid' AND a.password='$pass' and a.aktif='Y'");
-
-$find=mysql_num_rows($login);
-$r=mysql_fetch_array($login);
-
-// Apabila userid dan password ditemukan
-if ($find > 0){
-  session_start();
-  //session_register("userid");
-//  session_register("username");
-//  session_register("pass");
-//  session_register("role");
-//  session_register("dept");
-//  session_register("posisi");
-//  session_register("uclient");
-  
-
-  $_SESSION['userid']     = $r['id_user'];
-  $_SESSION['username']   = $r['username'];
-  $_SESSION['iusername']   = $r['username'];
-  $_SESSION['password']	  = $r['password'];
-  $_SESSION['groups']     = $r['id_groups'];
-  $_SESSION['tipe_sales'] = $r['id_tipe_sales'];
-  $_SESSION['outlet']  = $r['id_outlet'];
-  $_SESSION['role']     = $r['role'];
-  $_SESSION['pict']       = $r['pict'];
-  $_SESSION['r_input']	  = $r['r_input'];
-  $_SESSION['r_edit']	    = $r['r_edit'];
-  $_SESSION['r_delete']	  = $r['r_delete'];
-  $_SESSION['r_admin']   = $r['r_admin'];
-
-
-  $gsql=mysql_query("SELECT main_page FROM groups WHERE id_groups ='$r[id_groups]'");
-  $g=mysql_fetch_array($gsql);
-
-  if ($g['main_page']) {
-    $lmodule = $g['main_page'];
-  } else {
-     $lmodule = '?module='.$module;
-  }
-
-
-  $sql=mysql_query("SELECT * FROM modul WHERE link ='$lmodule'");
-
-  $r=mysql_fetch_array($sql);
-
-  if ($r['id_modul']) {
-    $imodule = $r['link'];  
-    $id_module = $r['id_modul'];
-    $kode = $r['kode'];
-
-  } else {
-    $imodule = '?home';  
-    $id_module = '54';
-    $kode = '';    
-  }
-
-  
-   
-  header('location:main.php'.$imodule.'&id_module='.$id_module.'&kode='.$kode.'');
-
-} else {
-
-
- echo "<script>window.alert('User Id atau password tidak cocok.'); window.location=('index.php?userid=$userid&module=$module')</script>";
-
-
-?>
-
-<?php  
-}
+                    WHERE a.id_user='$userid' AND a.password='$pass' and a.aktif='Y'");
+
+$find = mysql_num_rows($login);
+$r = mysql_fetch_array($login);
+
+// Apabila userid dan password ditemukan
+if ($find > 0) {
+    session_start();
+    //session_register("userid");
+    //  session_register("username");
+    //  session_register("pass");
+    //  session_register("role");
+    //  session_register("dept");
+    //  session_register("posisi");
+    //  session_register("uclient");
+
+    $_SESSION['userid'] = $r['id_user'];
+    $_SESSION['username'] = $r['username'];
+    $_SESSION['iusername'] = $r['username'];
+    $_SESSION['password'] = $r['password'];
+    $_SESSION['groups'] = $r['id_groups'];
+    $_SESSION['tipe_sales'] = $r['id_tipe_sales'];
+    $_SESSION['outlet'] = $r['id_outlet'];
+    $_SESSION['role'] = $r['role'];
+    $_SESSION['pict'] = $r['pict'];
+    $_SESSION['r_input'] = $r['r_input'];
+    $_SESSION['r_edit'] = $r['r_edit'];
+    $_SESSION['r_delete'] = $r['r_delete'];
+    $_SESSION['r_admin'] = $r['r_admin'];
+
+    $gsql = mysql_query("SELECT main_page FROM groups WHERE id_groups ='$r[id_groups]'");
+    $g = mysql_fetch_array($gsql);
+
+    if ($g['main_page']) {
+        $lmodule = $g['main_page'];
+    } else {
+        $lmodule = '?module='.$module;
+    }
+
+    $sql = mysql_query("SELECT * FROM modul WHERE link ='$lmodule'");
+
+    $r = mysql_fetch_array($sql);
+
+    if ($r['id_modul']) {
+        $imodule = $r['link'];
+        $id_module = $r['id_modul'];
+        $kode = $r['kode'];
+    } else {
+        $imodule = '?home';
+        $id_module = '54';
+        $kode = '';
+    }
+
+    header('location:main.php'.$imodule.'&id_module='.$id_module.'&kode='.$kode.'');
+} else {
+    echo "<script>window.alert('User Id atau password tidak cocok.'); window.location=('index.php?userid=$userid&module=$module')</script>"; ?>
+
+<?php
+}
 ?>
diff --git a/config/bar128.php b/config/bar128.php
index bdbc19a7457e5b0af3d9f90daadabf1f90d1f4fd..e747d19ccc7461579898b50d92e298fc7936463c 100755
--- a/config/bar128.php
+++ b/config/bar128.php
@@ -1,13 +1,13 @@
-<?php /* version 1.1
-Code By Andrew Jackson
-Adapted From Dan Billeci
-dabilleci@hotmail.com
-	
-USAGE:
-echo bar128( "MyBarCode123" [,Height In Pixels] );	/// PRINTS HTML IMG TABLE OF THE CODE
-Info From: http://www.barcode-1.net/pub/russadam/128code.html
-
-*///Define Constants: height is a constant in div.b128 as height of bars
+<?php /* version 1.1
+Code By Andrew Jackson
+Adapted From Dan Billeci
+dabilleci@hotmail.com
+
+USAGE:
+echo bar128( "MyBarCode123" [,Height In Pixels] );	/// PRINTS HTML IMG TABLE OF THE CODE
+Info From: http://www.barcode-1.net/pub/russadam/128code.html
+
+*///Define Constants: height is a constant in div.b128 as height of bars
 ?>
 <style>
 div.b128{
@@ -16,37 +16,41 @@ div.b128{
 }	
 </style>
 
-<?php
-global $char128asc,$char128charWidth;
-$char128asc=' !"#$%&\'()*+,-./0123456789:;<=>?@ABCDEFGHIJKLMNOPQRSTUVWXYZ[\]^_`abcdefghijklmnopqrstuvwxyz{|}~';					
-$char128wid = array(
-	'212222','222122','222221','121223','121322','131222','122213','122312','132212','221213', // 0-9 
-	'221312','231212','112232','122132','122231','113222','123122','123221','223211','221132', // 10-19 
-	'221231','213212','223112','312131','311222','321122','321221','312212','322112','322211', // 20-29 			
-	'212123','212321','232121','111323','131123','131321','112313','132113','132311','211313', // 30-39 
-	'231113','231311','112133','112331','132131','113123','113321','133121','313121','211331', // 40-49 
-	'231131','213113','213311','213131','311123','311321','331121','312113','312311','332111', // 50-59 
-	'314111','221411','431111','111224','111422','121124','121421','141122','141221','112214', // 60-69 
-	'112412','122114','122411','142112','142211','241211','221114','413111','241112','134111', // 70-79 
-	'111242','121142','121241','114212','124112','124211','411212','421112','421211','212141', // 80-89 
-	'214121','412121','111143','111341','131141','114113','114311','411113','411311','113141', // 90-99
-	'114131','311141','411131','211412','211214','211232','23311120'   );					   // 100-106
-
-////Define Function
-function bar128($text) {						// Part 1, make list of widths
-  global $char128asc,$char128wid;				
-  $w = $char128wid[$sum = 104];							// START symbol
-  $onChar=1;
-  for($x=0;$x<strlen($text);$x++)								// GO THRU TEXT GET LETTERS
-    if (!( ($pos = strpos($char128asc,$text[$x])) === false )){	// SKIP NOT FOUND CHARS
-	  $w.= $char128wid[$pos];
-	  $sum += $onChar++ * $pos;
-	}					
-  $w.= $char128wid[ $sum % 103 ].$char128wid[106];  		//Check Code, then END
-	 					 						//Part 2, Write rows
-  $html="<table cellpadding=0 cellspacing=0><tr>";				
-  for($x=0;$x<strlen($w);$x+=2)   						// code 128 widths: black border, then white space
-	$html .= "<td><div class=\"b128\" style=\"border-left-width:{$w[$x]};width:{$w[$x+1]}\"></div>";	
-  return "$html</table>";		
-}
+<?php
+global $char128asc,$char128charWidth;
+$char128asc = ' !"#$%&\'()*+,-./0123456789:;<=>?@ABCDEFGHIJKLMNOPQRSTUVWXYZ[\]^_`abcdefghijklmnopqrstuvwxyz{|}~';
+$char128wid = [
+    '212222', '222122', '222221', '121223', '121322', '131222', '122213', '122312', '132212', '221213', // 0-9
+    '221312', '231212', '112232', '122132', '122231', '113222', '123122', '123221', '223211', '221132', // 10-19
+    '221231', '213212', '223112', '312131', '311222', '321122', '321221', '312212', '322112', '322211', // 20-29
+    '212123', '212321', '232121', '111323', '131123', '131321', '112313', '132113', '132311', '211313', // 30-39
+    '231113', '231311', '112133', '112331', '132131', '113123', '113321', '133121', '313121', '211331', // 40-49
+    '231131', '213113', '213311', '213131', '311123', '311321', '331121', '312113', '312311', '332111', // 50-59
+    '314111', '221411', '431111', '111224', '111422', '121124', '121421', '141122', '141221', '112214', // 60-69
+    '112412', '122114', '122411', '142112', '142211', '241211', '221114', '413111', '241112', '134111', // 70-79
+    '111242', '121142', '121241', '114212', '124112', '124211', '411212', '421112', '421211', '212141', // 80-89
+    '214121', '412121', '111143', '111341', '131141', '114113', '114311', '411113', '411311', '113141', // 90-99
+    '114131', '311141', '411131', '211412', '211214', '211232', '23311120',   ];					   // 100-106
+
+////Define Function
+function bar128($text)
+{						// Part 1, make list of widths
+  global $char128asc,$char128wid;
+    $w = $char128wid[$sum = 104];							// START symbol
+    $onChar = 1;
+    for ($x = 0; $x < strlen($text); $x++) {								// GO THRU TEXT GET LETTERS
+    if (!(($pos = strpos($char128asc, $text[$x])) === false)) {	// SKIP NOT FOUND CHARS
+      $w .= $char128wid[$pos];
+        $sum += $onChar++ * $pos;
+    }
+    }
+    $w .= $char128wid[$sum % 103].$char128wid[106];  		//Check Code, then END
+    //Part 2, Write rows
+    $html = '<table cellpadding=0 cellspacing=0><tr>';
+    for ($x = 0; $x < strlen($w); $x += 2) {   						// code 128 widths: black border, then white space
+        $html .= "<td><div class=\"b128\" style=\"border-left-width:{$w[$x]};width:{$w[$x + 1]}\"></div>";
+    }
+
+    return "$html</table>";
+}
 ?>
\ No newline at end of file
diff --git a/config/barcode.php b/config/barcode.php
index 91d2799c3d76c44c92a0e75b0eb594fcfd4a60d9..2d102f5d87ddf317c642bc8ab74e41fdbff40bc0 100755
--- a/config/barcode.php
+++ b/config/barcode.php
@@ -3,151 +3,154 @@
 /*
  *  Author	David S. Tufts
  *  Company	davidscotttufts.com
- *	  
+ *
  *  Date:	05/25/2003
  *  Usage:	<img src="/barcode.php?text=testing" alt="testing" />
  */
 
 // For demonstration purposes, get pararameters that are passed in through $_GET or set to the default value
-$filepath = (isset($_GET["filepath"])?$_GET["filepath"]:"");
-$text = (isset($_GET["text"])?$_GET["text"]:"0");
-$size = (isset($_GET["size"])?$_GET["size"]:"20");
-$orientation = (isset($_GET["orientation"])?$_GET["orientation"]:"horizontal");
-$code_type = (isset($_GET["codetype"])?$_GET["codetype"]:"code128");
-$print = (isset($_GET["print"])&&$_GET["print"]=='true'?true:false);
-$sizefactor = (isset($_GET["sizefactor"])?$_GET["sizefactor"]:"1");
+$filepath = (isset($_GET['filepath']) ? $_GET['filepath'] : '');
+$text = (isset($_GET['text']) ? $_GET['text'] : '0');
+$size = (isset($_GET['size']) ? $_GET['size'] : '20');
+$orientation = (isset($_GET['orientation']) ? $_GET['orientation'] : 'horizontal');
+$code_type = (isset($_GET['codetype']) ? $_GET['codetype'] : 'code128');
+$print = (isset($_GET['print']) && $_GET['print'] == 'true' ? true : false);
+$sizefactor = (isset($_GET['sizefactor']) ? $_GET['sizefactor'] : '1');
 
 // This function call can be copied into your project and can be made from anywhere in your code
-barcode( $filepath, $text, $size, $orientation, $code_type, $print, $sizefactor );
-
-function barcode( $filepath="", $text="0", $size="20", $orientation="horizontal", $code_type="code128", $print=false, $SizeFactor=1 ) {
-	$code_string = "";
-	// Translate the $text into barcode the correct $code_type
-	if ( in_array(strtolower($code_type), array("code128", "code128b")) ) {
-		$chksum = 104;
-		// Must not change order of array elements as the checksum depends on the array's key to validate final code
-		$code_array = array(" "=>"212222","!"=>"222122","\""=>"222221","#"=>"121223","$"=>"121322","%"=>"131222","&"=>"122213","'"=>"122312","("=>"132212",")"=>"221213","*"=>"221312","+"=>"231212",","=>"112232","-"=>"122132","."=>"122231","/"=>"113222","0"=>"123122","1"=>"123221","2"=>"223211","3"=>"221132","4"=>"221231","5"=>"213212","6"=>"223112","7"=>"312131","8"=>"311222","9"=>"321122",":"=>"321221",";"=>"312212","<"=>"322112","="=>"322211",">"=>"212123","?"=>"212321","@"=>"232121","A"=>"111323","B"=>"131123","C"=>"131321","D"=>"112313","E"=>"132113","F"=>"132311","G"=>"211313","H"=>"231113","I"=>"231311","J"=>"112133","K"=>"112331","L"=>"132131","M"=>"113123","N"=>"113321","O"=>"133121","P"=>"313121","Q"=>"211331","R"=>"231131","S"=>"213113","T"=>"213311","U"=>"213131","V"=>"311123","W"=>"311321","X"=>"331121","Y"=>"312113","Z"=>"312311","["=>"332111","\\"=>"314111","]"=>"221411","^"=>"431111","_"=>"111224","\`"=>"111422","a"=>"121124","b"=>"121421","c"=>"141122","d"=>"141221","e"=>"112214","f"=>"112412","g"=>"122114","h"=>"122411","i"=>"142112","j"=>"142211","k"=>"241211","l"=>"221114","m"=>"413111","n"=>"241112","o"=>"134111","p"=>"111242","q"=>"121142","r"=>"121241","s"=>"114212","t"=>"124112","u"=>"124211","v"=>"411212","w"=>"421112","x"=>"421211","y"=>"212141","z"=>"214121","{"=>"412121","|"=>"111143","}"=>"111341","~"=>"131141","DEL"=>"114113","FNC 3"=>"114311","FNC 2"=>"411113","SHIFT"=>"411311","CODE C"=>"113141","FNC 4"=>"114131","CODE A"=>"311141","FNC 1"=>"411131","Start A"=>"211412","Start B"=>"211214","Start C"=>"211232","Stop"=>"2331112");
-		$code_keys = array_keys($code_array);
-		$code_values = array_flip($code_keys);
-		for ( $X = 1; $X <= strlen($text); $X++ ) {
-			$activeKey = substr( $text, ($X-1), 1);
-			$code_string .= $code_array[$activeKey];
-			$chksum=($chksum + ($code_values[$activeKey] * $X));
-		}
-		$code_string .= $code_array[$code_keys[($chksum - (intval($chksum / 103) * 103))]];
-
-		$code_string = "211214" . $code_string . "2331112";
-	} elseif ( strtolower($code_type) == "code128a" ) {
-		$chksum = 103;
-		$text = strtoupper($text); // Code 128A doesn't support lower case
-		// Must not change order of array elements as the checksum depends on the array's key to validate final code
-		$code_array = array(" "=>"212222","!"=>"222122","\""=>"222221","#"=>"121223","$"=>"121322","%"=>"131222","&"=>"122213","'"=>"122312","("=>"132212",")"=>"221213","*"=>"221312","+"=>"231212",","=>"112232","-"=>"122132","."=>"122231","/"=>"113222","0"=>"123122","1"=>"123221","2"=>"223211","3"=>"221132","4"=>"221231","5"=>"213212","6"=>"223112","7"=>"312131","8"=>"311222","9"=>"321122",":"=>"321221",";"=>"312212","<"=>"322112","="=>"322211",">"=>"212123","?"=>"212321","@"=>"232121","A"=>"111323","B"=>"131123","C"=>"131321","D"=>"112313","E"=>"132113","F"=>"132311","G"=>"211313","H"=>"231113","I"=>"231311","J"=>"112133","K"=>"112331","L"=>"132131","M"=>"113123","N"=>"113321","O"=>"133121","P"=>"313121","Q"=>"211331","R"=>"231131","S"=>"213113","T"=>"213311","U"=>"213131","V"=>"311123","W"=>"311321","X"=>"331121","Y"=>"312113","Z"=>"312311","["=>"332111","\\"=>"314111","]"=>"221411","^"=>"431111","_"=>"111224","NUL"=>"111422","SOH"=>"121124","STX"=>"121421","ETX"=>"141122","EOT"=>"141221","ENQ"=>"112214","ACK"=>"112412","BEL"=>"122114","BS"=>"122411","HT"=>"142112","LF"=>"142211","VT"=>"241211","FF"=>"221114","CR"=>"413111","SO"=>"241112","SI"=>"134111","DLE"=>"111242","DC1"=>"121142","DC2"=>"121241","DC3"=>"114212","DC4"=>"124112","NAK"=>"124211","SYN"=>"411212","ETB"=>"421112","CAN"=>"421211","EM"=>"212141","SUB"=>"214121","ESC"=>"412121","FS"=>"111143","GS"=>"111341","RS"=>"131141","US"=>"114113","FNC 3"=>"114311","FNC 2"=>"411113","SHIFT"=>"411311","CODE C"=>"113141","CODE B"=>"114131","FNC 4"=>"311141","FNC 1"=>"411131","Start A"=>"211412","Start B"=>"211214","Start C"=>"211232","Stop"=>"2331112");
-		$code_keys = array_keys($code_array);
-		$code_values = array_flip($code_keys);
-		for ( $X = 1; $X <= strlen($text); $X++ ) {
-			$activeKey = substr( $text, ($X-1), 1);
-			$code_string .= $code_array[$activeKey];
-			$chksum=($chksum + ($code_values[$activeKey] * $X));
-		}
-		$code_string .= $code_array[$code_keys[($chksum - (intval($chksum / 103) * 103))]];
-
-		$code_string = "211412" . $code_string . "2331112";
-	} elseif ( strtolower($code_type) == "code39" ) {
-		$code_array = array("0"=>"111221211","1"=>"211211112","2"=>"112211112","3"=>"212211111","4"=>"111221112","5"=>"211221111","6"=>"112221111","7"=>"111211212","8"=>"211211211","9"=>"112211211","A"=>"211112112","B"=>"112112112","C"=>"212112111","D"=>"111122112","E"=>"211122111","F"=>"112122111","G"=>"111112212","H"=>"211112211","I"=>"112112211","J"=>"111122211","K"=>"211111122","L"=>"112111122","M"=>"212111121","N"=>"111121122","O"=>"211121121","P"=>"112121121","Q"=>"111111222","R"=>"211111221","S"=>"112111221","T"=>"111121221","U"=>"221111112","V"=>"122111112","W"=>"222111111","X"=>"121121112","Y"=>"221121111","Z"=>"122121111","-"=>"121111212","."=>"221111211"," "=>"122111211","$"=>"121212111","/"=>"121211121","+"=>"121112121","%"=>"111212121","*"=>"121121211");
-
-		// Convert to uppercase
-		$upper_text = strtoupper($text);
-
-		for ( $X = 1; $X<=strlen($upper_text); $X++ ) {
-			$code_string .= $code_array[substr( $upper_text, ($X-1), 1)] . "1";
-		}
-
-		$code_string = "1211212111" . $code_string . "121121211";
-	} elseif ( strtolower($code_type) == "code25" ) {
-		$code_array1 = array("1","2","3","4","5","6","7","8","9","0");
-		$code_array2 = array("3-1-1-1-3","1-3-1-1-3","3-3-1-1-1","1-1-3-1-3","3-1-3-1-1","1-3-3-1-1","1-1-1-3-3","3-1-1-3-1","1-3-1-3-1","1-1-3-3-1");
-
-		for ( $X = 1; $X <= strlen($text); $X++ ) {
-			for ( $Y = 0; $Y < count($code_array1); $Y++ ) {
-				if ( substr($text, ($X-1), 1) == $code_array1[$Y] )
-					$temp[$X] = $code_array2[$Y];
-			}
-		}
-
-		for ( $X=1; $X<=strlen($text); $X+=2 ) {
-			if ( isset($temp[$X]) && isset($temp[($X + 1)]) ) {
-				$temp1 = explode( "-", $temp[$X] );
-				$temp2 = explode( "-", $temp[($X + 1)] );
-				for ( $Y = 0; $Y < count($temp1); $Y++ )
-					$code_string .= $temp1[$Y] . $temp2[$Y];
-			}
-		}
-
-		$code_string = "1111" . $code_string . "311";
-	} elseif ( strtolower($code_type) == "codabar" ) {
-		$code_array1 = array("1","2","3","4","5","6","7","8","9","0","-","$",":","/",".","+","A","B","C","D");
-		$code_array2 = array("1111221","1112112","2211111","1121121","2111121","1211112","1211211","1221111","2112111","1111122","1112211","1122111","2111212","2121112","2121211","1121212","1122121","1212112","1112122","1112221");
-
-		// Convert to uppercase
-		$upper_text = strtoupper($text);
-
-		for ( $X = 1; $X<=strlen($upper_text); $X++ ) {
-			for ( $Y = 0; $Y<count($code_array1); $Y++ ) {
-				if ( substr($upper_text, ($X-1), 1) == $code_array1[$Y] )
-					$code_string .= $code_array2[$Y] . "1";
-			}
-		}
-		$code_string = "11221211" . $code_string . "1122121";
-	}
-
-	// Pad the edges of the barcode
-	$code_length = 20;
-	if ($print) {
-		$text_height = 30;
-	} else {
-		$text_height = 0;
-	}
-	
-	for ( $i=1; $i <= strlen($code_string); $i++ ){
-		$code_length = $code_length + (integer)(substr($code_string,($i-1),1));
+barcode($filepath, $text, $size, $orientation, $code_type, $print, $sizefactor);
+
+function barcode($filepath = '', $text = '0', $size = '20', $orientation = 'horizontal', $code_type = 'code128', $print = false, $SizeFactor = 1)
+{
+    $code_string = '';
+    // Translate the $text into barcode the correct $code_type
+    if (in_array(strtolower($code_type), ['code128', 'code128b'])) {
+        $chksum = 104;
+        // Must not change order of array elements as the checksum depends on the array's key to validate final code
+        $code_array = [' '=>'212222', '!'=>'222122', '"'=>'222221', '#'=>'121223', '$'=>'121322', '%'=>'131222', '&'=>'122213', "'"=>'122312', '('=>'132212', ')'=>'221213', '*'=>'221312', '+'=>'231212', ','=>'112232', '-'=>'122132', '.'=>'122231', '/'=>'113222', '0'=>'123122', '1'=>'123221', '2'=>'223211', '3'=>'221132', '4'=>'221231', '5'=>'213212', '6'=>'223112', '7'=>'312131', '8'=>'311222', '9'=>'321122', ':'=>'321221', ';'=>'312212', '<'=>'322112', '='=>'322211', '>'=>'212123', '?'=>'212321', '@'=>'232121', 'A'=>'111323', 'B'=>'131123', 'C'=>'131321', 'D'=>'112313', 'E'=>'132113', 'F'=>'132311', 'G'=>'211313', 'H'=>'231113', 'I'=>'231311', 'J'=>'112133', 'K'=>'112331', 'L'=>'132131', 'M'=>'113123', 'N'=>'113321', 'O'=>'133121', 'P'=>'313121', 'Q'=>'211331', 'R'=>'231131', 'S'=>'213113', 'T'=>'213311', 'U'=>'213131', 'V'=>'311123', 'W'=>'311321', 'X'=>'331121', 'Y'=>'312113', 'Z'=>'312311', '['=>'332111', '\\'=>'314111', ']'=>'221411', '^'=>'431111', '_'=>'111224', "\`"=>'111422', 'a'=>'121124', 'b'=>'121421', 'c'=>'141122', 'd'=>'141221', 'e'=>'112214', 'f'=>'112412', 'g'=>'122114', 'h'=>'122411', 'i'=>'142112', 'j'=>'142211', 'k'=>'241211', 'l'=>'221114', 'm'=>'413111', 'n'=>'241112', 'o'=>'134111', 'p'=>'111242', 'q'=>'121142', 'r'=>'121241', 's'=>'114212', 't'=>'124112', 'u'=>'124211', 'v'=>'411212', 'w'=>'421112', 'x'=>'421211', 'y'=>'212141', 'z'=>'214121', '{'=>'412121', '|'=>'111143', '}'=>'111341', '~'=>'131141', 'DEL'=>'114113', 'FNC 3'=>'114311', 'FNC 2'=>'411113', 'SHIFT'=>'411311', 'CODE C'=>'113141', 'FNC 4'=>'114131', 'CODE A'=>'311141', 'FNC 1'=>'411131', 'Start A'=>'211412', 'Start B'=>'211214', 'Start C'=>'211232', 'Stop'=>'2331112'];
+        $code_keys = array_keys($code_array);
+        $code_values = array_flip($code_keys);
+        for ($X = 1; $X <= strlen($text); $X++) {
+            $activeKey = substr($text, ($X - 1), 1);
+            $code_string .= $code_array[$activeKey];
+            $chksum = ($chksum + ($code_values[$activeKey] * $X));
         }
+        $code_string .= $code_array[$code_keys[($chksum - (intval($chksum / 103) * 103))]];
+
+        $code_string = '211214'.$code_string.'2331112';
+    } elseif (strtolower($code_type) == 'code128a') {
+        $chksum = 103;
+        $text = strtoupper($text); // Code 128A doesn't support lower case
+        // Must not change order of array elements as the checksum depends on the array's key to validate final code
+        $code_array = [' '=>'212222', '!'=>'222122', '"'=>'222221', '#'=>'121223', '$'=>'121322', '%'=>'131222', '&'=>'122213', "'"=>'122312', '('=>'132212', ')'=>'221213', '*'=>'221312', '+'=>'231212', ','=>'112232', '-'=>'122132', '.'=>'122231', '/'=>'113222', '0'=>'123122', '1'=>'123221', '2'=>'223211', '3'=>'221132', '4'=>'221231', '5'=>'213212', '6'=>'223112', '7'=>'312131', '8'=>'311222', '9'=>'321122', ':'=>'321221', ';'=>'312212', '<'=>'322112', '='=>'322211', '>'=>'212123', '?'=>'212321', '@'=>'232121', 'A'=>'111323', 'B'=>'131123', 'C'=>'131321', 'D'=>'112313', 'E'=>'132113', 'F'=>'132311', 'G'=>'211313', 'H'=>'231113', 'I'=>'231311', 'J'=>'112133', 'K'=>'112331', 'L'=>'132131', 'M'=>'113123', 'N'=>'113321', 'O'=>'133121', 'P'=>'313121', 'Q'=>'211331', 'R'=>'231131', 'S'=>'213113', 'T'=>'213311', 'U'=>'213131', 'V'=>'311123', 'W'=>'311321', 'X'=>'331121', 'Y'=>'312113', 'Z'=>'312311', '['=>'332111', '\\'=>'314111', ']'=>'221411', '^'=>'431111', '_'=>'111224', 'NUL'=>'111422', 'SOH'=>'121124', 'STX'=>'121421', 'ETX'=>'141122', 'EOT'=>'141221', 'ENQ'=>'112214', 'ACK'=>'112412', 'BEL'=>'122114', 'BS'=>'122411', 'HT'=>'142112', 'LF'=>'142211', 'VT'=>'241211', 'FF'=>'221114', 'CR'=>'413111', 'SO'=>'241112', 'SI'=>'134111', 'DLE'=>'111242', 'DC1'=>'121142', 'DC2'=>'121241', 'DC3'=>'114212', 'DC4'=>'124112', 'NAK'=>'124211', 'SYN'=>'411212', 'ETB'=>'421112', 'CAN'=>'421211', 'EM'=>'212141', 'SUB'=>'214121', 'ESC'=>'412121', 'FS'=>'111143', 'GS'=>'111341', 'RS'=>'131141', 'US'=>'114113', 'FNC 3'=>'114311', 'FNC 2'=>'411113', 'SHIFT'=>'411311', 'CODE C'=>'113141', 'CODE B'=>'114131', 'FNC 4'=>'311141', 'FNC 1'=>'411131', 'Start A'=>'211412', 'Start B'=>'211214', 'Start C'=>'211232', 'Stop'=>'2331112'];
+        $code_keys = array_keys($code_array);
+        $code_values = array_flip($code_keys);
+        for ($X = 1; $X <= strlen($text); $X++) {
+            $activeKey = substr($text, ($X - 1), 1);
+            $code_string .= $code_array[$activeKey];
+            $chksum = ($chksum + ($code_values[$activeKey] * $X));
+        }
+        $code_string .= $code_array[$code_keys[($chksum - (intval($chksum / 103) * 103))]];
 
-	if ( strtolower($orientation) == "horizontal" ) {
-		$img_width = $code_length*$SizeFactor;
-		$img_height = $size;
-	} else {
-		$img_width = $size;
-		$img_height = $code_length*$SizeFactor;
-	}
-
-	$image = imagecreate($img_width, $img_height + $text_height);
-	$black = imagecolorallocate ($image, 0, 0, 0);
-	$white = imagecolorallocate ($image, 255, 255, 255);
-
-	imagefill( $image, 0, 0, $white );
-	if ( $print ) {
-		imagestring($image, 5, 31, $img_height, $text, $black );
-	}
-
-	$location = 10;
-	for ( $position = 1 ; $position <= strlen($code_string); $position++ ) {
-		$cur_size = $location + ( substr($code_string, ($position-1), 1) );
-		if ( strtolower($orientation) == "horizontal" )
-			imagefilledrectangle( $image, $location*$SizeFactor, 0, $cur_size*$SizeFactor, $img_height, ($position % 2 == 0 ? $white : $black) );
-		else
-			imagefilledrectangle( $image, 0, $location*$SizeFactor, $img_width, $cur_size*$SizeFactor, ($position % 2 == 0 ? $white : $black) );
-		$location = $cur_size;
-	}
-	
-	// Draw barcode to the screen or save in a file
-	if ( $filepath=="" ) {
-		header ('Content-type: image/png');
-		imagepng($image);
-		imagedestroy($image);
-	} else {
-		imagepng($image,$filepath);
-		imagedestroy($image);		
-	}
-}
+        $code_string = '211412'.$code_string.'2331112';
+    } elseif (strtolower($code_type) == 'code39') {
+        $code_array = ['0'=>'111221211', '1'=>'211211112', '2'=>'112211112', '3'=>'212211111', '4'=>'111221112', '5'=>'211221111', '6'=>'112221111', '7'=>'111211212', '8'=>'211211211', '9'=>'112211211', 'A'=>'211112112', 'B'=>'112112112', 'C'=>'212112111', 'D'=>'111122112', 'E'=>'211122111', 'F'=>'112122111', 'G'=>'111112212', 'H'=>'211112211', 'I'=>'112112211', 'J'=>'111122211', 'K'=>'211111122', 'L'=>'112111122', 'M'=>'212111121', 'N'=>'111121122', 'O'=>'211121121', 'P'=>'112121121', 'Q'=>'111111222', 'R'=>'211111221', 'S'=>'112111221', 'T'=>'111121221', 'U'=>'221111112', 'V'=>'122111112', 'W'=>'222111111', 'X'=>'121121112', 'Y'=>'221121111', 'Z'=>'122121111', '-'=>'121111212', '.'=>'221111211', ' '=>'122111211', '$'=>'121212111', '/'=>'121211121', '+'=>'121112121', '%'=>'111212121', '*'=>'121121211'];
+
+        // Convert to uppercase
+        $upper_text = strtoupper($text);
+
+        for ($X = 1; $X <= strlen($upper_text); $X++) {
+            $code_string .= $code_array[substr($upper_text, ($X - 1), 1)].'1';
+        }
+
+        $code_string = '1211212111'.$code_string.'121121211';
+    } elseif (strtolower($code_type) == 'code25') {
+        $code_array1 = ['1', '2', '3', '4', '5', '6', '7', '8', '9', '0'];
+        $code_array2 = ['3-1-1-1-3', '1-3-1-1-3', '3-3-1-1-1', '1-1-3-1-3', '3-1-3-1-1', '1-3-3-1-1', '1-1-1-3-3', '3-1-1-3-1', '1-3-1-3-1', '1-1-3-3-1'];
+
+        for ($X = 1; $X <= strlen($text); $X++) {
+            for ($Y = 0; $Y < count($code_array1); $Y++) {
+                if (substr($text, ($X - 1), 1) == $code_array1[$Y]) {
+                    $temp[$X] = $code_array2[$Y];
+                }
+            }
+        }
 
-?>
+        for ($X = 1; $X <= strlen($text); $X += 2) {
+            if (isset($temp[$X]) && isset($temp[($X + 1)])) {
+                $temp1 = explode('-', $temp[$X]);
+                $temp2 = explode('-', $temp[($X + 1)]);
+                for ($Y = 0; $Y < count($temp1); $Y++) {
+                    $code_string .= $temp1[$Y].$temp2[$Y];
+                }
+            }
+        }
+
+        $code_string = '1111'.$code_string.'311';
+    } elseif (strtolower($code_type) == 'codabar') {
+        $code_array1 = ['1', '2', '3', '4', '5', '6', '7', '8', '9', '0', '-', '$', ':', '/', '.', '+', 'A', 'B', 'C', 'D'];
+        $code_array2 = ['1111221', '1112112', '2211111', '1121121', '2111121', '1211112', '1211211', '1221111', '2112111', '1111122', '1112211', '1122111', '2111212', '2121112', '2121211', '1121212', '1122121', '1212112', '1112122', '1112221'];
+
+        // Convert to uppercase
+        $upper_text = strtoupper($text);
+
+        for ($X = 1; $X <= strlen($upper_text); $X++) {
+            for ($Y = 0; $Y < count($code_array1); $Y++) {
+                if (substr($upper_text, ($X - 1), 1) == $code_array1[$Y]) {
+                    $code_string .= $code_array2[$Y].'1';
+                }
+            }
+        }
+        $code_string = '11221211'.$code_string.'1122121';
+    }
+
+    // Pad the edges of the barcode
+    $code_length = 20;
+    if ($print) {
+        $text_height = 30;
+    } else {
+        $text_height = 0;
+    }
+
+    for ($i = 1; $i <= strlen($code_string); $i++) {
+        $code_length = $code_length + (int) (substr($code_string, ($i - 1), 1));
+    }
+
+    if (strtolower($orientation) == 'horizontal') {
+        $img_width = $code_length * $SizeFactor;
+        $img_height = $size;
+    } else {
+        $img_width = $size;
+        $img_height = $code_length * $SizeFactor;
+    }
+
+    $image = imagecreate($img_width, $img_height + $text_height);
+    $black = imagecolorallocate($image, 0, 0, 0);
+    $white = imagecolorallocate($image, 255, 255, 255);
+
+    imagefill($image, 0, 0, $white);
+    if ($print) {
+        imagestring($image, 5, 31, $img_height, $text, $black);
+    }
+
+    $location = 10;
+    for ($position = 1; $position <= strlen($code_string); $position++) {
+        $cur_size = $location + (substr($code_string, ($position - 1), 1));
+        if (strtolower($orientation) == 'horizontal') {
+            imagefilledrectangle($image, $location * $SizeFactor, 0, $cur_size * $SizeFactor, $img_height, ($position % 2 == 0 ? $white : $black));
+        } else {
+            imagefilledrectangle($image, 0, $location * $SizeFactor, $img_width, $cur_size * $SizeFactor, ($position % 2 == 0 ? $white : $black));
+        }
+        $location = $cur_size;
+    }
+
+    // Draw barcode to the screen or save in a file
+    if ($filepath == '') {
+        header('Content-type: image/png');
+        imagepng($image);
+        imagedestroy($image);
+    } else {
+        imagepng($image, $filepath);
+        imagedestroy($image);
+    }
+}
diff --git a/config/barcode_gen.php b/config/barcode_gen.php
index 41f0d52c4ce93c725f58e37b965ac50ffb02a34f..83108ed03baa8eb784f2b08ca60de0455990e8a3 100755
--- a/config/barcode_gen.php
+++ b/config/barcode_gen.php
@@ -2,7 +2,7 @@
 Code By Andrew Jackson
 Adapted From Dan Billeci
 dabilleci@hotmail.com
-	
+
 USAGE:
 echo bar128( "MyBarCode123" [,Height In Pixels] );	/// PRINTS HTML IMG TABLE OF THE CODE
 Info From: http://www.barcode-1.net/pub/russadam/128code.html
@@ -18,35 +18,39 @@ div.b128{
 
 <?php
 global $char128asc,$char128charWidth;
-$char128asc=' !"#$%&\'()*+,-./0123456789:;<=>?@ABCDEFGHIJKLMNOPQRSTUVWXYZ[\]^_`abcdefghijklmnopqrstuvwxyz{|}~';					
-$char128wid = array(
-	'212222','222122','222221','121223','121322','131222','122213','122312','132212','221213', // 0-9 
-	'221312','231212','112232','122132','122231','113222','123122','123221','223211','221132', // 10-19 
-	'221231','213212','223112','312131','311222','321122','321221','312212','322112','322211', // 20-29 			
-	'212123','212321','232121','111323','131123','131321','112313','132113','132311','211313', // 30-39 
-	'231113','231311','112133','112331','132131','113123','113321','133121','313121','211331', // 40-49 
-	'231131','213113','213311','213131','311123','311321','331121','312113','312311','332111', // 50-59 
-	'314111','221411','431111','111224','111422','121124','121421','141122','141221','112214', // 60-69 
-	'112412','122114','122411','142112','142211','241211','221114','413111','241112','134111', // 70-79 
-	'111242','121142','121241','114212','124112','124211','411212','421112','421211','212141', // 80-89 
-	'214121','412121','111143','111341','131141','114113','114311','411113','411311','113141', // 90-99
-	'114131','311141','411131','211412','211214','211232','23311120'   );					   // 100-106
+$char128asc = ' !"#$%&\'()*+,-./0123456789:;<=>?@ABCDEFGHIJKLMNOPQRSTUVWXYZ[\]^_`abcdefghijklmnopqrstuvwxyz{|}~';
+$char128wid = [
+    '212222', '222122', '222221', '121223', '121322', '131222', '122213', '122312', '132212', '221213', // 0-9
+    '221312', '231212', '112232', '122132', '122231', '113222', '123122', '123221', '223211', '221132', // 10-19
+    '221231', '213212', '223112', '312131', '311222', '321122', '321221', '312212', '322112', '322211', // 20-29
+    '212123', '212321', '232121', '111323', '131123', '131321', '112313', '132113', '132311', '211313', // 30-39
+    '231113', '231311', '112133', '112331', '132131', '113123', '113321', '133121', '313121', '211331', // 40-49
+    '231131', '213113', '213311', '213131', '311123', '311321', '331121', '312113', '312311', '332111', // 50-59
+    '314111', '221411', '431111', '111224', '111422', '121124', '121421', '141122', '141221', '112214', // 60-69
+    '112412', '122114', '122411', '142112', '142211', '241211', '221114', '413111', '241112', '134111', // 70-79
+    '111242', '121142', '121241', '114212', '124112', '124211', '411212', '421112', '421211', '212141', // 80-89
+    '214121', '412121', '111143', '111341', '131141', '114113', '114311', '411113', '411311', '113141', // 90-99
+    '114131', '311141', '411131', '211412', '211214', '211232', '23311120',   ];					   // 100-106
 
 ////Define Function
-function bar128($text) {						// Part 1, make list of widths
-  global $char128asc,$char128wid;				
-  $w = $char128wid[$sum = 104];							// START symbol
-  $onChar=1;
-  for($x=0;$x<strlen($text);$x++)								// GO THRU TEXT GET LETTERS
-    if (!( ($pos = strpos($char128asc,$text[$x])) === false )){	// SKIP NOT FOUND CHARS
-	  $w.= $char128wid[$pos];
-	  $sum += $onChar++ * $pos;
-	}					
-  $w.= $char128wid[ $sum % 103 ].$char128wid[106];  		//Check Code, then END
-	 					 						//Part 2, Write rows
-  $html="<table cellpadding=0 cellspacing=0><tr>";				
-  for($x=0;$x<strlen($w);$x+=2)   						// code 128 widths: black border, then white space
-	$html .= "<td><div class=\"b128\" style=\"border-left-width:{$w[$x]};width:{$w[$x+1]}\"></div>";	
-  return "$html<tr><td  colspan=".strlen($w)." align=center><font family=tahoma size=2>$text</td></tr></table>";		
+function bar128($text)
+{						// Part 1, make list of widths
+  global $char128asc,$char128wid;
+    $w = $char128wid[$sum = 104];							// START symbol
+    $onChar = 1;
+    for ($x = 0; $x < strlen($text); $x++) {								// GO THRU TEXT GET LETTERS
+    if (!(($pos = strpos($char128asc, $text[$x])) === false)) {	// SKIP NOT FOUND CHARS
+      $w .= $char128wid[$pos];
+        $sum += $onChar++ * $pos;
+    }
+    }
+    $w .= $char128wid[$sum % 103].$char128wid[106];  		//Check Code, then END
+    //Part 2, Write rows
+    $html = '<table cellpadding=0 cellspacing=0><tr>';
+    for ($x = 0; $x < strlen($w); $x += 2) {   						// code 128 widths: black border, then white space
+        $html .= "<td><div class=\"b128\" style=\"border-left-width:{$w[$x]};width:{$w[$x + 1]}\"></div>";
+    }
+
+    return "$html<tr><td  colspan=".strlen($w)." align=center><font family=tahoma size=2>$text</td></tr></table>";
 }
 ?>
\ No newline at end of file
diff --git a/config/browser_detection.php b/config/browser_detection.php
index 08de06938509a90268fee1933cfc13dcc9912a3f..cb8a2edb5d48823185d30967ef8190d60b6a5fa7 100755
--- a/config/browser_detection.php
+++ b/config/browser_detection.php
@@ -1,12 +1,8 @@
-<?
-$useragent=$_SERVER['HTTP_USER_AGENT'];
-if(preg_match('/android.+mobile|avantgo|bada\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od)|iris|kindle|lge |maemo|midp|mmp|netfront|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)\/|plucker|pocket|psp|symbian|treo|up\.(browser|link)|vodafone|wap|windows (ce|phone)|xda|xiino/i',$useragent)||preg_match('/1207|6310|6590|3gso|4thp|50[1-6]i|770s|802s|a wa|abac|ac(er|oo|s\-)|ai(ko|rn)|al(av|ca|co)|amoi|an(ex|ny|yw)|aptu|ar(ch|go)|as(te|us)|attw|au(di|\-m|r |s )|avan|be(ck|ll|nq)|bi(lb|rd)|bl(ac|az)|br(e|v)w|bumb|bw\-(n|u)|c55\/|capi|ccwa|cdm\-|cell|chtm|cldc|cmd\-|co(mp|nd)|craw|da(it|ll|ng)|dbte|dc\-s|devi|dica|dmob|do(c|p)o|ds(12|\-d)|el(49|ai)|em(l2|ul)|er(ic|k0)|esl8|ez([4-7]0|os|wa|ze)|fetc|fly(\-|_)|g1 u|g560|gene|gf\-5|g\-mo|go(\.w|od)|gr(ad|un)|haie|hcit|hd\-(m|p|t)|hei\-|hi(pt|ta)|hp( i|ip)|hs\-c|ht(c(\-| |_|a|g|p|s|t)|tp)|hu(aw|tc)|i\-(20|go|ma)|i230|iac( |\-|\/)|ibro|idea|ig01|ikom|im1k|inno|ipaq|iris|ja(t|v)a|jbro|jemu|jigs|kddi|keji|kgt( |\/)|klon|kpt |kwc\-|kyo(c|k)|le(no|xi)|lg( g|\/(k|l|u)|50|54|\-[a-w])|libw|lynx|m1\-w|m3ga|m50\/|ma(te|ui|xo)|mc(01|21|ca)|m\-cr|me(di|rc|ri)|mi(o8|oa|ts)|mmef|mo(01|02|bi|de|do|t(\-| |o|v)|zz)|mt(50|p1|v )|mwbp|mywa|n10[0-2]|n20[2-3]|n30(0|2)|n50(0|2|5)|n7(0(0|1)|10)|ne((c|m)\-|on|tf|wf|wg|wt)|nok(6|i)|nzph|o2im|op(ti|wv)|oran|owg1|p800|pan(a|d|t)|pdxg|pg(13|\-([1-8]|c))|phil|pire|pl(ay|uc)|pn\-2|po(ck|rt|se)|prox|psio|pt\-g|qa\-a|qc(07|12|21|32|60|\-[2-7]|i\-)|qtek|r380|r600|raks|rim9|ro(ve|zo)|s55\/|sa(ge|ma|mm|ms|ny|va)|sc(01|h\-|oo|p\-)|sdk\/|se(c(\-|0|1)|47|mc|nd|ri)|sgh\-|shar|sie(\-|m)|sk\-0|sl(45|id)|sm(al|ar|b3|it|t5)|so(ft|ny)|sp(01|h\-|v\-|v )|sy(01|mb)|t2(18|50)|t6(00|10|18)|ta(gt|lk)|tcl\-|tdg\-|tel(i|m)|tim\-|t\-mo|to(pl|sh)|ts(70|m\-|m3|m5)|tx\-9|up(\.b|g1|si)|utst|v400|v750|veri|vi(rg|te)|vk(40|5[0-3]|\-v)|vm40|voda|vulc|vx(52|53|60|61|70|80|81|83|85|98)|w3c(\-| )|webc|whit|wi(g |nc|nw)|wmlb|wonu|x700|yas\-|your|zeto|zte\-/i',substr($useragent,0,4))) {
-
-$agent = 'mobile';
-
-} else {     
-
-$agent = 'dekstop';
-
-}
-?>
+<?php
+
+$useragent = $_SERVER['HTTP_USER_AGENT'];
+if (preg_match('/android.+mobile|avantgo|bada\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od)|iris|kindle|lge |maemo|midp|mmp|netfront|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)\/|plucker|pocket|psp|symbian|treo|up\.(browser|link)|vodafone|wap|windows (ce|phone)|xda|xiino/i', $useragent) || preg_match('/1207|6310|6590|3gso|4thp|50[1-6]i|770s|802s|a wa|abac|ac(er|oo|s\-)|ai(ko|rn)|al(av|ca|co)|amoi|an(ex|ny|yw)|aptu|ar(ch|go)|as(te|us)|attw|au(di|\-m|r |s )|avan|be(ck|ll|nq)|bi(lb|rd)|bl(ac|az)|br(e|v)w|bumb|bw\-(n|u)|c55\/|capi|ccwa|cdm\-|cell|chtm|cldc|cmd\-|co(mp|nd)|craw|da(it|ll|ng)|dbte|dc\-s|devi|dica|dmob|do(c|p)o|ds(12|\-d)|el(49|ai)|em(l2|ul)|er(ic|k0)|esl8|ez([4-7]0|os|wa|ze)|fetc|fly(\-|_)|g1 u|g560|gene|gf\-5|g\-mo|go(\.w|od)|gr(ad|un)|haie|hcit|hd\-(m|p|t)|hei\-|hi(pt|ta)|hp( i|ip)|hs\-c|ht(c(\-| |_|a|g|p|s|t)|tp)|hu(aw|tc)|i\-(20|go|ma)|i230|iac( |\-|\/)|ibro|idea|ig01|ikom|im1k|inno|ipaq|iris|ja(t|v)a|jbro|jemu|jigs|kddi|keji|kgt( |\/)|klon|kpt |kwc\-|kyo(c|k)|le(no|xi)|lg( g|\/(k|l|u)|50|54|\-[a-w])|libw|lynx|m1\-w|m3ga|m50\/|ma(te|ui|xo)|mc(01|21|ca)|m\-cr|me(di|rc|ri)|mi(o8|oa|ts)|mmef|mo(01|02|bi|de|do|t(\-| |o|v)|zz)|mt(50|p1|v )|mwbp|mywa|n10[0-2]|n20[2-3]|n30(0|2)|n50(0|2|5)|n7(0(0|1)|10)|ne((c|m)\-|on|tf|wf|wg|wt)|nok(6|i)|nzph|o2im|op(ti|wv)|oran|owg1|p800|pan(a|d|t)|pdxg|pg(13|\-([1-8]|c))|phil|pire|pl(ay|uc)|pn\-2|po(ck|rt|se)|prox|psio|pt\-g|qa\-a|qc(07|12|21|32|60|\-[2-7]|i\-)|qtek|r380|r600|raks|rim9|ro(ve|zo)|s55\/|sa(ge|ma|mm|ms|ny|va)|sc(01|h\-|oo|p\-)|sdk\/|se(c(\-|0|1)|47|mc|nd|ri)|sgh\-|shar|sie(\-|m)|sk\-0|sl(45|id)|sm(al|ar|b3|it|t5)|so(ft|ny)|sp(01|h\-|v\-|v )|sy(01|mb)|t2(18|50)|t6(00|10|18)|ta(gt|lk)|tcl\-|tdg\-|tel(i|m)|tim\-|t\-mo|to(pl|sh)|ts(70|m\-|m3|m5)|tx\-9|up(\.b|g1|si)|utst|v400|v750|veri|vi(rg|te)|vk(40|5[0-3]|\-v)|vm40|voda|vulc|vx(52|53|60|61|70|80|81|83|85|98)|w3c(\-| )|webc|whit|wi(g |nc|nw)|wmlb|wonu|x700|yas\-|your|zeto|zte\-/i', substr($useragent, 0, 4))) {
+    $agent = 'mobile';
+} else {
+    $agent = 'dekstop';
+}
diff --git a/config/browser_style.php b/config/browser_style.php
index 441d4078c07d50a4f0fee795dd9ec7c93ad26e29..d2524dc5496943ac4f4ac9e8b0fe46fbac27ef5d 100755
--- a/config/browser_style.php
+++ b/config/browser_style.php
@@ -1,37 +1,37 @@
-    <?php
-//    if ( strpos($_SERVER['HTTP_USER_AGENT'], 'Safari') )
-//    {
-//      echo"<link href='css/i_style.css' type='text/css' rel='stylesheet'>";
-//    }
-//    else if ( strpos($_SERVER['HTTP_USER_AGENT'], 'Gecko') )
-//    {
-//       if ( strpos($_SERVER['HTTP_USER_AGENT'], 'Netscape') )
-//       {
-//         echo"<link href='css/i_style.css' type='text/css' rel='stylesheet'>";
-//       }
-//       else if ( strpos($_SERVER['HTTP_USER_AGENT'], 'Firefox') )
-//       {
-//         echo"<link href='css/i_style.css' type='text/css' rel='stylesheet'>";
-//       }
-//       else
-//       {
-//         echo"<link href='css/i_style.css' type='text/css' rel='stylesheet'>";
-//       }
-//    }
-//    else if ( strpos($_SERVER['HTTP_USER_AGENT'], 'MSIE') )
-//    {
-//      echo"<link href='css/i_style_io.css' type='text/css' rel='stylesheet'>";
-//    }
-//    else if ( strpos($_SERVER['HTTP_USER_AGENT'], 'Opera') === true)
-//    {
-//       echo"<link href='css/i_style_io.css' type='text/css' rel='stylesheet'>";
-//    }
-//    else
-//    {
-//       echo"<link href='css/i_style_io.css' type='text/css' rel='stylesheet'>";
-//    }
-//
-//    ?>
-	<?
-   echo" <link href='css/i_style.css' type='text/css' rel='stylesheet'>";
+    <?php
+//    if ( strpos($_SERVER['HTTP_USER_AGENT'], 'Safari') )
+//    {
+//      echo"<link href='css/i_style.css' type='text/css' rel='stylesheet'>";
+//    }
+//    else if ( strpos($_SERVER['HTTP_USER_AGENT'], 'Gecko') )
+//    {
+//       if ( strpos($_SERVER['HTTP_USER_AGENT'], 'Netscape') )
+//       {
+//         echo"<link href='css/i_style.css' type='text/css' rel='stylesheet'>";
+//       }
+//       else if ( strpos($_SERVER['HTTP_USER_AGENT'], 'Firefox') )
+//       {
+//         echo"<link href='css/i_style.css' type='text/css' rel='stylesheet'>";
+//       }
+//       else
+//       {
+//         echo"<link href='css/i_style.css' type='text/css' rel='stylesheet'>";
+//       }
+//    }
+//    else if ( strpos($_SERVER['HTTP_USER_AGENT'], 'MSIE') )
+//    {
+//      echo"<link href='css/i_style_io.css' type='text/css' rel='stylesheet'>";
+//    }
+//    else if ( strpos($_SERVER['HTTP_USER_AGENT'], 'Opera') === true)
+//    {
+//       echo"<link href='css/i_style_io.css' type='text/css' rel='stylesheet'>";
+//    }
+//    else
+//    {
+//       echo"<link href='css/i_style_io.css' type='text/css' rel='stylesheet'>";
+//    }
+//
+//?>
+	<?php
+   echo" <link href='css/i_style.css' type='text/css' rel='stylesheet'>";
    ?>
\ No newline at end of file
diff --git a/config/class_paging.php b/config/class_paging.php
index 8f85c997410a5f3829bc6147c62c9bb3a1e90bba..f270a3dcb52bcdca66380300b791f53e92cfb077 100755
--- a/config/class_paging.php
+++ b/config/class_paging.php
@@ -1,266 +1,228 @@
-<?php
-
-class Paging
-
-{
-
-// Fungsi untuk mencek halaman dan posisi data
-
-function cariPosisi($batas)
-
-{
-
-if(empty($_GET[halaman])){
-
-	$posisi=0;
-
-	$_GET[halaman]=1;
-
-}
-
-else{
-
-	$posisi = ($_GET[halaman]-1) * $batas;
-
-}
-
-return $posisi;
-
-}
-
-
-
-// Fungsi untuk menghitung total halaman
-
-function jumlahHalaman($jmldata, $batas)
-
-{
-
-$jmlhalaman = ceil($jmldata/$batas);
-
-return $jmlhalaman;
-
-}
-
-
-
-// Fungsi untuk link halaman 1,2,3 ... Next, Prev, First, Last
-
-function navHalaman($halaman_aktif, $jmlhalaman)
-
-{
-
-$link_halaman = "";
-
-
-
-
-
-if (($halaman_aktif-1) > 0)
-
-{
-
-$previous = $halaman_aktif-1;
-
-$link_halaman .= "<a href=$_SERVER[PHP_SELF]?module=$_GET[module]&halaman=$previous title=Previous><<</a>&nbsp;";
-
-}
-
-
-
-// Link halaman 1,2,3, ...
-
-//for ($i=1; $i<=$jmlhalaman; $i++)
-//
-//{
-//
-//if ($i == $halaman_aktif)
-//
-//{
-//
-//$link_halaman .= "<b class='currenthalaman'>$i</b>";
-//
-//}
-//
-//else
-//
-//{
-//
-//$link_halaman .= "<a href=$_SERVER[PHP_SELF]?module=$_GET[module]&halaman=$i>$i</a>";
-//
-//}
-//
-//$link_halaman .= " ";
-//
-//}
-
-///
-
-$angka=($halaman > 3 ? " ... " : " ");
-for($i=$halaman-2;$i<$halaman;$i++)
-{
-  if ($i < 1) 
-      continue;
-  $angka .= "<a href=$_SERVER[PHP_SELF]?halaman=$i>$i</A> ";
-}
-
-$angka .= " <b>$halaman</b> ";
-for($i=$halaman+1;$i<($halaman+3);$i++)
-{
-  if ($i > $jmlhalaman) 
-      break;
-  $angka .= "<a href=$_SERVER[PHP_SELF]?module=$_GET[module]&halaman=$i>$i</A> ";
-}
-
-$angka .= ($halaman+2<$jmlhalaman ? " ...  
-          <a href=$_SERVER[PHP_SELF]?module=$_GET[module]&halaman=$jmlhalaman>$jmlhalaman</A> " : " ");
-
-echo "$angka";
-
-// Link Next dan Last
-
-if ($halaman_aktif < $jmlhalaman)
-
-{
-
-$next=$halaman_aktif+1;
-
-$link_halaman .= " <a href=$_SERVER[PHP_SELF]?module=$_GET[module]&halaman=$next title=Next>>></a> ";
-
-}
-
-
-
-return $link_halaman;
-
-}
-
-}
-
+<?php
+
+class paging
+{
+    // Fungsi untuk mencek halaman dan posisi data
+
+    public function cariPosisi($batas)
+    {
+        if (empty($_GET[halaman])) {
+            $posisi = 0;
+
+            $_GET[halaman] = 1;
+        } else {
+            $posisi = ($_GET[halaman] - 1) * $batas;
+        }
+
+        return $posisi;
+    }
+
+    // Fungsi untuk menghitung total halaman
+
+    public function jumlahHalaman($jmldata, $batas)
+    {
+        $jmlhalaman = ceil($jmldata / $batas);
+
+        return $jmlhalaman;
+    }
+
+    // Fungsi untuk link halaman 1,2,3 ... Next, Prev, First, Last
+
+    public function navHalaman($halaman_aktif, $jmlhalaman)
+    {
+        $link_halaman = '';
+
+        if (($halaman_aktif - 1) > 0) {
+            $previous = $halaman_aktif - 1;
+
+            $link_halaman .= "<a href=$_SERVER[PHP_SELF]?module=$_GET[module]&halaman=$previous title=Previous><<</a>&nbsp;";
+        }
+
+        // Link halaman 1,2,3, ...
+
+        //for ($i=1; $i<=$jmlhalaman; $i++)
+//
+        //{
+//
+        //if ($i == $halaman_aktif)
+//
+        //{
+//
+        //$link_halaman .= "<b class='currenthalaman'>$i</b>";
+//
+        //}
+//
+        //else
+//
+        //{
+//
+        //$link_halaman .= "<a href=$_SERVER[PHP_SELF]?module=$_GET[module]&halaman=$i>$i</a>";
+//
+        //}
+//
+        //$link_halaman .= " ";
+//
+        //}
+
+        ///
+
+        $angka = ($halaman > 3 ? ' ... ' : ' ');
+        for ($i = $halaman - 2; $i < $halaman; $i++) {
+            if ($i < 1) {
+                continue;
+            }
+            $angka .= "<a href=$_SERVER[PHP_SELF]?halaman=$i>$i</A> ";
+        }
+
+        $angka .= " <b>$halaman</b> ";
+        for ($i = $halaman + 1; $i < ($halaman + 3); $i++) {
+            if ($i > $jmlhalaman) {
+                break;
+            }
+            $angka .= "<a href=$_SERVER[PHP_SELF]?module=$_GET[module]&halaman=$i>$i</A> ";
+        }
+
+        $angka .= ($halaman + 2 < $jmlhalaman ? " ...  
+          <a href=$_SERVER[PHP_SELF]?module=$_GET[module]&halaman=$jmlhalaman>$jmlhalaman</A> " : ' ');
+
+        echo "$angka";
+
+        // Link Next dan Last
+
+        if ($halaman_aktif < $jmlhalaman) {
+            $next = $halaman_aktif + 1;
+
+            $link_halaman .= " <a href=$_SERVER[PHP_SELF]?module=$_GET[module]&halaman=$next title=Next>>></a> ";
+        }
+
+        return $link_halaman;
+    }
+}
+
 ?>
 
 
 
 
 
-<?php /*?><?php
-
-class Paging
-
-{
-
-// Fungsi untuk mencek halaman dan posisi data
-
-function cariPosisi($batas)
-
-{
-
-if(empty($_GET[halaman])){
-
-	$posisi=0;
-
-	$_GET[halaman]=1;
-
-}
-
-else{
-
-	$posisi = ($_GET[halaman]-1) * $batas;
-
-}
-
-return $posisi;
-
-}
-
-
-
-// Fungsi untuk menghitung total halaman
-
-function jumlahHalaman($jmldata, $batas)
-
-{
-
-$jmlhalaman = ceil($jmldata/$batas);
-
-return $jmlhalaman;
-
-}
-
-
-
-// Fungsi untuk link halaman 1,2,3 ... Next, Prev, First, Last
-
-function navHalaman($halaman_aktif, $jmlhalaman)
-
-{
-
-$link_halaman = "";
-
-
-
-
-
-if (($halaman_aktif-1) > 0)
-
-{
-
-$previous = $halaman_aktif-1;
-
-$link_halaman .= "<a href=$_SERVER[PHP_SELF]?module=$_GET[module]&halaman=$previous&act=cari_$_GET[module] title=Previous><<</a>&nbsp;";
-
-}
-
-
-
-// Link halaman 1,2,3, ...
-
-for ($i=1; $i<=$jmlhalaman; $i++)
-
-{
-
-if ($i == $halaman_aktif)
-
-{
-
-$link_halaman .= "<b class='currenthalaman'>$i</b>";
-
-}
-
-else
-
-{
-
-$link_halaman .= "<a href=$_SERVER[PHP_SELF]?module=$_GET[module]&halaman=$i&act=cari_$_GET[module]>$i</a>";
-
-}
-
-$link_halaman .= " ";
-
-}
-
-
-
-// Link Next dan Last
-
-if ($halaman_aktif < $jmlhalaman)
-
-{
-
-$next=$halaman_aktif+1;
-
-$link_halaman .= " <a href=$_SERVER[PHP_SELF]?module=$_GET[module]&halaman=$next&act=cari_$_GET[module]	 title=Next>>></a> ";
-
-}
-
-
-
-return $link_halaman;
-
-}
-
-}
-
-?>
-
+<?php /*?><?php
+
+class Paging
+
+{
+
+// Fungsi untuk mencek halaman dan posisi data
+
+function cariPosisi($batas)
+
+{
+
+if(empty($_GET[halaman])){
+
+    $posisi=0;
+
+    $_GET[halaman]=1;
+
+}
+
+else{
+
+    $posisi = ($_GET[halaman]-1) * $batas;
+
+}
+
+return $posisi;
+
+}
+
+
+
+// Fungsi untuk menghitung total halaman
+
+function jumlahHalaman($jmldata, $batas)
+
+{
+
+$jmlhalaman = ceil($jmldata/$batas);
+
+return $jmlhalaman;
+
+}
+
+
+
+// Fungsi untuk link halaman 1,2,3 ... Next, Prev, First, Last
+
+function navHalaman($halaman_aktif, $jmlhalaman)
+
+{
+
+$link_halaman = "";
+
+
+
+
+
+if (($halaman_aktif-1) > 0)
+
+{
+
+$previous = $halaman_aktif-1;
+
+$link_halaman .= "<a href=$_SERVER[PHP_SELF]?module=$_GET[module]&halaman=$previous&act=cari_$_GET[module] title=Previous><<</a>&nbsp;";
+
+}
+
+
+
+// Link halaman 1,2,3, ...
+
+for ($i=1; $i<=$jmlhalaman; $i++)
+
+{
+
+if ($i == $halaman_aktif)
+
+{
+
+$link_halaman .= "<b class='currenthalaman'>$i</b>";
+
+}
+
+else
+
+{
+
+$link_halaman .= "<a href=$_SERVER[PHP_SELF]?module=$_GET[module]&halaman=$i&act=cari_$_GET[module]>$i</a>";
+
+}
+
+$link_halaman .= " ";
+
+}
+
+
+
+// Link Next dan Last
+
+if ($halaman_aktif < $jmlhalaman)
+
+{
+
+$next=$halaman_aktif+1;
+
+$link_halaman .= " <a href=$_SERVER[PHP_SELF]?module=$_GET[module]&halaman=$next&act=cari_$_GET[module]	 title=Next>>></a> ";
+
+}
+
+
+
+return $link_halaman;
+
+}
+
+}
+
+?>
+
 <?php */?>
\ No newline at end of file
diff --git a/config/connect.inc.php b/config/connect.inc.php
index 30161d41fa916f2db5bfc5785ccb87d067a09761..9d481197f76ecc551a156be6d198030b9e550dab 100755
--- a/config/connect.inc.php
+++ b/config/connect.inc.php
@@ -1,8 +1,9 @@
-<?
-	function getPost($name){
-		if(isset($_POST[$name])) 
-		  return (get_magic_quotes_gpc() ? $_POST[$name] : addslashes($_POST[$name]));
-		else
-		  return false;
-	}
-?>
+<?php
+    function getPost($name)
+    {
+        if (isset($_POST[$name])) {
+            return get_magic_quotes_gpc() ? $_POST[$name] : addslashes($_POST[$name]);
+        } else {
+            return false;
+        }
+    }
diff --git a/config/functions.php b/config/functions.php
index 325d1338f55dde05954e29ca0cf1867d3427bef7..737fa590ac1991176dbcb7858414ae75c030282c 100755
--- a/config/functions.php
+++ b/config/functions.php
@@ -1,119 +1,113 @@
-<?php
-/*
-	Upload an image and create the thumbnail. The thumbnail is stored 
-	under the thumbnail sub-directory of $uploadDir.
-	
-	Return the uploaded image name and the thumbnail also.
-*/
-function uploadImage($inputName, $uploadDir)
-{
-	$image     = $_FILES[$inputName];
-	$imagePath = '';
-	$thumbnailPath = '';
-	
-	// if a file is given
-	if (trim($image['tmp_name']) != '') {
-		$ext = substr(strrchr($image['name'], "."), 1); 
-
-		// generate a random new file name to avoid name conflict
-		// then save the image under the new file name
-		$imagePath = "";
-		$result    = move_uploaded_file($image['tmp_name'], $uploadDir . $imagePath);
-			
-		if ($result) {
-			// create thumbnail
-			$thumbnailPath = "";
-			$result = createThumbnail($uploadDir . $imagePath, $uploadDir . 'thumbnail/' . $thumbnailPath, THUMBNAIL_WIDTH);
-			
-			// create thumbnail failed, delete the image
-			if (!$result) {
-				unlink($uploadDir . $imagePath);
-				$imagePath = $thumbnailPath = '';
-			} else {
-				$thumbnailPath = $result;
-			}	
-		} else {
-			// the image cannot be uploaded
-			$imagePath = $thumbnailPath = '';
-		}
-		
-	}
-
-	
-	return array('image' => $imagePath, 'thumbnail' => $thumbnailPath);
-}
-
-/*
-	Create a thumbnail of $srcFile and save it to $destFile.
-	The thumbnail will be $width pixels.
-*/
-function createThumbnail($srcFile, $destFile, $width, $quality = 75)
-{
-	$thumbnail = '';
-	
-	if (file_exists($srcFile)  && isset($destFile))
-	{
-		$size        = getimagesize($srcFile);
-		$w           = number_format($width, 0, ',', '');
-		$h           = number_format(($size[1] / $size[0]) * $width, 0, ',', '');
-		
-		$thumbnail =  copyImage($srcFile, $destFile, $w, $h, $quality);
-	}
-	
-	// return the thumbnail file name on sucess or blank on fail
-	return basename($thumbnail);
-}
-
-/*
-	Copy an image to a destination file. The destination
-	image size will be $w X $h pixels
-*/
-function copyImage($srcFile, $destFile, $w, $h, $quality = 100)
-{
-    $tmpSrc     = pathinfo(strtolower($srcFile));
-    $tmpDest    = pathinfo(strtolower($destFile));
-    $size       = getimagesize($srcFile);
-
-    if ($tmpDest['extension'] == "gif" || $tmpDest['extension'] == "jpg")
-    {
-       $destFile  = substr_replace($destFile, 'jpg', -3);
-       $dest      = imagecreatetruecolor($w, $h);
-       //imageantialias($dest, TRUE);
-    } elseif ($tmpDest['extension'] == "png") {
-       $dest = imagecreatetruecolor($w, $h);
-       //imageantialias($dest, TRUE);
-    } else {
-      return false;
-    }
-
-    switch($size[2])
-    {
-       case 1:       //GIF
-           $src = imagecreatefromgif($srcFile);
-           break;
-       case 2:       //JPEG
-           $src = imagecreatefromjpeg($srcFile);
-           break;
-       case 3:       //PNG
-           $src = imagecreatefrompng($srcFile);
-           break;
-       default:
-           return false;
-           break;
-    }
-
-    imagecopyresampled($dest, $src, 0, 0, 0, 0, $w, $h, $size[0], $size[1]);
-
-    switch($size[2])
-    {
-       case 1:
-       case 2:
-           imagejpeg($dest,$destFile, $quality);
-           break;
-       case 3:
-           imagepng($dest,$destFile);
-    }
-    return $destFile;
-
-}
-?>
\ No newline at end of file
+<?php
+
+/*
+    Upload an image and create the thumbnail. The thumbnail is stored 
+    under the thumbnail sub-directory of $uploadDir.
+    
+    Return the uploaded image name and the thumbnail also.
+*/
+function uploadImage($inputName, $uploadDir)
+{
+    $image = $_FILES[$inputName];
+    $imagePath = '';
+    $thumbnailPath = '';
+
+    // if a file is given
+    if (trim($image['tmp_name']) != '') {
+        $ext = substr(strrchr($image['name'], '.'), 1);
+
+        // generate a random new file name to avoid name conflict
+        // then save the image under the new file name
+        $imagePath = '';
+        $result = move_uploaded_file($image['tmp_name'], $uploadDir.$imagePath);
+
+        if ($result) {
+            // create thumbnail
+            $thumbnailPath = '';
+            $result = createThumbnail($uploadDir.$imagePath, $uploadDir.'thumbnail/'.$thumbnailPath, THUMBNAIL_WIDTH);
+
+            // create thumbnail failed, delete the image
+            if (!$result) {
+                unlink($uploadDir.$imagePath);
+                $imagePath = $thumbnailPath = '';
+            } else {
+                $thumbnailPath = $result;
+            }
+        } else {
+            // the image cannot be uploaded
+            $imagePath = $thumbnailPath = '';
+        }
+    }
+
+    return ['image' => $imagePath, 'thumbnail' => $thumbnailPath];
+}
+
+/*
+    Create a thumbnail of $srcFile and save it to $destFile.
+    The thumbnail will be $width pixels.
+*/
+function createThumbnail($srcFile, $destFile, $width, $quality = 75)
+{
+    $thumbnail = '';
+
+    if (file_exists($srcFile) && isset($destFile)) {
+        $size = getimagesize($srcFile);
+        $w = number_format($width, 0, ',', '');
+        $h = number_format(($size[1] / $size[0]) * $width, 0, ',', '');
+
+        $thumbnail = copyImage($srcFile, $destFile, $w, $h, $quality);
+    }
+
+    // return the thumbnail file name on sucess or blank on fail
+    return basename($thumbnail);
+}
+
+/*
+    Copy an image to a destination file. The destination
+    image size will be $w X $h pixels
+*/
+function copyImage($srcFile, $destFile, $w, $h, $quality = 100)
+{
+    $tmpSrc = pathinfo(strtolower($srcFile));
+    $tmpDest = pathinfo(strtolower($destFile));
+    $size = getimagesize($srcFile);
+
+    if ($tmpDest['extension'] == 'gif' || $tmpDest['extension'] == 'jpg') {
+        $destFile = substr_replace($destFile, 'jpg', -3);
+        $dest = imagecreatetruecolor($w, $h);
+    //imageantialias($dest, TRUE);
+    } elseif ($tmpDest['extension'] == 'png') {
+        $dest = imagecreatetruecolor($w, $h);
+    //imageantialias($dest, TRUE);
+    } else {
+        return false;
+    }
+
+    switch ($size[2]) {
+       case 1:       //GIF
+           $src = imagecreatefromgif($srcFile);
+           break;
+       case 2:       //JPEG
+           $src = imagecreatefromjpeg($srcFile);
+           break;
+       case 3:       //PNG
+           $src = imagecreatefrompng($srcFile);
+           break;
+       default:
+           return false;
+           break;
+    }
+
+    imagecopyresampled($dest, $src, 0, 0, 0, 0, $w, $h, $size[0], $size[1]);
+
+    switch ($size[2]) {
+       case 1:
+       case 2:
+           imagejpeg($dest, $destFile, $quality);
+           break;
+       case 3:
+           imagepng($dest, $destFile);
+    }
+
+    return $destFile;
+}
diff --git a/config/fungsi_combobox.php b/config/fungsi_combobox.php
index a5ee154c94784f4545e1353d317be73aaa9d1e87..fce279ff473e3adce032a7774784e19254a6920d 100755
--- a/config/fungsi_combobox.php
+++ b/config/fungsi_combobox.php
@@ -1,56 +1,63 @@
-<?php
-function combotgl($awal, $akhir, $var, $default){
-echo "<select name=$var>";
-echo "<option value=0 selected>$default</option>";
-for ($i=$awal; $i<=$akhir; $i++){
-  echo "<option value=$i>$i</option>";
-}
-echo "</select> ";
-}
-
-function combobln($awal, $akhir, $var, $default){
-include "../config/library.php";
-echo "<select name=$var>";
-echo "<option value=0 selected>$default</option>";
-for ($bln=$awal; $bln<=$akhir; $bln++){
-        echo "<option value=$bln>$nama_bln[$bln]</option>";
-}
-echo "</select> ";
-}
-
-function combotgl2($awal, $akhir, $var, $terpilih){
-echo "<select name=$var class='tselect_tgl'>";
-for ($i=$awal; $i<=$akhir; $i++){
-if ($i==$terpilih)
-  echo "<option value=$i selected>$i</option>";
-else
-  echo "<option value=$i>$i</option>";
-}
-echo "</select> ";
-}
-
-function combobln2($awal, $akhir, $var, $terpilih){
-include "../config/library.php";
-echo "<select name=$var  class='tselect_bln'>";
-for ($bln=$awal; $bln<=$akhir; $bln++){
-      if ($bln==$terpilih)
-         echo "<option value=$bln selected>$nama_bln[$bln]</option>";
-      else
-        echo "<option value=$bln>$nama_bln[$bln]</option>";
-}
-echo "</select> ";
-}
-
-function combothn($awal, $akhir, $var, $terpilih){
-echo "<select name=$var class='tselect_thn'>";
-for ($i=$awal; $i<=$akhir; $i++){
-if ($i==$terpilih)
-  echo "<option value=$i selected>$i</option>";
-else
-  echo "<option value=$i>$i</option>";
-}
-echo "</select> ";
-}
-
-
+<?php
+function combotgl($awal, $akhir, $var, $default)
+{
+    echo "<select name=$var>";
+    echo "<option value=0 selected>$default</option>";
+    for ($i = $awal; $i <= $akhir; $i++) {
+        echo "<option value=$i>$i</option>";
+    }
+    echo '</select> ';
+}
+
+function combobln($awal, $akhir, $var, $default)
+{
+    include '../config/library.php';
+    echo "<select name=$var>";
+    echo "<option value=0 selected>$default</option>";
+    for ($bln = $awal; $bln <= $akhir; $bln++) {
+        echo "<option value=$bln>$nama_bln[$bln]</option>";
+    }
+    echo '</select> ';
+}
+
+function combotgl2($awal, $akhir, $var, $terpilih)
+{
+    echo "<select name=$var class='tselect_tgl'>";
+    for ($i = $awal; $i <= $akhir; $i++) {
+        if ($i == $terpilih) {
+            echo "<option value=$i selected>$i</option>";
+        } else {
+            echo "<option value=$i>$i</option>";
+        }
+    }
+    echo '</select> ';
+}
+
+function combobln2($awal, $akhir, $var, $terpilih)
+{
+    include '../config/library.php';
+    echo "<select name=$var  class='tselect_bln'>";
+    for ($bln = $awal; $bln <= $akhir; $bln++) {
+        if ($bln == $terpilih) {
+            echo "<option value=$bln selected>$nama_bln[$bln]</option>";
+        } else {
+            echo "<option value=$bln>$nama_bln[$bln]</option>";
+        }
+    }
+    echo '</select> ';
+}
+
+function combothn($awal, $akhir, $var, $terpilih)
+{
+    echo "<select name=$var class='tselect_thn'>";
+    for ($i = $awal; $i <= $akhir; $i++) {
+        if ($i == $terpilih) {
+            echo "<option value=$i selected>$i</option>";
+        } else {
+            echo "<option value=$i>$i</option>";
+        }
+    }
+    echo '</select> ';
+}
+
 ?>
diff --git a/config/fungsi_indobulan.php b/config/fungsi_indobulan.php
index 2d21060c52859e0d9bf31d3a507646ae3351292e..59ca1e15ef6e8cbaddb09e507d32717dd95774fc 100755
--- a/config/fungsi_indobulan.php
+++ b/config/fungsi_indobulan.php
@@ -1,194 +1,184 @@
-<?php
-
-	function tgl_indo($tgl){
-
-			$tanggal = substr($tgl,8,2);
-
-			$bulan = getBulan(substr($tgl,5,2));
-
-			$tahun = substr($tgl,0,4);
-
-			return $tanggal.'/'.$bulan.'/'.$tahun;		 
-
-	}	
-
-
-
-	function getBulan($bln){
-
-				switch ($bln){
-
-					case 1: 
-
-						return "01";
-
-						break;
-
-					case 2:
-
-						return "02";
-
-						break;
-
-					case 3:
-
-						return "03";
-
-						break;
-
-					case 4:
-
-						return "04";
-
-						break;
-
-					case 5:
-
-						return "05";
-
-						break;
-
-					case 6:
-
-						return "06";
-
-						break;
-
-					case 7:
-
-						return "07";
-
-						break;
-
-					case 8:
-
-						return "08";
-
-						break;
-
-					case 9:
-
-						return "09";
-
-						break;
-
-					case 10:
-
-						return "10";
-
-						break;
-
-					case 11:
-
-						return "11";
-
-						break;
-
-					case 12:
-
-						return "12";
-
-						break;
-
-				}
-
-			} 
-
-			
-
-			function tgl_indo1($tgl1){
-
-			$tanggal1 = substr($tgl1,8,2);
-
-			$bulan1 = getBulan1(substr($tgl1,5,2));
-
-			$tahun1 = substr($tgl1,0,4);
-
-			return $tanggal1.' '.$bulan1.' '.$tahun1;		 
-
-	}	
-
-
-
-	function getBulan1($bln1){
-
-				switch ($bln1){
-
-					case 1: 
-
-						return "Januari";
-
-						break;
-
-					case 2:
-
-						return "Februari";
-
-						break;
-
-					case 3:
-
-						return "Maret";
-
-						break;
-
-					case 4:
-
-						return "April";
-
-						break;
-
-					case 5:
-
-						return "Mei";
-
-						break;
-
-					case 6:
-
-						return "Juni";
-
-						break;
-
-					case 7:
-
-						return "Juli";
-
-						break;
-
-					case 8:
-
-						return "Agustus";
-
-						break;
-
-					case 9:
-
-						return "September";
-
-						break;
-
-					case 10:
-
-						return "Oktober";
-
-						break;
-
-					case 11:
-
-						return "November";
-
-						break;
-
-					case 12:
-
-						return "Desember";
-
-						break;
-
-				}
-
-			} 
-
+<?php
+
+    function tgl_indo($tgl)
+    {
+        $tanggal = substr($tgl, 8, 2);
+
+        $bulan = getBulan(substr($tgl, 5, 2));
+
+        $tahun = substr($tgl, 0, 4);
+
+        return $tanggal.'/'.$bulan.'/'.$tahun;
+    }
+
+    function getBulan($bln)
+    {
+        switch ($bln) {
+
+                    case 1:
+
+                        return '01';
+
+                        break;
+
+                    case 2:
+
+                        return '02';
+
+                        break;
+
+                    case 3:
+
+                        return '03';
+
+                        break;
+
+                    case 4:
+
+                        return '04';
+
+                        break;
+
+                    case 5:
+
+                        return '05';
+
+                        break;
+
+                    case 6:
+
+                        return '06';
+
+                        break;
+
+                    case 7:
+
+                        return '07';
+
+                        break;
+
+                    case 8:
+
+                        return '08';
+
+                        break;
+
+                    case 9:
+
+                        return '09';
+
+                        break;
+
+                    case 10:
+
+                        return '10';
+
+                        break;
+
+                    case 11:
+
+                        return '11';
+
+                        break;
+
+                    case 12:
+
+                        return '12';
+
+                        break;
+
+                }
+    }
+
+            function tgl_indo1($tgl1)
+            {
+                $tanggal1 = substr($tgl1, 8, 2);
+
+                $bulan1 = getBulan1(substr($tgl1, 5, 2));
+
+                $tahun1 = substr($tgl1, 0, 4);
+
+                return $tanggal1.' '.$bulan1.' '.$tahun1;
+            }
+
+    function getBulan1($bln1)
+    {
+        switch ($bln1) {
+
+                    case 1:
+
+                        return 'Januari';
+
+                        break;
+
+                    case 2:
+
+                        return 'Februari';
+
+                        break;
+
+                    case 3:
+
+                        return 'Maret';
+
+                        break;
+
+                    case 4:
+
+                        return 'April';
+
+                        break;
+
+                    case 5:
+
+                        return 'Mei';
+
+                        break;
+
+                    case 6:
+
+                        return 'Juni';
+
+                        break;
+
+                    case 7:
+
+                        return 'Juli';
+
+                        break;
+
+                    case 8:
+
+                        return 'Agustus';
+
+                        break;
+
+                    case 9:
+
+                        return 'September';
+
+                        break;
+
+                    case 10:
+
+                        return 'Oktober';
+
+                        break;
+
+                    case 11:
+
+                        return 'November';
+
+                        break;
+
+                    case 12:
+
+                        return 'Desember';
+
+                        break;
+
+                }
+    }
+
 ?>
 
diff --git a/config/fungsi_indotgl.php b/config/fungsi_indotgl.php
index a66ef8c718a76a8eafa9f9cf1a106bc29672014d..87a0b64b59158d9ee2137f1602699b53ed8af19e 100755
--- a/config/fungsi_indotgl.php
+++ b/config/fungsi_indotgl.php
@@ -1,194 +1,184 @@
-<?php
-
-	function tgl_indo($tgl){
-
-			$tanggal = substr($tgl,8,2);
-
-			$bulan = getBulan1(substr($tgl,5,2));
-
-			$tahun = substr($tgl,0,4);
-
-			return $tanggal.'/'.$bulan.'/'.$tahun;		 
-
-	}	
-
-
-
-	function getBulan($bln){
-
-				switch ($bln){
-
-					case 1: 
-
-						return "01";
-
-						break;
-
-					case 2:
-
-						return "02";
-
-						break;
-
-					case 3:
-
-						return "03";
-
-						break;
-
-					case 4:
-
-						return "04";
-
-						break;
-
-					case 5:
-
-						return "05";
-
-						break;
-
-					case 6:
-
-						return "06";
-
-						break;
-
-					case 7:
-
-						return "07";
-
-						break;
-
-					case 8:
-
-						return "08";
-
-						break;
-
-					case 9:
-
-						return "09";
-
-						break;
-
-					case 10:
-
-						return "10";
-
-						break;
-
-					case 11:
-
-						return "11";
-
-						break;
-
-					case 12:
-
-						return "12";
-
-						break;
-
-				}
-
-			} 
-
-			
-
-			function tgl_indo1($tgl1){
-
-			$tanggal1 = substr($tgl1,8,2);
-
-			$bulan1 = getBulan1(substr($tgl1,5,2));
-
-			$tahun1 = substr($tgl1,0,4);
-
-			return $tanggal1.' '.$bulan1.' '.$tahun1;		 
-
-	}	
-
-
-
-	function getBulan1($bln1){
-
-				switch ($bln1){
-
-					case 1: 
-
-						return "January";
-
-						break;
-
-					case 2:
-
-						return "February";
-
-						break;
-
-					case 3:
-
-						return "March";
-
-						break;
-
-					case 4:
-
-						return "April";
-
-						break;
-
-					case 5:
-
-						return "May";
-
-						break;
-
-					case 6:
-
-						return "June";
-
-						break;
-
-					case 7:
-
-						return "July";
-
-						break;
-
-					case 8:
-
-						return "August";
-
-						break;
-
-					case 9:
-
-						return "September";
-
-						break;
-
-					case 10:
-
-						return "October";
-
-						break;
-
-					case 11:
-
-						return "November";
-
-						break;
-
-					case 12:
-
-						return "December";
-
-						break;
-
-				}
-
-			} 
-
+<?php
+
+    function tgl_indo($tgl)
+    {
+        $tanggal = substr($tgl, 8, 2);
+
+        $bulan = getBulan1(substr($tgl, 5, 2));
+
+        $tahun = substr($tgl, 0, 4);
+
+        return $tanggal.'/'.$bulan.'/'.$tahun;
+    }
+
+    function getBulan($bln)
+    {
+        switch ($bln) {
+
+                    case 1:
+
+                        return '01';
+
+                        break;
+
+                    case 2:
+
+                        return '02';
+
+                        break;
+
+                    case 3:
+
+                        return '03';
+
+                        break;
+
+                    case 4:
+
+                        return '04';
+
+                        break;
+
+                    case 5:
+
+                        return '05';
+
+                        break;
+
+                    case 6:
+
+                        return '06';
+
+                        break;
+
+                    case 7:
+
+                        return '07';
+
+                        break;
+
+                    case 8:
+
+                        return '08';
+
+                        break;
+
+                    case 9:
+
+                        return '09';
+
+                        break;
+
+                    case 10:
+
+                        return '10';
+
+                        break;
+
+                    case 11:
+
+                        return '11';
+
+                        break;
+
+                    case 12:
+
+                        return '12';
+
+                        break;
+
+                }
+    }
+
+            function tgl_indo1($tgl1)
+            {
+                $tanggal1 = substr($tgl1, 8, 2);
+
+                $bulan1 = getBulan1(substr($tgl1, 5, 2));
+
+                $tahun1 = substr($tgl1, 0, 4);
+
+                return $tanggal1.' '.$bulan1.' '.$tahun1;
+            }
+
+    function getBulan1($bln1)
+    {
+        switch ($bln1) {
+
+                    case 1:
+
+                        return 'January';
+
+                        break;
+
+                    case 2:
+
+                        return 'February';
+
+                        break;
+
+                    case 3:
+
+                        return 'March';
+
+                        break;
+
+                    case 4:
+
+                        return 'April';
+
+                        break;
+
+                    case 5:
+
+                        return 'May';
+
+                        break;
+
+                    case 6:
+
+                        return 'June';
+
+                        break;
+
+                    case 7:
+
+                        return 'July';
+
+                        break;
+
+                    case 8:
+
+                        return 'August';
+
+                        break;
+
+                    case 9:
+
+                        return 'September';
+
+                        break;
+
+                    case 10:
+
+                        return 'October';
+
+                        break;
+
+                    case 11:
+
+                        return 'November';
+
+                        break;
+
+                    case 12:
+
+                        return 'December';
+
+                        break;
+
+                }
+    }
+
 ?>
 
diff --git a/config/fungsi_thumb.php b/config/fungsi_thumb.php
index 81852a2a126df3e333aab45d69b3aead1c78317a..700b266f497e471b8981e5deea0c928c9089f733 100755
--- a/config/fungsi_thumb.php
+++ b/config/fungsi_thumb.php
@@ -1,189 +1,185 @@
-<?php
-
-// Upload gambar untuk product
-function BarangImage($fupload_name){
-  //direktori gambar
-  $vdir_upload = "../../images/barang/";
-  $vfile_upload = $vdir_upload . $fupload_name;
-
-  //Simpan gambar dalam ukuran sebenarnya
-  move_uploaded_file($_FILES["fupload"]["tmp_name"], $vfile_upload);
-
-  //identitas file asli
-  $im_src = imagecreatefromjpeg($vfile_upload);
-  $src_width = imageSX($im_src);
-  $src_height = imageSY($im_src);
-
-  //Simpan dalam versi small 110 pixel
-  //Set ukuran gambar hasil perubahan
-  $dst_width = 220;
-  $dst_height = ($dst_width/$src_width)*$src_height;
-
-  //proses perubahan ukuran
-  $im = imagecreatetruecolor($dst_width,$dst_height);
-  imagecopyresampled($im, $im_src, 0, 0, 0, 0, $dst_width, $dst_height, $src_width, $src_height);
-
-  //Simpan gambar
-  imagejpeg($im,$vdir_upload . "t_" . $fupload_name);
-  
-
-  //Simpan dalam versi medium 360 pixel
-  //Set ukuran gambar hasil perubahan
-  $dst_width2 = 280;
-  $dst_height2 = ($dst_width2/$src_width)*$src_height;
-
-  //proses perubahan ukuran
-  $im2 = imagecreatetruecolor($dst_width2,$dst_height2);
-  imagecopyresampled($im2, $im_src, 0, 0, 0, 0, $dst_width2, $dst_height2, $src_width, $src_height);
-
-  //Simpan gambar
-  //imagejpeg($im2,$vdir_upload . "medium_" . $fupload_name);
-  imagejpeg($im2,$vdir_upload . $fupload_name);
-  
-  //Hapus gambar di memori komputer
-  imagedestroy($im_src);
-  imagedestroy($im);
-  imagedestroy($im2);
-}
-
-// Upload gambar untuk news
-function ProfileImage($fupload_name){
-  //direktori gambar
-  $vdir_upload = "../../images/profile/";
-  $vfile_upload = $vdir_upload . $fupload_name;
-
-  //Simpan gambar dalam ukuran sebenarnya
-  move_uploaded_file($_FILES["fupload"]["tmp_name"], $vfile_upload);
-
-  //identitas file asli
-  $im_src = imagecreatefromjpeg($vfile_upload);
-  $src_width = imageSX($im_src);
-  $src_height = imageSY($im_src);
-
-  //Simpan dalam versi small 110 pixel
-  //Set ukuran gambar hasil perubahan
-  $dst_width = 280;
-  $dst_height = ($dst_width/$src_width)*$src_height;
-
-  //proses perubahan ukuran
-  $im = imagecreatetruecolor($dst_width,$dst_height);
-  imagecopyresampled($im, $im_src, 0, 0, 0, 0, $dst_width, $dst_height, $src_width, $src_height);
-
-  //Simpan gambar
-  imagejpeg($im,$vdir_upload . "t_" . $fupload_name);
-  
-
-  //Simpan dalam versi medium 360 pixel
-  //Set ukuran gambar hasil perubahan
-  $dst_width2 = 480;
-  $dst_height2 = ($dst_width2/$src_width)*$src_height;
-
-  //proses perubahan ukuran
-  $im2 = imagecreatetruecolor($dst_width2,$dst_height2);
-  imagecopyresampled($im2, $im_src, 0, 0, 0, 0, $dst_width2, $dst_height2, $src_width, $src_height);
-
-  //Simpan gambar
-  //imagejpeg($im2,$vdir_upload . "medium_" . $fupload_name);
-  imagejpeg($im2,$vdir_upload . $fupload_name);
-  
-  //Hapus gambar di memori komputer
-  imagedestroy($im_src);
-  imagedestroy($im);
-  imagedestroy($im2);
-}
-
-
-// Upload gambar untuk product
-function GuestImage($fupload_name){
-  //direktori gambar
-  $vdir_upload = "../../images/guest/";
-  $vfile_upload = $vdir_upload . $fupload_name;
-
-  //Simpan gambar dalam ukuran sebenarnya
-  move_uploaded_file($_FILES["fupload"]["tmp_name"], $vfile_upload);
-
-  //identitas file asli
-  $im_src = imagecreatefromjpeg($vfile_upload);
-  $src_width = imageSX($im_src);
-  $src_height = imageSY($im_src);
-
-  //Simpan dalam versi small 110 pixel
-  //Set ukuran gambar hasil perubahan
-  $dst_width = 180;
-  $dst_height = ($dst_width/$src_width)*$src_height;
-
-  //proses perubahan ukuran
-  $im = imagecreatetruecolor($dst_width,$dst_height);
-  imagecopyresampled($im, $im_src, 0, 0, 0, 0, $dst_width, $dst_height, $src_width, $src_height);
-
-  //Simpan gambar
-  imagejpeg($im,$vdir_upload . "t_" . $fupload_name);
-  
-
-  //Simpan dalam versi medium 360 pixel
-  //Set ukuran gambar hasil perubahan
-  $dst_width2 = 280;
-  $dst_height2 = ($dst_width2/$src_width)*$src_height;
-
-  //proses perubahan ukuran
-  $im2 = imagecreatetruecolor($dst_width2,$dst_height2);
-  imagecopyresampled($im2, $im_src, 0, 0, 0, 0, $dst_width2, $dst_height2, $src_width, $src_height);
-
-  //Simpan gambar
-  //imagejpeg($im2,$vdir_upload . "medium_" . $fupload_name);
-  imagejpeg($im2,$vdir_upload . $fupload_name);
-  
-  //Hapus gambar di memori komputer
-  imagedestroy($im_src);
-  imagedestroy($im);
-  imagedestroy($im2);
-}
-
-// Upload gambar untuk product
-function LogoImage($fupload_name){
-  //direktori gambar
-  $vdir_upload = "../../images/logo/";
-  $vfile_upload = $vdir_upload . $fupload_name;
-
-  //Simpan gambar dalam ukuran sebenarnya
-  move_uploaded_file($_FILES["fupload"]["tmp_name"], $vfile_upload);
-
-  //identitas file asli
-  $im_src = imagecreatefromjpeg($vfile_upload);
-  $src_width = imageSX($im_src);
-  $src_height = imageSY($im_src);
-
-  //Simpan dalam versi small 110 pixel
-  //Set ukuran gambar hasil perubahan
-  $dst_width = 180;
-  $dst_height = ($dst_width/$src_width)*$src_height;
-
-  //proses perubahan ukuran
-  $im = imagecreatetruecolor($dst_width,$dst_height);
-  imagecopyresampled($im, $im_src, 0, 0, 0, 0, $dst_width, $dst_height, $src_width, $src_height);
-
-  //Simpan gambar
-  imagejpeg($im,$vdir_upload . "t_" . $fupload_name);
-  
-
-  //Simpan dalam versi medium 360 pixel
-  //Set ukuran gambar hasil perubahan
-  $dst_width2 = 280;
-  $dst_height2 = ($dst_width2/$src_width)*$src_height;
-
-  //proses perubahan ukuran
-  $im2 = imagecreatetruecolor($dst_width2,$dst_height2);
-  imagecopyresampled($im2, $im_src, 0, 0, 0, 0, $dst_width2, $dst_height2, $src_width, $src_height);
-
-  //Simpan gambar
-  //imagejpeg($im2,$vdir_upload . "medium_" . $fupload_name);
-  imagejpeg($im2,$vdir_upload . $fupload_name);
-  
-  //Hapus gambar di memori komputer
-  imagedestroy($im_src);
-  imagedestroy($im);
-  imagedestroy($im2);
-}
-
-
-?>
+<?php
+
+// Upload gambar untuk product
+function BarangImage($fupload_name)
+{
+    //direktori gambar
+    $vdir_upload = '../../images/barang/';
+    $vfile_upload = $vdir_upload.$fupload_name;
+
+    //Simpan gambar dalam ukuran sebenarnya
+    move_uploaded_file($_FILES['fupload']['tmp_name'], $vfile_upload);
+
+    //identitas file asli
+    $im_src = imagecreatefromjpeg($vfile_upload);
+    $src_width = imagesx($im_src);
+    $src_height = imagesy($im_src);
+
+    //Simpan dalam versi small 110 pixel
+    //Set ukuran gambar hasil perubahan
+    $dst_width = 220;
+    $dst_height = ($dst_width / $src_width) * $src_height;
+
+    //proses perubahan ukuran
+    $im = imagecreatetruecolor($dst_width, $dst_height);
+    imagecopyresampled($im, $im_src, 0, 0, 0, 0, $dst_width, $dst_height, $src_width, $src_height);
+
+    //Simpan gambar
+    imagejpeg($im, $vdir_upload.'t_'.$fupload_name);
+
+    //Simpan dalam versi medium 360 pixel
+    //Set ukuran gambar hasil perubahan
+    $dst_width2 = 280;
+    $dst_height2 = ($dst_width2 / $src_width) * $src_height;
+
+    //proses perubahan ukuran
+    $im2 = imagecreatetruecolor($dst_width2, $dst_height2);
+    imagecopyresampled($im2, $im_src, 0, 0, 0, 0, $dst_width2, $dst_height2, $src_width, $src_height);
+
+    //Simpan gambar
+    //imagejpeg($im2,$vdir_upload . "medium_" . $fupload_name);
+    imagejpeg($im2, $vdir_upload.$fupload_name);
+
+    //Hapus gambar di memori komputer
+    imagedestroy($im_src);
+    imagedestroy($im);
+    imagedestroy($im2);
+}
+
+// Upload gambar untuk news
+function ProfileImage($fupload_name)
+{
+    //direktori gambar
+    $vdir_upload = '../../images/profile/';
+    $vfile_upload = $vdir_upload.$fupload_name;
+
+    //Simpan gambar dalam ukuran sebenarnya
+    move_uploaded_file($_FILES['fupload']['tmp_name'], $vfile_upload);
+
+    //identitas file asli
+    $im_src = imagecreatefromjpeg($vfile_upload);
+    $src_width = imagesx($im_src);
+    $src_height = imagesy($im_src);
+
+    //Simpan dalam versi small 110 pixel
+    //Set ukuran gambar hasil perubahan
+    $dst_width = 280;
+    $dst_height = ($dst_width / $src_width) * $src_height;
+
+    //proses perubahan ukuran
+    $im = imagecreatetruecolor($dst_width, $dst_height);
+    imagecopyresampled($im, $im_src, 0, 0, 0, 0, $dst_width, $dst_height, $src_width, $src_height);
+
+    //Simpan gambar
+    imagejpeg($im, $vdir_upload.'t_'.$fupload_name);
+
+    //Simpan dalam versi medium 360 pixel
+    //Set ukuran gambar hasil perubahan
+    $dst_width2 = 480;
+    $dst_height2 = ($dst_width2 / $src_width) * $src_height;
+
+    //proses perubahan ukuran
+    $im2 = imagecreatetruecolor($dst_width2, $dst_height2);
+    imagecopyresampled($im2, $im_src, 0, 0, 0, 0, $dst_width2, $dst_height2, $src_width, $src_height);
+
+    //Simpan gambar
+    //imagejpeg($im2,$vdir_upload . "medium_" . $fupload_name);
+    imagejpeg($im2, $vdir_upload.$fupload_name);
+
+    //Hapus gambar di memori komputer
+    imagedestroy($im_src);
+    imagedestroy($im);
+    imagedestroy($im2);
+}
+
+// Upload gambar untuk product
+function GuestImage($fupload_name)
+{
+    //direktori gambar
+    $vdir_upload = '../../images/guest/';
+    $vfile_upload = $vdir_upload.$fupload_name;
+
+    //Simpan gambar dalam ukuran sebenarnya
+    move_uploaded_file($_FILES['fupload']['tmp_name'], $vfile_upload);
+
+    //identitas file asli
+    $im_src = imagecreatefromjpeg($vfile_upload);
+    $src_width = imagesx($im_src);
+    $src_height = imagesy($im_src);
+
+    //Simpan dalam versi small 110 pixel
+    //Set ukuran gambar hasil perubahan
+    $dst_width = 180;
+    $dst_height = ($dst_width / $src_width) * $src_height;
+
+    //proses perubahan ukuran
+    $im = imagecreatetruecolor($dst_width, $dst_height);
+    imagecopyresampled($im, $im_src, 0, 0, 0, 0, $dst_width, $dst_height, $src_width, $src_height);
+
+    //Simpan gambar
+    imagejpeg($im, $vdir_upload.'t_'.$fupload_name);
+
+    //Simpan dalam versi medium 360 pixel
+    //Set ukuran gambar hasil perubahan
+    $dst_width2 = 280;
+    $dst_height2 = ($dst_width2 / $src_width) * $src_height;
+
+    //proses perubahan ukuran
+    $im2 = imagecreatetruecolor($dst_width2, $dst_height2);
+    imagecopyresampled($im2, $im_src, 0, 0, 0, 0, $dst_width2, $dst_height2, $src_width, $src_height);
+
+    //Simpan gambar
+    //imagejpeg($im2,$vdir_upload . "medium_" . $fupload_name);
+    imagejpeg($im2, $vdir_upload.$fupload_name);
+
+    //Hapus gambar di memori komputer
+    imagedestroy($im_src);
+    imagedestroy($im);
+    imagedestroy($im2);
+}
+
+// Upload gambar untuk product
+function LogoImage($fupload_name)
+{
+    //direktori gambar
+    $vdir_upload = '../../images/logo/';
+    $vfile_upload = $vdir_upload.$fupload_name;
+
+    //Simpan gambar dalam ukuran sebenarnya
+    move_uploaded_file($_FILES['fupload']['tmp_name'], $vfile_upload);
+
+    //identitas file asli
+    $im_src = imagecreatefromjpeg($vfile_upload);
+    $src_width = imagesx($im_src);
+    $src_height = imagesy($im_src);
+
+    //Simpan dalam versi small 110 pixel
+    //Set ukuran gambar hasil perubahan
+    $dst_width = 180;
+    $dst_height = ($dst_width / $src_width) * $src_height;
+
+    //proses perubahan ukuran
+    $im = imagecreatetruecolor($dst_width, $dst_height);
+    imagecopyresampled($im, $im_src, 0, 0, 0, 0, $dst_width, $dst_height, $src_width, $src_height);
+
+    //Simpan gambar
+    imagejpeg($im, $vdir_upload.'t_'.$fupload_name);
+
+    //Simpan dalam versi medium 360 pixel
+    //Set ukuran gambar hasil perubahan
+    $dst_width2 = 280;
+    $dst_height2 = ($dst_width2 / $src_width) * $src_height;
+
+    //proses perubahan ukuran
+    $im2 = imagecreatetruecolor($dst_width2, $dst_height2);
+    imagecopyresampled($im2, $im_src, 0, 0, 0, 0, $dst_width2, $dst_height2, $src_width, $src_height);
+
+    //Simpan gambar
+    //imagejpeg($im2,$vdir_upload . "medium_" . $fupload_name);
+    imagejpeg($im2, $vdir_upload.$fupload_name);
+
+    //Hapus gambar di memori komputer
+    imagedestroy($im_src);
+    imagedestroy($im);
+    imagedestroy($im2);
+}
diff --git a/config/fungsi_usia.php b/config/fungsi_usia.php
index 74f36955f3df8ffd4545d402b7e8251334948a34..e8624b0d9357e97c5d1317c4a7e83b5ab87bb7b4 100755
--- a/config/fungsi_usia.php
+++ b/config/fungsi_usia.php
@@ -1,87 +1,84 @@
-<?php
-
-	
-	function getUsia($bln){
-
-				switch ($bln){
-
-					case 1: 
-
-						return "12";
-
-						break;
-
-					case 2:
-
-						return "11";
-
-						break;
-
-					case 3:
-
-						return "10";
-
-						break;
-
-					case 4:
-
-						return "9";
-
-						break;
-
-					case 5:
-
-						return "8";
-
-						break;
-
-					case 6:
-
-						return "7";
-
-						break;
-
-					case 7:
-
-						return "6";
-
-						break;
-
-					case 8:
-
-						return "5";
-
-						break;
-
-					case 9:
-
-						return "4";
-
-						break;
-
-					case 10:
-
-						return "3";
-
-						break;
-
-					case 11:
-
-						return "2";
-
-						break;
-
-					case 12:
-
-						return "1";
-
-						break;
-
-				}
-
-			} 
-
-			
-
+<?php
+
+
+    function getUsia($bln)
+    {
+        switch ($bln) {
+
+                    case 1:
+
+                        return '12';
+
+                        break;
+
+                    case 2:
+
+                        return '11';
+
+                        break;
+
+                    case 3:
+
+                        return '10';
+
+                        break;
+
+                    case 4:
+
+                        return '9';
+
+                        break;
+
+                    case 5:
+
+                        return '8';
+
+                        break;
+
+                    case 6:
+
+                        return '7';
+
+                        break;
+
+                    case 7:
+
+                        return '6';
+
+                        break;
+
+                    case 8:
+
+                        return '5';
+
+                        break;
+
+                    case 9:
+
+                        return '4';
+
+                        break;
+
+                    case 10:
+
+                        return '3';
+
+                        break;
+
+                    case 11:
+
+                        return '2';
+
+                        break;
+
+                    case 12:
+
+                        return '1';
+
+                        break;
+
+                }
+    }
+
 ?>
 
diff --git a/config/ikoneksi.php b/config/ikoneksi.php
index 6c36e1c6c54941d355066035fce73170787da9e0..fd7d47dec4b6752bd1cdc5b3ba416f3fde522f91 100755
--- a/config/ikoneksi.php
+++ b/config/ikoneksi.php
@@ -1,11 +1,11 @@
-<?php
-
-//$con = mysqli_connect('103.11.74.20','k7398289_elite','5uperman','k7398289_three');
-$con = mysqli_connect('localhost','root','','koperasi');
-if (!$con) {
-  die('Could not connect: ' . mysqli_error($con));
-}
-
-mysqli_select_db($con,"koperasi");
-
+<?php
+
+//$con = mysqli_connect('103.11.74.20','k7398289_elite','5uperman','k7398289_three');
+$con = mysqli_connect('localhost', 'root', '', 'koperasi');
+if (!$con) {
+    die('Could not connect: '.mysqli_error($con));
+}
+
+mysqli_select_db($con, 'koperasi');
+
 ?>
diff --git a/config/koneksi.php b/config/koneksi.php
index 4608d605e926565aa97d63044ea87d64482b083a..9272dc4239717b24d0350d0c588572a639a6a756 100755
--- a/config/koneksi.php
+++ b/config/koneksi.php
@@ -1,11 +1,10 @@
-<?php
-
- 
-$server = "localhost";
-$username = "root";
-$password = "root";
-$database = "db_puskesmas";
-
-mysql_connect($server,$username,$password) or die("Koneksi gagal");
-mysql_select_db($database) or die("Database tidak bisa dibuka");
-?>
+<?php
+
+
+$server = 'localhost';
+$username = 'root';
+$password = 'root';
+$database = 'db_puskesmas';
+
+mysql_connect($server, $username, $password) or die('Koneksi gagal');
+mysql_select_db($database) or die('Database tidak bisa dibuka');
diff --git a/config/library.php b/config/library.php
index e53dc8417bcb795177d2d6a4324cd35e99732eeb..5708455909e7d89ea9a06997348bcd73c52147be 100755
--- a/config/library.php
+++ b/config/library.php
@@ -1,13 +1,13 @@
-<?php
-$seminggu = array("Minggu","Senin","Selasa","Rabu","Kamis","Jumat","Sabtu");
-$hari = date("w");
-$hari_ini = $seminggu[$hari];
-
-$tgl_sekarang = date("Ymd");
-$thn_sekarang = date("Y");
-$jam_sekarang = date("H:i:s");
-
-$nama_bln=array(1=> "Januari", "Februari", "Maret", "April", "Mei", 
-                    "Juni", "Juli", "Agustus", "September", 
-                    "Oktober", "November", "Desember");
-?>
+<?php
+
+$seminggu = ['Minggu', 'Senin', 'Selasa', 'Rabu', 'Kamis', 'Jumat', 'Sabtu'];
+$hari = date('w');
+$hari_ini = $seminggu[$hari];
+
+$tgl_sekarang = date('Ymd');
+$thn_sekarang = date('Y');
+$jam_sekarang = date('H:i:s');
+
+$nama_bln = [1=> 'Januari', 'Februari', 'Maret', 'April', 'Mei',
+                    'Juni', 'Juli', 'Agustus', 'September',
+                    'Oktober', 'November', 'Desember', ];
diff --git a/config/qrcode/bindings/tcpdf/qrcode.php b/config/qrcode/bindings/tcpdf/qrcode.php
index 7995460b521583966c0a4811cb1e5b62033d35c3..1e0c95f19c0dfd4a2fa98e7111df04527c77abd5 100755
--- a/config/qrcode/bindings/tcpdf/qrcode.php
+++ b/config/qrcode/bindings/tcpdf/qrcode.php
@@ -1,4 +1,5 @@
 <?php
+
 //============================================================+
 // File name   : qrcode.php
 // Begin       : 2010-03-22
@@ -81,2795 +82,3111 @@
  * This class is derived from "PHP QR Code encoder" by Dominik Dzienia (http://phpqrcode.sourceforge.net/) based on "libqrencode C library 3.1.1." by Kentaro Fukuchi (http://megaui.net/fukuchi/works/qrencode/index.en.html), contains Reed-Solomon code written by Phil Karn, KA9Q. QR Code is registered trademark of DENSO WAVE INCORPORATED (http://www.denso-wave.com/qrcode/index-e.html).
  * Please read comments on this class source file for full copyright and license information.
  *
- * @package com.tecnick.tcpdf
  * @abstract Class for generating QR-code array for TCPDF.
+ *
  * @author Nicola Asuni
  * @copyright 2010 Nicola Asuni - Tecnick.com S.r.l (www.tecnick.com) Via Della Pace, 11 - 09044 - Quartucciu (CA) - ITALY - www.tecnick.com - info@tecnick.com
+ *
  * @link http://www.tcpdf.org
+ *
  * @license http://www.gnu.org/copyleft/lesser.html LGPL
+ *
  * @version 1.0.002
  */
 
 // definitions
 if (!defined('QRCODEDEFS')) {
 
-	/**
-	 * Indicate that definitions for this class are set
-	 */
-	define('QRCODEDEFS', true);
-
-	// -----------------------------------------------------
-
-	// Encoding modes (characters which can be encoded in QRcode)
-
-	/**
-	 * Encoding mode
-	 */
-	define('QR_MODE_NL', -1);
-
-	/**
-	 * Encoding mode numeric (0-9). 3 characters are encoded to 10bit length. In theory, 7089 characters or less can be stored in a QRcode.
-	 */
-	define('QR_MODE_NM', 0);
-
-	/**
-	 * Encoding mode alphanumeric (0-9A-Z $%*+-./:) 45characters. 2 characters are encoded to 11bit length. In theory, 4296 characters or less can be stored in a QRcode.
-	 */
-	define('QR_MODE_AN', 1);
-
-	/**
-	 * Encoding mode 8bit byte data. In theory, 2953 characters or less can be stored in a QRcode.
-	 */
-	define('QR_MODE_8B', 2);
-
-	/**
-	 * Encoding mode KANJI. A KANJI character (multibyte character) is encoded to 13bit length. In theory, 1817 characters or less can be stored in a QRcode.
-	 */
-	define('QR_MODE_KJ', 3);
-
-	/**
-	 * Encoding mode STRUCTURED (currently unsupported)
-	 */
-	define('QR_MODE_ST', 4);
-
-	// -----------------------------------------------------
-
-	// Levels of error correction.
-	// QRcode has a function of an error correcting for miss reading that white is black.
-	// Error correcting is defined in 4 level as below.
-
-	/**
-	 * Error correction level L : About 7% or less errors can be corrected.
-	 */
-	define('QR_ECLEVEL_L', 0);
-
-	/**
-	 * Error correction level M : About 15% or less errors can be corrected.
-	 */
-	define('QR_ECLEVEL_M', 1);
-
-	/**
-	 * Error correction level Q : About 25% or less errors can be corrected.
-	 */
-	define('QR_ECLEVEL_Q', 2);
-
-	/**
-	 * Error correction level H : About 30% or less errors can be corrected.
-	 */
-	define('QR_ECLEVEL_H', 3);
-
-	// -----------------------------------------------------
-
-	// Version. Size of QRcode is defined as version.
-	// Version is from 1 to 40.
-	// Version 1 is 21*21 matrix. And 4 modules increases whenever 1 version increases.
-	// So version 40 is 177*177 matrix.
-
-	/**
-	 * Maximum QR Code version.
-	 */
-	define('QRSPEC_VERSION_MAX', 40);
-
-	/**
-	 * Maximum matrix size for maximum version (version 40 is 177*177 matrix).
-	 */
+    /*
+     * Indicate that definitions for this class are set
+     */
+    define('QRCODEDEFS', true);
+
+    // -----------------------------------------------------
+
+    // Encoding modes (characters which can be encoded in QRcode)
+
+    /*
+     * Encoding mode
+     */
+    define('QR_MODE_NL', -1);
+
+    /*
+     * Encoding mode numeric (0-9). 3 characters are encoded to 10bit length. In theory, 7089 characters or less can be stored in a QRcode.
+     */
+    define('QR_MODE_NM', 0);
+
+    /*
+     * Encoding mode alphanumeric (0-9A-Z $%*+-./:) 45characters. 2 characters are encoded to 11bit length. In theory, 4296 characters or less can be stored in a QRcode.
+     */
+    define('QR_MODE_AN', 1);
+
+    /*
+     * Encoding mode 8bit byte data. In theory, 2953 characters or less can be stored in a QRcode.
+     */
+    define('QR_MODE_8B', 2);
+
+    /*
+     * Encoding mode KANJI. A KANJI character (multibyte character) is encoded to 13bit length. In theory, 1817 characters or less can be stored in a QRcode.
+     */
+    define('QR_MODE_KJ', 3);
+
+    /*
+     * Encoding mode STRUCTURED (currently unsupported)
+     */
+    define('QR_MODE_ST', 4);
+
+    // -----------------------------------------------------
+
+    // Levels of error correction.
+    // QRcode has a function of an error correcting for miss reading that white is black.
+    // Error correcting is defined in 4 level as below.
+
+    /*
+     * Error correction level L : About 7% or less errors can be corrected.
+     */
+    define('QR_ECLEVEL_L', 0);
+
+    /*
+     * Error correction level M : About 15% or less errors can be corrected.
+     */
+    define('QR_ECLEVEL_M', 1);
+
+    /*
+     * Error correction level Q : About 25% or less errors can be corrected.
+     */
+    define('QR_ECLEVEL_Q', 2);
+
+    /*
+     * Error correction level H : About 30% or less errors can be corrected.
+     */
+    define('QR_ECLEVEL_H', 3);
+
+    // -----------------------------------------------------
+
+    // Version. Size of QRcode is defined as version.
+    // Version is from 1 to 40.
+    // Version 1 is 21*21 matrix. And 4 modules increases whenever 1 version increases.
+    // So version 40 is 177*177 matrix.
+
+    /*
+     * Maximum QR Code version.
+     */
+    define('QRSPEC_VERSION_MAX', 40);
+
+    /*
+     * Maximum matrix size for maximum version (version 40 is 177*177 matrix).
+     */
     define('QRSPEC_WIDTH_MAX', 177);
 
-	// -----------------------------------------------------
+    // -----------------------------------------------------
 
-	/**
-	 * Matrix index to get width from $capacity array.
-	 */
-    define('QRCAP_WIDTH',    0);
+    /*
+     * Matrix index to get width from $capacity array.
+     */
+    define('QRCAP_WIDTH', 0);
 
-    /**
-	 * Matrix index to get number of words from $capacity array.
-	 */
-    define('QRCAP_WORDS',    1);
+    /*
+     * Matrix index to get number of words from $capacity array.
+     */
+    define('QRCAP_WORDS', 1);
 
-    /**
-	 * Matrix index to get remainder from $capacity array.
-	 */
+    /*
+     * Matrix index to get remainder from $capacity array.
+     */
     define('QRCAP_REMINDER', 2);
 
-    /**
-	 * Matrix index to get error correction level from $capacity array.
-	 */
-    define('QRCAP_EC',       3);
+    /*
+     * Matrix index to get error correction level from $capacity array.
+     */
+    define('QRCAP_EC', 3);
 
-	// -----------------------------------------------------
+    // -----------------------------------------------------
 
-	// Structure (currently usupported)
+    // Structure (currently usupported)
 
-	/**
-	 * Number of header bits for structured mode
-	 */
-    define('STRUCTURE_HEADER_BITS',  20);
+    /*
+     * Number of header bits for structured mode
+     */
+    define('STRUCTURE_HEADER_BITS', 20);
 
-    /**
-	 * Max number of symbols for structured mode
-	 */
+    /*
+     * Max number of symbols for structured mode
+     */
     define('MAX_STRUCTURED_SYMBOLS', 16);
 
-	// -----------------------------------------------------
+    // -----------------------------------------------------
 
     // Masks
 
-    /**
-	 * Down point base value for case 1 mask pattern (concatenation of same color in a line or a column)
-	 */
-    define('N1',  3);
+    /*
+     * Down point base value for case 1 mask pattern (concatenation of same color in a line or a column)
+     */
+    define('N1', 3);
 
-    /**
-	 * Down point base value for case 2 mask pattern (module block of same color)
-	 */
-	define('N2',  3);
+    /*
+     * Down point base value for case 2 mask pattern (module block of same color)
+     */
+    define('N2', 3);
 
-    /**
-	 * Down point base value for case 3 mask pattern (1:1:3:1:1(dark:bright:dark:bright:dark)pattern in a line or a column)
-	 */
-	define('N3', 40);
+    /*
+     * Down point base value for case 3 mask pattern (1:1:3:1:1(dark:bright:dark:bright:dark)pattern in a line or a column)
+     */
+    define('N3', 40);
 
-    /**
-	 * Down point base value for case 4 mask pattern (ration of dark modules in whole)
-	 */
-	define('N4', 10);
-
-	// -----------------------------------------------------
+    /*
+     * Down point base value for case 4 mask pattern (ration of dark modules in whole)
+     */
+    define('N4', 10);
 
-	// Optimization settings
+    // -----------------------------------------------------
 
-	/**
-	 * if true, estimates best mask (spec. default, but extremally slow; set to false to significant performance boost but (propably) worst quality code
-	 */
-	define('QR_FIND_BEST_MASK', true);
+    // Optimization settings
 
-	/**
-	 * if false, checks all masks available, otherwise value tells count of masks need to be checked, mask id are got randomly
-	 */
-	define('QR_FIND_FROM_RANDOM', 2);
+    /*
+     * if true, estimates best mask (spec. default, but extremally slow; set to false to significant performance boost but (propably) worst quality code
+     */
+    define('QR_FIND_BEST_MASK', true);
 
-	/**
-	 * when QR_FIND_BEST_MASK === false
-	 */
-	define('QR_DEFAULT_MASK', 2);
+    /*
+     * if false, checks all masks available, otherwise value tells count of masks need to be checked, mask id are got randomly
+     */
+    define('QR_FIND_FROM_RANDOM', 2);
 
-	// -----------------------------------------------------
+    /*
+     * when QR_FIND_BEST_MASK === false
+     */
+    define('QR_DEFAULT_MASK', 2);
 
+    // -----------------------------------------------------
 } // end of definitions
 
 // #*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#
 
 if (!class_exists('QRcode', false)) {
 
-	// for compaibility with PHP4
-	if (!function_exists('str_split')) {
-    	/**
-    	 * Convert a string to an array (needed for PHP4 compatibility)
-    	 * @param string $string The input string.
-    	 * @param int $split_length Maximum length of the chunk.
-    	 * @return  If the optional split_length  parameter is specified, the returned array will be broken down into chunks with each being split_length  in length, otherwise each chunk will be one character in length. FALSE is returned if split_length is less than 1. If the split_length length exceeds the length of string , the entire string is returned as the first (and only) array element.
-    	 */
-		function str_split($string, $split_length=1) {
-			if ((strlen($string) > $split_length) OR (!$split_length)) {
-				do {
-					$c = strlen($string);
-					$parts[] = substr($string, 0, $split_length);
-					$string = substr($string, $split_length);
-				} while ($string !== false);
-			} else {
-				$parts = array($string);
-			}
-			return $parts;
-		}
-	}
-
-	// #####################################################
-
-	/**
-	 * Class to create QR-code arrays for TCPDF class.
-	 * QR Code symbol is a 2D barcode that can be scanned by handy terminals such as a mobile phone with CCD.
-	 * The capacity of QR Code is up to 7000 digits or 4000 characters, and has high robustness.
-	 * This class supports QR Code model 2, described in JIS (Japanese Industrial Standards) X0510:2004 or ISO/IEC 18004.
-	 * Currently the following features are not supported: ECI and FNC1 mode, Micro QR Code, QR Code model 1, Structured mode.
-	 *
-	 * This class is derived from "PHP QR Code encoder" by Dominik Dzienia (http://phpqrcode.sourceforge.net/) based on "libqrencode C library 3.1.1." by Kentaro Fukuchi (http://megaui.net/fukuchi/works/qrencode/index.en.html), contains Reed-Solomon code written by Phil Karn, KA9Q. QR Code is registered trademark of DENSO WAVE INCORPORATED (http://www.denso-wave.com/qrcode/index-e.html).
-	 * Please read comments on this class source file for full copyright and license information.
-	 *
-	 * @name QRcode
-	 * @package com.tecnick.tcpdf
-	 * @abstract Class for generating QR-code array for TCPDF.
-	 * @author Nicola Asuni
-	 * @copyright 2010 Nicola Asuni - Tecnick.com S.r.l (www.tecnick.com) Via Della Pace, 11 - 09044 - Quartucciu (CA) - ITALY - www.tecnick.com - info@tecnick.com
-	 * @link http://www.tcpdf.org
-	 * @license http://www.gnu.org/copyleft/lesser.html LGPL
-	 * @version 1.0.002
-	 */
-	class QRcode {
-
-		/**
-		 * @var barcode array to be returned which is readable by TCPDF
-		 * @access protected
-		 */
-		protected $barcode_array = array();
-
-		/**
-		 * @var QR code version. Size of QRcode is defined as version. Version is from 1 to 40. Version 1 is 21*21 matrix. And 4 modules increases whenever 1 version increases. So version 40 is 177*177 matrix.
-		 * @access protected
-		 */
-		protected $version = 0;
-
-		/**
-		 * @var Levels of error correction. See definitions for possible values.
-		 * @access protected
-		 */
-		protected $level = QR_ECLEVEL_L;
-
-		/**
-		 * @var Encoding mode
-		 * @access protected
-		 */
-		protected $hint = QR_MODE_8B;
-
-		/**
-		 * @var if true the input string will be converted to uppercase
-		 * @access protected
-		 */
-		protected $casesensitive = true;
-
-		/**
-		 * @var structured QR code (not supported yet)
-		 * @access protected
-		 */
-		protected $structured = 0;
-
-		/**
-		 * @var mask data
-		 * @access protected
-		 */
-		protected $data;
-
-		// FrameFiller
-
-		/**
-		 * @var width
-		 * @access protected
-		 */
-		protected $width;
-
-		/**
-		 * @var frame
-		 * @access protected
-		 */
-		protected $frame;
-
-		/**
-		 * @var X position of bit
-		 * @access protected
-		 */
-		protected $x;
-
-		/**
-		 * @var Y position of bit
-		 * @access protected
-		 */
-		protected $y;
-
-		/**
-		 * @var direction
-		 * @access protected
-		 */
-		protected $dir;
-
-		/**
-		 * @var single bit
-		 * @access protected
-		 */
-		protected $bit;
-
-		// ---- QRrawcode ----
-
-		/**
-		 * @var data code
-		 * @access protected
-		 */
-		protected $datacode = array();
-
-		/**
-		 * @var error correction code
-		 * @access protected
-		 */
-		protected $ecccode = array();
-
-		/**
-		 * @var blocks
-		 * @access protected
-		 */
-		protected $blocks;
-
-		/**
-		 * @var Reed-Solomon blocks
-		 * @access protected
-		 */
-		protected $rsblocks = array(); //of RSblock
-
-		/**
-		 * @var counter
-		 * @access protected
-		 */
-		protected $count;
-
-		/**
-		 * @var data length
-		 * @access protected
-		 */
-		protected $dataLength;
-
-		/**
-		 * @var error correction length
-		 * @access protected
-		 */
-		protected $eccLength;
-
-		/**
-		 * @var b1
-		 * @access protected
-		 */
-		protected $b1;
-
-		// ---- QRmask ----
-
-		/**
-		 * @var run length
-		 * @access protected
-		 */
-		protected $runLength = array();
-
-		// ---- QRsplit ----
-
-		/**
-		 * @var input data string
-		 * @access protected
-		 */
-		protected $dataStr = '';
-
-		/**
-		 * @var input items
-		 * @access protected
-		 */
-		protected $items;
-
-		// Reed-Solomon items
-
-		/**
-		 * @var Reed-Solomon items
-		 * @access protected
-		 */
-		protected $rsitems = array();
-
-		/**
-		 * @var array of frames
-		 * @access protected
-		 */
-		protected $frames = array();
-
-		/**
-		 * @var alphabet-numeric convesion table
-		 * @access protected
-		 */
-		protected $anTable = array(
-			-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, //
-			-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, //
-			36, -1, -1, -1, 37, 38, -1, -1, -1, -1, 39, 40, -1, 41, 42, 43, //
-			 0,  1,  2,  3,  4,  5,  6,  7,  8,  9, 44, -1, -1, -1, -1, -1, //
-			-1, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, //
-			25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, -1, -1, -1, -1, -1, //
-			-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, //
-			-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1  //
-			);
-
-		/**
-		 * @var array Table of the capacity of symbols
-		 * See Table 1 (pp.13) and Table 12-16 (pp.30-36), JIS X0510:2004.
-		 * @access protected
-		 */
-		protected $capacity = array(
-			array(  0,    0, 0, array(   0,    0,    0,    0)), //
-			array( 21,   26, 0, array(   7,   10,   13,   17)), //  1
-			array( 25,   44, 7, array(  10,   16,   22,   28)), //
-			array( 29,   70, 7, array(  15,   26,   36,   44)), //
-			array( 33,  100, 7, array(  20,   36,   52,   64)), //
-			array( 37,  134, 7, array(  26,   48,   72,   88)), //  5
-			array( 41,  172, 7, array(  36,   64,   96,  112)), //
-			array( 45,  196, 0, array(  40,   72,  108,  130)), //
-			array( 49,  242, 0, array(  48,   88,  132,  156)), //
-			array( 53,  292, 0, array(  60,  110,  160,  192)), //
-			array( 57,  346, 0, array(  72,  130,  192,  224)), // 10
-			array( 61,  404, 0, array(  80,  150,  224,  264)), //
-			array( 65,  466, 0, array(  96,  176,  260,  308)), //
-			array( 69,  532, 0, array( 104,  198,  288,  352)), //
-			array( 73,  581, 3, array( 120,  216,  320,  384)), //
-			array( 77,  655, 3, array( 132,  240,  360,  432)), // 15
-			array( 81,  733, 3, array( 144,  280,  408,  480)), //
-			array( 85,  815, 3, array( 168,  308,  448,  532)), //
-			array( 89,  901, 3, array( 180,  338,  504,  588)), //
-			array( 93,  991, 3, array( 196,  364,  546,  650)), //
-			array( 97, 1085, 3, array( 224,  416,  600,  700)), // 20
-			array(101, 1156, 4, array( 224,  442,  644,  750)), //
-			array(105, 1258, 4, array( 252,  476,  690,  816)), //
-			array(109, 1364, 4, array( 270,  504,  750,  900)), //
-			array(113, 1474, 4, array( 300,  560,  810,  960)), //
-			array(117, 1588, 4, array( 312,  588,  870, 1050)), // 25
-			array(121, 1706, 4, array( 336,  644,  952, 1110)), //
-			array(125, 1828, 4, array( 360,  700, 1020, 1200)), //
-			array(129, 1921, 3, array( 390,  728, 1050, 1260)), //
-			array(133, 2051, 3, array( 420,  784, 1140, 1350)), //
-			array(137, 2185, 3, array( 450,  812, 1200, 1440)), // 30
-			array(141, 2323, 3, array( 480,  868, 1290, 1530)), //
-			array(145, 2465, 3, array( 510,  924, 1350, 1620)), //
-			array(149, 2611, 3, array( 540,  980, 1440, 1710)), //
-			array(153, 2761, 3, array( 570, 1036, 1530, 1800)), //
-			array(157, 2876, 0, array( 570, 1064, 1590, 1890)), // 35
-			array(161, 3034, 0, array( 600, 1120, 1680, 1980)), //
-			array(165, 3196, 0, array( 630, 1204, 1770, 2100)), //
-			array(169, 3362, 0, array( 660, 1260, 1860, 2220)), //
-			array(173, 3532, 0, array( 720, 1316, 1950, 2310)), //
-			array(177, 3706, 0, array( 750, 1372, 2040, 2430))  // 40
-		);
-
-		/**
-		 * @var array Length indicator
-		 * @access protected
-		 */
-		protected $lengthTableBits = array(
-			array(10, 12, 14),
-			array( 9, 11, 13),
-			array( 8, 16, 16),
-			array( 8, 10, 12)
-		);
-
-		/**
-		 * @var array Table of the error correction code (Reed-Solomon block)
-		 * See Table 12-16 (pp.30-36), JIS X0510:2004.
-		 * @access protected
-		 */
-		protected $eccTable = array(
-			array(array( 0,  0), array( 0,  0), array( 0,  0), array( 0,  0)), //
-			array(array( 1,  0), array( 1,  0), array( 1,  0), array( 1,  0)), //  1
-			array(array( 1,  0), array( 1,  0), array( 1,  0), array( 1,  0)), //
-			array(array( 1,  0), array( 1,  0), array( 2,  0), array( 2,  0)), //
-			array(array( 1,  0), array( 2,  0), array( 2,  0), array( 4,  0)), //
-			array(array( 1,  0), array( 2,  0), array( 2,  2), array( 2,  2)), //  5
-			array(array( 2,  0), array( 4,  0), array( 4,  0), array( 4,  0)), //
-			array(array( 2,  0), array( 4,  0), array( 2,  4), array( 4,  1)), //
-			array(array( 2,  0), array( 2,  2), array( 4,  2), array( 4,  2)), //
-			array(array( 2,  0), array( 3,  2), array( 4,  4), array( 4,  4)), //
-			array(array( 2,  2), array( 4,  1), array( 6,  2), array( 6,  2)), // 10
-			array(array( 4,  0), array( 1,  4), array( 4,  4), array( 3,  8)), //
-			array(array( 2,  2), array( 6,  2), array( 4,  6), array( 7,  4)), //
-			array(array( 4,  0), array( 8,  1), array( 8,  4), array(12,  4)), //
-			array(array( 3,  1), array( 4,  5), array(11,  5), array(11,  5)), //
-			array(array( 5,  1), array( 5,  5), array( 5,  7), array(11,  7)), // 15
-			array(array( 5,  1), array( 7,  3), array(15,  2), array( 3, 13)), //
-			array(array( 1,  5), array(10,  1), array( 1, 15), array( 2, 17)), //
-			array(array( 5,  1), array( 9,  4), array(17,  1), array( 2, 19)), //
-			array(array( 3,  4), array( 3, 11), array(17,  4), array( 9, 16)), //
-			array(array( 3,  5), array( 3, 13), array(15,  5), array(15, 10)), // 20
-			array(array( 4,  4), array(17,  0), array(17,  6), array(19,  6)), //
-			array(array( 2,  7), array(17,  0), array( 7, 16), array(34,  0)), //
-			array(array( 4,  5), array( 4, 14), array(11, 14), array(16, 14)), //
-			array(array( 6,  4), array( 6, 14), array(11, 16), array(30,  2)), //
-			array(array( 8,  4), array( 8, 13), array( 7, 22), array(22, 13)), // 25
-			array(array(10,  2), array(19,  4), array(28,  6), array(33,  4)), //
-			array(array( 8,  4), array(22,  3), array( 8, 26), array(12, 28)), //
-			array(array( 3, 10), array( 3, 23), array( 4, 31), array(11, 31)), //
-			array(array( 7,  7), array(21,  7), array( 1, 37), array(19, 26)), //
-			array(array( 5, 10), array(19, 10), array(15, 25), array(23, 25)), // 30
-			array(array(13,  3), array( 2, 29), array(42,  1), array(23, 28)), //
-			array(array(17,  0), array(10, 23), array(10, 35), array(19, 35)), //
-			array(array(17,  1), array(14, 21), array(29, 19), array(11, 46)), //
-			array(array(13,  6), array(14, 23), array(44,  7), array(59,  1)), //
-			array(array(12,  7), array(12, 26), array(39, 14), array(22, 41)), // 35
-			array(array( 6, 14), array( 6, 34), array(46, 10), array( 2, 64)), //
-			array(array(17,  4), array(29, 14), array(49, 10), array(24, 46)), //
-			array(array( 4, 18), array(13, 32), array(48, 14), array(42, 32)), //
-			array(array(20,  4), array(40,  7), array(43, 22), array(10, 67)), //
-			array(array(19,  6), array(18, 31), array(34, 34), array(20, 61))  // 40
-		);
-
-		/**
-		 * @var array Positions of alignment patterns.
-		 * This array includes only the second and the third position of the alignment patterns. Rest of them can be calculated from the distance between them.
-		 * See Table 1 in Appendix E (pp.71) of JIS X0510:2004.
-		 * @access protected
-		 */
-		protected $alignmentPattern = array(
-			array( 0,  0),
-			array( 0,  0), array(18,  0), array(22,  0), array(26,  0), array(30,  0), //  1- 5
-			array(34,  0), array(22, 38), array(24, 42), array(26, 46), array(28, 50), //  6-10
-			array(30, 54), array(32, 58), array(34, 62), array(26, 46), array(26, 48), // 11-15
-			array(26, 50), array(30, 54), array(30, 56), array(30, 58), array(34, 62), // 16-20
-			array(28, 50), array(26, 50), array(30, 54), array(28, 54), array(32, 58), // 21-25
-			array(30, 58), array(34, 62), array(26, 50), array(30, 54), array(26, 52), // 26-30
-			array(30, 56), array(34, 60), array(30, 58), array(34, 62), array(30, 54), // 31-35
-			array(24, 50), array(28, 54), array(32, 58), array(26, 54), array(30, 58)  // 35-40
-		);
-
-		/**
-		 * @var array Version information pattern (BCH coded).
-		 * See Table 1 in Appendix D (pp.68) of JIS X0510:2004.
-		 * size: [QRSPEC_VERSION_MAX - 6]
-		 * @access protected
-		 */
-		protected $versionPattern = array(
-			0x07c94, 0x085bc, 0x09a99, 0x0a4d3, 0x0bbf6, 0x0c762, 0x0d847, 0x0e60d, //
-			0x0f928, 0x10b78, 0x1145d, 0x12a17, 0x13532, 0x149a6, 0x15683, 0x168c9, //
-			0x177ec, 0x18ec4, 0x191e1, 0x1afab, 0x1b08e, 0x1cc1a, 0x1d33f, 0x1ed75, //
-			0x1f250, 0x209d5, 0x216f0, 0x228ba, 0x2379f, 0x24b0b, 0x2542e, 0x26a64, //
-			0x27541, 0x28c69
-		);
-
-		/**
-		 * @var array Format information
-		 * @access protected
-		 */
-		protected $formatInfo = array(
-			array(0x77c4, 0x72f3, 0x7daa, 0x789d, 0x662f, 0x6318, 0x6c41, 0x6976), //
-			array(0x5412, 0x5125, 0x5e7c, 0x5b4b, 0x45f9, 0x40ce, 0x4f97, 0x4aa0), //
-			array(0x355f, 0x3068, 0x3f31, 0x3a06, 0x24b4, 0x2183, 0x2eda, 0x2bed), //
-			array(0x1689, 0x13be, 0x1ce7, 0x19d0, 0x0762, 0x0255, 0x0d0c, 0x083b)  //
-		);
-
-
-		// -------------------------------------------------
-		// -------------------------------------------------
-
-
-		/**
-		 * This is the class constructor.
-		 * Creates a QRcode object
-		 * @param string $code code to represent using QRcode
-		 * @param string $eclevel error level: <ul><li>L : About 7% or less errors can be corrected.</li><li>M : About 15% or less errors can be corrected.</li><li>Q : About 25% or less errors can be corrected.</li><li>H : About 30% or less errors can be corrected.</li></ul>
-		 * @access public
-		 * @since 1.0.000
-		 */
-		public function __construct($code, $eclevel = 'L') {
-			$barcode_array = array();
-			if ((is_null($code)) OR ($code == '\0') OR ($code == '')) {
-				return false;
-			}
-			// set error correction level
-			$this->level = array_search($eclevel, array('L', 'M', 'Q', 'H'));
-			if ($this->level === false) {
-				$this->level = QR_ECLEVEL_L;
-			}
-			if (($this->hint != QR_MODE_8B) AND ($this->hint != QR_MODE_KJ)) {
-				return false;
-			}
-			if (($this->version < 0) OR ($this->version > QRSPEC_VERSION_MAX)) {
-				return false;
-			}
-			$this->items = array();
-			$this->encodeString($code);
-			$qrTab = $this->binarize($this->data);
-			$size = count($qrTab);
-			$barcode_array['num_rows'] = $size;
-			$barcode_array['num_cols'] = $size;
-			$barcode_array['bcode'] = array();
-			foreach ($qrTab as $line) {
-				$arrAdd = array();
-				foreach (str_split($line) as $char) {
-					$arrAdd[] = ($char=='1')?1:0;
-				}
-				$barcode_array['bcode'][] = $arrAdd;
-			}
-			$this->barcode_array = $barcode_array;
-		}
-
-		/**
-		 * Returns a barcode array which is readable by TCPDF
-		 * @return array barcode array readable by TCPDF;
-		 * @access public
-		 */
-		public function getBarcodeArray() {
-			return $this->barcode_array;
-		}
-
-		/**
-		 * Convert the frame in binary form
-		 * @param array $frame array to binarize
-		 * @return array frame in binary form
-		 */
-		protected function binarize($frame) {
-			$len = count($frame);
-			// the frame is square (width = height)
-			foreach ($frame as &$frameLine) {
-				for ($i=0; $i<$len; $i++) {
-					$frameLine[$i] = (ord($frameLine[$i])&1)?'1':'0';
-				}
-			}
-			return $frame;
-		}
-
-		/**
-		 * Encode the input string to QR code
-		 * @param string $string input string to encode
-		 */
-		protected function encodeString($string) {
-			$this->dataStr = $string;
-			if (!$this->casesensitive) {
-				$this->toUpper();
-			}
-			$ret = $this->splitString();
-			if ($ret < 0) {
-				return NULL;
-			}
-			$this->encodeMask(-1);
-		}
-
-		/**
-		 * Encode mask
-		 * @param int $mask masking mode
-		 */
-		protected function encodeMask($mask) {
-			$spec = array(0, 0, 0, 0, 0);
-			$this->datacode = $this->getByteStream($this->items);
-			if (is_null($this->datacode)) {
-				return NULL;
-			}
-			$spec = $this->getEccSpec($this->version, $this->level, $spec);
-			$this->b1 = $this->rsBlockNum1($spec);
-			$this->dataLength = $this->rsDataLength($spec);
-			$this->eccLength = $this->rsEccLength($spec);
-			$this->ecccode = array_fill(0, $this->eccLength, 0);
-			$this->blocks = $this->rsBlockNum($spec);
-			$ret = $this->init($spec);
-			if ($ret < 0) {
-				return NULL;
-			}
-			$this->count = 0;
-			$this->width = $this->getWidth($this->version);
-			$this->frame = $this->newFrame($this->version);
-			$this->x = $this->width - 1;
-			$this->y = $this->width - 1;
-			$this->dir = -1;
-			$this->bit = -1;
-			// inteleaved data and ecc codes
-			for ($i=0; $i < ($this->dataLength + $this->eccLength); $i++) {
-				$code = $this->getCode();
-				$bit = 0x80;
-				for ($j=0; $j<8; $j++) {
-					$addr = $this->getNextPosition();
-					$this->setFrameAt($addr, 0x02 | (($bit & $code) != 0));
-					$bit = $bit >> 1;
-				}
-			}
-			// remainder bits
-			$j = $this->getRemainder($this->version);
-			for ($i=0; $i<$j; $i++) {
-				$addr = $this->getNextPosition();
-				$this->setFrameAt($addr, 0x02);
-			}
-			// masking
-			$this->runLength = array_fill(0, QRSPEC_WIDTH_MAX + 1, 0);
-			if ($mask < 0) {
-				if (QR_FIND_BEST_MASK) {
-					$masked = $this->mask($this->width, $this->frame, $this->level);
-				} else {
-					$masked = $this->makeMask($this->width, $this->frame, (intval(QR_DEFAULT_MASK) % 8), $this->level);
-				}
-			} else {
-				$masked = $this->makeMask($this->width, $this->frame, $mask, $this->level);
-			}
-			if ($masked == NULL) {
-				return NULL;
-			}
-			$this->data = $masked;
-		}
-
-		// - - - - - - - - - - - - - - - - - - - - - - - - -
-
-		// FrameFiller
-
-		/**
-		 * Set frame value at specified position
-		 * @param array $at x,y position
-		 * @param int $val value of the character to set
-		 */
-		protected function setFrameAt($at, $val) {
-			$this->frame[$at['y']][$at['x']] = chr($val);
-		}
-
-		/**
-		 * Get frame value at specified position
-		 * @param array $at x,y position
-		 * @return value at specified position
-		 */
-		protected function getFrameAt($at) {
-			return ord($this->frame[$at['y']][$at['x']]);
-		}
-
-		/**
-		 * Return the next frame position
-		 * @return array of x,y coordinates
-		 */
-		protected function getNextPosition() {
-			do {
-				if ($this->bit == -1) {
-					$this->bit = 0;
-					return array('x'=>$this->x, 'y'=>$this->y);
-				}
-				$x = $this->x;
-				$y = $this->y;
-				$w = $this->width;
-				if ($this->bit == 0) {
-					$x--;
-					$this->bit++;
-				} else {
-					$x++;
-					$y += $this->dir;
-					$this->bit--;
-				}
-				if ($this->dir < 0) {
-					if ($y < 0) {
-						$y = 0;
-						$x -= 2;
-						$this->dir = 1;
-						if ($x == 6) {
-							$x--;
-							$y = 9;
-						}
-					}
-				} else {
-					if ($y == $w) {
-						$y = $w - 1;
-						$x -= 2;
-						$this->dir = -1;
-						if ($x == 6) {
-							$x--;
-							$y -= 8;
-						}
-					}
-				}
-				if (($x < 0) OR ($y < 0)) {
-					return NULL;
-				}
-				$this->x = $x;
-				$this->y = $y;
-			} while(ord($this->frame[$y][$x]) & 0x80);
-			return array('x'=>$x, 'y'=>$y);
-		}
-
-		// - - - - - - - - - - - - - - - - - - - - - - - - -
-
-		// QRrawcode
-
-		/**
-		 * Initialize code.
-		 * @param array $spec array of ECC specification
-		 * @return 0 in case of success, -1 in case of error
-		 */
-		protected function init($spec) {
-			$dl = $this->rsDataCodes1($spec);
-			$el = $this->rsEccCodes1($spec);
-			$rs = $this->init_rs(8, 0x11d, 0, 1, $el, 255 - $dl - $el);
-			$blockNo = 0;
-			$dataPos = 0;
-			$eccPos = 0;
-			$endfor = $this->rsBlockNum1($spec);
-			for ($i=0; $i < $endfor; ++$i) {
-				$ecc = array_slice($this->ecccode, $eccPos);
-				$this->rsblocks[$blockNo] = array();
-				$this->rsblocks[$blockNo]['dataLength'] = $dl;
-				$this->rsblocks[$blockNo]['data'] = array_slice($this->datacode, $dataPos);
-				$this->rsblocks[$blockNo]['eccLength'] = $el;
-				$ecc = $this->encode_rs_char($rs, $this->rsblocks[$blockNo]['data'], $ecc);
-				$this->rsblocks[$blockNo]['ecc'] = $ecc;
-				$this->ecccode = array_merge(array_slice($this->ecccode,0, $eccPos), $ecc);
-				$dataPos += $dl;
-				$eccPos += $el;
-				$blockNo++;
-			}
-			if ($this->rsBlockNum2($spec) == 0) {
-				return 0;
-			}
-			$dl = $this->rsDataCodes2($spec);
-			$el = $this->rsEccCodes2($spec);
-			$rs = $this->init_rs(8, 0x11d, 0, 1, $el, 255 - $dl - $el);
-			if ($rs == NULL) {
-				return -1;
-			}
-			$endfor = $this->rsBlockNum2($spec);
-			for ($i=0; $i < $endfor; ++$i) {
-				$ecc = array_slice($this->ecccode, $eccPos);
-				$this->rsblocks[$blockNo] = array();
-				$this->rsblocks[$blockNo]['dataLength'] = $dl;
-				$this->rsblocks[$blockNo]['data'] = array_slice($this->datacode, $dataPos);
-				$this->rsblocks[$blockNo]['eccLength'] = $el;
-				$ecc = $this->encode_rs_char($rs, $this->rsblocks[$blockNo]['data'], $ecc);
-				$this->rsblocks[$blockNo]['ecc'] = $ecc;
-				$this->ecccode = array_merge(array_slice($this->ecccode, 0, $eccPos), $ecc);
-				$dataPos += $dl;
-				$eccPos += $el;
-				$blockNo++;
-			}
-			return 0;
-		}
-
-		/**
-		 * Return Reed-Solomon block code.
-		 * @return array rsblocks
-		 */
-		protected function getCode() {
-			if ($this->count < $this->dataLength) {
-				$row = $this->count % $this->blocks;
-				$col = $this->count / $this->blocks;
-				if ($col >= $this->rsblocks[0]['dataLength']) {
-					$row += $this->b1;
-				}
-				$ret = $this->rsblocks[$row]['data'][$col];
-			} elseif ($this->count < $this->dataLength + $this->eccLength) {
-				$row = ($this->count - $this->dataLength) % $this->blocks;
-				$col = ($this->count - $this->dataLength) / $this->blocks;
-				$ret = $this->rsblocks[$row]['ecc'][$col];
-			} else {
-				return 0;
-			}
-			$this->count++;
-			return $ret;
-		}
-
-		// - - - - - - - - - - - - - - - - - - - - - - - - -
-
-		// QRmask
-
-		/**
-		 * Write Format Information on frame and returns the number of black bits
-		 * @param int $width frame width
-		 * @param array $frame frame
-		 * @param array $mask masking mode
-		 * @param int $level error correction level
-		 * @return int blacks
-		 */
-		 protected function writeFormatInformation($width, &$frame, $mask, $level) {
-			$blacks = 0;
-			$format =  $this->getFormatInfo($mask, $level);
-			for ($i=0; $i<8; ++$i) {
-				if ($format & 1) {
-					$blacks += 2;
-					$v = 0x85;
-				} else {
-					$v = 0x84;
-				}
-				$frame[8][$width - 1 - $i] = chr($v);
-				if ($i < 6) {
-					$frame[$i][8] = chr($v);
-				} else {
-					$frame[$i + 1][8] = chr($v);
-				}
-				$format = $format >> 1;
-			}
-			for ($i=0; $i<7; ++$i) {
-			if ($format & 1) {
-				$blacks += 2;
-				$v = 0x85;
-			} else {
-				$v = 0x84;
-			}
-			$frame[$width - 7 + $i][8] = chr($v);
-			if ($i == 0) {
-				$frame[8][7] = chr($v);
-			} else {
-				$frame[8][6 - $i] = chr($v);
-			}
-			$format = $format >> 1;
-			}
-			return $blacks;
-		}
-
-		/**
-		 * mask0
-		 * @param int $x X position
-		 * @param int $y Y position
-		 * @return int mask
-		 */
-		 protected function mask0($x, $y) {
-			return ($x + $y) & 1;
-		}
-
-		/**
-		 * mask1
-		 * @param int $x X position
-		 * @param int $y Y position
-		 * @return int mask
-		 */
-		 protected function mask1($x, $y) {
-			return ($y & 1);
-		}
-
-		/**
-		 * mask2
-		 * @param int $x X position
-		 * @param int $y Y position
-		 * @return int mask
-		 */
-		 protected function mask2($x, $y) {
-			return ($x % 3);
-		}
-
-		/**
-		 * mask3
-		 * @param int $x X position
-		 * @param int $y Y position
-		 * @return int mask
-		 */
-		 protected function mask3($x, $y) {
-			return ($x + $y) % 3;
-		}
-
-		/**
-		 * mask4
-		 * @param int $x X position
-		 * @param int $y Y position
-		 * @return int mask
-		 */
-		 protected function mask4($x, $y) {
-			return (((int)($y / 2)) + ((int)($x / 3))) & 1;
-		}
-
-		/**
-		 * mask5
-		 * @param int $x X position
-		 * @param int $y Y position
-		 * @return int mask
-		 */
-		 protected function mask5($x, $y) {
-			return (($x * $y) & 1) + ($x * $y) % 3;
-		}
-
-		/**
-		 * mask6
-		 * @param int $x X position
-		 * @param int $y Y position
-		 * @return int mask
-		 */
-		 protected function mask6($x, $y) {
-			return ((($x * $y) & 1) + ($x * $y) % 3) & 1;
-		}
-
-		/**
-		 * mask7
-		 * @param int $x X position
-		 * @param int $y Y position
-		 * @return int mask
-		 */
-		 protected function mask7($x, $y) {
-			return ((($x * $y) % 3) + (($x + $y) & 1)) & 1;
-		}
-
-		/**
-		 * Return bitmask
-		 * @param int $maskNo mask number
-		 * @param int $width width
-		 * @param array $frame frame
-		 * @return array bitmask
-		 */
-		protected function generateMaskNo($maskNo, $width, $frame) {
-			$bitMask = array_fill(0, $width, array_fill(0, $width, 0));
-			for ($y=0; $y<$width; ++$y) {
-				for ($x=0; $x<$width; ++$x) {
-					if (ord($frame[$y][$x]) & 0x80) {
-						$bitMask[$y][$x] = 0;
-					} else {
-						$maskFunc = call_user_func(array($this, 'mask'.$maskNo), $x, $y);
-						$bitMask[$y][$x] = ($maskFunc == 0)?1:0;
-					}
-				}
-			}
-			return $bitMask;
-		}
-
-		/**
-		 * makeMaskNo
-		 * @param int $maskNo
-		 * @param int $width
-		 * @param int $s
-		 * @param int $d
-		 * @param boolean $maskGenOnly
-		 * @return int b
-		 */
-		 protected function makeMaskNo($maskNo, $width, $s, &$d, $maskGenOnly=false) {
-			$b = 0;
-			$bitMask = array();
-			$bitMask = $this->generateMaskNo($maskNo, $width, $s, $d);
-			if ($maskGenOnly) {
-				return;
-			}
-			$d = $s;
-			for ($y=0; $y<$width; ++$y) {
-				for ($x=0; $x<$width; ++$x) {
-					if ($bitMask[$y][$x] == 1) {
-						$d[$y][$x] = chr(ord($s[$y][$x]) ^ (int)$bitMask[$y][$x]);
-					}
-					$b += (int)(ord($d[$y][$x]) & 1);
-				}
-			}
-			return $b;
-		}
-
-		/**
-		 * makeMask
-		 * @param int $width
-		 * @param array $frame
-		 * @param int $maskNo
-		 * @param int $level
-		 * @return array mask
-		 */
-		 protected function makeMask($width, $frame, $maskNo, $level) {
-			$masked = array_fill(0, $width, str_repeat("\0", $width));
-			$this->makeMaskNo($maskNo, $width, $frame, $masked);
-			$this->writeFormatInformation($width, $masked, $maskNo, $level);
-			return $masked;
-		}
-
-		/**
-		 * calcN1N3
-		 * @param int $length
-		 * @return int demerit
-		 */
-		 protected function calcN1N3($length) {
-			$demerit = 0;
-			for ($i=0; $i<$length; ++$i) {
-				if ($this->runLength[$i] >= 5) {
-					$demerit += (N1 + ($this->runLength[$i] - 5));
-				}
-				if ($i & 1) {
-					if (($i >= 3) AND ($i < ($length-2)) AND ($this->runLength[$i] % 3 == 0)) {
-						$fact = (int)($this->runLength[$i] / 3);
-						if (($this->runLength[$i-2] == $fact)
-							AND ($this->runLength[$i-1] == $fact)
-							AND ($this->runLength[$i+1] == $fact)
-							AND ($this->runLength[$i+2] == $fact)) {
-							if (($this->runLength[$i-3] < 0) OR ($this->runLength[$i-3] >= (4 * $fact))) {
-								$demerit += N3;
-							} elseif ((($i+3) >= $length) OR ($this->runLength[$i+3] >= (4 * $fact))) {
-								$demerit += N3;
-							}
-						}
-					}
-				}
-			}
-			return $demerit;
-		}
-
-		/**
-		 * evaluateSymbol
-		 * @param int $width
-		 * @param array $frame
-		 * @return int demerit
-		 */
-		 protected function evaluateSymbol($width, $frame) {
-			$head = 0;
-			$demerit = 0;
-			for ($y=0; $y<$width; ++$y) {
-				$head = 0;
-				$this->runLength[0] = 1;
-				$frameY = $frame[$y];
-				if ($y > 0) {
-					$frameYM = $frame[$y-1];
-				}
-				for ($x=0; $x<$width; ++$x) {
-					if (($x > 0) AND ($y > 0)) {
-						$b22 = ord($frameY[$x]) & ord($frameY[$x-1]) & ord($frameYM[$x]) & ord($frameYM[$x-1]);
-						$w22 = ord($frameY[$x]) | ord($frameY[$x-1]) | ord($frameYM[$x]) | ord($frameYM[$x-1]);
-						if (($b22 | ($w22 ^ 1)) & 1) {
-							$demerit += N2;
-						}
-					}
-					if (($x == 0) AND (ord($frameY[$x]) & 1)) {
-						$this->runLength[0] = -1;
-						$head = 1;
-						$this->runLength[$head] = 1;
-					} elseif ($x > 0) {
-						if ((ord($frameY[$x]) ^ ord($frameY[$x-1])) & 1) {
-							$head++;
-							$this->runLength[$head] = 1;
-						} else {
-							$this->runLength[$head]++;
-						}
-					}
-				}
-				$demerit += $this->calcN1N3($head+1);
-			}
-			for ($x=0; $x<$width; ++$x) {
-				$head = 0;
-				$this->runLength[0] = 1;
-				for ($y=0; $y<$width; ++$y) {
-					if (($y == 0) AND (ord($frame[$y][$x]) & 1)) {
-						$this->runLength[0] = -1;
-						$head = 1;
-						$this->runLength[$head] = 1;
-					} elseif ($y > 0) {
-						if ((ord($frame[$y][$x]) ^ ord($frame[$y-1][$x])) & 1) {
-							$head++;
-							$this->runLength[$head] = 1;
-						} else {
-							$this->runLength[$head]++;
-						}
-					}
-				}
-				$demerit += $this->calcN1N3($head+1);
-			}
-			return $demerit;
-		}
-
-		/**
-		 * mask
-		 * @param int $width
-		 * @param array $frame
-		 * @param int $level
-		 * @return array best mask
-		 */
-		 protected function mask($width, $frame, $level) {
-			$minDemerit = PHP_INT_MAX;
-			$bestMaskNum = 0;
-			$bestMask = array();
-			$checked_masks = array(0, 1, 2, 3, 4, 5, 6, 7);
-			if (QR_FIND_FROM_RANDOM !== false) {
-				$howManuOut = 8 - (QR_FIND_FROM_RANDOM % 9);
-				for ($i = 0; $i <  $howManuOut; ++$i) {
-					$remPos = rand (0, count($checked_masks)-1);
-					unset($checked_masks[$remPos]);
-					$checked_masks = array_values($checked_masks);
-				}
-			}
-			$bestMask = $frame;
-			foreach ($checked_masks as $i) {
-				$mask = array_fill(0, $width, str_repeat("\0", $width));
-				$demerit = 0;
-				$blacks = 0;
-				$blacks  = $this->makeMaskNo($i, $width, $frame, $mask);
-				$blacks += $this->writeFormatInformation($width, $mask, $i, $level);
-				$blacks  = (int)(100 * $blacks / ($width * $width));
-				$demerit = (int)((int)(abs($blacks - 50) / 5) * N4);
-				$demerit += $this->evaluateSymbol($width, $mask);
-				if ($demerit < $minDemerit) {
-					$minDemerit = $demerit;
-					$bestMask = $mask;
-					$bestMaskNum = $i;
-				}
-			}
-			return $bestMask;
-		}
-
-		// - - - - - - - - - - - - - - - - - - - - - - - - -
-
-		// QRsplit
-
-		/**
-		 * Return true if the character at specified position is a number
-		 * @param string $str string
-		 * @param int $pos characted position
-		 * @return boolean true of false
-		 */
-		 protected function isdigitat($str, $pos) {
-			if ($pos >= strlen($str)) {
-				return false;
-			}
-			return ((ord($str[$pos]) >= ord('0'))&&(ord($str[$pos]) <= ord('9')));
-		}
-
-		/**
-		 * Return true if the character at specified position is an alphanumeric character
-		 * @param string $str string
-		 * @param int $pos characted position
-		 * @return boolean true of false
-		 */
-		 protected function isalnumat($str, $pos) {
-			if ($pos >= strlen($str)) {
-				return false;
-			}
-			return ($this->lookAnTable(ord($str[$pos])) >= 0);
-		}
-
-		/**
-		 * identifyMode
-		 * @param int $pos
-		 * @return int mode
-		 */
-		 protected function identifyMode($pos) {
-			if ($pos >= strlen($this->dataStr)) {
-				return QR_MODE_NL;
-			}
-			$c = $this->dataStr[$pos];
-			if ($this->isdigitat($this->dataStr, $pos)) {
-				return QR_MODE_NM;
-			} elseif ($this->isalnumat($this->dataStr, $pos)) {
-				return QR_MODE_AN;
-			} elseif ($this->hint == QR_MODE_KJ) {
-				if ($pos+1 < strlen($this->dataStr)) {
-					$d = $this->dataStr[$pos+1];
-					$word = (ord($c) << 8) | ord($d);
-					if (($word >= 0x8140 && $word <= 0x9ffc) OR ($word >= 0xe040 && $word <= 0xebbf)) {
-						return QR_MODE_KJ;
-					}
-				}
-			}
-			return QR_MODE_8B;
-		}
-
-		/**
-		 * eatNum
-		 * @return int run
-		 */
-		 protected function eatNum() {
-			$ln = $this->lengthIndicator(QR_MODE_NM, $this->version);
-			$p = 0;
-			while($this->isdigitat($this->dataStr, $p)) {
-				$p++;
-			}
-			$run = $p;
-			$mode = $this->identifyMode($p);
-			if ($mode == QR_MODE_8B) {
-				$dif = $this->estimateBitsModeNum($run) + 4 + $ln
-				+ $this->estimateBitsMode8(1)         // + 4 + l8
-				- $this->estimateBitsMode8($run + 1); // - 4 - l8
-				if ($dif > 0) {
-					return $this->eat8();
-				}
-			}
-			if ($mode == QR_MODE_AN) {
-				$dif = $this->estimateBitsModeNum($run) + 4 + $ln
-				+ $this->estimateBitsModeAn(1)        // + 4 + la
-				- $this->estimateBitsModeAn($run + 1);// - 4 - la
-				if ($dif > 0) {
-					return $this->eatAn();
-				}
-			}
-			$this->items = $this->appendNewInputItem($this->items, QR_MODE_NM, $run, str_split($this->dataStr));
-			return $run;
-		}
-
-		/**
-		 * eatAn
-		 * @return int run
-		 */
-		 protected function eatAn() {
-			$la = $this->lengthIndicator(QR_MODE_AN,  $this->version);
-			$ln = $this->lengthIndicator(QR_MODE_NM, $this->version);
-			$p = 0;
-			while($this->isalnumat($this->dataStr, $p)) {
-				if ($this->isdigitat($this->dataStr, $p)) {
-					$q = $p;
-					while($this->isdigitat($this->dataStr, $q)) {
-						$q++;
-					}
-					$dif = $this->estimateBitsModeAn($p) // + 4 + la
-					+ $this->estimateBitsModeNum($q - $p) + 4 + $ln
-					- $this->estimateBitsModeAn($q); // - 4 - la
-					if ($dif < 0) {
-						break;
-					} else {
-						$p = $q;
-					}
-				} else {
-					$p++;
-				}
-			}
-			$run = $p;
-			if (!$this->isalnumat($this->dataStr, $p)) {
-				$dif = $this->estimateBitsModeAn($run) + 4 + $la
-				+ $this->estimateBitsMode8(1) // + 4 + l8
-				- $this->estimateBitsMode8($run + 1); // - 4 - l8
-				if ($dif > 0) {
-					return $this->eat8();
-				}
-			}
-			$this->items = $this->appendNewInputItem($this->items, QR_MODE_AN, $run, str_split($this->dataStr));
-			return $run;
-		}
-
-		/**
-		 * eatKanji
-		 * @return int run
-		 */
-		 protected function eatKanji() {
-			$p = 0;
-			while($this->identifyMode($p) == QR_MODE_KJ) {
-				$p += 2;
-			}
-			$this->items = $this->appendNewInputItem($this->items, QR_MODE_KJ, $p, str_split($this->dataStr));
-			return $run;
-		}
-
-		/**
-		 * eat8
-		 * @return int run
-		 */
-		 protected function eat8() {
-			$la = $this->lengthIndicator(QR_MODE_AN, $this->version);
-			$ln = $this->lengthIndicator(QR_MODE_NM, $this->version);
-			$p = 1;
-			$dataStrLen = strlen($this->dataStr);
-			while($p < $dataStrLen) {
-				$mode = $this->identifyMode($p);
-				if ($mode == QR_MODE_KJ) {
-					break;
-				}
-				if ($mode == QR_MODE_NM) {
-					$q = $p;
-					while($this->isdigitat($this->dataStr, $q)) {
-						$q++;
-					}
-					$dif = $this->estimateBitsMode8($p) // + 4 + l8
-					+ $this->estimateBitsModeNum($q - $p) + 4 + $ln
-					- $this->estimateBitsMode8($q); // - 4 - l8
-					if ($dif < 0) {
-						break;
-					} else {
-						$p = $q;
-					}
-				} elseif ($mode == QR_MODE_AN) {
-					$q = $p;
-					while($this->isalnumat($this->dataStr, $q)) {
-						$q++;
-					}
-					$dif = $this->estimateBitsMode8($p)  // + 4 + l8
-					+ $this->estimateBitsModeAn($q - $p) + 4 + $la
-					- $this->estimateBitsMode8($q); // - 4 - l8
-					if ($dif < 0) {
-						break;
-					} else {
-						$p = $q;
-					}
-				} else {
-					$p++;
-				}
-			}
-			$run = $p;
-			$this->items = $this->appendNewInputItem($this->items, QR_MODE_8B, $run, str_split($this->dataStr));
-			return $run;
-		}
-
-		/**
-		 * splitString
-		 */
-		 protected function splitString() {
-			while (strlen($this->dataStr) > 0) {
-				if ($this->dataStr == '') {
-					return 0;
-				}
-				$mode = $this->identifyMode(0);
-				switch ($mode) {
-					case QR_MODE_NM: {
-						$length = $this->eatNum();
-						break;
-					}
-					case QR_MODE_AN: {
-						$length = $this->eatAn();
-						break;
-					}
-					case QR_MODE_KJ: {
-						if ($hint == QR_MODE_KJ) {
-							$length = $this->eatKanji();
-						} else {
-							$length = $this->eat8();
-						}
-						break;
-					}
-					default: {
-						$length = $this->eat8();
-						break;
-					}
-				}
-				if ($length == 0) {
-					return 0;
-				}
-				if ($length < 0) {
-					return -1;
-				}
-				$this->dataStr = substr($this->dataStr, $length);
-			}
-		}
-
-		/**
-		 * toUpper
-		 */
-		 protected function toUpper() {
-			$stringLen = strlen($this->dataStr);
-			$p = 0;
-			while ($p < $stringLen) {
-				$mode = $this->identifyMode(substr($this->dataStr, $p), $this->hint);
-				if ($mode == QR_MODE_KJ) {
-					$p += 2;
-				} else {
-					if ((ord($this->dataStr[$p]) >= ord('a')) AND (ord($this->dataStr[$p]) <= ord('z'))) {
-						$this->dataStr[$p] = chr(ord($this->dataStr[$p]) - 32);
-					}
-					$p++;
-				}
-			}
-			return $this->dataStr;
-		}
-
-		// - - - - - - - - - - - - - - - - - - - - - - - - -
-
-		// QRinputItem
-
-		/**
-		 * newInputItem
-		 * @param int $mode
-		 * @param int $size
-		 * @param array $data
-		 * @param array $bstream
-		 * @return array input item
-		 */
-		 protected function newInputItem($mode, $size, $data, $bstream=null) {
-			$setData = array_slice($data, 0, $size);
-			if (count($setData) < $size) {
-				$setData = array_merge($setData, array_fill(0, ($size - count($setData)), 0));
-			}
-			if (!$this->check($mode, $size, $setData)) {
-				return NULL;
-			}
-			$inputitem = array();
-			$inputitem['mode'] = $mode;
-			$inputitem['size'] = $size;
-			$inputitem['data'] = $setData;
-			$inputitem['bstream'] = $bstream;
-			return $inputitem;
-		}
-
-		/**
-		 * encodeModeNum
-		 * @param array $inputitem
-		 * @param int $version
-		 * @return array input item
-		 */
-		 protected function encodeModeNum($inputitem, $version) {
-			$words = (int)($inputitem['size'] / 3);
-			$inputitem['bstream'] = array();
-			$val = 0x1;
-			$inputitem['bstream'] = $this->appendNum($inputitem['bstream'], 4, $val);
-			$inputitem['bstream'] = $this->appendNum($inputitem['bstream'], $this->lengthIndicator(QR_MODE_NM, $version), $inputitem['size']);
-			for ($i=0; $i < $words; ++$i) {
-				$val  = (ord($inputitem['data'][$i*3  ]) - ord('0')) * 100;
-				$val += (ord($inputitem['data'][$i*3+1]) - ord('0')) * 10;
-				$val += (ord($inputitem['data'][$i*3+2]) - ord('0'));
-				$inputitem['bstream'] = $this->appendNum($inputitem['bstream'], 10, $val);
-			}
-			if ($inputitem['size'] - $words * 3 == 1) {
-				$val = ord($inputitem['data'][$words*3]) - ord('0');
-				$inputitem['bstream'] = $this->appendNum($inputitem['bstream'], 4, $val);
-			} elseif (($inputitem['size'] - ($words * 3)) == 2) {
-				$val  = (ord($inputitem['data'][$words*3  ]) - ord('0')) * 10;
-				$val += (ord($inputitem['data'][$words*3+1]) - ord('0'));
-				$inputitem['bstream'] = $this->appendNum($inputitem['bstream'], 7, $val);
-			}
-			return $inputitem;
-		}
-
-		/**
-		 * encodeModeAn
-		 * @param array $inputitem
-		 * @param int $version
-		 * @return array input item
-		 */
-		 protected function encodeModeAn($inputitem, $version) {
-			$words = (int)($inputitem['size'] / 2);
-			$inputitem['bstream'] = array();
-			$inputitem['bstream'] = $this->appendNum($inputitem['bstream'], 4, 0x02);
-			$inputitem['bstream'] = $this->appendNum(v, $this->lengthIndicator(QR_MODE_AN, $version), $inputitem['size']);
-			for ($i=0; $i < $words; ++$i) {
-				$val  = (int)$this->lookAnTable(ord($inputitem['data'][$i*2  ])) * 45;
-				$val += (int)$this->lookAnTable(ord($inputitem['data'][$i*2+1]));
-				$inputitem['bstream'] = $this->appendNum($inputitem['bstream'], 11, $val);
-			}
-			if ($inputitem['size'] & 1) {
-				$val = $this->lookAnTable(ord($inputitem['data'][($words * 2)]));
-				$inputitem['bstream'] = $this->appendNum($inputitem['bstream'], 6, $val);
-			}
-			return $inputitem;
-		}
-
-		/**
-		 * encodeMode8
-		 * @param array $inputitem
-		 * @param int $version
-		 * @return array input item
-		 */
-		 protected function encodeMode8($inputitem, $version) {
-			$inputitem['bstream'] = array();
-			$inputitem['bstream'] = $this->appendNum($inputitem['bstream'], 4, 0x4);
-			$inputitem['bstream'] = $this->appendNum($inputitem['bstream'], $this->lengthIndicator(QR_MODE_8B, $version), $inputitem['size']);
-			for ($i=0; $i < $inputitem['size']; ++$i) {
-				$inputitem['bstream'] = $this->appendNum($inputitem['bstream'], 8, ord($inputitem['data'][$i]));
-			}
-			return $inputitem;
-		}
-
-		/**
-		 * encodeModeKanji
-		 * @param array $inputitem
-		 * @param int $version
-		 * @return array input item
-		 */
-		 protected function encodeModeKanji($inputitem, $version) {
-			$inputitem['bstream'] = array();
-			$inputitem['bstream'] = $this->appendNum($inputitem['bstream'], 4, 0x8);
-			$inputitem['bstream'] = $this->appendNum($inputitem['bstream'], $this->lengthIndicator(QR_MODE_KJ, $version), (int)($inputitem['size'] / 2));
-			for ($i=0; $i<$inputitem['size']; $i+=2) {
-				$val = (ord($inputitem['data'][$i]) << 8) | ord($inputitem['data'][$i+1]);
-				if ($val <= 0x9ffc) {
-					$val -= 0x8140;
-				} else {
-					$val -= 0xc140;
-				}
-				$h = ($val >> 8) * 0xc0;
-				$val = ($val & 0xff) + $h;
-				$inputitem['bstream'] = $this->appendNum($inputitem['bstream'], 13, $val);
-			}
-			return $inputitem;
-		}
-
-		/**
-		 * encodeModeStructure
-		 * @param array $inputitem
-		 * @return array input item
-		 */
-		 protected function encodeModeStructure($inputitem) {
-			$inputitem['bstream'] = array();
-			$inputitem['bstream'] = $this->appendNum($inputitem['bstream'], 4, 0x03);
-			$inputitem['bstream'] = $this->appendNum($inputitem['bstream'], 4, ord($inputitem['data'][1]) - 1);
-			$inputitem['bstream'] = $this->appendNum($inputitem['bstream'], 4, ord($inputitem['data'][0]) - 1);
-			$inputitem['bstream'] = $this->appendNum($inputitem['bstream'], 8, ord($inputitem['data'][2]));
-			return $inputitem;
-		}
-
-		/**
-		 * encodeBitStream
-		 * @param array $inputitem
-		 * @param int $version
-		 * @return array input item
-		 */
-		 protected function encodeBitStream($inputitem, $version) {
-			$inputitem['bstream'] = array();
-			$words = $this->maximumWords($inputitem['mode'], $version);
-			if ($inputitem['size'] > $words) {
-				$st1 = $this->newInputItem($inputitem['mode'], $words, $inputitem['data']);
-				$st2 = $this->newInputItem($inputitem['mode'], $inputitem['size'] - $words, array_slice($inputitem['data'], $words));
-				$st1 = $this->encodeBitStream($st1, $version);
-				$st2 = $this->encodeBitStream($st2, $version);
-				$inputitem['bstream'] = array();
-				$inputitem['bstream'] = $this->appendBitstream($inputitem['bstream'], $st1['bstream']);
-				$inputitem['bstream'] = $this->appendBitstream($inputitem['bstream'], $st2['bstream']);
-			} else {
-				switch($inputitem['mode']) {
-					case QR_MODE_NM: {
-						$inputitem = $this->encodeModeNum($inputitem, $version);
-						break;
-					}
-					case QR_MODE_AN: {
-						$inputitem = $this->encodeModeAn($inputitem, $version);
-						break;
-					}
-					case QR_MODE_8B: {
-						$inputitem = $this->encodeMode8($inputitem, $version);
-						break;
-					}
-					case QR_MODE_KJ: {
-						$inputitem = $this->encodeModeKanji($inputitem, $version);
-						break;
-					}
-					case QR_MODE_ST: {
-						$inputitem = $this->encodeModeStructure($inputitem);
-						break;
-					}
-					default: {
-						break;
-					}
-				}
-			}
-			return $inputitem;
-		}
-
-		// - - - - - - - - - - - - - - - - - - - - - - - - -
-
-		// QRinput
-
-		/**
-		 * Append data to an input object.
-		 * The data is copied and appended to the input object.
-		 * @param array items input items
-		 * @param int $mode encoding mode.
-		 * @param int $size size of data (byte).
-		 * @param array $data array of input data.
-		 * @return items
-		 *
-		 */
-		protected function appendNewInputItem($items, $mode, $size, $data) {
-			$items[] = $this->newInputItem($mode, $size, $data);
-			return $items;
-		}
-
-		/**
-		 * insertStructuredAppendHeader
-		 * @param array $items
-		 * @param int $size
-		 * @param int $index
-		 * @param int $parity
-		 * @return array items
-		 */
-		 protected function insertStructuredAppendHeader($items, $size, $index, $parity) {
-			if ($size > MAX_STRUCTURED_SYMBOLS) {
-				return -1;
-			}
-			if (($index <= 0) OR ($index > MAX_STRUCTURED_SYMBOLS)) {
-				return -1;
-			}
-			$buf = array($size, $index, $parity);
-			$entry = $this->newInputItem(QR_MODE_ST, 3, buf);
-			array_unshift($items, $entry);
-			return $items;
-		}
-
-		/**
-		 * calcParity
-		 * @param array $items
-		 * @return int parity
-		 */
-		 protected function calcParity($items) {
-			$parity = 0;
-			foreach ($items as $item) {
-				if ($item['mode'] != QR_MODE_ST) {
-					for ($i=$item['size']-1; $i>=0; --$i) {
-						$parity ^= $item['data'][$i];
-					}
-				}
-			}
-			return $parity;
-		}
-
-		/**
-		 * checkModeNum
-		 * @param int $size
-		 * @param array $data
-		 * @return boolean true or false
-		 */
-		 protected function checkModeNum($size, $data) {
-			for ($i=0; $i<$size; ++$i) {
-				if ((ord($data[$i]) < ord('0')) OR (ord($data[$i]) > ord('9'))){
-					return false;
-				}
-			}
-			return true;
-		}
-
-		/**
-		 * estimateBitsModeNum
-		 * @param int $size
-		 * @return int number of bits
-		 */
-		 protected function estimateBitsModeNum($size) {
-			$w = (int)$size / 3;
-			$bits = $w * 10;
-			switch($size - $w * 3) {
-				case 1: {
-					$bits += 4;
-					break;
-				}
-				case 2: {
-					$bits += 7;
-					break;
-				}
-				default: {
-					break;
-				}
-			}
-			return $bits;
-		}
-
-		/**
-		 * Look up the alphabet-numeric convesion table (see JIS X0510:2004, pp.19).
-		 * @param int $c character value
-		 * @return value
-		 */
-		protected function lookAnTable($c) {
-			return (($c > 127)?-1:$this->anTable[$c]);
-		}
-
-		/**
-		 * checkModeAn
-		 * @param int $size
-		 * @param array $data
-		 * @return boolean true or false
-		 */
-		 protected function checkModeAn($size, $data) {
-			for ($i=0; $i<$size; ++$i) {
-				if ($this->lookAnTable(ord($data[$i])) == -1) {
-					return false;
-				}
-			}
-			return true;
-		}
-
-		/**
-		 * estimateBitsModeAn
-		 * @param int $size
-		 * @return int number of bits
-		 */
-		 protected function estimateBitsModeAn($size) {
-			$w = (int)($size / 2);
-			$bits = $w * 11;
-			if ($size & 1) {
-				$bits += 6;
-			}
-			return $bits;
-		}
-
-		/**
-		 * estimateBitsMode8
-		 * @param int $size
-		 * @return int number of bits
-		 */
-		 protected function estimateBitsMode8($size) {
-			return $size * 8;
-		}
-
-		/**
-		 * estimateBitsModeKanji
-		 * @param int $size
-		 * @return int number of bits
-		 */
-		 protected function estimateBitsModeKanji($size) {
-			return (int)(($size / 2) * 13);
-		}
-
-		/**
-		 * checkModeKanji
-		 * @param int $size
-		 * @param array $data
-		 * @return boolean true or false
-		 */
-		 protected function checkModeKanji($size, $data) {
-			if ($size & 1) {
-				return false;
-			}
-			for ($i=0; $i<$size; $i+=2) {
-				$val = (ord($data[$i]) << 8) | ord($data[$i+1]);
-				if (($val < 0x8140) OR (($val > 0x9ffc) AND ($val < 0xe040)) OR ($val > 0xebbf)) {
-					return false;
-				}
-			}
-			return true;
-		}
-
-		/**
-		 * Validate the input data.
-		 * @param int $mode encoding mode.
-		 * @param int $size size of data (byte).
-		 * @param array data data to validate
-		 * @return boolean true in case of valid data, false otherwise
-		 */
-		protected function check($mode, $size, $data) {
-			if ($size <= 0) {
-				return false;
-			}
-			switch($mode) {
-				case QR_MODE_NM: {
-					return $this->checkModeNum($size, $data);
-				}
-				case QR_MODE_AN: {
-					return $this->checkModeAn($size, $data);
-				}
-				case QR_MODE_KJ: {
-					return $this->checkModeKanji($size, $data);
-				}
-				case QR_MODE_8B: {
-					return true;
-				}
-				case QR_MODE_ST: {
-					return true;
-				}
-				default: {
-					break;
-				}
-			}
-			return false;
-		}
-
-		/**
-		 * estimateBitStreamSize
-		 * @param array $items
-		 * @param int $version
-		 * @return int bits
-		 */
-		 protected function estimateBitStreamSize($items, $version) {
-			$bits = 0;
-			if ($version == 0) {
-				$version = 1;
-			}
-			foreach ($items as $item) {
-				switch($item['mode']) {
-					case QR_MODE_NM: {
-						$bits = $this->estimateBitsModeNum($item['size']);
-						break;
-					}
-					case QR_MODE_AN: {
-						$bits = $this->estimateBitsModeAn($item['size']);
-						break;
-					}
-					case QR_MODE_8B: {
-						$bits = $this->estimateBitsMode8($item['size']);
-						break;
-					}
-					case QR_MODE_KJ: {
-						$bits = $this->estimateBitsModeKanji($item['size']);
-						break;
-					}
-					case QR_MODE_ST: {
-						return STRUCTURE_HEADER_BITS;
-					}
-					default: {
-						return 0;
-					}
-				}
-				$l = $this->lengthIndicator($item['mode'], $version);
-				$m = 1 << $l;
-				$num = (int)(($item['size'] + $m - 1) / $m);
-				$bits += $num * (4 + $l);
-			}
-			return $bits;
-		}
-
-		/**
-		 * estimateVersion
-		 * @param array $items
-		 * @return int version
-		 */
-		 protected function estimateVersion($items) {
-			$version = 0;
-			$prev = 0;
-			do {
-				$prev = $version;
-				$bits = $this->estimateBitStreamSize($items, $prev);
-				$version = $this->getMinimumVersion((int)(($bits + 7) / 8), $this->level);
-				if ($version < 0) {
-					return -1;
-				}
-			} while ($version > $prev);
-			return $version;
-		}
-
-		/**
-		 * lengthOfCode
-		 * @param int $mode
-		 * @param int $version
-		 * @param int $bits
-		 * @return int size
-		 */
-		 protected function lengthOfCode($mode, $version, $bits) {
-			$payload = $bits - 4 - $this->lengthIndicator($mode, $version);
-			switch($mode) {
-				case QR_MODE_NM: {
-					$chunks = (int)($payload / 10);
-					$remain = $payload - $chunks * 10;
-					$size = $chunks * 3;
-					if ($remain >= 7) {
-						$size += 2;
-					} elseif ($remain >= 4) {
-						$size += 1;
-					}
-					break;
-				}
-				case QR_MODE_AN: {
-					$chunks = (int)($payload / 11);
-					$remain = $payload - $chunks * 11;
-					$size = $chunks * 2;
-					if ($remain >= 6) {
-						++$size;
-					}
-					break;
-				}
-				case QR_MODE_8B: {
-					$size = (int)($payload / 8);
-					break;
-				}
-				case QR_MODE_KJ: {
-					$size = (int)(($payload / 13) * 2);
-					break;
-				}
-				case QR_MODE_ST: {
-					$size = (int)($payload / 8);
-					break;
-				}
-				default: {
-					$size = 0;
-					break;
-				}
-			}
-			$maxsize = $this->maximumWords($mode, $version);
-			if ($size < 0) {
-				$size = 0;
-			}
-			if ($size > $maxsize) {
-				$size = $maxsize;
-			}
-			return $size;
-		}
-
-		/**
-		 * createBitStream
-		 * @param array $items
-		 * @return array of items and total bits
-		 */
-		 protected function createBitStream($items) {
-			$total = 0;
-			foreach ($items as $key => $item) {
-				$items[$key] = $this->encodeBitStream($item, $this->version);
-				$bits = count($items[$key]['bstream']);
-				$total += $bits;
-			}
-			return array($items, $total);
-		}
-
-		/**
-		 * convertData
-		 * @param array $items
-		 * @return array items
-		 */
-		 protected function convertData($items) {
-			$ver = $this->estimateVersion($items);
-			if ($ver > $this->version) {
-				$this->version = $ver;
-			}
-			for (;;) {
-				$cbs = $this->createBitStream($items);
-				$items = $cbs[0];
-				$bits = $cbs[1];
-				if ($bits < 0) {
-					return -1;
-				}
-				$ver = $this->getMinimumVersion((int)(($bits + 7) / 8), $this->level);
-				if ($ver < 0) {
-					return -1;
-				} elseif ($ver > $this->version) {
-					$this->version = $ver;
-				} else {
-					break;
-				}
-			}
-			return $items;
-		}
-
-		/**
-		 * Append Padding Bit to bitstream
-		 * @param array $bstream
-		 * @return array bitstream
-		 */
-		 protected function appendPaddingBit($bstream) {
-			$bits = count($bstream);
-			$maxwords = $this->getDataLength($this->version, $this->level);
-			$maxbits = $maxwords * 8;
-			if ($maxbits == $bits) {
-				return 0;
-			}
-			if ($maxbits - $bits < 5) {
-				return $this->appendNum($bstream, $maxbits - $bits, 0);
-			}
-			$bits += 4;
-			$words = (int)(($bits + 7) / 8);
-			$padding = array();
-			$padding = $this->appendNum($padding, $words * 8 - $bits + 4, 0);
-			$padlen = $maxwords - $words;
-			if ($padlen > 0) {
-				$padbuf = array();
-				for ($i=0; $i<$padlen; ++$i) {
-					$padbuf[$i] = ($i&1)?0x11:0xec;
-				}
-				$padding = $this->appendBytes($padding, $padlen, $padbuf);
-			}
-			return $this->appendBitstream($bstream, $padding);
-		}
-
-		/**
-		 * mergeBitStream
-		 * @param array $bstream
-		 * @return array bitstream
-		 */
-		 protected function mergeBitStream($items) {
-			$items = $this->convertData($items);
-			$bstream = array();
-			foreach ($items as $item) {
-				$bstream = $this->appendBitstream($bstream, $item['bstream']);
-			}
-			return $bstream;
-		}
-
-		/**
-		 * Returns a stream of bits.
-		 * @param int $items
-		 * @return array padded merged byte stream
-		 */
-		protected function getBitStream($items) {
-			$bstream = $this->mergeBitStream($items);
-			return $this->appendPaddingBit($bstream);
-		}
-
-		/**
-		 * Pack all bit streams padding bits into a byte array.
-		 * @param int $items
-		 * @return array padded merged byte stream
-		 */
-		protected function getByteStream($items) {
-			$bstream = $this->getBitStream($items);
-			return $this->bitstreamToByte($bstream);
-		}
-
-		// - - - - - - - - - - - - - - - - - - - - - - - - -
-
-		// QRbitstream
-
-		/**
-		 * Return an array with zeros
-		 * @param int $setLength array size
-		 * @return array
-		 */
-		 protected function allocate($setLength) {
-			return array_fill(0, $setLength, 0);
-		}
-
-		/**
-		 * Return new bitstream from number
-		 * @param int $bits number of bits
-		 * @param int $num number
-		 * @return array bitstream
-		 */
-		 protected function newFromNum($bits, $num) {
-			$bstream = $this->allocate($bits);
-			$mask = 1 << ($bits - 1);
-			for ($i=0; $i<$bits; ++$i) {
-				if ($num & $mask) {
-					$bstream[$i] = 1;
-				} else {
-					$bstream[$i] = 0;
-				}
-				$mask = $mask >> 1;
-			}
-			return $bstream;
-		}
-
-		/**
-		 * Return new bitstream from bytes
-		 * @param int $size size
-		 * @param array $data bytes
-		 * @return array bitstream
-		 */
-		 protected function newFromBytes($size, $data) {
-			$bstream = $this->allocate($size * 8);
-			$p=0;
-			for ($i=0; $i<$size; ++$i) {
-				$mask = 0x80;
-				for ($j=0; $j<8; ++$j) {
-					if ($data[$i] & $mask) {
-						$bstream[$p] = 1;
-					} else {
-						$bstream[$p] = 0;
-					}
-					$p++;
-					$mask = $mask >> 1;
-				}
-			}
-			return $bstream;
-		}
-
-		/**
-		 * Append one bitstream to another
-		 * @param array $bitstream original bitstream
-		 * @param array $append bitstream to append
-		 * @return array bitstream
-		 */
-		 protected function appendBitstream($bitstream, $append) {
-			if ((!is_array($append)) OR (count($append) == 0)) {
-				return $bitstream;
-			}
-			if (count($bitstream) == 0) {
-				return $append;
-			}
-			return array_values(array_merge($bitstream, $append));
-		}
-
-		/**
-		 * Append one bitstream created from number to another
-		 * @param array $bitstream original bitstream
-		 * @param int $bits number of bits
-		 * @param int $num number
-		 * @return array bitstream
-		 */
-		 protected function appendNum($bitstream, $bits, $num) {
-			if ($bits == 0) {
-				return 0;
-			}
-			$b = $this->newFromNum($bits, $num);
-			return $this->appendBitstream($bitstream, $b);
-		}
-
-		/**
-		 * Append one bitstream created from bytes to another
-		 * @param array $bitstream original bitstream
-		 * @param int $size size
-		 * @param array $data bytes
-		 * @return array bitstream
-		 */
-		 protected function appendBytes($bitstream, $size, $data) {
-			if ($size == 0) {
-				return 0;
-			}
-			$b = $this->newFromBytes($size, $data);
-			return $this->appendBitstream($bitstream, $b);
-		}
-
-		/**
-		 * Convert bitstream to bytes
-		 * @param array $bitstream original bitstream
-		 * @return array of bytes
-		 */
-		 protected function bitstreamToByte($bstream) {
-			$size = count($bstream);
-			if ($size == 0) {
-				return array();
-			}
-			$data = array_fill(0, (int)(($size + 7) / 8), 0);
-			$bytes = (int)($size / 8);
-			$p = 0;
-			for ($i=0; $i<$bytes; $i++) {
-				$v = 0;
-				for ($j=0; $j<8; $j++) {
-					$v = $v << 1;
-					$v |= $bstream[$p];
-					$p++;
-				}
-				$data[$i] = $v;
-			}
-			if ($size & 7) {
-				$v = 0;
-				for ($j=0; $j<($size & 7); $j++) {
-					$v = $v << 1;
-					$v |= $bstream[$p];
-					$p++;
-				}
-				$data[$bytes] = $v;
-			}
-			return $data;
-		}
-
-		// - - - - - - - - - - - - - - - - - - - - - - - - -
-
-		// QRspec
-
-		/**
-		 * Replace a value on the array at the specified position
-		 * @param array $srctab
-		 * @param int $x X position
-		 * @param int $y Y position
-		 * @param string $repl value to replace
-		 * @param int $replLen length of the repl string
-		 * @return array srctab
-		 */
-		 protected function qrstrset($srctab, $x, $y, $repl, $replLen=false) {
-			$srctab[$y] = substr_replace($srctab[$y], ($replLen !== false)?substr($repl,0,$replLen):$repl, $x, ($replLen !== false)?$replLen:strlen($repl));
-			return $srctab;
-		}
-
-		/**
-		 * Return maximum data code length (bytes) for the version.
-		 * @param int $version version
-		 * @param int $level error correction level
-		 * @return int maximum size (bytes)
-		 */
-		protected function getDataLength($version, $level) {
-			return $this->capacity[$version][QRCAP_WORDS] - $this->capacity[$version][QRCAP_EC][$level];
-		}
-
-		/**
-		 * Return maximum error correction code length (bytes) for the version.
-		 * @param int $version version
-		 * @param int $level error correction level
-		 * @return int ECC size (bytes)
-		 */
-		protected function getECCLength($version, $level){
-			return $this->capacity[$version][QRCAP_EC][$level];
-		}
-
-		/**
-		 * Return the width of the symbol for the version.
-		 * @param int $version version
-		 * @return int width
-		 */
-		protected function getWidth($version) {
-			return $this->capacity[$version][QRCAP_WIDTH];
-		}
-
-		/**
-		 * Return the numer of remainder bits.
-		 * @param int $version version
-		 * @return int number of remainder bits
-		 */
-		protected function getRemainder($version) {
-			return $this->capacity[$version][QRCAP_REMINDER];
-		}
-
-		/**
-		 * Return a version number that satisfies the input code length.
-		 * @param int $size input code length (byte)
-		 * @param int $level error correction level
-		 * @return int version number
-		 */
-		protected function getMinimumVersion($size, $level) {
-			for ($i=1; $i <= QRSPEC_VERSION_MAX; ++$i) {
-				$words  = $this->capacity[$i][QRCAP_WORDS] - $this->capacity[$i][QRCAP_EC][$level];
-				if ($words >= $size) {
-					return $i;
-				}
-			}
-			return -1;
-		}
-
-		/**
-		 * Return the size of length indicator for the mode and version.
-		 * @param int $mode encoding mode
-		 * @param int $version version
-		 * @return int the size of the appropriate length indicator (bits).
-		 */
-		protected function lengthIndicator($mode, $version) {
-			if ($mode == QR_MODE_ST) {
-				return 0;
-			}
-			if ($version <= 9) {
-				$l = 0;
-			} elseif ($version <= 26) {
-				$l = 1;
-			} else {
-				$l = 2;
-			}
-			return $this->lengthTableBits[$mode][$l];
-		}
-
-		/**
-		 * Return the maximum length for the mode and version.
-		 * @param int $mode encoding mode
-		 * @param int $version version
-		 * @return int the maximum length (bytes)
-		 */
-		protected function maximumWords($mode, $version) {
-			if ($mode == QR_MODE_ST) {
-				return 3;
-			}
-			if ($version <= 9) {
-				$l = 0;
-			} else if ($version <= 26) {
-				$l = 1;
-			} else {
-				$l = 2;
-			}
-			$bits = $this->lengthTableBits[$mode][$l];
-			$words = (1 << $bits) - 1;
-			if ($mode == QR_MODE_KJ) {
-				$words *= 2; // the number of bytes is required
-			}
-			return $words;
-		}
-
-		/**
-		 * Return an array of ECC specification.
-		 * @param int $version version
-		 * @param int $level error correction level
-		 * @param array $spec an array of ECC specification contains as following: {# of type1 blocks, # of data code, # of ecc code, # of type2 blocks, # of data code}
-		 * @return array spec
-		 */
-		protected function getEccSpec($version, $level, $spec) {
-			if (count($spec) < 5) {
-				$spec = array(0, 0, 0, 0, 0);
-			}
-			$b1 = $this->eccTable[$version][$level][0];
-			$b2 = $this->eccTable[$version][$level][1];
-			$data = $this->getDataLength($version, $level);
-			$ecc = $this->getECCLength($version, $level);
-			if ($b2 == 0) {
-				$spec[0] = $b1;
-				$spec[1] = (int)($data / $b1);
-				$spec[2] = (int)($ecc / $b1);
-				$spec[3] = 0;
-				$spec[4] = 0;
-			} else {
-				$spec[0] = $b1;
-				$spec[1] = (int)($data / ($b1 + $b2));
-				$spec[2] = (int)($ecc  / ($b1 + $b2));
-				$spec[3] = $b2;
-				$spec[4] = $spec[1] + 1;
-			}
-			return $spec;
-		}
-
-		/**
-		 * Put an alignment marker.
-		 * @param array $frame frame
-		 * @param int $width width
-		 * @param int $ox X center coordinate of the pattern
-		 * @param int $oy Y center coordinate of the pattern
-		 * @return array frame
-		 */
-		protected function putAlignmentMarker($frame, $ox, $oy) {
-			$finder = array(
-				"\xa1\xa1\xa1\xa1\xa1",
-				"\xa1\xa0\xa0\xa0\xa1",
-				"\xa1\xa0\xa1\xa0\xa1",
-				"\xa1\xa0\xa0\xa0\xa1",
-				"\xa1\xa1\xa1\xa1\xa1"
-				);
-			$yStart = $oy - 2;
-			$xStart = $ox - 2;
-			for ($y=0; $y < 5; $y++) {
-				$frame = $this->qrstrset($frame, $xStart, $yStart+$y, $finder[$y]);
-			}
-			return $frame;
-		}
-
-		/**
-		 * Put an alignment pattern.
-		 * @param int $version version
-		 * @param array $fram frame
-		 * @param int $width width
-		 * @return array frame
-		 */
-		 protected function putAlignmentPattern($version, $frame, $width) {
-			if ($version < 2) {
-				return $frame;
-			}
-			$d = $this->alignmentPattern[$version][1] - $this->alignmentPattern[$version][0];
-			if ($d < 0) {
-				$w = 2;
-			} else {
-				$w = (int)(($width - $this->alignmentPattern[$version][0]) / $d + 2);
-			}
-			if ($w * $w - 3 == 1) {
-				$x = $this->alignmentPattern[$version][0];
-				$y = $this->alignmentPattern[$version][0];
-				$frame = $this->putAlignmentMarker($frame, $x, $y);
-				return $frame;
-			}
-			$cx = $this->alignmentPattern[$version][0];
-			$wo = $w - 1;
-			for ($x=1; $x < $wo; ++$x) {
-				$frame = $this->putAlignmentMarker($frame, 6, $cx);
-				$frame = $this->putAlignmentMarker($frame, $cx,  6);
-				$cx += $d;
-			}
-			$cy = $this->alignmentPattern[$version][0];
-			for ($y=0; $y < $wo; ++$y) {
-				$cx = $this->alignmentPattern[$version][0];
-				for ($x=0; $x < $wo; ++$x) {
-					$frame = $this->putAlignmentMarker($frame, $cx, $cy);
-					$cx += $d;
-				}
-				$cy += $d;
-			}
-			return $frame;
-		}
-
-		/**
-		 * Return BCH encoded version information pattern that is used for the symbol of version 7 or greater. Use lower 18 bits.
-		 * @param int $version version
-		 * @return BCH encoded version information pattern
-		 */
-		protected function getVersionPattern($version) {
-			if (($version < 7) OR ($version > QRSPEC_VERSION_MAX)) {
-				return 0;
-			}
-			return $this->versionPattern[($version - 7)];
-		}
-
-		/**
-		 * Return BCH encoded format information pattern.
-		 * @param array $mask
-		 * @param int $level error correction level
-		 * @return BCH encoded format information pattern
-		 */
-		protected function getFormatInfo($mask, $level) {
-			if (($mask < 0) OR ($mask > 7)) {
-				return 0;
-			}
-			if (($level < 0) OR ($level > 3)) {
-				return 0;
-			}
-			return $this->formatInfo[$level][$mask];
-		}
-
-		/**
-		 * Put a finder pattern.
-		 * @param array $frame frame
-		 * @param int $width width
-		 * @param int $ox X center coordinate of the pattern
-		 * @param int $oy Y center coordinate of the pattern
-		 * @return array frame
-		 */
-		protected function putFinderPattern($frame, $ox, $oy) {
-			$finder = array(
-			"\xc1\xc1\xc1\xc1\xc1\xc1\xc1",
-			"\xc1\xc0\xc0\xc0\xc0\xc0\xc1",
-			"\xc1\xc0\xc1\xc1\xc1\xc0\xc1",
-			"\xc1\xc0\xc1\xc1\xc1\xc0\xc1",
-			"\xc1\xc0\xc1\xc1\xc1\xc0\xc1",
-			"\xc1\xc0\xc0\xc0\xc0\xc0\xc1",
-			"\xc1\xc1\xc1\xc1\xc1\xc1\xc1"
-			);
-			for ($y=0; $y < 7; $y++) {
-				$frame = $this->qrstrset($frame, $ox, ($oy + $y), $finder[$y]);
-			}
-			return $frame;
-		}
-
-		/**
-		 * Return a copy of initialized frame.
-		 * @param int $version version
-		 * @return Array of unsigned char.
-		 */
-		protected function createFrame($version) {
-			$width = $this->capacity[$version][QRCAP_WIDTH];
-			$frameLine = str_repeat ("\0", $width);
-			$frame = array_fill(0, $width, $frameLine);
-			// Finder pattern
-			$frame = $this->putFinderPattern($frame, 0, 0);
-			$frame = $this->putFinderPattern($frame, $width - 7, 0);
-			$frame = $this->putFinderPattern($frame, 0, $width - 7);
-			// Separator
-			$yOffset = $width - 7;
-			for ($y=0; $y < 7; ++$y) {
-				$frame[$y][7] = "\xc0";
-				$frame[$y][$width - 8] = "\xc0";
-				$frame[$yOffset][7] = "\xc0";
-				++$yOffset;
-			}
-			$setPattern = str_repeat("\xc0", 8);
-			$frame = $this->qrstrset($frame, 0, 7, $setPattern);
-			$frame = $this->qrstrset($frame, $width-8, 7, $setPattern);
-			$frame = $this->qrstrset($frame, 0, $width - 8, $setPattern);
-			// Format info
-			$setPattern = str_repeat("\x84", 9);
-			$frame = $this->qrstrset($frame, 0, 8, $setPattern);
-			$frame = $this->qrstrset($frame, $width - 8, 8, $setPattern, 8);
-			$yOffset = $width - 8;
-			for ($y=0; $y < 8; ++$y,++$yOffset) {
-				$frame[$y][8] = "\x84";
-				$frame[$yOffset][8] = "\x84";
-			}
-			// Timing pattern
-			$wo = $width - 15;
-			for ($i=1; $i < $wo; ++$i) {
-				$frame[6][7+$i] = chr(0x90 | ($i & 1));
-				$frame[7+$i][6] = chr(0x90 | ($i & 1));
-			}
-			// Alignment pattern
-			$frame = $this->putAlignmentPattern($version, $frame, $width);
-			// Version information
-			if ($version >= 7) {
-				$vinf = $this->getVersionPattern($version);
-				$v = $vinf;
-				for ($x=0; $x<6; ++$x) {
-					for ($y=0; $y<3; ++$y) {
-						$frame[($width - 11)+$y][$x] = chr(0x88 | ($v & 1));
-						$v = $v >> 1;
-					}
-				}
-				$v = $vinf;
-				for ($y=0; $y<6; ++$y) {
-					for ($x=0; $x<3; ++$x) {
-						$frame[$y][$x+($width - 11)] = chr(0x88 | ($v & 1));
-						$v = $v >> 1;
-					}
-				}
-			}
-			// and a little bit...
-			$frame[$width - 8][8] = "\x81";
-			return $frame;
-		}
-
-		/**
-		 * Set new frame for the specified version.
-		 * @param int $version version
-		 * @return Array of unsigned char.
-		 */
-		protected function newFrame($version) {
-			if (($version < 1) OR ($version > QRSPEC_VERSION_MAX)) {
-				return NULL;
-			}
-			if (!isset($this->frames[$version])) {
-				$this->frames[$version] = $this->createFrame($version);
-			}
-			if (is_null($this->frames[$version])) {
-				return NULL;
-			}
-			return $this->frames[$version];
-		}
-
-		/**
-		 * Return block number 0
-		 * @param array $spec
-		 * @return int value
-		 */
-		 protected function rsBlockNum($spec) {
-			return ($spec[0] + $spec[3]);
-		}
-
-		/**
-		* Return block number 1
-		 * @param array $spec
-		 * @return int value
-		 */
-		 protected function rsBlockNum1($spec) {
-			return $spec[0];
-		}
-
-		/**
-		 * Return data codes 1
-		 * @param array $spec
-		 * @return int value
-		 */
-		 protected function rsDataCodes1($spec) {
-			return $spec[1];
-		}
-
-		/**
-		 * Return ecc codes 1
-		 * @param array $spec
-		 * @return int value
-		 */
-		 protected function rsEccCodes1($spec) {
-			return $spec[2];
-		}
-
-		/**
-		 * Return block number 2
-		 * @param array $spec
-		 * @return int value
-		 */
-		 protected function rsBlockNum2($spec) {
-			return $spec[3];
-		}
-
-		/**
-		 * Return data codes 2
-		 * @param array $spec
-		 * @return int value
-		 */
-		 protected function rsDataCodes2($spec) {
-			return $spec[4];
-		}
-
-		/**
-		 * Return ecc codes 2
-		 * @param array $spec
-		 * @return int value
-		 */
-		 protected function rsEccCodes2($spec) {
-			return $spec[2];
-		}
-
-		/**
-		 * Return data length
-		 * @param array $spec
-		 * @return int value
-		 */
-		 protected function rsDataLength($spec) {
-			return ($spec[0] * $spec[1]) + ($spec[3] * $spec[4]);
-		}
-
-		/**
-		 * Return ecc length
-		 * @param array $spec
-		 * @return int value
-		 */
-		 protected function rsEccLength($spec) {
-			return ($spec[0] + $spec[3]) * $spec[2];
-		}
-
-		// - - - - - - - - - - - - - - - - - - - - - - - - -
-
-		// QRrs
-
-		/**
-		 * Initialize a Reed-Solomon codec and add it to existing rsitems
-		 * @param int $symsize symbol size, bits
-		 * @param int $gfpoly  Field generator polynomial coefficients
-		 * @param int $fcr  first root of RS code generator polynomial, index form
-		 * @param int $prim  primitive element to generate polynomial roots
-		 * @param int $nroots RS code generator polynomial degree (number of roots)
-		 * @param int $pad  padding bytes at front of shortened block
-		 * @return array Array of RS values:<ul><li>mm = Bits per symbol;</li><li>nn = Symbols per block;</li><li>alpha_to = log lookup table array;</li><li>index_of = Antilog lookup table array;</li><li>genpoly = Generator polynomial array;</li><li>nroots = Number of generator;</li><li>roots = number of parity symbols;</li><li>fcr = First consecutive root, index form;</li><li>prim = Primitive element, index form;</li><li>iprim = prim-th root of 1, index form;</li><li>pad = Padding bytes in shortened block;</li><li>gfpoly</ul>.
-		 */
-		 protected function init_rs($symsize, $gfpoly, $fcr, $prim, $nroots, $pad) {
-			foreach ($this->rsitems as $rs) {
-				if (($rs['pad'] != $pad) OR ($rs['nroots'] != $nroots) OR ($rs['mm'] != $symsize)
-					OR ($rs['gfpoly'] != $gfpoly) OR ($rs['fcr'] != $fcr) OR ($rs['prim'] != $prim)) {
-					continue;
-				}
-				return $rs;
-			}
-			$rs = $this->init_rs_char($symsize, $gfpoly, $fcr, $prim, $nroots, $pad);
-			array_unshift($this->rsitems, $rs);
-			return $rs;
-		}
-
-		// - - - - - - - - - - - - - - - - - - - - - - - - -
-
-		// QRrsItem
-
-		/**
-		 * modnn
-		 * @param array RS values
-		 * @param int $x X position
-		 * @return int X osition
-		 */
-		 protected function modnn($rs, $x) {
-			while ($x >= $rs['nn']) {
-				$x -= $rs['nn'];
-				$x = ($x >> $rs['mm']) + ($x & $rs['nn']);
-			}
-			return $x;
-		}
-
-		/**
-		 * Initialize a Reed-Solomon codec and returns an array of values.
-		 * @param int $symsize symbol size, bits
-		 * @param int $gfpoly  Field generator polynomial coefficients
-		 * @param int $fcr  first root of RS code generator polynomial, index form
-		 * @param int $prim  primitive element to generate polynomial roots
-		 * @param int $nroots RS code generator polynomial degree (number of roots)
-		 * @param int $pad  padding bytes at front of shortened block
-		 * @return array Array of RS values:<ul><li>mm = Bits per symbol;</li><li>nn = Symbols per block;</li><li>alpha_to = log lookup table array;</li><li>index_of = Antilog lookup table array;</li><li>genpoly = Generator polynomial array;</li><li>nroots = Number of generator;</li><li>roots = number of parity symbols;</li><li>fcr = First consecutive root, index form;</li><li>prim = Primitive element, index form;</li><li>iprim = prim-th root of 1, index form;</li><li>pad = Padding bytes in shortened block;</li><li>gfpoly</ul>.
-		 */
-		protected function init_rs_char($symsize, $gfpoly, $fcr, $prim, $nroots, $pad) {
-			// Based on Reed solomon encoder by Phil Karn, KA9Q (GNU-LGPLv2)
-			$rs = null;
-			// Check parameter ranges
-			if (($symsize < 0) OR ($symsize > 8)) {
-				return $rs;
-			}
-			if (($fcr < 0) OR ($fcr >= (1<<$symsize))) {
-				return $rs;
-			}
-			if (($prim <= 0) OR ($prim >= (1<<$symsize))) {
-				return $rs;
-			}
-			if (($nroots < 0) OR ($nroots >= (1<<$symsize))) {
-				return $rs;
-			}
-			if (($pad < 0) OR ($pad >= ((1<<$symsize) -1 - $nroots))) {
-				return $rs;
-			}
-			$rs = array();
-			$rs['mm'] = $symsize;
-			$rs['nn'] = (1 << $symsize) - 1;
-			$rs['pad'] = $pad;
-			$rs['alpha_to'] = array_fill(0, ($rs['nn'] + 1), 0);
-			$rs['index_of'] = array_fill(0, ($rs['nn'] + 1), 0);
-			// PHP style macro replacement ;)
-			$NN =& $rs['nn'];
-			$A0 =& $NN;
-			// Generate Galois field lookup tables
-			$rs['index_of'][0] = $A0; // log(zero) = -inf
-			$rs['alpha_to'][$A0] = 0; // alpha**-inf = 0
-			$sr = 1;
-			for ($i=0; $i<$rs['nn']; ++$i) {
-				$rs['index_of'][$sr] = $i;
-				$rs['alpha_to'][$i] = $sr;
-				$sr <<= 1;
-				if ($sr & (1 << $symsize)) {
-					$sr ^= $gfpoly;
-				}
-				$sr &= $rs['nn'];
-			}
-			if ($sr != 1) {
-				// field generator polynomial is not primitive!
-				return NULL;
-			}
-			// Form RS code generator polynomial from its roots
-			$rs['genpoly'] = array_fill(0, ($nroots + 1), 0);
-			$rs['fcr'] = $fcr;
-			$rs['prim'] = $prim;
-			$rs['nroots'] = $nroots;
-			$rs['gfpoly'] = $gfpoly;
-			// Find prim-th root of 1, used in decoding
-			for ($iprim=1; ($iprim % $prim) != 0; $iprim += $rs['nn']) {
-				; // intentional empty-body loop!
-			}
-			$rs['iprim'] = (int)($iprim / $prim);
-			$rs['genpoly'][0] = 1;
-
-
-			for ($i = 0,$root=$fcr*$prim; $i < $nroots; $i++, $root += $prim) {
-				$rs['genpoly'][$i+1] = 1;
-				// Multiply rs->genpoly[] by  @**(root + x)
-				for ($j = $i; $j > 0; --$j) {
-					if ($rs['genpoly'][$j] != 0) {
-						$rs['genpoly'][$j] = $rs['genpoly'][$j-1] ^ $rs['alpha_to'][$this->modnn($rs, $rs['index_of'][$rs['genpoly'][$j]] + $root)];
-					} else {
-						$rs['genpoly'][$j] = $rs['genpoly'][$j-1];
-					}
-				}
-				// rs->genpoly[0] can never be zero
-				$rs['genpoly'][0] = $rs['alpha_to'][$this->modnn($rs, $rs['index_of'][$rs['genpoly'][0]] + $root)];
-			}
-			// convert rs->genpoly[] to index form for quicker encoding
-			for ($i = 0; $i <= $nroots; ++$i) {
-				$rs['genpoly'][$i] = $rs['index_of'][$rs['genpoly'][$i]];
-			}
-			return $rs;
-		}
-
-		/**
-		 * Encode a Reed-Solomon codec and returns the parity array
-		 * @param array $rs RS values
-		 * @param array $data data
-		 * @param array $parity parity
-		 * @return parity array
-		 */
-		 protected function encode_rs_char($rs, $data, $parity) {
-			$MM       =& $rs['mm']; // bits per symbol
-			$NN       =& $rs['nn']; // the total number of symbols in a RS block
-			$ALPHA_TO =& $rs['alpha_to']; // the address of an array of NN elements to convert Galois field elements in index (log) form to polynomial form
-			$INDEX_OF =& $rs['index_of']; // the address of an array of NN elements to convert Galois field elements in polynomial form to index (log) form
-			$GENPOLY  =& $rs['genpoly']; // an array of NROOTS+1 elements containing the generator polynomial in index form
-			$NROOTS   =& $rs['nroots']; // the number of roots in the RS code generator polynomial, which is the same as the number of parity symbols in a block
-			$FCR      =& $rs['fcr']; // first consecutive root, index form
-			$PRIM     =& $rs['prim']; // primitive element, index form
-			$IPRIM    =& $rs['iprim']; // prim-th root of 1, index form
-			$PAD      =& $rs['pad']; // the number of pad symbols in a block
-			$A0       =& $NN;
-			$parity = array_fill(0, $NROOTS, 0);
-			for ($i=0; $i < ($NN - $NROOTS - $PAD); $i++) {
-				$feedback = $INDEX_OF[$data[$i] ^ $parity[0]];
-				if ($feedback != $A0) {
-					// feedback term is non-zero
-					// This line is unnecessary when GENPOLY[NROOTS] is unity, as it must
-					// always be for the polynomials constructed by init_rs()
-					$feedback = $this->modnn($rs, $NN - $GENPOLY[$NROOTS] + $feedback);
-					for ($j=1; $j < $NROOTS; ++$j) {
-					$parity[$j] ^= $ALPHA_TO[$this->modnn($rs, $feedback + $GENPOLY[($NROOTS - $j)])];
-					}
-				}
-				// Shift
-				array_shift($parity);
-				if ($feedback != $A0) {
-					array_push($parity, $ALPHA_TO[$this->modnn($rs, $feedback + $GENPOLY[0])]);
-				} else {
-					array_push($parity, 0);
-				}
-			}
-			return $parity;
-		}
-
-	} // end QRcode class
+    // for compaibility with PHP4
+    if (!function_exists('str_split')) {
+        /**
+         * Convert a string to an array (needed for PHP4 compatibility).
+         *
+         * @param string $string       The input string.
+         * @param int    $split_length Maximum length of the chunk.
+         *
+         * @return If the optional split_length  parameter is specified, the returned array will be broken down into chunks with each being split_length  in length, otherwise each chunk will be one character in length. FALSE is returned if split_length is less than 1. If the split_length length exceeds the length of string , the entire string is returned as the first (and only) array element.
+         */
+        function str_split($string, $split_length = 1)
+        {
+            if ((strlen($string) > $split_length) or (!$split_length)) {
+                do {
+                    $c = strlen($string);
+                    $parts[] = substr($string, 0, $split_length);
+                    $string = substr($string, $split_length);
+                } while ($string !== false);
+            } else {
+                $parts = [$string];
+            }
+
+            return $parts;
+        }
+    }
+
+    // #####################################################
 
+    /**
+     * Class to create QR-code arrays for TCPDF class.
+     * QR Code symbol is a 2D barcode that can be scanned by handy terminals such as a mobile phone with CCD.
+     * The capacity of QR Code is up to 7000 digits or 4000 characters, and has high robustness.
+     * This class supports QR Code model 2, described in JIS (Japanese Industrial Standards) X0510:2004 or ISO/IEC 18004.
+     * Currently the following features are not supported: ECI and FNC1 mode, Micro QR Code, QR Code model 1, Structured mode.
+     *
+     * This class is derived from "PHP QR Code encoder" by Dominik Dzienia (http://phpqrcode.sourceforge.net/) based on "libqrencode C library 3.1.1." by Kentaro Fukuchi (http://megaui.net/fukuchi/works/qrencode/index.en.html), contains Reed-Solomon code written by Phil Karn, KA9Q. QR Code is registered trademark of DENSO WAVE INCORPORATED (http://www.denso-wave.com/qrcode/index-e.html).
+     * Please read comments on this class source file for full copyright and license information.
+     *
+     * @name QRcode
+     * @abstract Class for generating QR-code array for TCPDF.
+     *
+     * @author Nicola Asuni
+     * @copyright 2010 Nicola Asuni - Tecnick.com S.r.l (www.tecnick.com) Via Della Pace, 11 - 09044 - Quartucciu (CA) - ITALY - www.tecnick.com - info@tecnick.com
+     *
+     * @link http://www.tcpdf.org
+     *
+     * @license http://www.gnu.org/copyleft/lesser.html LGPL
+     *
+     * @version 1.0.002
+     */
+    class qrcode
+    {
+        /**
+         * @var barcode array to be returned which is readable by TCPDF
+         */
+        protected $barcode_array = [];
+
+        /**
+         * @var QR code version. Size of QRcode is defined as version. Version is from 1 to 40. Version 1 is 21*21 matrix. And 4 modules increases whenever 1 version increases. So version 40 is 177*177 matrix.
+         */
+        protected $version = 0;
+
+        /**
+         * @var Levels of error correction. See definitions for possible values.
+         */
+        protected $level = QR_ECLEVEL_L;
+
+        /**
+         * @var Encoding mode
+         */
+        protected $hint = QR_MODE_8B;
+
+        /**
+         * @var if true the input string will be converted to uppercase
+         */
+        protected $casesensitive = true;
+
+        /**
+         * @var structured QR code (not supported yet)
+         */
+        protected $structured = 0;
+
+        /**
+         * @var mask data
+         */
+        protected $data;
+
+        // FrameFiller
+
+        /**
+         * @var width
+         */
+        protected $width;
+
+        /**
+         * @var frame
+         */
+        protected $frame;
+
+        /**
+         * @var X position of bit
+         */
+        protected $x;
+
+        /**
+         * @var Y position of bit
+         */
+        protected $y;
+
+        /**
+         * @var direction
+         */
+        protected $dir;
+
+        /**
+         * @var single bit
+         */
+        protected $bit;
+
+        // ---- QRrawcode ----
+
+        /**
+         * @var data code
+         */
+        protected $datacode = [];
+
+        /**
+         * @var error correction code
+         */
+        protected $ecccode = [];
+
+        /**
+         * @var blocks
+         */
+        protected $blocks;
+
+        /**
+         * @var Reed-Solomon blocks
+         */
+        protected $rsblocks = []; //of RSblock
+
+        /**
+         * @var counter
+         */
+        protected $count;
+
+        /**
+         * @var data length
+         */
+        protected $dataLength;
+
+        /**
+         * @var error correction length
+         */
+        protected $eccLength;
+
+        /**
+         * @var b1
+         */
+        protected $b1;
+
+        // ---- QRmask ----
+
+        /**
+         * @var run length
+         */
+        protected $runLength = [];
+
+        // ---- QRsplit ----
+
+        /**
+         * @var input data string
+         */
+        protected $dataStr = '';
+
+        /**
+         * @var input items
+         */
+        protected $items;
+
+        // Reed-Solomon items
+
+        /**
+         * @var Reed-Solomon items
+         */
+        protected $rsitems = [];
+
+        /**
+         * @var array of frames
+         */
+        protected $frames = [];
+
+        /**
+         * @var alphabet-numeric convesion table
+         */
+        protected $anTable = [
+            -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, //
+            -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, //
+            36, -1, -1, -1, 37, 38, -1, -1, -1, -1, 39, 40, -1, 41, 42, 43, //
+             0,  1,  2,  3,  4,  5,  6,  7,  8,  9, 44, -1, -1, -1, -1, -1, //
+            -1, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, //
+            25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, -1, -1, -1, -1, -1, //
+            -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, //
+            -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,  //
+            ];
+
+        /**
+         * @var array Table of the capacity of symbols
+         *            See Table 1 (pp.13) and Table 12-16 (pp.30-36), JIS X0510:2004.
+         */
+        protected $capacity = [
+            [0,    0, 0, [0,    0,    0,    0]], //
+            [21,   26, 0, [7,   10,   13,   17]], //  1
+            [25,   44, 7, [10,   16,   22,   28]], //
+            [29,   70, 7, [15,   26,   36,   44]], //
+            [33,  100, 7, [20,   36,   52,   64]], //
+            [37,  134, 7, [26,   48,   72,   88]], //  5
+            [41,  172, 7, [36,   64,   96,  112]], //
+            [45,  196, 0, [40,   72,  108,  130]], //
+            [49,  242, 0, [48,   88,  132,  156]], //
+            [53,  292, 0, [60,  110,  160,  192]], //
+            [57,  346, 0, [72,  130,  192,  224]], // 10
+            [61,  404, 0, [80,  150,  224,  264]], //
+            [65,  466, 0, [96,  176,  260,  308]], //
+            [69,  532, 0, [104,  198,  288,  352]], //
+            [73,  581, 3, [120,  216,  320,  384]], //
+            [77,  655, 3, [132,  240,  360,  432]], // 15
+            [81,  733, 3, [144,  280,  408,  480]], //
+            [85,  815, 3, [168,  308,  448,  532]], //
+            [89,  901, 3, [180,  338,  504,  588]], //
+            [93,  991, 3, [196,  364,  546,  650]], //
+            [97, 1085, 3, [224,  416,  600,  700]], // 20
+            [101, 1156, 4, [224,  442,  644,  750]], //
+            [105, 1258, 4, [252,  476,  690,  816]], //
+            [109, 1364, 4, [270,  504,  750,  900]], //
+            [113, 1474, 4, [300,  560,  810,  960]], //
+            [117, 1588, 4, [312,  588,  870, 1050]], // 25
+            [121, 1706, 4, [336,  644,  952, 1110]], //
+            [125, 1828, 4, [360,  700, 1020, 1200]], //
+            [129, 1921, 3, [390,  728, 1050, 1260]], //
+            [133, 2051, 3, [420,  784, 1140, 1350]], //
+            [137, 2185, 3, [450,  812, 1200, 1440]], // 30
+            [141, 2323, 3, [480,  868, 1290, 1530]], //
+            [145, 2465, 3, [510,  924, 1350, 1620]], //
+            [149, 2611, 3, [540,  980, 1440, 1710]], //
+            [153, 2761, 3, [570, 1036, 1530, 1800]], //
+            [157, 2876, 0, [570, 1064, 1590, 1890]], // 35
+            [161, 3034, 0, [600, 1120, 1680, 1980]], //
+            [165, 3196, 0, [630, 1204, 1770, 2100]], //
+            [169, 3362, 0, [660, 1260, 1860, 2220]], //
+            [173, 3532, 0, [720, 1316, 1950, 2310]], //
+            [177, 3706, 0, [750, 1372, 2040, 2430]],  // 40
+        ];
+
+        /**
+         * @var array Length indicator
+         */
+        protected $lengthTableBits = [
+            [10, 12, 14],
+            [9, 11, 13],
+            [8, 16, 16],
+            [8, 10, 12],
+        ];
+
+        /**
+         * @var array Table of the error correction code (Reed-Solomon block)
+         *            See Table 12-16 (pp.30-36), JIS X0510:2004.
+         */
+        protected $eccTable = [
+            [[0,  0], [0,  0], [0,  0], [0,  0]], //
+            [[1,  0], [1,  0], [1,  0], [1,  0]], //  1
+            [[1,  0], [1,  0], [1,  0], [1,  0]], //
+            [[1,  0], [1,  0], [2,  0], [2,  0]], //
+            [[1,  0], [2,  0], [2,  0], [4,  0]], //
+            [[1,  0], [2,  0], [2,  2], [2,  2]], //  5
+            [[2,  0], [4,  0], [4,  0], [4,  0]], //
+            [[2,  0], [4,  0], [2,  4], [4,  1]], //
+            [[2,  0], [2,  2], [4,  2], [4,  2]], //
+            [[2,  0], [3,  2], [4,  4], [4,  4]], //
+            [[2,  2], [4,  1], [6,  2], [6,  2]], // 10
+            [[4,  0], [1,  4], [4,  4], [3,  8]], //
+            [[2,  2], [6,  2], [4,  6], [7,  4]], //
+            [[4,  0], [8,  1], [8,  4], [12,  4]], //
+            [[3,  1], [4,  5], [11,  5], [11,  5]], //
+            [[5,  1], [5,  5], [5,  7], [11,  7]], // 15
+            [[5,  1], [7,  3], [15,  2], [3, 13]], //
+            [[1,  5], [10,  1], [1, 15], [2, 17]], //
+            [[5,  1], [9,  4], [17,  1], [2, 19]], //
+            [[3,  4], [3, 11], [17,  4], [9, 16]], //
+            [[3,  5], [3, 13], [15,  5], [15, 10]], // 20
+            [[4,  4], [17,  0], [17,  6], [19,  6]], //
+            [[2,  7], [17,  0], [7, 16], [34,  0]], //
+            [[4,  5], [4, 14], [11, 14], [16, 14]], //
+            [[6,  4], [6, 14], [11, 16], [30,  2]], //
+            [[8,  4], [8, 13], [7, 22], [22, 13]], // 25
+            [[10,  2], [19,  4], [28,  6], [33,  4]], //
+            [[8,  4], [22,  3], [8, 26], [12, 28]], //
+            [[3, 10], [3, 23], [4, 31], [11, 31]], //
+            [[7,  7], [21,  7], [1, 37], [19, 26]], //
+            [[5, 10], [19, 10], [15, 25], [23, 25]], // 30
+            [[13,  3], [2, 29], [42,  1], [23, 28]], //
+            [[17,  0], [10, 23], [10, 35], [19, 35]], //
+            [[17,  1], [14, 21], [29, 19], [11, 46]], //
+            [[13,  6], [14, 23], [44,  7], [59,  1]], //
+            [[12,  7], [12, 26], [39, 14], [22, 41]], // 35
+            [[6, 14], [6, 34], [46, 10], [2, 64]], //
+            [[17,  4], [29, 14], [49, 10], [24, 46]], //
+            [[4, 18], [13, 32], [48, 14], [42, 32]], //
+            [[20,  4], [40,  7], [43, 22], [10, 67]], //
+            [[19,  6], [18, 31], [34, 34], [20, 61]],  // 40
+        ];
+
+        /**
+         * @var array Positions of alignment patterns.
+         *            This array includes only the second and the third position of the alignment patterns. Rest of them can be calculated from the distance between them.
+         *            See Table 1 in Appendix E (pp.71) of JIS X0510:2004.
+         */
+        protected $alignmentPattern = [
+            [0,  0],
+            [0,  0], [18,  0], [22,  0], [26,  0], [30,  0], //  1- 5
+            [34,  0], [22, 38], [24, 42], [26, 46], [28, 50], //  6-10
+            [30, 54], [32, 58], [34, 62], [26, 46], [26, 48], // 11-15
+            [26, 50], [30, 54], [30, 56], [30, 58], [34, 62], // 16-20
+            [28, 50], [26, 50], [30, 54], [28, 54], [32, 58], // 21-25
+            [30, 58], [34, 62], [26, 50], [30, 54], [26, 52], // 26-30
+            [30, 56], [34, 60], [30, 58], [34, 62], [30, 54], // 31-35
+            [24, 50], [28, 54], [32, 58], [26, 54], [30, 58],  // 35-40
+        ];
+
+        /**
+         * @var array Version information pattern (BCH coded).
+         *            See Table 1 in Appendix D (pp.68) of JIS X0510:2004.
+         *            size: [QRSPEC_VERSION_MAX - 6]
+         */
+        protected $versionPattern = [
+            0x07c94, 0x085bc, 0x09a99, 0x0a4d3, 0x0bbf6, 0x0c762, 0x0d847, 0x0e60d, //
+            0x0f928, 0x10b78, 0x1145d, 0x12a17, 0x13532, 0x149a6, 0x15683, 0x168c9, //
+            0x177ec, 0x18ec4, 0x191e1, 0x1afab, 0x1b08e, 0x1cc1a, 0x1d33f, 0x1ed75, //
+            0x1f250, 0x209d5, 0x216f0, 0x228ba, 0x2379f, 0x24b0b, 0x2542e, 0x26a64, //
+            0x27541, 0x28c69,
+        ];
+
+        /**
+         * @var array Format information
+         */
+        protected $formatInfo = [
+            [0x77c4, 0x72f3, 0x7daa, 0x789d, 0x662f, 0x6318, 0x6c41, 0x6976], //
+            [0x5412, 0x5125, 0x5e7c, 0x5b4b, 0x45f9, 0x40ce, 0x4f97, 0x4aa0], //
+            [0x355f, 0x3068, 0x3f31, 0x3a06, 0x24b4, 0x2183, 0x2eda, 0x2bed], //
+            [0x1689, 0x13be, 0x1ce7, 0x19d0, 0x0762, 0x0255, 0x0d0c, 0x083b],  //
+        ];
+
+        // -------------------------------------------------
+        // -------------------------------------------------
+
+        /**
+         * This is the class constructor.
+         * Creates a QRcode object.
+         *
+         * @param string $code    code to represent using QRcode
+         * @param string $eclevel error level: <ul><li>L : About 7% or less errors can be corrected.</li><li>M : About 15% or less errors can be corrected.</li><li>Q : About 25% or less errors can be corrected.</li><li>H : About 30% or less errors can be corrected.</li></ul>
+         *
+         * @since 1.0.000
+         */
+        public function __construct($code, $eclevel = 'L')
+        {
+            $barcode_array = [];
+            if ((is_null($code)) or ($code == '\0') or ($code == '')) {
+                return false;
+            }
+            // set error correction level
+            $this->level = array_search($eclevel, ['L', 'M', 'Q', 'H']);
+            if ($this->level === false) {
+                $this->level = QR_ECLEVEL_L;
+            }
+            if (($this->hint != QR_MODE_8B) and ($this->hint != QR_MODE_KJ)) {
+                return false;
+            }
+            if (($this->version < 0) or ($this->version > QRSPEC_VERSION_MAX)) {
+                return false;
+            }
+            $this->items = [];
+            $this->encodeString($code);
+            $qrTab = $this->binarize($this->data);
+            $size = count($qrTab);
+            $barcode_array['num_rows'] = $size;
+            $barcode_array['num_cols'] = $size;
+            $barcode_array['bcode'] = [];
+            foreach ($qrTab as $line) {
+                $arrAdd = [];
+                foreach (str_split($line) as $char) {
+                    $arrAdd[] = ($char == '1') ? 1 : 0;
+                }
+                $barcode_array['bcode'][] = $arrAdd;
+            }
+            $this->barcode_array = $barcode_array;
+        }
+
+        /**
+         * Returns a barcode array which is readable by TCPDF.
+         *
+         * @return array barcode array readable by TCPDF;
+         */
+        public function getBarcodeArray()
+        {
+            return $this->barcode_array;
+        }
+
+        /**
+         * Convert the frame in binary form.
+         *
+         * @param array $frame array to binarize
+         *
+         * @return array frame in binary form
+         */
+        protected function binarize($frame)
+        {
+            $len = count($frame);
+            // the frame is square (width = height)
+            foreach ($frame as &$frameLine) {
+                for ($i = 0; $i < $len; $i++) {
+                    $frameLine[$i] = (ord($frameLine[$i]) & 1) ? '1' : '0';
+                }
+            }
+
+            return $frame;
+        }
+
+        /**
+         * Encode the input string to QR code.
+         *
+         * @param string $string input string to encode
+         */
+        protected function encodeString($string)
+        {
+            $this->dataStr = $string;
+            if (!$this->casesensitive) {
+                $this->toUpper();
+            }
+            $ret = $this->splitString();
+            if ($ret < 0) {
+                return;
+            }
+            $this->encodeMask(-1);
+        }
+
+        /**
+         * Encode mask.
+         *
+         * @param int $mask masking mode
+         */
+        protected function encodeMask($mask)
+        {
+            $spec = [0, 0, 0, 0, 0];
+            $this->datacode = $this->getByteStream($this->items);
+            if (is_null($this->datacode)) {
+                return;
+            }
+            $spec = $this->getEccSpec($this->version, $this->level, $spec);
+            $this->b1 = $this->rsBlockNum1($spec);
+            $this->dataLength = $this->rsDataLength($spec);
+            $this->eccLength = $this->rsEccLength($spec);
+            $this->ecccode = array_fill(0, $this->eccLength, 0);
+            $this->blocks = $this->rsBlockNum($spec);
+            $ret = $this->init($spec);
+            if ($ret < 0) {
+                return;
+            }
+            $this->count = 0;
+            $this->width = $this->getWidth($this->version);
+            $this->frame = $this->newFrame($this->version);
+            $this->x = $this->width - 1;
+            $this->y = $this->width - 1;
+            $this->dir = -1;
+            $this->bit = -1;
+            // inteleaved data and ecc codes
+            for ($i = 0; $i < ($this->dataLength + $this->eccLength); $i++) {
+                $code = $this->getCode();
+                $bit = 0x80;
+                for ($j = 0; $j < 8; $j++) {
+                    $addr = $this->getNextPosition();
+                    $this->setFrameAt($addr, 0x02 | (($bit & $code) != 0));
+                    $bit = $bit >> 1;
+                }
+            }
+            // remainder bits
+            $j = $this->getRemainder($this->version);
+            for ($i = 0; $i < $j; $i++) {
+                $addr = $this->getNextPosition();
+                $this->setFrameAt($addr, 0x02);
+            }
+            // masking
+            $this->runLength = array_fill(0, QRSPEC_WIDTH_MAX + 1, 0);
+            if ($mask < 0) {
+                if (QR_FIND_BEST_MASK) {
+                    $masked = $this->mask($this->width, $this->frame, $this->level);
+                } else {
+                    $masked = $this->makeMask($this->width, $this->frame, (intval(QR_DEFAULT_MASK) % 8), $this->level);
+                }
+            } else {
+                $masked = $this->makeMask($this->width, $this->frame, $mask, $this->level);
+            }
+            if ($masked == null) {
+                return;
+            }
+            $this->data = $masked;
+        }
+
+        // - - - - - - - - - - - - - - - - - - - - - - - - -
+
+        // FrameFiller
+
+        /**
+         * Set frame value at specified position.
+         *
+         * @param array $at  x,y position
+         * @param int   $val value of the character to set
+         */
+        protected function setFrameAt($at, $val)
+        {
+            $this->frame[$at['y']][$at['x']] = chr($val);
+        }
+
+        /**
+         * Get frame value at specified position.
+         *
+         * @param array $at x,y position
+         *
+         * @return value at specified position
+         */
+        protected function getFrameAt($at)
+        {
+            return ord($this->frame[$at['y']][$at['x']]);
+        }
+
+        /**
+         * Return the next frame position.
+         *
+         * @return array of x,y coordinates
+         */
+        protected function getNextPosition()
+        {
+            do {
+                if ($this->bit == -1) {
+                    $this->bit = 0;
+
+                    return ['x'=>$this->x, 'y'=>$this->y];
+                }
+                $x = $this->x;
+                $y = $this->y;
+                $w = $this->width;
+                if ($this->bit == 0) {
+                    $x--;
+                    $this->bit++;
+                } else {
+                    $x++;
+                    $y += $this->dir;
+                    $this->bit--;
+                }
+                if ($this->dir < 0) {
+                    if ($y < 0) {
+                        $y = 0;
+                        $x -= 2;
+                        $this->dir = 1;
+                        if ($x == 6) {
+                            $x--;
+                            $y = 9;
+                        }
+                    }
+                } else {
+                    if ($y == $w) {
+                        $y = $w - 1;
+                        $x -= 2;
+                        $this->dir = -1;
+                        if ($x == 6) {
+                            $x--;
+                            $y -= 8;
+                        }
+                    }
+                }
+                if (($x < 0) or ($y < 0)) {
+                    return;
+                }
+                $this->x = $x;
+                $this->y = $y;
+            } while (ord($this->frame[$y][$x]) & 0x80);
+
+            return ['x'=>$x, 'y'=>$y];
+        }
+
+        // - - - - - - - - - - - - - - - - - - - - - - - - -
+
+        // QRrawcode
+
+        /**
+         * Initialize code.
+         *
+         * @param array $spec array of ECC specification
+         *
+         * @return 0 in case of success, -1 in case of error
+         */
+        protected function init($spec)
+        {
+            $dl = $this->rsDataCodes1($spec);
+            $el = $this->rsEccCodes1($spec);
+            $rs = $this->init_rs(8, 0x11d, 0, 1, $el, 255 - $dl - $el);
+            $blockNo = 0;
+            $dataPos = 0;
+            $eccPos = 0;
+            $endfor = $this->rsBlockNum1($spec);
+            for ($i = 0; $i < $endfor; $i++) {
+                $ecc = array_slice($this->ecccode, $eccPos);
+                $this->rsblocks[$blockNo] = [];
+                $this->rsblocks[$blockNo]['dataLength'] = $dl;
+                $this->rsblocks[$blockNo]['data'] = array_slice($this->datacode, $dataPos);
+                $this->rsblocks[$blockNo]['eccLength'] = $el;
+                $ecc = $this->encode_rs_char($rs, $this->rsblocks[$blockNo]['data'], $ecc);
+                $this->rsblocks[$blockNo]['ecc'] = $ecc;
+                $this->ecccode = array_merge(array_slice($this->ecccode, 0, $eccPos), $ecc);
+                $dataPos += $dl;
+                $eccPos += $el;
+                $blockNo++;
+            }
+            if ($this->rsBlockNum2($spec) == 0) {
+                return 0;
+            }
+            $dl = $this->rsDataCodes2($spec);
+            $el = $this->rsEccCodes2($spec);
+            $rs = $this->init_rs(8, 0x11d, 0, 1, $el, 255 - $dl - $el);
+            if ($rs == null) {
+                return -1;
+            }
+            $endfor = $this->rsBlockNum2($spec);
+            for ($i = 0; $i < $endfor; $i++) {
+                $ecc = array_slice($this->ecccode, $eccPos);
+                $this->rsblocks[$blockNo] = [];
+                $this->rsblocks[$blockNo]['dataLength'] = $dl;
+                $this->rsblocks[$blockNo]['data'] = array_slice($this->datacode, $dataPos);
+                $this->rsblocks[$blockNo]['eccLength'] = $el;
+                $ecc = $this->encode_rs_char($rs, $this->rsblocks[$blockNo]['data'], $ecc);
+                $this->rsblocks[$blockNo]['ecc'] = $ecc;
+                $this->ecccode = array_merge(array_slice($this->ecccode, 0, $eccPos), $ecc);
+                $dataPos += $dl;
+                $eccPos += $el;
+                $blockNo++;
+            }
+
+            return 0;
+        }
+
+        /**
+         * Return Reed-Solomon block code.
+         *
+         * @return array rsblocks
+         */
+        protected function getCode()
+        {
+            if ($this->count < $this->dataLength) {
+                $row = $this->count % $this->blocks;
+                $col = $this->count / $this->blocks;
+                if ($col >= $this->rsblocks[0]['dataLength']) {
+                    $row += $this->b1;
+                }
+                $ret = $this->rsblocks[$row]['data'][$col];
+            } elseif ($this->count < $this->dataLength + $this->eccLength) {
+                $row = ($this->count - $this->dataLength) % $this->blocks;
+                $col = ($this->count - $this->dataLength) / $this->blocks;
+                $ret = $this->rsblocks[$row]['ecc'][$col];
+            } else {
+                return 0;
+            }
+            $this->count++;
+
+            return $ret;
+        }
+
+        // - - - - - - - - - - - - - - - - - - - - - - - - -
+
+        // QRmask
+
+        /**
+         * Write Format Information on frame and returns the number of black bits.
+         *
+         * @param int $width frame width
+         * @param array $frame frame
+         * @param array $mask masking mode
+         * @param int $level error correction level
+         *
+         * @return int blacks
+         */
+        protected function writeFormatInformation($width, &$frame, $mask, $level)
+        {
+            $blacks = 0;
+            $format = $this->getFormatInfo($mask, $level);
+            for ($i = 0; $i < 8; $i++) {
+                if ($format & 1) {
+                    $blacks += 2;
+                    $v = 0x85;
+                } else {
+                    $v = 0x84;
+                }
+                $frame[8][$width - 1 - $i] = chr($v);
+                if ($i < 6) {
+                    $frame[$i][8] = chr($v);
+                } else {
+                    $frame[$i + 1][8] = chr($v);
+                }
+                $format = $format >> 1;
+            }
+            for ($i = 0; $i < 7; $i++) {
+                if ($format & 1) {
+                    $blacks += 2;
+                    $v = 0x85;
+                } else {
+                    $v = 0x84;
+                }
+                $frame[$width - 7 + $i][8] = chr($v);
+                if ($i == 0) {
+                    $frame[8][7] = chr($v);
+                } else {
+                    $frame[8][6 - $i] = chr($v);
+                }
+                $format = $format >> 1;
+            }
+
+            return $blacks;
+        }
+
+        /**
+         * mask0.
+         *
+         * @param int $x X position
+         * @param int $y Y position
+         *
+         * @return int mask
+         */
+        protected function mask0($x, $y)
+        {
+            return ($x + $y) & 1;
+        }
+
+        /**
+         * mask1.
+         *
+         * @param int $x X position
+         * @param int $y Y position
+         *
+         * @return int mask
+         */
+        protected function mask1($x, $y)
+        {
+            return $y & 1;
+        }
+
+        /**
+         * mask2.
+         *
+         * @param int $x X position
+         * @param int $y Y position
+         *
+         * @return int mask
+         */
+        protected function mask2($x, $y)
+        {
+            return $x % 3;
+        }
+
+        /**
+         * mask3.
+         *
+         * @param int $x X position
+         * @param int $y Y position
+         *
+         * @return int mask
+         */
+        protected function mask3($x, $y)
+        {
+            return ($x + $y) % 3;
+        }
+
+        /**
+         * mask4.
+         *
+         * @param int $x X position
+         * @param int $y Y position
+         *
+         * @return int mask
+         */
+        protected function mask4($x, $y)
+        {
+            return (((int) ($y / 2)) + ((int) ($x / 3))) & 1;
+        }
+
+        /**
+         * mask5.
+         *
+         * @param int $x X position
+         * @param int $y Y position
+         *
+         * @return int mask
+         */
+        protected function mask5($x, $y)
+        {
+            return (($x * $y) & 1) + ($x * $y) % 3;
+        }
+
+        /**
+         * mask6.
+         *
+         * @param int $x X position
+         * @param int $y Y position
+         *
+         * @return int mask
+         */
+        protected function mask6($x, $y)
+        {
+            return ((($x * $y) & 1) + ($x * $y) % 3) & 1;
+        }
+
+        /**
+         * mask7.
+         *
+         * @param int $x X position
+         * @param int $y Y position
+         *
+         * @return int mask
+         */
+        protected function mask7($x, $y)
+        {
+            return ((($x * $y) % 3) + (($x + $y) & 1)) & 1;
+        }
+
+        /**
+         * Return bitmask.
+         *
+         * @param int   $maskNo mask number
+         * @param int   $width  width
+         * @param array $frame  frame
+         *
+         * @return array bitmask
+         */
+        protected function generateMaskNo($maskNo, $width, $frame)
+        {
+            $bitMask = array_fill(0, $width, array_fill(0, $width, 0));
+            for ($y = 0; $y < $width; $y++) {
+                for ($x = 0; $x < $width; $x++) {
+                    if (ord($frame[$y][$x]) & 0x80) {
+                        $bitMask[$y][$x] = 0;
+                    } else {
+                        $maskFunc = call_user_func([$this, 'mask'.$maskNo], $x, $y);
+                        $bitMask[$y][$x] = ($maskFunc == 0) ? 1 : 0;
+                    }
+                }
+            }
+
+            return $bitMask;
+        }
+
+        /**
+         * makeMaskNo.
+         *
+         * @param int $maskNo
+         * @param int $width
+         * @param int $s
+         * @param int $d
+         * @param bool $maskGenOnly
+         *
+         * @return int b
+         */
+        protected function makeMaskNo($maskNo, $width, $s, &$d, $maskGenOnly = false)
+        {
+            $b = 0;
+            $bitMask = [];
+            $bitMask = $this->generateMaskNo($maskNo, $width, $s, $d);
+            if ($maskGenOnly) {
+                return;
+            }
+            $d = $s;
+            for ($y = 0; $y < $width; $y++) {
+                for ($x = 0; $x < $width; $x++) {
+                    if ($bitMask[$y][$x] == 1) {
+                        $d[$y][$x] = chr(ord($s[$y][$x]) ^ (int) $bitMask[$y][$x]);
+                    }
+                    $b += (int) (ord($d[$y][$x]) & 1);
+                }
+            }
+
+            return $b;
+        }
+
+        /**
+         * makeMask.
+         *
+         * @param int $width
+         * @param array $frame
+         * @param int $maskNo
+         * @param int $level
+         *
+         * @return array mask
+         */
+        protected function makeMask($width, $frame, $maskNo, $level)
+        {
+            $masked = array_fill(0, $width, str_repeat("\0", $width));
+            $this->makeMaskNo($maskNo, $width, $frame, $masked);
+            $this->writeFormatInformation($width, $masked, $maskNo, $level);
+
+            return $masked;
+        }
+
+        /**
+         * calcN1N3.
+         *
+         * @param int $length
+         *
+         * @return int demerit
+         */
+        protected function calcN1N3($length)
+        {
+            $demerit = 0;
+            for ($i = 0; $i < $length; $i++) {
+                if ($this->runLength[$i] >= 5) {
+                    $demerit += (N1 + ($this->runLength[$i] - 5));
+                }
+                if ($i & 1) {
+                    if (($i >= 3) and ($i < ($length - 2)) and ($this->runLength[$i] % 3 == 0)) {
+                        $fact = (int) ($this->runLength[$i] / 3);
+                        if (($this->runLength[$i - 2] == $fact)
+                            and ($this->runLength[$i - 1] == $fact)
+                            and ($this->runLength[$i + 1] == $fact)
+                            and ($this->runLength[$i + 2] == $fact)) {
+                            if (($this->runLength[$i - 3] < 0) or ($this->runLength[$i - 3] >= (4 * $fact))) {
+                                $demerit += N3;
+                            } elseif ((($i + 3) >= $length) or ($this->runLength[$i + 3] >= (4 * $fact))) {
+                                $demerit += N3;
+                            }
+                        }
+                    }
+                }
+            }
+
+            return $demerit;
+        }
+
+        /**
+         * evaluateSymbol.
+         *
+         * @param int $width
+         * @param array $frame
+         *
+         * @return int demerit
+         */
+        protected function evaluateSymbol($width, $frame)
+        {
+            $head = 0;
+            $demerit = 0;
+            for ($y = 0; $y < $width; $y++) {
+                $head = 0;
+                $this->runLength[0] = 1;
+                $frameY = $frame[$y];
+                if ($y > 0) {
+                    $frameYM = $frame[$y - 1];
+                }
+                for ($x = 0; $x < $width; $x++) {
+                    if (($x > 0) and ($y > 0)) {
+                        $b22 = ord($frameY[$x]) & ord($frameY[$x - 1]) & ord($frameYM[$x]) & ord($frameYM[$x - 1]);
+                        $w22 = ord($frameY[$x]) | ord($frameY[$x - 1]) | ord($frameYM[$x]) | ord($frameYM[$x - 1]);
+                        if (($b22 | ($w22 ^ 1)) & 1) {
+                            $demerit += N2;
+                        }
+                    }
+                    if (($x == 0) and (ord($frameY[$x]) & 1)) {
+                        $this->runLength[0] = -1;
+                        $head = 1;
+                        $this->runLength[$head] = 1;
+                    } elseif ($x > 0) {
+                        if ((ord($frameY[$x]) ^ ord($frameY[$x - 1])) & 1) {
+                            $head++;
+                            $this->runLength[$head] = 1;
+                        } else {
+                            $this->runLength[$head]++;
+                        }
+                    }
+                }
+                $demerit += $this->calcN1N3($head + 1);
+            }
+            for ($x = 0; $x < $width; $x++) {
+                $head = 0;
+                $this->runLength[0] = 1;
+                for ($y = 0; $y < $width; $y++) {
+                    if (($y == 0) and (ord($frame[$y][$x]) & 1)) {
+                        $this->runLength[0] = -1;
+                        $head = 1;
+                        $this->runLength[$head] = 1;
+                    } elseif ($y > 0) {
+                        if ((ord($frame[$y][$x]) ^ ord($frame[$y - 1][$x])) & 1) {
+                            $head++;
+                            $this->runLength[$head] = 1;
+                        } else {
+                            $this->runLength[$head]++;
+                        }
+                    }
+                }
+                $demerit += $this->calcN1N3($head + 1);
+            }
+
+            return $demerit;
+        }
+
+        /**
+         * mask.
+         *
+         * @param int $width
+         * @param array $frame
+         * @param int $level
+         *
+         * @return array best mask
+         */
+        protected function mask($width, $frame, $level)
+        {
+            $minDemerit = PHP_INT_MAX;
+            $bestMaskNum = 0;
+            $bestMask = [];
+            $checked_masks = [0, 1, 2, 3, 4, 5, 6, 7];
+            if (QR_FIND_FROM_RANDOM !== false) {
+                $howManuOut = 8 - (QR_FIND_FROM_RANDOM % 9);
+                for ($i = 0; $i < $howManuOut; $i++) {
+                    $remPos = rand(0, count($checked_masks) - 1);
+                    unset($checked_masks[$remPos]);
+                    $checked_masks = array_values($checked_masks);
+                }
+            }
+            $bestMask = $frame;
+            foreach ($checked_masks as $i) {
+                $mask = array_fill(0, $width, str_repeat("\0", $width));
+                $demerit = 0;
+                $blacks = 0;
+                $blacks = $this->makeMaskNo($i, $width, $frame, $mask);
+                $blacks += $this->writeFormatInformation($width, $mask, $i, $level);
+                $blacks = (int) (100 * $blacks / ($width * $width));
+                $demerit = (int) ((int) (abs($blacks - 50) / 5) * N4);
+                $demerit += $this->evaluateSymbol($width, $mask);
+                if ($demerit < $minDemerit) {
+                    $minDemerit = $demerit;
+                    $bestMask = $mask;
+                    $bestMaskNum = $i;
+                }
+            }
+
+            return $bestMask;
+        }
+
+        // - - - - - - - - - - - - - - - - - - - - - - - - -
+
+        // QRsplit
+
+        /**
+         * Return true if the character at specified position is a number.
+         *
+         * @param string $str string
+         * @param int $pos characted position
+         *
+         * @return bool true of false
+         */
+        protected function isdigitat($str, $pos)
+        {
+            if ($pos >= strlen($str)) {
+                return false;
+            }
+
+            return (ord($str[$pos]) >= ord('0')) && (ord($str[$pos]) <= ord('9'));
+        }
+
+        /**
+         * Return true if the character at specified position is an alphanumeric character.
+         *
+         * @param string $str string
+         * @param int $pos characted position
+         *
+         * @return bool true of false
+         */
+        protected function isalnumat($str, $pos)
+        {
+            if ($pos >= strlen($str)) {
+                return false;
+            }
+
+            return $this->lookAnTable(ord($str[$pos])) >= 0;
+        }
+
+        /**
+         * identifyMode.
+         *
+         * @param int $pos
+         *
+         * @return int mode
+         */
+        protected function identifyMode($pos)
+        {
+            if ($pos >= strlen($this->dataStr)) {
+                return QR_MODE_NL;
+            }
+            $c = $this->dataStr[$pos];
+            if ($this->isdigitat($this->dataStr, $pos)) {
+                return QR_MODE_NM;
+            } elseif ($this->isalnumat($this->dataStr, $pos)) {
+                return QR_MODE_AN;
+            } elseif ($this->hint == QR_MODE_KJ) {
+                if ($pos + 1 < strlen($this->dataStr)) {
+                    $d = $this->dataStr[$pos + 1];
+                    $word = (ord($c) << 8) | ord($d);
+                    if (($word >= 0x8140 && $word <= 0x9ffc) or ($word >= 0xe040 && $word <= 0xebbf)) {
+                        return QR_MODE_KJ;
+                    }
+                }
+            }
+
+            return QR_MODE_8B;
+        }
+
+        /**
+         * eatNum.
+         *
+         * @return int run
+         */
+        protected function eatNum()
+        {
+            $ln = $this->lengthIndicator(QR_MODE_NM, $this->version);
+            $p = 0;
+            while ($this->isdigitat($this->dataStr, $p)) {
+                $p++;
+            }
+            $run = $p;
+            $mode = $this->identifyMode($p);
+            if ($mode == QR_MODE_8B) {
+                $dif = $this->estimateBitsModeNum($run) + 4 + $ln
+                + $this->estimateBitsMode8(1)         // + 4 + l8
+                - $this->estimateBitsMode8($run + 1); // - 4 - l8
+                if ($dif > 0) {
+                    return $this->eat8();
+                }
+            }
+            if ($mode == QR_MODE_AN) {
+                $dif = $this->estimateBitsModeNum($run) + 4 + $ln
+                + $this->estimateBitsModeAn(1)        // + 4 + la
+                - $this->estimateBitsModeAn($run + 1); // - 4 - la
+                if ($dif > 0) {
+                    return $this->eatAn();
+                }
+            }
+            $this->items = $this->appendNewInputItem($this->items, QR_MODE_NM, $run, str_split($this->dataStr));
+
+            return $run;
+        }
+
+        /**
+         * eatAn.
+         *
+         * @return int run
+         */
+        protected function eatAn()
+        {
+            $la = $this->lengthIndicator(QR_MODE_AN, $this->version);
+            $ln = $this->lengthIndicator(QR_MODE_NM, $this->version);
+            $p = 0;
+            while ($this->isalnumat($this->dataStr, $p)) {
+                if ($this->isdigitat($this->dataStr, $p)) {
+                    $q = $p;
+                    while ($this->isdigitat($this->dataStr, $q)) {
+                        $q++;
+                    }
+                    $dif = $this->estimateBitsModeAn($p) // + 4 + la
+                    + $this->estimateBitsModeNum($q - $p) + 4 + $ln
+                    - $this->estimateBitsModeAn($q); // - 4 - la
+                    if ($dif < 0) {
+                        break;
+                    } else {
+                        $p = $q;
+                    }
+                } else {
+                    $p++;
+                }
+            }
+            $run = $p;
+            if (!$this->isalnumat($this->dataStr, $p)) {
+                $dif = $this->estimateBitsModeAn($run) + 4 + $la
+                + $this->estimateBitsMode8(1) // + 4 + l8
+                - $this->estimateBitsMode8($run + 1); // - 4 - l8
+                if ($dif > 0) {
+                    return $this->eat8();
+                }
+            }
+            $this->items = $this->appendNewInputItem($this->items, QR_MODE_AN, $run, str_split($this->dataStr));
+
+            return $run;
+        }
+
+        /**
+         * eatKanji.
+         *
+         * @return int run
+         */
+        protected function eatKanji()
+        {
+            $p = 0;
+            while ($this->identifyMode($p) == QR_MODE_KJ) {
+                $p += 2;
+            }
+            $this->items = $this->appendNewInputItem($this->items, QR_MODE_KJ, $p, str_split($this->dataStr));
+
+            return $run;
+        }
+
+        /**
+         * eat8.
+         *
+         * @return int run
+         */
+        protected function eat8()
+        {
+            $la = $this->lengthIndicator(QR_MODE_AN, $this->version);
+            $ln = $this->lengthIndicator(QR_MODE_NM, $this->version);
+            $p = 1;
+            $dataStrLen = strlen($this->dataStr);
+            while ($p < $dataStrLen) {
+                $mode = $this->identifyMode($p);
+                if ($mode == QR_MODE_KJ) {
+                    break;
+                }
+                if ($mode == QR_MODE_NM) {
+                    $q = $p;
+                    while ($this->isdigitat($this->dataStr, $q)) {
+                        $q++;
+                    }
+                    $dif = $this->estimateBitsMode8($p) // + 4 + l8
+                    + $this->estimateBitsModeNum($q - $p) + 4 + $ln
+                    - $this->estimateBitsMode8($q); // - 4 - l8
+                    if ($dif < 0) {
+                        break;
+                    } else {
+                        $p = $q;
+                    }
+                } elseif ($mode == QR_MODE_AN) {
+                    $q = $p;
+                    while ($this->isalnumat($this->dataStr, $q)) {
+                        $q++;
+                    }
+                    $dif = $this->estimateBitsMode8($p)  // + 4 + l8
+                    + $this->estimateBitsModeAn($q - $p) + 4 + $la
+                    - $this->estimateBitsMode8($q); // - 4 - l8
+                    if ($dif < 0) {
+                        break;
+                    } else {
+                        $p = $q;
+                    }
+                } else {
+                    $p++;
+                }
+            }
+            $run = $p;
+            $this->items = $this->appendNewInputItem($this->items, QR_MODE_8B, $run, str_split($this->dataStr));
+
+            return $run;
+        }
+
+        /**
+         * splitString.
+         */
+        protected function splitString()
+        {
+            while (strlen($this->dataStr) > 0) {
+                if ($this->dataStr == '') {
+                    return 0;
+                }
+                $mode = $this->identifyMode(0);
+                switch ($mode) {
+                    case QR_MODE_NM: {
+                        $length = $this->eatNum();
+                        break;
+                    }
+                    case QR_MODE_AN: {
+                        $length = $this->eatAn();
+                        break;
+                    }
+                    case QR_MODE_KJ: {
+                        if ($hint == QR_MODE_KJ) {
+                            $length = $this->eatKanji();
+                        } else {
+                            $length = $this->eat8();
+                        }
+                        break;
+                    }
+                    default: {
+                        $length = $this->eat8();
+                        break;
+                    }
+                }
+                if ($length == 0) {
+                    return 0;
+                }
+                if ($length < 0) {
+                    return -1;
+                }
+                $this->dataStr = substr($this->dataStr, $length);
+            }
+        }
+
+        /**
+         * toUpper.
+         */
+        protected function toUpper()
+        {
+            $stringLen = strlen($this->dataStr);
+            $p = 0;
+            while ($p < $stringLen) {
+                $mode = $this->identifyMode(substr($this->dataStr, $p), $this->hint);
+                if ($mode == QR_MODE_KJ) {
+                    $p += 2;
+                } else {
+                    if ((ord($this->dataStr[$p]) >= ord('a')) and (ord($this->dataStr[$p]) <= ord('z'))) {
+                        $this->dataStr[$p] = chr(ord($this->dataStr[$p]) - 32);
+                    }
+                    $p++;
+                }
+            }
+
+            return $this->dataStr;
+        }
+
+        // - - - - - - - - - - - - - - - - - - - - - - - - -
+
+        // QRinputItem
+
+        /**
+         * newInputItem.
+         *
+         * @param int $mode
+         * @param int $size
+         * @param array $data
+         * @param array $bstream
+         *
+         * @return array input item
+         */
+        protected function newInputItem($mode, $size, $data, $bstream = null)
+        {
+            $setData = array_slice($data, 0, $size);
+            if (count($setData) < $size) {
+                $setData = array_merge($setData, array_fill(0, ($size - count($setData)), 0));
+            }
+            if (!$this->check($mode, $size, $setData)) {
+                return;
+            }
+            $inputitem = [];
+            $inputitem['mode'] = $mode;
+            $inputitem['size'] = $size;
+            $inputitem['data'] = $setData;
+            $inputitem['bstream'] = $bstream;
+
+            return $inputitem;
+        }
+
+        /**
+         * encodeModeNum.
+         *
+         * @param array $inputitem
+         * @param int $version
+         *
+         * @return array input item
+         */
+        protected function encodeModeNum($inputitem, $version)
+        {
+            $words = (int) ($inputitem['size'] / 3);
+            $inputitem['bstream'] = [];
+            $val = 0x1;
+            $inputitem['bstream'] = $this->appendNum($inputitem['bstream'], 4, $val);
+            $inputitem['bstream'] = $this->appendNum($inputitem['bstream'], $this->lengthIndicator(QR_MODE_NM, $version), $inputitem['size']);
+            for ($i = 0; $i < $words; $i++) {
+                $val = (ord($inputitem['data'][$i * 3]) - ord('0')) * 100;
+                $val += (ord($inputitem['data'][$i * 3 + 1]) - ord('0')) * 10;
+                $val += (ord($inputitem['data'][$i * 3 + 2]) - ord('0'));
+                $inputitem['bstream'] = $this->appendNum($inputitem['bstream'], 10, $val);
+            }
+            if ($inputitem['size'] - $words * 3 == 1) {
+                $val = ord($inputitem['data'][$words * 3]) - ord('0');
+                $inputitem['bstream'] = $this->appendNum($inputitem['bstream'], 4, $val);
+            } elseif (($inputitem['size'] - ($words * 3)) == 2) {
+                $val = (ord($inputitem['data'][$words * 3]) - ord('0')) * 10;
+                $val += (ord($inputitem['data'][$words * 3 + 1]) - ord('0'));
+                $inputitem['bstream'] = $this->appendNum($inputitem['bstream'], 7, $val);
+            }
+
+            return $inputitem;
+        }
+
+        /**
+         * encodeModeAn.
+         *
+         * @param array $inputitem
+         * @param int $version
+         *
+         * @return array input item
+         */
+        protected function encodeModeAn($inputitem, $version)
+        {
+            $words = (int) ($inputitem['size'] / 2);
+            $inputitem['bstream'] = [];
+            $inputitem['bstream'] = $this->appendNum($inputitem['bstream'], 4, 0x02);
+            $inputitem['bstream'] = $this->appendNum(v, $this->lengthIndicator(QR_MODE_AN, $version), $inputitem['size']);
+            for ($i = 0; $i < $words; $i++) {
+                $val = (int) $this->lookAnTable(ord($inputitem['data'][$i * 2])) * 45;
+                $val += (int) $this->lookAnTable(ord($inputitem['data'][$i * 2 + 1]));
+                $inputitem['bstream'] = $this->appendNum($inputitem['bstream'], 11, $val);
+            }
+            if ($inputitem['size'] & 1) {
+                $val = $this->lookAnTable(ord($inputitem['data'][($words * 2)]));
+                $inputitem['bstream'] = $this->appendNum($inputitem['bstream'], 6, $val);
+            }
+
+            return $inputitem;
+        }
+
+        /**
+         * encodeMode8.
+         *
+         * @param array $inputitem
+         * @param int $version
+         *
+         * @return array input item
+         */
+        protected function encodeMode8($inputitem, $version)
+        {
+            $inputitem['bstream'] = [];
+            $inputitem['bstream'] = $this->appendNum($inputitem['bstream'], 4, 0x4);
+            $inputitem['bstream'] = $this->appendNum($inputitem['bstream'], $this->lengthIndicator(QR_MODE_8B, $version), $inputitem['size']);
+            for ($i = 0; $i < $inputitem['size']; $i++) {
+                $inputitem['bstream'] = $this->appendNum($inputitem['bstream'], 8, ord($inputitem['data'][$i]));
+            }
+
+            return $inputitem;
+        }
+
+        /**
+         * encodeModeKanji.
+         *
+         * @param array $inputitem
+         * @param int $version
+         *
+         * @return array input item
+         */
+        protected function encodeModeKanji($inputitem, $version)
+        {
+            $inputitem['bstream'] = [];
+            $inputitem['bstream'] = $this->appendNum($inputitem['bstream'], 4, 0x8);
+            $inputitem['bstream'] = $this->appendNum($inputitem['bstream'], $this->lengthIndicator(QR_MODE_KJ, $version), (int) ($inputitem['size'] / 2));
+            for ($i = 0; $i < $inputitem['size']; $i += 2) {
+                $val = (ord($inputitem['data'][$i]) << 8) | ord($inputitem['data'][$i + 1]);
+                if ($val <= 0x9ffc) {
+                    $val -= 0x8140;
+                } else {
+                    $val -= 0xc140;
+                }
+                $h = ($val >> 8) * 0xc0;
+                $val = ($val & 0xff) + $h;
+                $inputitem['bstream'] = $this->appendNum($inputitem['bstream'], 13, $val);
+            }
+
+            return $inputitem;
+        }
+
+        /**
+         * encodeModeStructure.
+         *
+         * @param array $inputitem
+         *
+         * @return array input item
+         */
+        protected function encodeModeStructure($inputitem)
+        {
+            $inputitem['bstream'] = [];
+            $inputitem['bstream'] = $this->appendNum($inputitem['bstream'], 4, 0x03);
+            $inputitem['bstream'] = $this->appendNum($inputitem['bstream'], 4, ord($inputitem['data'][1]) - 1);
+            $inputitem['bstream'] = $this->appendNum($inputitem['bstream'], 4, ord($inputitem['data'][0]) - 1);
+            $inputitem['bstream'] = $this->appendNum($inputitem['bstream'], 8, ord($inputitem['data'][2]));
+
+            return $inputitem;
+        }
+
+        /**
+         * encodeBitStream.
+         *
+         * @param array $inputitem
+         * @param int $version
+         *
+         * @return array input item
+         */
+        protected function encodeBitStream($inputitem, $version)
+        {
+            $inputitem['bstream'] = [];
+            $words = $this->maximumWords($inputitem['mode'], $version);
+            if ($inputitem['size'] > $words) {
+                $st1 = $this->newInputItem($inputitem['mode'], $words, $inputitem['data']);
+                $st2 = $this->newInputItem($inputitem['mode'], $inputitem['size'] - $words, array_slice($inputitem['data'], $words));
+                $st1 = $this->encodeBitStream($st1, $version);
+                $st2 = $this->encodeBitStream($st2, $version);
+                $inputitem['bstream'] = [];
+                $inputitem['bstream'] = $this->appendBitstream($inputitem['bstream'], $st1['bstream']);
+                $inputitem['bstream'] = $this->appendBitstream($inputitem['bstream'], $st2['bstream']);
+            } else {
+                switch ($inputitem['mode']) {
+                    case QR_MODE_NM: {
+                        $inputitem = $this->encodeModeNum($inputitem, $version);
+                        break;
+                    }
+                    case QR_MODE_AN: {
+                        $inputitem = $this->encodeModeAn($inputitem, $version);
+                        break;
+                    }
+                    case QR_MODE_8B: {
+                        $inputitem = $this->encodeMode8($inputitem, $version);
+                        break;
+                    }
+                    case QR_MODE_KJ: {
+                        $inputitem = $this->encodeModeKanji($inputitem, $version);
+                        break;
+                    }
+                    case QR_MODE_ST: {
+                        $inputitem = $this->encodeModeStructure($inputitem);
+                        break;
+                    }
+                    default: {
+                        break;
+                    }
+                }
+            }
+
+            return $inputitem;
+        }
+
+        // - - - - - - - - - - - - - - - - - - - - - - - - -
+
+        // QRinput
+
+        /**
+         * Append data to an input object.
+         * The data is copied and appended to the input object.
+         *
+         * @param array items input items
+         * @param int   $mode encoding mode.
+         * @param int   $size size of data (byte).
+         * @param array $data array of input data.
+         *
+         * @return items
+         */
+        protected function appendNewInputItem($items, $mode, $size, $data)
+        {
+            $items[] = $this->newInputItem($mode, $size, $data);
+
+            return $items;
+        }
+
+        /**
+         * insertStructuredAppendHeader.
+         *
+         * @param array $items
+         * @param int $size
+         * @param int $index
+         * @param int $parity
+         *
+         * @return array items
+         */
+        protected function insertStructuredAppendHeader($items, $size, $index, $parity)
+        {
+            if ($size > MAX_STRUCTURED_SYMBOLS) {
+                return -1;
+            }
+            if (($index <= 0) or ($index > MAX_STRUCTURED_SYMBOLS)) {
+                return -1;
+            }
+            $buf = [$size, $index, $parity];
+            $entry = $this->newInputItem(QR_MODE_ST, 3, buf);
+            array_unshift($items, $entry);
+
+            return $items;
+        }
+
+        /**
+         * calcParity.
+         *
+         * @param array $items
+         *
+         * @return int parity
+         */
+        protected function calcParity($items)
+        {
+            $parity = 0;
+            foreach ($items as $item) {
+                if ($item['mode'] != QR_MODE_ST) {
+                    for ($i = $item['size'] - 1; $i >= 0; $i--) {
+                        $parity ^= $item['data'][$i];
+                    }
+                }
+            }
+
+            return $parity;
+        }
+
+        /**
+         * checkModeNum.
+         *
+         * @param int $size
+         * @param array $data
+         *
+         * @return bool true or false
+         */
+        protected function checkModeNum($size, $data)
+        {
+            for ($i = 0; $i < $size; $i++) {
+                if ((ord($data[$i]) < ord('0')) or (ord($data[$i]) > ord('9'))) {
+                    return false;
+                }
+            }
+
+            return true;
+        }
+
+        /**
+         * estimateBitsModeNum.
+         *
+         * @param int $size
+         *
+         * @return int number of bits
+         */
+        protected function estimateBitsModeNum($size)
+        {
+            $w = (int) $size / 3;
+            $bits = $w * 10;
+            switch ($size - $w * 3) {
+                case 1: {
+                    $bits += 4;
+                    break;
+                }
+                case 2: {
+                    $bits += 7;
+                    break;
+                }
+                default: {
+                    break;
+                }
+            }
+
+            return $bits;
+        }
+
+        /**
+         * Look up the alphabet-numeric convesion table (see JIS X0510:2004, pp.19).
+         *
+         * @param int $c character value
+         *
+         * @return value
+         */
+        protected function lookAnTable($c)
+        {
+            return ($c > 127) ? -1 : $this->anTable[$c];
+        }
+
+        /**
+         * checkModeAn.
+         *
+         * @param int $size
+         * @param array $data
+         *
+         * @return bool true or false
+         */
+        protected function checkModeAn($size, $data)
+        {
+            for ($i = 0; $i < $size; $i++) {
+                if ($this->lookAnTable(ord($data[$i])) == -1) {
+                    return false;
+                }
+            }
+
+            return true;
+        }
+
+        /**
+         * estimateBitsModeAn.
+         *
+         * @param int $size
+         *
+         * @return int number of bits
+         */
+        protected function estimateBitsModeAn($size)
+        {
+            $w = (int) ($size / 2);
+            $bits = $w * 11;
+            if ($size & 1) {
+                $bits += 6;
+            }
+
+            return $bits;
+        }
+
+        /**
+         * estimateBitsMode8.
+         *
+         * @param int $size
+         *
+         * @return int number of bits
+         */
+        protected function estimateBitsMode8($size)
+        {
+            return $size * 8;
+        }
+
+        /**
+         * estimateBitsModeKanji.
+         *
+         * @param int $size
+         *
+         * @return int number of bits
+         */
+        protected function estimateBitsModeKanji($size)
+        {
+            return (int) (($size / 2) * 13);
+        }
+
+        /**
+         * checkModeKanji.
+         *
+         * @param int $size
+         * @param array $data
+         *
+         * @return bool true or false
+         */
+        protected function checkModeKanji($size, $data)
+        {
+            if ($size & 1) {
+                return false;
+            }
+            for ($i = 0; $i < $size; $i += 2) {
+                $val = (ord($data[$i]) << 8) | ord($data[$i + 1]);
+                if (($val < 0x8140) or (($val > 0x9ffc) and ($val < 0xe040)) or ($val > 0xebbf)) {
+                    return false;
+                }
+            }
+
+            return true;
+        }
+
+        /**
+         * Validate the input data.
+         *
+         * @param int $mode encoding mode.
+         * @param int $size size of data (byte).
+         * @param array data data to validate
+         *
+         * @return bool true in case of valid data, false otherwise
+         */
+        protected function check($mode, $size, $data)
+        {
+            if ($size <= 0) {
+                return false;
+            }
+            switch ($mode) {
+                case QR_MODE_NM: {
+                    return $this->checkModeNum($size, $data);
+                }
+                case QR_MODE_AN: {
+                    return $this->checkModeAn($size, $data);
+                }
+                case QR_MODE_KJ: {
+                    return $this->checkModeKanji($size, $data);
+                }
+                case QR_MODE_8B: {
+                    return true;
+                }
+                case QR_MODE_ST: {
+                    return true;
+                }
+                default: {
+                    break;
+                }
+            }
+
+            return false;
+        }
+
+        /**
+         * estimateBitStreamSize.
+         *
+         * @param array $items
+         * @param int $version
+         *
+         * @return int bits
+         */
+        protected function estimateBitStreamSize($items, $version)
+        {
+            $bits = 0;
+            if ($version == 0) {
+                $version = 1;
+            }
+            foreach ($items as $item) {
+                switch ($item['mode']) {
+                    case QR_MODE_NM: {
+                        $bits = $this->estimateBitsModeNum($item['size']);
+                        break;
+                    }
+                    case QR_MODE_AN: {
+                        $bits = $this->estimateBitsModeAn($item['size']);
+                        break;
+                    }
+                    case QR_MODE_8B: {
+                        $bits = $this->estimateBitsMode8($item['size']);
+                        break;
+                    }
+                    case QR_MODE_KJ: {
+                        $bits = $this->estimateBitsModeKanji($item['size']);
+                        break;
+                    }
+                    case QR_MODE_ST: {
+                        return STRUCTURE_HEADER_BITS;
+                    }
+                    default: {
+                        return 0;
+                    }
+                }
+                $l = $this->lengthIndicator($item['mode'], $version);
+                $m = 1 << $l;
+                $num = (int) (($item['size'] + $m - 1) / $m);
+                $bits += $num * (4 + $l);
+            }
+
+            return $bits;
+        }
+
+        /**
+         * estimateVersion.
+         *
+         * @param array $items
+         *
+         * @return int version
+         */
+        protected function estimateVersion($items)
+        {
+            $version = 0;
+            $prev = 0;
+            do {
+                $prev = $version;
+                $bits = $this->estimateBitStreamSize($items, $prev);
+                $version = $this->getMinimumVersion((int) (($bits + 7) / 8), $this->level);
+                if ($version < 0) {
+                    return -1;
+                }
+            } while ($version > $prev);
+
+            return $version;
+        }
+
+        /**
+         * lengthOfCode.
+         *
+         * @param int $mode
+         * @param int $version
+         * @param int $bits
+         *
+         * @return int size
+         */
+        protected function lengthOfCode($mode, $version, $bits)
+        {
+            $payload = $bits - 4 - $this->lengthIndicator($mode, $version);
+            switch ($mode) {
+                case QR_MODE_NM: {
+                    $chunks = (int) ($payload / 10);
+                    $remain = $payload - $chunks * 10;
+                    $size = $chunks * 3;
+                    if ($remain >= 7) {
+                        $size += 2;
+                    } elseif ($remain >= 4) {
+                        $size += 1;
+                    }
+                    break;
+                }
+                case QR_MODE_AN: {
+                    $chunks = (int) ($payload / 11);
+                    $remain = $payload - $chunks * 11;
+                    $size = $chunks * 2;
+                    if ($remain >= 6) {
+                        $size++;
+                    }
+                    break;
+                }
+                case QR_MODE_8B: {
+                    $size = (int) ($payload / 8);
+                    break;
+                }
+                case QR_MODE_KJ: {
+                    $size = (int) (($payload / 13) * 2);
+                    break;
+                }
+                case QR_MODE_ST: {
+                    $size = (int) ($payload / 8);
+                    break;
+                }
+                default: {
+                    $size = 0;
+                    break;
+                }
+            }
+            $maxsize = $this->maximumWords($mode, $version);
+            if ($size < 0) {
+                $size = 0;
+            }
+            if ($size > $maxsize) {
+                $size = $maxsize;
+            }
+
+            return $size;
+        }
+
+        /**
+         * createBitStream.
+         *
+         * @param array $items
+         *
+         * @return array of items and total bits
+         */
+        protected function createBitStream($items)
+        {
+            $total = 0;
+            foreach ($items as $key => $item) {
+                $items[$key] = $this->encodeBitStream($item, $this->version);
+                $bits = count($items[$key]['bstream']);
+                $total += $bits;
+            }
+
+            return [$items, $total];
+        }
+
+        /**
+         * convertData.
+         *
+         * @param array $items
+         *
+         * @return array items
+         */
+        protected function convertData($items)
+        {
+            $ver = $this->estimateVersion($items);
+            if ($ver > $this->version) {
+                $this->version = $ver;
+            }
+            for (; ;) {
+                $cbs = $this->createBitStream($items);
+                $items = $cbs[0];
+                $bits = $cbs[1];
+                if ($bits < 0) {
+                    return -1;
+                }
+                $ver = $this->getMinimumVersion((int) (($bits + 7) / 8), $this->level);
+                if ($ver < 0) {
+                    return -1;
+                } elseif ($ver > $this->version) {
+                    $this->version = $ver;
+                } else {
+                    break;
+                }
+            }
+
+            return $items;
+        }
+
+        /**
+         * Append Padding Bit to bitstream.
+         *
+         * @param array $bstream
+         *
+         * @return array bitstream
+         */
+        protected function appendPaddingBit($bstream)
+        {
+            $bits = count($bstream);
+            $maxwords = $this->getDataLength($this->version, $this->level);
+            $maxbits = $maxwords * 8;
+            if ($maxbits == $bits) {
+                return 0;
+            }
+            if ($maxbits - $bits < 5) {
+                return $this->appendNum($bstream, $maxbits - $bits, 0);
+            }
+            $bits += 4;
+            $words = (int) (($bits + 7) / 8);
+            $padding = [];
+            $padding = $this->appendNum($padding, $words * 8 - $bits + 4, 0);
+            $padlen = $maxwords - $words;
+            if ($padlen > 0) {
+                $padbuf = [];
+                for ($i = 0; $i < $padlen; $i++) {
+                    $padbuf[$i] = ($i & 1) ? 0x11 : 0xec;
+                }
+                $padding = $this->appendBytes($padding, $padlen, $padbuf);
+            }
+
+            return $this->appendBitstream($bstream, $padding);
+        }
+
+        /**
+         * mergeBitStream.
+         *
+         * @param array $bstream
+         *
+         * @return array bitstream
+         */
+        protected function mergeBitStream($items)
+        {
+            $items = $this->convertData($items);
+            $bstream = [];
+            foreach ($items as $item) {
+                $bstream = $this->appendBitstream($bstream, $item['bstream']);
+            }
+
+            return $bstream;
+        }
+
+        /**
+         * Returns a stream of bits.
+         *
+         * @param int $items
+         *
+         * @return array padded merged byte stream
+         */
+        protected function getBitStream($items)
+        {
+            $bstream = $this->mergeBitStream($items);
+
+            return $this->appendPaddingBit($bstream);
+        }
+
+        /**
+         * Pack all bit streams padding bits into a byte array.
+         *
+         * @param int $items
+         *
+         * @return array padded merged byte stream
+         */
+        protected function getByteStream($items)
+        {
+            $bstream = $this->getBitStream($items);
+
+            return $this->bitstreamToByte($bstream);
+        }
+
+        // - - - - - - - - - - - - - - - - - - - - - - - - -
+
+        // QRbitstream
+
+        /**
+         * Return an array with zeros.
+         *
+         * @param int $setLength array size
+         *
+         * @return array
+         */
+        protected function allocate($setLength)
+        {
+            return array_fill(0, $setLength, 0);
+        }
+
+        /**
+         * Return new bitstream from number.
+         *
+         * @param int $bits number of bits
+         * @param int $num number
+         *
+         * @return array bitstream
+         */
+        protected function newFromNum($bits, $num)
+        {
+            $bstream = $this->allocate($bits);
+            $mask = 1 << ($bits - 1);
+            for ($i = 0; $i < $bits; $i++) {
+                if ($num & $mask) {
+                    $bstream[$i] = 1;
+                } else {
+                    $bstream[$i] = 0;
+                }
+                $mask = $mask >> 1;
+            }
+
+            return $bstream;
+        }
+
+        /**
+         * Return new bitstream from bytes.
+         *
+         * @param int $size size
+         * @param array $data bytes
+         *
+         * @return array bitstream
+         */
+        protected function newFromBytes($size, $data)
+        {
+            $bstream = $this->allocate($size * 8);
+            $p = 0;
+            for ($i = 0; $i < $size; $i++) {
+                $mask = 0x80;
+                for ($j = 0; $j < 8; $j++) {
+                    if ($data[$i] & $mask) {
+                        $bstream[$p] = 1;
+                    } else {
+                        $bstream[$p] = 0;
+                    }
+                    $p++;
+                    $mask = $mask >> 1;
+                }
+            }
+
+            return $bstream;
+        }
+
+        /**
+         * Append one bitstream to another.
+         *
+         * @param array $bitstream original bitstream
+         * @param array $append bitstream to append
+         *
+         * @return array bitstream
+         */
+        protected function appendBitstream($bitstream, $append)
+        {
+            if ((!is_array($append)) or (count($append) == 0)) {
+                return $bitstream;
+            }
+            if (count($bitstream) == 0) {
+                return $append;
+            }
+
+            return array_values(array_merge($bitstream, $append));
+        }
+
+        /**
+         * Append one bitstream created from number to another.
+         *
+         * @param array $bitstream original bitstream
+         * @param int $bits number of bits
+         * @param int $num number
+         *
+         * @return array bitstream
+         */
+        protected function appendNum($bitstream, $bits, $num)
+        {
+            if ($bits == 0) {
+                return 0;
+            }
+            $b = $this->newFromNum($bits, $num);
+
+            return $this->appendBitstream($bitstream, $b);
+        }
+
+        /**
+         * Append one bitstream created from bytes to another.
+         *
+         * @param array $bitstream original bitstream
+         * @param int $size size
+         * @param array $data bytes
+         *
+         * @return array bitstream
+         */
+        protected function appendBytes($bitstream, $size, $data)
+        {
+            if ($size == 0) {
+                return 0;
+            }
+            $b = $this->newFromBytes($size, $data);
+
+            return $this->appendBitstream($bitstream, $b);
+        }
+
+        /**
+         * Convert bitstream to bytes.
+         *
+         * @param array $bitstream original bitstream
+         *
+         * @return array of bytes
+         */
+        protected function bitstreamToByte($bstream)
+        {
+            $size = count($bstream);
+            if ($size == 0) {
+                return [];
+            }
+            $data = array_fill(0, (int) (($size + 7) / 8), 0);
+            $bytes = (int) ($size / 8);
+            $p = 0;
+            for ($i = 0; $i < $bytes; $i++) {
+                $v = 0;
+                for ($j = 0; $j < 8; $j++) {
+                    $v = $v << 1;
+                    $v |= $bstream[$p];
+                    $p++;
+                }
+                $data[$i] = $v;
+            }
+            if ($size & 7) {
+                $v = 0;
+                for ($j = 0; $j < ($size & 7); $j++) {
+                    $v = $v << 1;
+                    $v |= $bstream[$p];
+                    $p++;
+                }
+                $data[$bytes] = $v;
+            }
+
+            return $data;
+        }
+
+        // - - - - - - - - - - - - - - - - - - - - - - - - -
+
+        // QRspec
+
+        /**
+         * Replace a value on the array at the specified position.
+         *
+         * @param array $srctab
+         * @param int $x X position
+         * @param int $y Y position
+         * @param string $repl value to replace
+         * @param int $replLen length of the repl string
+         *
+         * @return array srctab
+         */
+        protected function qrstrset($srctab, $x, $y, $repl, $replLen = false)
+        {
+            $srctab[$y] = substr_replace($srctab[$y], ($replLen !== false) ? substr($repl, 0, $replLen) : $repl, $x, ($replLen !== false) ? $replLen : strlen($repl));
+
+            return $srctab;
+        }
+
+        /**
+         * Return maximum data code length (bytes) for the version.
+         *
+         * @param int $version version
+         * @param int $level   error correction level
+         *
+         * @return int maximum size (bytes)
+         */
+        protected function getDataLength($version, $level)
+        {
+            return $this->capacity[$version][QRCAP_WORDS] - $this->capacity[$version][QRCAP_EC][$level];
+        }
+
+        /**
+         * Return maximum error correction code length (bytes) for the version.
+         *
+         * @param int $version version
+         * @param int $level   error correction level
+         *
+         * @return int ECC size (bytes)
+         */
+        protected function getECCLength($version, $level)
+        {
+            return $this->capacity[$version][QRCAP_EC][$level];
+        }
+
+        /**
+         * Return the width of the symbol for the version.
+         *
+         * @param int $version version
+         *
+         * @return int width
+         */
+        protected function getWidth($version)
+        {
+            return $this->capacity[$version][QRCAP_WIDTH];
+        }
+
+        /**
+         * Return the numer of remainder bits.
+         *
+         * @param int $version version
+         *
+         * @return int number of remainder bits
+         */
+        protected function getRemainder($version)
+        {
+            return $this->capacity[$version][QRCAP_REMINDER];
+        }
+
+        /**
+         * Return a version number that satisfies the input code length.
+         *
+         * @param int $size  input code length (byte)
+         * @param int $level error correction level
+         *
+         * @return int version number
+         */
+        protected function getMinimumVersion($size, $level)
+        {
+            for ($i = 1; $i <= QRSPEC_VERSION_MAX; $i++) {
+                $words = $this->capacity[$i][QRCAP_WORDS] - $this->capacity[$i][QRCAP_EC][$level];
+                if ($words >= $size) {
+                    return $i;
+                }
+            }
+
+            return -1;
+        }
+
+        /**
+         * Return the size of length indicator for the mode and version.
+         *
+         * @param int $mode    encoding mode
+         * @param int $version version
+         *
+         * @return int the size of the appropriate length indicator (bits).
+         */
+        protected function lengthIndicator($mode, $version)
+        {
+            if ($mode == QR_MODE_ST) {
+                return 0;
+            }
+            if ($version <= 9) {
+                $l = 0;
+            } elseif ($version <= 26) {
+                $l = 1;
+            } else {
+                $l = 2;
+            }
+
+            return $this->lengthTableBits[$mode][$l];
+        }
+
+        /**
+         * Return the maximum length for the mode and version.
+         *
+         * @param int $mode    encoding mode
+         * @param int $version version
+         *
+         * @return int the maximum length (bytes)
+         */
+        protected function maximumWords($mode, $version)
+        {
+            if ($mode == QR_MODE_ST) {
+                return 3;
+            }
+            if ($version <= 9) {
+                $l = 0;
+            } elseif ($version <= 26) {
+                $l = 1;
+            } else {
+                $l = 2;
+            }
+            $bits = $this->lengthTableBits[$mode][$l];
+            $words = (1 << $bits) - 1;
+            if ($mode == QR_MODE_KJ) {
+                $words *= 2; // the number of bytes is required
+            }
+
+            return $words;
+        }
+
+        /**
+         * Return an array of ECC specification.
+         *
+         * @param int   $version version
+         * @param int   $level   error correction level
+         * @param array $spec    an array of ECC specification contains as following: {# of type1 blocks, # of data code, # of ecc code, # of type2 blocks, # of data code}
+         *
+         * @return array spec
+         */
+        protected function getEccSpec($version, $level, $spec)
+        {
+            if (count($spec) < 5) {
+                $spec = [0, 0, 0, 0, 0];
+            }
+            $b1 = $this->eccTable[$version][$level][0];
+            $b2 = $this->eccTable[$version][$level][1];
+            $data = $this->getDataLength($version, $level);
+            $ecc = $this->getECCLength($version, $level);
+            if ($b2 == 0) {
+                $spec[0] = $b1;
+                $spec[1] = (int) ($data / $b1);
+                $spec[2] = (int) ($ecc / $b1);
+                $spec[3] = 0;
+                $spec[4] = 0;
+            } else {
+                $spec[0] = $b1;
+                $spec[1] = (int) ($data / ($b1 + $b2));
+                $spec[2] = (int) ($ecc / ($b1 + $b2));
+                $spec[3] = $b2;
+                $spec[4] = $spec[1] + 1;
+            }
+
+            return $spec;
+        }
+
+        /**
+         * Put an alignment marker.
+         *
+         * @param array $frame frame
+         * @param int   $width width
+         * @param int   $ox    X center coordinate of the pattern
+         * @param int   $oy    Y center coordinate of the pattern
+         *
+         * @return array frame
+         */
+        protected function putAlignmentMarker($frame, $ox, $oy)
+        {
+            $finder = [
+                "\xa1\xa1\xa1\xa1\xa1",
+                "\xa1\xa0\xa0\xa0\xa1",
+                "\xa1\xa0\xa1\xa0\xa1",
+                "\xa1\xa0\xa0\xa0\xa1",
+                "\xa1\xa1\xa1\xa1\xa1",
+                ];
+            $yStart = $oy - 2;
+            $xStart = $ox - 2;
+            for ($y = 0; $y < 5; $y++) {
+                $frame = $this->qrstrset($frame, $xStart, $yStart + $y, $finder[$y]);
+            }
+
+            return $frame;
+        }
+
+        /**
+         * Put an alignment pattern.
+         *
+         * @param int $version version
+         * @param array $fram frame
+         * @param int $width width
+         *
+         * @return array frame
+         */
+        protected function putAlignmentPattern($version, $frame, $width)
+        {
+            if ($version < 2) {
+                return $frame;
+            }
+            $d = $this->alignmentPattern[$version][1] - $this->alignmentPattern[$version][0];
+            if ($d < 0) {
+                $w = 2;
+            } else {
+                $w = (int) (($width - $this->alignmentPattern[$version][0]) / $d + 2);
+            }
+            if ($w * $w - 3 == 1) {
+                $x = $this->alignmentPattern[$version][0];
+                $y = $this->alignmentPattern[$version][0];
+                $frame = $this->putAlignmentMarker($frame, $x, $y);
+
+                return $frame;
+            }
+            $cx = $this->alignmentPattern[$version][0];
+            $wo = $w - 1;
+            for ($x = 1; $x < $wo; $x++) {
+                $frame = $this->putAlignmentMarker($frame, 6, $cx);
+                $frame = $this->putAlignmentMarker($frame, $cx, 6);
+                $cx += $d;
+            }
+            $cy = $this->alignmentPattern[$version][0];
+            for ($y = 0; $y < $wo; $y++) {
+                $cx = $this->alignmentPattern[$version][0];
+                for ($x = 0; $x < $wo; $x++) {
+                    $frame = $this->putAlignmentMarker($frame, $cx, $cy);
+                    $cx += $d;
+                }
+                $cy += $d;
+            }
+
+            return $frame;
+        }
+
+        /**
+         * Return BCH encoded version information pattern that is used for the symbol of version 7 or greater. Use lower 18 bits.
+         *
+         * @param int $version version
+         *
+         * @return BCH encoded version information pattern
+         */
+        protected function getVersionPattern($version)
+        {
+            if (($version < 7) or ($version > QRSPEC_VERSION_MAX)) {
+                return 0;
+            }
+
+            return $this->versionPattern[($version - 7)];
+        }
+
+        /**
+         * Return BCH encoded format information pattern.
+         *
+         * @param array $mask
+         * @param int   $level error correction level
+         *
+         * @return BCH encoded format information pattern
+         */
+        protected function getFormatInfo($mask, $level)
+        {
+            if (($mask < 0) or ($mask > 7)) {
+                return 0;
+            }
+            if (($level < 0) or ($level > 3)) {
+                return 0;
+            }
+
+            return $this->formatInfo[$level][$mask];
+        }
+
+        /**
+         * Put a finder pattern.
+         *
+         * @param array $frame frame
+         * @param int   $width width
+         * @param int   $ox    X center coordinate of the pattern
+         * @param int   $oy    Y center coordinate of the pattern
+         *
+         * @return array frame
+         */
+        protected function putFinderPattern($frame, $ox, $oy)
+        {
+            $finder = [
+            "\xc1\xc1\xc1\xc1\xc1\xc1\xc1",
+            "\xc1\xc0\xc0\xc0\xc0\xc0\xc1",
+            "\xc1\xc0\xc1\xc1\xc1\xc0\xc1",
+            "\xc1\xc0\xc1\xc1\xc1\xc0\xc1",
+            "\xc1\xc0\xc1\xc1\xc1\xc0\xc1",
+            "\xc1\xc0\xc0\xc0\xc0\xc0\xc1",
+            "\xc1\xc1\xc1\xc1\xc1\xc1\xc1",
+            ];
+            for ($y = 0; $y < 7; $y++) {
+                $frame = $this->qrstrset($frame, $ox, ($oy + $y), $finder[$y]);
+            }
+
+            return $frame;
+        }
+
+        /**
+         * Return a copy of initialized frame.
+         *
+         * @param int $version version
+         *
+         * @return array of unsigned char.
+         */
+        protected function createFrame($version)
+        {
+            $width = $this->capacity[$version][QRCAP_WIDTH];
+            $frameLine = str_repeat("\0", $width);
+            $frame = array_fill(0, $width, $frameLine);
+            // Finder pattern
+            $frame = $this->putFinderPattern($frame, 0, 0);
+            $frame = $this->putFinderPattern($frame, $width - 7, 0);
+            $frame = $this->putFinderPattern($frame, 0, $width - 7);
+            // Separator
+            $yOffset = $width - 7;
+            for ($y = 0; $y < 7; $y++) {
+                $frame[$y][7] = "\xc0";
+                $frame[$y][$width - 8] = "\xc0";
+                $frame[$yOffset][7] = "\xc0";
+                $yOffset++;
+            }
+            $setPattern = str_repeat("\xc0", 8);
+            $frame = $this->qrstrset($frame, 0, 7, $setPattern);
+            $frame = $this->qrstrset($frame, $width - 8, 7, $setPattern);
+            $frame = $this->qrstrset($frame, 0, $width - 8, $setPattern);
+            // Format info
+            $setPattern = str_repeat("\x84", 9);
+            $frame = $this->qrstrset($frame, 0, 8, $setPattern);
+            $frame = $this->qrstrset($frame, $width - 8, 8, $setPattern, 8);
+            $yOffset = $width - 8;
+            for ($y = 0; $y < 8; ++$y,++$yOffset) {
+                $frame[$y][8] = "\x84";
+                $frame[$yOffset][8] = "\x84";
+            }
+            // Timing pattern
+            $wo = $width - 15;
+            for ($i = 1; $i < $wo; $i++) {
+                $frame[6][7 + $i] = chr(0x90 | ($i & 1));
+                $frame[7 + $i][6] = chr(0x90 | ($i & 1));
+            }
+            // Alignment pattern
+            $frame = $this->putAlignmentPattern($version, $frame, $width);
+            // Version information
+            if ($version >= 7) {
+                $vinf = $this->getVersionPattern($version);
+                $v = $vinf;
+                for ($x = 0; $x < 6; $x++) {
+                    for ($y = 0; $y < 3; $y++) {
+                        $frame[($width - 11) + $y][$x] = chr(0x88 | ($v & 1));
+                        $v = $v >> 1;
+                    }
+                }
+                $v = $vinf;
+                for ($y = 0; $y < 6; $y++) {
+                    for ($x = 0; $x < 3; $x++) {
+                        $frame[$y][$x + ($width - 11)] = chr(0x88 | ($v & 1));
+                        $v = $v >> 1;
+                    }
+                }
+            }
+            // and a little bit...
+            $frame[$width - 8][8] = "\x81";
+
+            return $frame;
+        }
+
+        /**
+         * Set new frame for the specified version.
+         *
+         * @param int $version version
+         *
+         * @return array of unsigned char.
+         */
+        protected function newFrame($version)
+        {
+            if (($version < 1) or ($version > QRSPEC_VERSION_MAX)) {
+                return;
+            }
+            if (!isset($this->frames[$version])) {
+                $this->frames[$version] = $this->createFrame($version);
+            }
+            if (is_null($this->frames[$version])) {
+                return;
+            }
+
+            return $this->frames[$version];
+        }
+
+        /**
+         * Return block number 0.
+         *
+         * @param array $spec
+         *
+         * @return int value
+         */
+        protected function rsBlockNum($spec)
+        {
+            return $spec[0] + $spec[3];
+        }
+
+        /**
+         * Return block number 1.
+         *
+         * @param array $spec
+         *
+         * @return int value
+         */
+        protected function rsBlockNum1($spec)
+        {
+            return $spec[0];
+        }
+
+        /**
+         * Return data codes 1.
+         *
+         * @param array $spec
+         *
+         * @return int value
+         */
+        protected function rsDataCodes1($spec)
+        {
+            return $spec[1];
+        }
+
+        /**
+         * Return ecc codes 1.
+         *
+         * @param array $spec
+         *
+         * @return int value
+         */
+        protected function rsEccCodes1($spec)
+        {
+            return $spec[2];
+        }
+
+        /**
+         * Return block number 2.
+         *
+         * @param array $spec
+         *
+         * @return int value
+         */
+        protected function rsBlockNum2($spec)
+        {
+            return $spec[3];
+        }
+
+        /**
+         * Return data codes 2.
+         *
+         * @param array $spec
+         *
+         * @return int value
+         */
+        protected function rsDataCodes2($spec)
+        {
+            return $spec[4];
+        }
+
+        /**
+         * Return ecc codes 2.
+         *
+         * @param array $spec
+         *
+         * @return int value
+         */
+        protected function rsEccCodes2($spec)
+        {
+            return $spec[2];
+        }
+
+        /**
+         * Return data length.
+         *
+         * @param array $spec
+         *
+         * @return int value
+         */
+        protected function rsDataLength($spec)
+        {
+            return ($spec[0] * $spec[1]) + ($spec[3] * $spec[4]);
+        }
+
+        /**
+         * Return ecc length.
+         *
+         * @param array $spec
+         *
+         * @return int value
+         */
+        protected function rsEccLength($spec)
+        {
+            return ($spec[0] + $spec[3]) * $spec[2];
+        }
+
+        // - - - - - - - - - - - - - - - - - - - - - - - - -
+
+        // QRrs
+
+        /**
+         * Initialize a Reed-Solomon codec and add it to existing rsitems.
+         *
+         * @param int $symsize symbol size, bits
+         * @param int $gfpoly  Field generator polynomial coefficients
+         * @param int $fcr  first root of RS code generator polynomial, index form
+         * @param int $prim  primitive element to generate polynomial roots
+         * @param int $nroots RS code generator polynomial degree (number of roots)
+         * @param int $pad  padding bytes at front of shortened block
+         *
+         * @return array Array of RS values:<ul><li>mm = Bits per symbol;</li><li>nn = Symbols per block;</li><li>alpha_to = log lookup table array;</li><li>index_of = Antilog lookup table array;</li><li>genpoly = Generator polynomial array;</li><li>nroots = Number of generator;</li><li>roots = number of parity symbols;</li><li>fcr = First consecutive root, index form;</li><li>prim = Primitive element, index form;</li><li>iprim = prim-th root of 1, index form;</li><li>pad = Padding bytes in shortened block;</li><li>gfpoly</ul>.
+         */
+        protected function init_rs($symsize, $gfpoly, $fcr, $prim, $nroots, $pad)
+        {
+            foreach ($this->rsitems as $rs) {
+                if (($rs['pad'] != $pad) or ($rs['nroots'] != $nroots) or ($rs['mm'] != $symsize)
+                    or ($rs['gfpoly'] != $gfpoly) or ($rs['fcr'] != $fcr) or ($rs['prim'] != $prim)) {
+                    continue;
+                }
+
+                return $rs;
+            }
+            $rs = $this->init_rs_char($symsize, $gfpoly, $fcr, $prim, $nroots, $pad);
+            array_unshift($this->rsitems, $rs);
+
+            return $rs;
+        }
+
+        // - - - - - - - - - - - - - - - - - - - - - - - - -
+
+        // QRrsItem
+
+        /**
+         * modnn.
+         *
+         * @param array RS values
+         * @param int $x X position
+         *
+         * @return int X osition
+         */
+        protected function modnn($rs, $x)
+        {
+            while ($x >= $rs['nn']) {
+                $x -= $rs['nn'];
+                $x = ($x >> $rs['mm']) + ($x & $rs['nn']);
+            }
+
+            return $x;
+        }
+
+        /**
+         * Initialize a Reed-Solomon codec and returns an array of values.
+         *
+         * @param int $symsize symbol size, bits
+         * @param int $gfpoly  Field generator polynomial coefficients
+         * @param int $fcr     first root of RS code generator polynomial, index form
+         * @param int $prim    primitive element to generate polynomial roots
+         * @param int $nroots  RS code generator polynomial degree (number of roots)
+         * @param int $pad     padding bytes at front of shortened block
+         *
+         * @return array Array of RS values:<ul><li>mm = Bits per symbol;</li><li>nn = Symbols per block;</li><li>alpha_to = log lookup table array;</li><li>index_of = Antilog lookup table array;</li><li>genpoly = Generator polynomial array;</li><li>nroots = Number of generator;</li><li>roots = number of parity symbols;</li><li>fcr = First consecutive root, index form;</li><li>prim = Primitive element, index form;</li><li>iprim = prim-th root of 1, index form;</li><li>pad = Padding bytes in shortened block;</li><li>gfpoly</ul>.
+         */
+        protected function init_rs_char($symsize, $gfpoly, $fcr, $prim, $nroots, $pad)
+        {
+            // Based on Reed solomon encoder by Phil Karn, KA9Q (GNU-LGPLv2)
+            $rs = null;
+            // Check parameter ranges
+            if (($symsize < 0) or ($symsize > 8)) {
+                return $rs;
+            }
+            if (($fcr < 0) or ($fcr >= (1 << $symsize))) {
+                return $rs;
+            }
+            if (($prim <= 0) or ($prim >= (1 << $symsize))) {
+                return $rs;
+            }
+            if (($nroots < 0) or ($nroots >= (1 << $symsize))) {
+                return $rs;
+            }
+            if (($pad < 0) or ($pad >= ((1 << $symsize) - 1 - $nroots))) {
+                return $rs;
+            }
+            $rs = [];
+            $rs['mm'] = $symsize;
+            $rs['nn'] = (1 << $symsize) - 1;
+            $rs['pad'] = $pad;
+            $rs['alpha_to'] = array_fill(0, ($rs['nn'] + 1), 0);
+            $rs['index_of'] = array_fill(0, ($rs['nn'] + 1), 0);
+            // PHP style macro replacement ;)
+            $NN = &$rs['nn'];
+            $A0 = &$NN;
+            // Generate Galois field lookup tables
+            $rs['index_of'][0] = $A0; // log(zero) = -inf
+            $rs['alpha_to'][$A0] = 0; // alpha**-inf = 0
+            $sr = 1;
+            for ($i = 0; $i < $rs['nn']; $i++) {
+                $rs['index_of'][$sr] = $i;
+                $rs['alpha_to'][$i] = $sr;
+                $sr <<= 1;
+                if ($sr & (1 << $symsize)) {
+                    $sr ^= $gfpoly;
+                }
+                $sr &= $rs['nn'];
+            }
+            if ($sr != 1) {
+                // field generator polynomial is not primitive!
+                return;
+            }
+            // Form RS code generator polynomial from its roots
+            $rs['genpoly'] = array_fill(0, ($nroots + 1), 0);
+            $rs['fcr'] = $fcr;
+            $rs['prim'] = $prim;
+            $rs['nroots'] = $nroots;
+            $rs['gfpoly'] = $gfpoly;
+            // Find prim-th root of 1, used in decoding
+            for ($iprim = 1; ($iprim % $prim) != 0; $iprim += $rs['nn']) {
+                // intentional empty-body loop!
+            }
+            $rs['iprim'] = (int) ($iprim / $prim);
+            $rs['genpoly'][0] = 1;
+
+            for ($i = 0,$root = $fcr * $prim; $i < $nroots; $i++, $root += $prim) {
+                $rs['genpoly'][$i + 1] = 1;
+                // Multiply rs->genpoly[] by  @**(root + x)
+                for ($j = $i; $j > 0; $j--) {
+                    if ($rs['genpoly'][$j] != 0) {
+                        $rs['genpoly'][$j] = $rs['genpoly'][$j - 1] ^ $rs['alpha_to'][$this->modnn($rs, $rs['index_of'][$rs['genpoly'][$j]] + $root)];
+                    } else {
+                        $rs['genpoly'][$j] = $rs['genpoly'][$j - 1];
+                    }
+                }
+                // rs->genpoly[0] can never be zero
+                $rs['genpoly'][0] = $rs['alpha_to'][$this->modnn($rs, $rs['index_of'][$rs['genpoly'][0]] + $root)];
+            }
+            // convert rs->genpoly[] to index form for quicker encoding
+            for ($i = 0; $i <= $nroots; $i++) {
+                $rs['genpoly'][$i] = $rs['index_of'][$rs['genpoly'][$i]];
+            }
+
+            return $rs;
+        }
+
+        /**
+         * Encode a Reed-Solomon codec and returns the parity array.
+         *
+         * @param array $rs RS values
+         * @param array $data data
+         * @param array $parity parity
+         *
+         * @return parity array
+         */
+        protected function encode_rs_char($rs, $data, $parity)
+        {
+            $MM = &$rs['mm']; // bits per symbol
+            $NN = &$rs['nn']; // the total number of symbols in a RS block
+            $ALPHA_TO = &$rs['alpha_to']; // the address of an array of NN elements to convert Galois field elements in index (log) form to polynomial form
+            $INDEX_OF = &$rs['index_of']; // the address of an array of NN elements to convert Galois field elements in polynomial form to index (log) form
+            $GENPOLY = &$rs['genpoly']; // an array of NROOTS+1 elements containing the generator polynomial in index form
+            $NROOTS = &$rs['nroots']; // the number of roots in the RS code generator polynomial, which is the same as the number of parity symbols in a block
+            $FCR = &$rs['fcr']; // first consecutive root, index form
+            $PRIM = &$rs['prim']; // primitive element, index form
+            $IPRIM = &$rs['iprim']; // prim-th root of 1, index form
+            $PAD = &$rs['pad']; // the number of pad symbols in a block
+            $A0 = &$NN;
+            $parity = array_fill(0, $NROOTS, 0);
+            for ($i = 0; $i < ($NN - $NROOTS - $PAD); $i++) {
+                $feedback = $INDEX_OF[$data[$i] ^ $parity[0]];
+                if ($feedback != $A0) {
+                    // feedback term is non-zero
+                    // This line is unnecessary when GENPOLY[NROOTS] is unity, as it must
+                    // always be for the polynomials constructed by init_rs()
+                    $feedback = $this->modnn($rs, $NN - $GENPOLY[$NROOTS] + $feedback);
+                    for ($j = 1; $j < $NROOTS; $j++) {
+                        $parity[$j] ^= $ALPHA_TO[$this->modnn($rs, $feedback + $GENPOLY[($NROOTS - $j)])];
+                    }
+                }
+                // Shift
+                array_shift($parity);
+                if ($feedback != $A0) {
+                    array_push($parity, $ALPHA_TO[$this->modnn($rs, $feedback + $GENPOLY[0])]);
+                } else {
+                    array_push($parity, 0);
+                }
+            }
+
+            return $parity;
+        }
+    } // end QRcode class
 } // END OF "class_exists QRcode"
-?>
diff --git a/config/qrcode/index.php b/config/qrcode/index.php
index 9e14b7eaade1624d009f59d17db5105087943eff..af442863d4ff147a7338eccd24b7aaffe208bd28 100755
--- a/config/qrcode/index.php
+++ b/config/qrcode/index.php
@@ -1,94 +1,94 @@
-<?php    
-/*
- * PHP QR Code encoder
- *
- * Exemplatory usage
- *
- * PHP QR Code is distributed under LGPL 3
- * Copyright (C) 2010 Dominik Dzienia <deltalab at poczta dot fm>
- *
- * This library is free software; you can redistribute it and/or
- * modify it under the terms of the GNU Lesser General Public
- * License as published by the Free Software Foundation; either
- * version 3 of the License, or any later version.
- *
- * This library is distributed in the hope that it will be useful,
- * but WITHOUT ANY WARRANTY; without even the implied warranty of
- * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
- * Lesser General Public License for more details.
- *
- * You should have received a copy of the GNU Lesser General Public
- * License along with this library; if not, write to the Free Software
- * Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA
- */
-    
-    echo "<h1>PHP QR Code</h1><hr/>";
-    
-    //set it to writable location, a place for temp generated PNG files
-    $PNG_TEMP_DIR = dirname(__FILE__).DIRECTORY_SEPARATOR.'temp'.DIRECTORY_SEPARATOR;
-    
-    //html PNG location prefix
-    $PNG_WEB_DIR = 'temp/';
-
-    include "qrlib.php";    
-    
-    //ofcourse we need rights to create temp dir
-    if (!file_exists($PNG_TEMP_DIR))
+<?php
+
+/*
+ * PHP QR Code encoder
+ *
+ * Exemplatory usage
+ *
+ * PHP QR Code is distributed under LGPL 3
+ * Copyright (C) 2010 Dominik Dzienia <deltalab at poczta dot fm>
+ *
+ * This library is free software; you can redistribute it and/or
+ * modify it under the terms of the GNU Lesser General Public
+ * License as published by the Free Software Foundation; either
+ * version 3 of the License, or any later version.
+ *
+ * This library is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
+ * Lesser General Public License for more details.
+ *
+ * You should have received a copy of the GNU Lesser General Public
+ * License along with this library; if not, write to the Free Software
+ * Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA
+ */
+
+    echo '<h1>PHP QR Code</h1><hr/>';
+
+    //set it to writable location, a place for temp generated PNG files
+    $PNG_TEMP_DIR = dirname(__FILE__).DIRECTORY_SEPARATOR.'temp'.DIRECTORY_SEPARATOR;
+
+    //html PNG location prefix
+    $PNG_WEB_DIR = 'temp/';
+
+    include 'qrlib.php';
+
+    //ofcourse we need rights to create temp dir
+    if (!file_exists($PNG_TEMP_DIR)) {
         mkdir($PNG_TEMP_DIR);
-    
-    
-    $filename = $PNG_TEMP_DIR.'test.png';
-    
-    //processing form input
-    //remember to sanitize user input in real-life solution !!!
-    $errorCorrectionLevel = 'L';
-    if (isset($_REQUEST['level']) && in_array($_REQUEST['level'], array('L','M','Q','H')))
-        $errorCorrectionLevel = $_REQUEST['level'];    
-
-    $matrixPointSize = 4;
-    if (isset($_REQUEST['size']))
-        $matrixPointSize = min(max((int)$_REQUEST['size'], 1), 10);
-
-
-    if (isset($_REQUEST['data'])) { 
-    
-        //it's very important!
-        if (trim($_REQUEST['data']) == '')
-            die('data cannot be empty! <a href="?">back</a>');
-            
-        // user data
+    }
+
+    $filename = $PNG_TEMP_DIR.'test.png';
+
+    //processing form input
+    //remember to sanitize user input in real-life solution !!!
+    $errorCorrectionLevel = 'L';
+    if (isset($_REQUEST['level']) && in_array($_REQUEST['level'], ['L', 'M', 'Q', 'H'])) {
+        $errorCorrectionLevel = $_REQUEST['level'];
+    }
+
+    $matrixPointSize = 4;
+    if (isset($_REQUEST['size'])) {
+        $matrixPointSize = min(max((int) $_REQUEST['size'], 1), 10);
+    }
+
+    if (isset($_REQUEST['data'])) {
+
+        //it's very important!
+        if (trim($_REQUEST['data']) == '') {
+            die('data cannot be empty! <a href="?">back</a>');
+        }
+
+        // user data
         $filename = $PNG_TEMP_DIR.'test'.md5($_REQUEST['data'].'|'.$errorCorrectionLevel.'|'.$matrixPointSize).'.png';
-        QRcode::png($_REQUEST['data'], $filename, $errorCorrectionLevel, $matrixPointSize, 2);    
-        
-    } else {    
-    
+        QRcode::png($_REQUEST['data'], $filename, $errorCorrectionLevel, $matrixPointSize, 2);
+    } else {
+
         //default data
-        echo 'You can provide data in GET parameter: <a href="?data=like_that">like that</a><hr/>';    
-        QRcode::png('PHP QR Code :)', $filename, $errorCorrectionLevel, $matrixPointSize, 2);    
-        
-    }    
-        
+        echo 'You can provide data in GET parameter: <a href="?data=like_that">like that</a><hr/>';
+        QRcode::png('PHP QR Code :)', $filename, $errorCorrectionLevel, $matrixPointSize, 2);
+    }
+
     //display generated file
-    echo '<img src="'.$PNG_WEB_DIR.basename($filename).'" /><hr/>';  
-    
-    //config form
+    echo '<img src="'.$PNG_WEB_DIR.basename($filename).'" /><hr/>';
+
+    //config form
     echo '<form action="index.php" method="post">
-        Data:&nbsp;<input name="data" value="'.(isset($_REQUEST['data'])?htmlspecialchars($_REQUEST['data']):'PHP QR Code :)').'" />&nbsp;
+        Data:&nbsp;<input name="data" value="'.(isset($_REQUEST['data']) ? htmlspecialchars($_REQUEST['data']) : 'PHP QR Code :)').'" />&nbsp;
         ECC:&nbsp;<select name="level">
-            <option value="L"'.(($errorCorrectionLevel=='L')?' selected':'').'>L - smallest</option>
-            <option value="M"'.(($errorCorrectionLevel=='M')?' selected':'').'>M</option>
-            <option value="Q"'.(($errorCorrectionLevel=='Q')?' selected':'').'>Q</option>
-            <option value="H"'.(($errorCorrectionLevel=='H')?' selected':'').'>H - best</option>
+            <option value="L"'.(($errorCorrectionLevel == 'L') ? ' selected' : '').'>L - smallest</option>
+            <option value="M"'.(($errorCorrectionLevel == 'M') ? ' selected' : '').'>M</option>
+            <option value="Q"'.(($errorCorrectionLevel == 'Q') ? ' selected' : '').'>Q</option>
+            <option value="H"'.(($errorCorrectionLevel == 'H') ? ' selected' : '').'>H - best</option>
         </select>&nbsp;
-        Size:&nbsp;<select name="size">';
-        
-    for($i=1;$i<=10;$i++)
-        echo '<option value="'.$i.'"'.(($matrixPointSize==$i)?' selected':'').'>'.$i.'</option>';
-        
+        Size:&nbsp;<select name="size">';
+
+    for ($i = 1; $i <= 10; $i++) {
+        echo '<option value="'.$i.'"'.(($matrixPointSize == $i) ? ' selected' : '').'>'.$i.'</option>';
+    }
+
     echo '</select>&nbsp;
-        <input type="submit" value="GENERATE"></form><hr/>';
-        
-    // benchmark
-    QRtools::timeBenchmark();    
+        <input type="submit" value="GENERATE"></form><hr/>';
 
-    
\ No newline at end of file
+    // benchmark
+    QRtools::timeBenchmark();
diff --git a/config/qrcode/phpqrcode.php b/config/qrcode/phpqrcode.php
index b4dfdbed23d102c4ad812f24d8ce9cf95d64750a..69335fffc9360f3c7c5d05fe5ad68fce2b457a0e 100755
--- a/config/qrcode/phpqrcode.php
+++ b/config/qrcode/phpqrcode.php
@@ -1,137 +1,120 @@
-<?php
-
-/*
- * PHP QR Code encoder
- *
- * This file contains MERGED version of PHP QR Code library.
- * It was auto-generated from full version for your convenience.
- *
- * This merged version was configured to not require any external files,
- * with disabled cache, error logging and weaker but faster mask matching.
- * If you need tune it up please use non-merged version.
- *
- * For full version, documentation, examples of use please visit:
- *
- *    http://phpqrcode.sourceforge.net/
- *    https://sourceforge.net/projects/phpqrcode/
- *    https://github.com/t0k4rt/phpqrcode
- *
- * PHP QR Code is distributed under LGPL 3
- * Copyright (C) 2010 Dominik Dzienia <deltalab at poczta dot fm>
- *
- * This library is free software; you can redistribute it and/or
- * modify it under the terms of the GNU Lesser General Public
- * License as published by the Free Software Foundation; either
- * version 3 of the License, or any later version.
- *
- * This library is distributed in the hope that it will be useful,
- * but WITHOUT ANY WARRANTY; without even the implied warranty of
- * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
- * Lesser General Public License for more details.
- *
- * You should have received a copy of the GNU Lesser General Public
- * License along with this library; if not, write to the Free Software
- * Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA
- */
- 
- 
+<?php
+
+/*
+ * PHP QR Code encoder
+ *
+ * This file contains MERGED version of PHP QR Code library.
+ * It was auto-generated from full version for your convenience.
+ *
+ * This merged version was configured to not require any external files,
+ * with disabled cache, error logging and weaker but faster mask matching.
+ * If you need tune it up please use non-merged version.
+ *
+ * For full version, documentation, examples of use please visit:
+ *
+ *    http://phpqrcode.sourceforge.net/
+ *    https://sourceforge.net/projects/phpqrcode/
+ *    https://github.com/t0k4rt/phpqrcode
+ *
+ * PHP QR Code is distributed under LGPL 3
+ * Copyright (C) 2010 Dominik Dzienia <deltalab at poczta dot fm>
+ *
+ * This library is free software; you can redistribute it and/or
+ * modify it under the terms of the GNU Lesser General Public
+ * License as published by the Free Software Foundation; either
+ * version 3 of the License, or any later version.
+ *
+ * This library is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
+ * Lesser General Public License for more details.
+ *
+ * You should have received a copy of the GNU Lesser General Public
+ * License along with this library; if not, write to the Free Software
+ * Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA
+ */
 
 /*
  * Version: 1.1.4
  * Build: 2010100721
  */
 
-
-
 //---- qrconst.php -----------------------------
 
+/*
+ * PHP QR Code encoder
+ *
+ * Common constants
+ *
+ * Based on libqrencode C library distributed under LGPL 2.1
+ * Copyright (C) 2006, 2007, 2008, 2009 Kentaro Fukuchi <fukuchi@megaui.net>
+ *
+ * PHP QR Code is distributed under LGPL 3
+ * Copyright (C) 2010 Dominik Dzienia <deltalab at poczta dot fm>
+ *
+ * This library is free software; you can redistribute it and/or
+ * modify it under the terms of the GNU Lesser General Public
+ * License as published by the Free Software Foundation; either
+ * version 3 of the License, or any later version.
+ *
+ * This library is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
+ * Lesser General Public License for more details.
+ *
+ * You should have received a copy of the GNU Lesser General Public
+ * License along with this library; if not, write to the Free Software
+ * Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA
+ */
 
+    // Encoding modes
 
-
-
-/*
- * PHP QR Code encoder
- *
- * Common constants
- *
- * Based on libqrencode C library distributed under LGPL 2.1
- * Copyright (C) 2006, 2007, 2008, 2009 Kentaro Fukuchi <fukuchi@megaui.net>
- *
- * PHP QR Code is distributed under LGPL 3
- * Copyright (C) 2010 Dominik Dzienia <deltalab at poczta dot fm>
- *
- * This library is free software; you can redistribute it and/or
- * modify it under the terms of the GNU Lesser General Public
- * License as published by the Free Software Foundation; either
- * version 3 of the License, or any later version.
- *
- * This library is distributed in the hope that it will be useful,
- * but WITHOUT ANY WARRANTY; without even the implied warranty of
- * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
- * Lesser General Public License for more details.
- *
- * You should have received a copy of the GNU Lesser General Public
- * License along with this library; if not, write to the Free Software
- * Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA
- */
- 
-	// Encoding modes
-	 
-	define('QR_MODE_NUL', -1);
-	define('QR_MODE_NUM', 0);
-	define('QR_MODE_AN', 1);
-	define('QR_MODE_8', 2);
-	define('QR_MODE_KANJI', 3);
-	define('QR_MODE_STRUCTURE', 4);
-
-	// Levels of error correction.
-
-	define('QR_ECLEVEL_L', 0);
-	define('QR_ECLEVEL_M', 1);
-	define('QR_ECLEVEL_Q', 2);
-	define('QR_ECLEVEL_H', 3);
-	
-	// Supported output formats
-	
-	define('QR_FORMAT_TEXT', 0);
-	define('QR_FORMAT_PNG',  1);
-	
-	class qrstr {
-		public static function set(&$srctab, $x, $y, $repl, $replLen = false) {
-			$srctab[$y] = substr_replace($srctab[$y], ($replLen !== false)?substr($repl,0,$replLen):$repl, $x, ($replLen !== false)?$replLen:strlen($repl));
-		}
-	}	
-
+    define('QR_MODE_NUL', -1);
+    define('QR_MODE_NUM', 0);
+    define('QR_MODE_AN', 1);
+    define('QR_MODE_8', 2);
+    define('QR_MODE_KANJI', 3);
+    define('QR_MODE_STRUCTURE', 4);
 
+    // Levels of error correction.
 
-//---- merged_config.php -----------------------------
+    define('QR_ECLEVEL_L', 0);
+    define('QR_ECLEVEL_M', 1);
+    define('QR_ECLEVEL_Q', 2);
+    define('QR_ECLEVEL_H', 3);
 
+    // Supported output formats
 
+    define('QR_FORMAT_TEXT', 0);
+    define('QR_FORMAT_PNG', 1);
 
-
-/*
- * PHP QR Code encoder
- *
- * Config file, tuned-up for merged verion
- */
-     
-    define('QR_CACHEABLE', false);       // use cache - more disk reads but less CPU power, masks and format templates are stored there
-    define('QR_CACHE_DIR', false);       // used when QR_CACHEABLE === true
-    define('QR_LOG_DIR', false);         // default error logs dir   
-    
-    define('QR_FIND_BEST_MASK', true);                                                          // if true, estimates best mask (spec. default, but extremally slow; set to false to significant performance boost but (propably) worst quality code
-    define('QR_FIND_FROM_RANDOM', 2);                                                       // if false, checks all masks available, otherwise value tells count of masks need to be checked, mask id are got randomly
-    define('QR_DEFAULT_MASK', 2);                                                               // when QR_FIND_BEST_MASK === false
-                                                  
-    define('QR_PNG_MAXIMUM_SIZE',  1024);                                                       // maximum allowed png image width (in pixels), tune to make sure GD and PHP can handle such big images
-                                                  
+    class qrstr
+    {
+        public static function set(&$srctab, $x, $y, $repl, $replLen = false)
+        {
+            $srctab[$y] = substr_replace($srctab[$y], ($replLen !== false) ? substr($repl, 0, $replLen) : $repl, $x, ($replLen !== false) ? $replLen : strlen($repl));
+        }
+    }
 
+//---- merged_config.php -----------------------------
 
+/*
+ * PHP QR Code encoder
+ *
+ * Config file, tuned-up for merged verion
+ */
 
-//---- qrtools.php -----------------------------
+    define('QR_CACHEABLE', false);       // use cache - more disk reads but less CPU power, masks and format templates are stored there
+    define('QR_CACHE_DIR', false);       // used when QR_CACHEABLE === true
+    define('QR_LOG_DIR', false);         // default error logs dir
 
+    define('QR_FIND_BEST_MASK', true);                                                          // if true, estimates best mask (spec. default, but extremally slow; set to false to significant performance boost but (propably) worst quality code
+    define('QR_FIND_FROM_RANDOM', 2);                                                       // if false, checks all masks available, otherwise value tells count of masks need to be checked, mask id are got randomly
+    define('QR_DEFAULT_MASK', 2);                                                               // when QR_FIND_BEST_MASK === false
 
+    define('QR_PNG_MAXIMUM_SIZE', 1024);                                                       // maximum allowed png image width (in pixels), tune to make sure GD and PHP can handle such big images
 
+//---- qrtools.php -----------------------------
 
 /*
  * PHP QR Code encoder
@@ -156,79 +139,81 @@
  * Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA
  */
 
-    class QRtools {
-    
+    class QRtools
+    {
         //----------------------------------------------------------------------
         public static function binarize($frame)
         {
             $len = count($frame);
             foreach ($frame as &$frameLine) {
-                
-                for($i=0; $i<$len; $i++) {
-                    $frameLine[$i] = (ord($frameLine[$i])&1)?'1':'0';
+                for ($i = 0; $i < $len; $i++) {
+                    $frameLine[$i] = (ord($frameLine[$i]) & 1) ? '1' : '0';
                 }
             }
-            
+
             return $frame;
         }
-        
+
         //----------------------------------------------------------------------
         public static function tcpdfBarcodeArray($code, $mode = 'QR,L', $tcPdfVersion = '4.5.037')
         {
-            $barcode_array = array();
-            
-            if (!is_array($mode))
+            $barcode_array = [];
+
+            if (!is_array($mode)) {
                 $mode = explode(',', $mode);
-                
+            }
+
             $eccLevel = 'L';
-                
+
             if (count($mode) > 1) {
                 $eccLevel = $mode[1];
             }
-                
+
             $qrTab = QRcode::text($code, false, $eccLevel);
             $size = count($qrTab);
-                
+
             $barcode_array['num_rows'] = $size;
             $barcode_array['num_cols'] = $size;
-            $barcode_array['bcode'] = array();
-                
+            $barcode_array['bcode'] = [];
+
             foreach ($qrTab as $line) {
-                $arrAdd = array();
-                foreach(str_split($line) as $char)
-                    $arrAdd[] = ($char=='1')?1:0;
+                $arrAdd = [];
+                foreach (str_split($line) as $char) {
+                    $arrAdd[] = ($char == '1') ? 1 : 0;
+                }
                 $barcode_array['bcode'][] = $arrAdd;
             }
-                    
+
             return $barcode_array;
         }
-        
+
         //----------------------------------------------------------------------
         public static function clearCache()
         {
-            self::$frames = array();
+            self::$frames = [];
         }
-        
+
         //----------------------------------------------------------------------
         public static function buildCache()
         {
-			QRtools::markTime('before_build_cache');
-			
-			$mask = new QRmask();
-            for ($a=1; $a <= QRSPEC_VERSION_MAX; $a++) {
+            self::markTime('before_build_cache');
+
+            $mask = new QRmask();
+            for ($a = 1; $a <= QRSPEC_VERSION_MAX; $a++) {
                 $frame = QRspec::newFrame($a);
                 if (QR_IMAGE) {
                     $fileName = QR_CACHE_DIR.'frame_'.$a.'.png';
                     QRimage::png(self::binarize($frame), $fileName, 1, 0);
                 }
-				
-				$width = count($frame);
-				$bitMask = array_fill(0, $width, array_fill(0, $width, 0));
-				for ($maskNo=0; $maskNo<8; $maskNo++)
-					$mask->makeMaskNo($maskNo, $width, $frame, $bitMask, true);
+
+                $width = count($frame);
+                $bitMask = array_fill(0, $width, array_fill(0, $width, 0));
+                for ($maskNo = 0; $maskNo < 8; $maskNo++) {
+                    $mask->makeMaskNo($maskNo, $width, $frame, $bitMask, true);
+                }
             }
-			
-			QRtools::markTime('after_build_cache');
+
+            self::markTime('after_build_cache');
         }
 
         //----------------------------------------------------------------------
@@ -241,38 +226,39 @@
                     } else {
                         file_put_contents(QR_LOG_DIR.'errors.txt', date('Y-m-d H:i:s').': '.$err, FILE_APPEND);
                     }
-                }    
+                }
             }
         }
-        
+
         //----------------------------------------------------------------------
-        public static function dumpMask($frame) 
+        public static function dumpMask($frame)
         {
             $width = count($frame);
-            for($y=0;$y<$width;$y++) {
-                for($x=0;$x<$width;$x++) {
+            for ($y = 0; $y < $width; $y++) {
+                for ($x = 0; $x < $width; $x++) {
                     echo ord($frame[$y][$x]).',';
                 }
             }
         }
-        
+
         //----------------------------------------------------------------------
         public static function markTime($markerId)
         {
-            list($usec, $sec) = explode(" ", microtime());
-            $time = ((float)$usec + (float)$sec);
-            
-            if (!isset($GLOBALS['qr_time_bench']))
-                $GLOBALS['qr_time_bench'] = array();
-            
+            list($usec, $sec) = explode(' ', microtime());
+            $time = ((float) $usec + (float) $sec);
+
+            if (!isset($GLOBALS['qr_time_bench'])) {
+                $GLOBALS['qr_time_bench'] = [];
+            }
+
             $GLOBALS['qr_time_bench'][$markerId] = $time;
         }
-        
+
         //----------------------------------------------------------------------
         public static function timeBenchmark()
         {
             self::markTime('finish');
-        
+
             $lastTime = 0;
             $startTime = 0;
             $p = 0;
@@ -281,573 +267,567 @@
                     <thead><tr style="border-bottom:1px solid silver"><td colspan="2" style="text-align:center">BENCHMARK</td></tr></thead>
                     <tbody>';
 
-            foreach($GLOBALS['qr_time_bench'] as $markerId=>$thisTime) {
+            foreach ($GLOBALS['qr_time_bench'] as $markerId=>$thisTime) {
                 if ($p > 0) {
-                    echo '<tr><th style="text-align:right">till '.$markerId.': </th><td>'.number_format($thisTime-$lastTime, 6).'s</td></tr>';
+                    echo '<tr><th style="text-align:right">till '.$markerId.': </th><td>'.number_format($thisTime - $lastTime, 6).'s</td></tr>';
                 } else {
                     $startTime = $thisTime;
                 }
-                
+
                 $p++;
                 $lastTime = $thisTime;
             }
-            
+
             echo '</tbody><tfoot>
-                <tr style="border-top:2px solid black"><th style="text-align:right">TOTAL: </th><td>'.number_format($lastTime-$startTime, 6).'s</td></tr>
+                <tr style="border-top:2px solid black"><th style="text-align:right">TOTAL: </th><td>'.number_format($lastTime - $startTime, 6).'s</td></tr>
             </tfoot>
             </table>';
         }
-        
+
         public static function save($content, $filename_path)
-        {           
+        {
             try {
-                $handle = fopen($filename_path, "w");
+                $handle = fopen($filename_path, 'w');
                 fwrite($handle, $content);
                 fclose($handle);
+
                 return true;
             } catch (Exception $e) {
                 echo 'Exception reçue : ',  $e->getMessage(), "\n";
-            }      
-            
+            }
         }
-        
     }
-    
+
     //##########################################################################
-    
+
     QRtools::markTime('start');
-    
 
+//---- qrspec.php -----------------------------
+
+/*
+ * PHP QR Code encoder
+ *
+ * QR Code specifications
+ *
+ * Based on libqrencode C library distributed under LGPL 2.1
+ * Copyright (C) 2006, 2007, 2008, 2009 Kentaro Fukuchi <fukuchi@megaui.net>
+ *
+ * PHP QR Code is distributed under LGPL 3
+ * Copyright (C) 2010 Dominik Dzienia <deltalab at poczta dot fm>
+ *
+ * The following data / specifications are taken from
+ * "Two dimensional symbol -- QR-code -- Basic Specification" (JIS X0510:2004)
+ *  or
+ * "Automatic identification and data capture techniques --
+ *  QR Code 2005 bar code symbology specification" (ISO/IEC 18004:2006)
+ *
+ * This library is free software; you can redistribute it and/or
+ * modify it under the terms of the GNU Lesser General Public
+ * License as published by the Free Software Foundation; either
+ * version 3 of the License, or any later version.
+ *
+ * This library is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
+ * Lesser General Public License for more details.
+ *
+ * You should have received a copy of the GNU Lesser General Public
+ * License along with this library; if not, write to the Free Software
+ * Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA
+ */
 
+    define('QRSPEC_VERSION_MAX', 40);
+    define('QRSPEC_WIDTH_MAX', 177);
+
+    define('QRCAP_WIDTH', 0);
+    define('QRCAP_WORDS', 1);
+    define('QRCAP_REMINDER', 2);
+    define('QRCAP_EC', 3);
+
+    class QRspec
+    {
+        public static $capacity = [
+            [0,    0, 0, [0,    0,    0,    0]],
+            [21,   26, 0, [7,   10,   13,   17]], // 1
+            [25,   44, 7, [10,   16,   22,   28]],
+            [29,   70, 7, [15,   26,   36,   44]],
+            [33,  100, 7, [20,   36,   52,   64]],
+            [37,  134, 7, [26,   48,   72,   88]], // 5
+            [41,  172, 7, [36,   64,   96,  112]],
+            [45,  196, 0, [40,   72,  108,  130]],
+            [49,  242, 0, [48,   88,  132,  156]],
+            [53,  292, 0, [60,  110,  160,  192]],
+            [57,  346, 0, [72,  130,  192,  224]], //10
+            [61,  404, 0, [80,  150,  224,  264]],
+            [65,  466, 0, [96,  176,  260,  308]],
+            [69,  532, 0, [104,  198,  288,  352]],
+            [73,  581, 3, [120,  216,  320,  384]],
+            [77,  655, 3, [132,  240,  360,  432]], //15
+            [81,  733, 3, [144,  280,  408,  480]],
+            [85,  815, 3, [168,  308,  448,  532]],
+            [89,  901, 3, [180,  338,  504,  588]],
+            [93,  991, 3, [196,  364,  546,  650]],
+            [97, 1085, 3, [224,  416,  600,  700]], //20
+            [101, 1156, 4, [224,  442,  644,  750]],
+            [105, 1258, 4, [252,  476,  690,  816]],
+            [109, 1364, 4, [270,  504,  750,  900]],
+            [113, 1474, 4, [300,  560,  810,  960]],
+            [117, 1588, 4, [312,  588,  870, 1050]], //25
+            [121, 1706, 4, [336,  644,  952, 1110]],
+            [125, 1828, 4, [360,  700, 1020, 1200]],
+            [129, 1921, 3, [390,  728, 1050, 1260]],
+            [133, 2051, 3, [420,  784, 1140, 1350]],
+            [137, 2185, 3, [450,  812, 1200, 1440]], //30
+            [141, 2323, 3, [480,  868, 1290, 1530]],
+            [145, 2465, 3, [510,  924, 1350, 1620]],
+            [149, 2611, 3, [540,  980, 1440, 1710]],
+            [153, 2761, 3, [570, 1036, 1530, 1800]],
+            [157, 2876, 0, [570, 1064, 1590, 1890]], //35
+            [161, 3034, 0, [600, 1120, 1680, 1980]],
+            [165, 3196, 0, [630, 1204, 1770, 2100]],
+            [169, 3362, 0, [660, 1260, 1860, 2220]],
+            [173, 3532, 0, [720, 1316, 1950, 2310]],
+            [177, 3706, 0, [750, 1372, 2040, 2430]], //40
+        ];
 
-//---- qrspec.php -----------------------------
+        //----------------------------------------------------------------------
+        public static function getDataLength($version, $level)
+        {
+            return self::$capacity[$version][QRCAP_WORDS] - self::$capacity[$version][QRCAP_EC][$level];
+        }
+
+        //----------------------------------------------------------------------
+        public static function getECCLength($version, $level)
+        {
+            return self::$capacity[$version][QRCAP_EC][$level];
+        }
+
+        //----------------------------------------------------------------------
+        public static function getWidth($version)
+        {
+            return self::$capacity[$version][QRCAP_WIDTH];
+        }
+
+        //----------------------------------------------------------------------
+        public static function getRemainder($version)
+        {
+            return self::$capacity[$version][QRCAP_REMINDER];
+        }
+
+        //----------------------------------------------------------------------
+        public static function getMinimumVersion($size, $level)
+        {
+            for ($i = 1; $i <= QRSPEC_VERSION_MAX; $i++) {
+                $words = self::$capacity[$i][QRCAP_WORDS] - self::$capacity[$i][QRCAP_EC][$level];
+                if ($words >= $size) {
+                    return $i;
+                }
+            }
+
+            return -1;
+        }
+
+        //######################################################################
+
+        public static $lengthTableBits = [
+            [10, 12, 14],
+            [9, 11, 13],
+            [8, 16, 16],
+            [8, 10, 12],
+        ];
+
+        //----------------------------------------------------------------------
+        public static function lengthIndicator($mode, $version)
+        {
+            if ($mode == QR_MODE_STRUCTURE) {
+                return 0;
+            }
+
+            if ($version <= 9) {
+                $l = 0;
+            } elseif ($version <= 26) {
+                $l = 1;
+            } else {
+                $l = 2;
+            }
+
+            return self::$lengthTableBits[$mode][$l];
+        }
+
+        //----------------------------------------------------------------------
+        public static function maximumWords($mode, $version)
+        {
+            if ($mode == QR_MODE_STRUCTURE) {
+                return 3;
+            }
+
+            if ($version <= 9) {
+                $l = 0;
+            } elseif ($version <= 26) {
+                $l = 1;
+            } else {
+                $l = 2;
+            }
+
+            $bits = self::$lengthTableBits[$mode][$l];
+            $words = (1 << $bits) - 1;
+
+            if ($mode == QR_MODE_KANJI) {
+                $words *= 2; // the number of bytes is required
+            }
+
+            return $words;
+        }
+
+        // Error correction code -----------------------------------------------
+        // Table of the error correction code (Reed-Solomon block)
+        // See Table 12-16 (pp.30-36), JIS X0510:2004.
+
+        public static $eccTable = [
+            [[0,  0], [0,  0], [0,  0], [0,  0]],
+            [[1,  0], [1,  0], [1,  0], [1,  0]], // 1
+            [[1,  0], [1,  0], [1,  0], [1,  0]],
+            [[1,  0], [1,  0], [2,  0], [2,  0]],
+            [[1,  0], [2,  0], [2,  0], [4,  0]],
+            [[1,  0], [2,  0], [2,  2], [2,  2]], // 5
+            [[2,  0], [4,  0], [4,  0], [4,  0]],
+            [[2,  0], [4,  0], [2,  4], [4,  1]],
+            [[2,  0], [2,  2], [4,  2], [4,  2]],
+            [[2,  0], [3,  2], [4,  4], [4,  4]],
+            [[2,  2], [4,  1], [6,  2], [6,  2]], //10
+            [[4,  0], [1,  4], [4,  4], [3,  8]],
+            [[2,  2], [6,  2], [4,  6], [7,  4]],
+            [[4,  0], [8,  1], [8,  4], [12,  4]],
+            [[3,  1], [4,  5], [11,  5], [11,  5]],
+            [[5,  1], [5,  5], [5,  7], [11,  7]], //15
+            [[5,  1], [7,  3], [15,  2], [3, 13]],
+            [[1,  5], [10,  1], [1, 15], [2, 17]],
+            [[5,  1], [9,  4], [17,  1], [2, 19]],
+            [[3,  4], [3, 11], [17,  4], [9, 16]],
+            [[3,  5], [3, 13], [15,  5], [15, 10]], //20
+            [[4,  4], [17,  0], [17,  6], [19,  6]],
+            [[2,  7], [17,  0], [7, 16], [34,  0]],
+            [[4,  5], [4, 14], [11, 14], [16, 14]],
+            [[6,  4], [6, 14], [11, 16], [30,  2]],
+            [[8,  4], [8, 13], [7, 22], [22, 13]], //25
+            [[10,  2], [19,  4], [28,  6], [33,  4]],
+            [[8,  4], [22,  3], [8, 26], [12, 28]],
+            [[3, 10], [3, 23], [4, 31], [11, 31]],
+            [[7,  7], [21,  7], [1, 37], [19, 26]],
+            [[5, 10], [19, 10], [15, 25], [23, 25]], //30
+            [[13,  3], [2, 29], [42,  1], [23, 28]],
+            [[17,  0], [10, 23], [10, 35], [19, 35]],
+            [[17,  1], [14, 21], [29, 19], [11, 46]],
+            [[13,  6], [14, 23], [44,  7], [59,  1]],
+            [[12,  7], [12, 26], [39, 14], [22, 41]], //35
+            [[6, 14], [6, 34], [46, 10], [2, 64]],
+            [[17,  4], [29, 14], [49, 10], [24, 46]],
+            [[4, 18], [13, 32], [48, 14], [42, 32]],
+            [[20,  4], [40,  7], [43, 22], [10, 67]],
+            [[19,  6], [18, 31], [34, 34], [20, 61]], //40
+        ];
+
+        //----------------------------------------------------------------------
+        // CACHEABLE!!!
+
+        public static function getEccSpec($version, $level, array &$spec)
+        {
+            if (count($spec) < 5) {
+                $spec = [0, 0, 0, 0, 0];
+            }
+
+            $b1 = self::$eccTable[$version][$level][0];
+            $b2 = self::$eccTable[$version][$level][1];
+            $data = self::getDataLength($version, $level);
+            $ecc = self::getECCLength($version, $level);
+
+            if ($b2 == 0) {
+                $spec[0] = $b1;
+                $spec[1] = (int) ($data / $b1);
+                $spec[2] = (int) ($ecc / $b1);
+                $spec[3] = 0;
+                $spec[4] = 0;
+            } else {
+                $spec[0] = $b1;
+                $spec[1] = (int) ($data / ($b1 + $b2));
+                $spec[2] = (int) ($ecc / ($b1 + $b2));
+                $spec[3] = $b2;
+                $spec[4] = $spec[1] + 1;
+            }
+        }
+
+        // Alignment pattern ---------------------------------------------------
+
+        // Positions of alignment patterns.
+        // This array includes only the second and the third position of the
+        // alignment patterns. Rest of them can be calculated from the distance
+        // between them.
+
+        // See Table 1 in Appendix E (pp.71) of JIS X0510:2004.
+
+        public static $alignmentPattern = [
+            [0,  0],
+            [0,  0], [18,  0], [22,  0], [26,  0], [30,  0], // 1- 5
+            [34,  0], [22, 38], [24, 42], [26, 46], [28, 50], // 6-10
+            [30, 54], [32, 58], [34, 62], [26, 46], [26, 48], //11-15
+            [26, 50], [30, 54], [30, 56], [30, 58], [34, 62], //16-20
+            [28, 50], [26, 50], [30, 54], [28, 54], [32, 58], //21-25
+            [30, 58], [34, 62], [26, 50], [30, 54], [26, 52], //26-30
+            [30, 56], [34, 60], [30, 58], [34, 62], [30, 54], //31-35
+            [24, 50], [28, 54], [32, 58], [26, 54], [30, 58], //35-40
+        ];
+
+        /** --------------------------------------------------------------------
+         * Put an alignment marker.
+         *
+         * @param frame
+         * @param width
+         * @param ox,oy center coordinate of the pattern
+         */
+        public static function putAlignmentMarker(array &$frame, $ox, $oy)
+        {
+            $finder = [
+                "\xa1\xa1\xa1\xa1\xa1",
+                "\xa1\xa0\xa0\xa0\xa1",
+                "\xa1\xa0\xa1\xa0\xa1",
+                "\xa1\xa0\xa0\xa0\xa1",
+                "\xa1\xa1\xa1\xa1\xa1",
+            ];
+
+            $yStart = $oy - 2;
+            $xStart = $ox - 2;
+
+            for ($y = 0; $y < 5; $y++) {
+                QRstr::set($frame, $xStart, $yStart + $y, $finder[$y]);
+            }
+        }
+
+        //----------------------------------------------------------------------
+        public static function putAlignmentPattern($version, &$frame, $width)
+        {
+            if ($version < 2) {
+                return;
+            }
+
+            $d = self::$alignmentPattern[$version][1] - self::$alignmentPattern[$version][0];
+            if ($d < 0) {
+                $w = 2;
+            } else {
+                $w = (int) (($width - self::$alignmentPattern[$version][0]) / $d + 2);
+            }
+
+            if ($w * $w - 3 == 1) {
+                $x = self::$alignmentPattern[$version][0];
+                $y = self::$alignmentPattern[$version][0];
+                self::putAlignmentMarker($frame, $x, $y);
 
+                return;
+            }
+
+            $cx = self::$alignmentPattern[$version][0];
+            for ($x = 1; $x < $w - 1; $x++) {
+                self::putAlignmentMarker($frame, 6, $cx);
+                self::putAlignmentMarker($frame, $cx, 6);
+                $cx += $d;
+            }
+
+            $cy = self::$alignmentPattern[$version][0];
+            for ($y = 0; $y < $w - 1; $y++) {
+                $cx = self::$alignmentPattern[$version][0];
+                for ($x = 0; $x < $w - 1; $x++) {
+                    self::putAlignmentMarker($frame, $cx, $cy);
+                    $cx += $d;
+                }
+                $cy += $d;
+            }
+        }
+
+        // Version information pattern -----------------------------------------
+
+        // Version information pattern (BCH coded).
+        // See Table 1 in Appendix D (pp.68) of JIS X0510:2004.
+
+        // size: [QRSPEC_VERSION_MAX - 6]
+
+        public static $versionPattern = [
+            0x07c94, 0x085bc, 0x09a99, 0x0a4d3, 0x0bbf6, 0x0c762, 0x0d847, 0x0e60d,
+            0x0f928, 0x10b78, 0x1145d, 0x12a17, 0x13532, 0x149a6, 0x15683, 0x168c9,
+            0x177ec, 0x18ec4, 0x191e1, 0x1afab, 0x1b08e, 0x1cc1a, 0x1d33f, 0x1ed75,
+            0x1f250, 0x209d5, 0x216f0, 0x228ba, 0x2379f, 0x24b0b, 0x2542e, 0x26a64,
+            0x27541, 0x28c69,
+        ];
+
+        //----------------------------------------------------------------------
+        public static function getVersionPattern($version)
+        {
+            if ($version < 7 || $version > QRSPEC_VERSION_MAX) {
+                return 0;
+            }
+
+            return self::$versionPattern[$version - 7];
+        }
+
+        // Format information --------------------------------------------------
+        // See calcFormatInfo in tests/test_qrspec.c (orginal qrencode c lib)
+
+        public static $formatInfo = [
+            [0x77c4, 0x72f3, 0x7daa, 0x789d, 0x662f, 0x6318, 0x6c41, 0x6976],
+            [0x5412, 0x5125, 0x5e7c, 0x5b4b, 0x45f9, 0x40ce, 0x4f97, 0x4aa0],
+            [0x355f, 0x3068, 0x3f31, 0x3a06, 0x24b4, 0x2183, 0x2eda, 0x2bed],
+            [0x1689, 0x13be, 0x1ce7, 0x19d0, 0x0762, 0x0255, 0x0d0c, 0x083b],
+        ];
+
+        public static function getFormatInfo($mask, $level)
+        {
+            if ($mask < 0 || $mask > 7) {
+                return 0;
+            }
+
+            if ($level < 0 || $level > 3) {
+                return 0;
+            }
+
+            return self::$formatInfo[$level][$mask];
+        }
+
+        // Frame ---------------------------------------------------------------
+        // Cache of initial frames.
+
+        public static $frames = [];
+
+        /** --------------------------------------------------------------------
+         * Put a finder pattern.
+         *
+         * @param frame
+         * @param width
+         * @param ox,oy upper-left coordinate of the pattern
+         */
+        public static function putFinderPattern(&$frame, $ox, $oy)
+        {
+            $finder = [
+                "\xc1\xc1\xc1\xc1\xc1\xc1\xc1",
+                "\xc1\xc0\xc0\xc0\xc0\xc0\xc1",
+                "\xc1\xc0\xc1\xc1\xc1\xc0\xc1",
+                "\xc1\xc0\xc1\xc1\xc1\xc0\xc1",
+                "\xc1\xc0\xc1\xc1\xc1\xc0\xc1",
+                "\xc1\xc0\xc0\xc0\xc0\xc0\xc1",
+                "\xc1\xc1\xc1\xc1\xc1\xc1\xc1",
+            ];
+
+            for ($y = 0; $y < 7; $y++) {
+                QRstr::set($frame, $ox, $oy + $y, $finder[$y]);
+            }
+        }
+
+        //----------------------------------------------------------------------
+        public static function createFrame($version)
+        {
+            $width = self::$capacity[$version][QRCAP_WIDTH];
+            $frameLine = str_repeat("\0", $width);
+            $frame = array_fill(0, $width, $frameLine);
+
+            // Finder pattern
+            self::putFinderPattern($frame, 0, 0);
+            self::putFinderPattern($frame, $width - 7, 0);
+            self::putFinderPattern($frame, 0, $width - 7);
+
+            // Separator
+            $yOffset = $width - 7;
+
+            for ($y = 0; $y < 7; $y++) {
+                $frame[$y][7] = "\xc0";
+                $frame[$y][$width - 8] = "\xc0";
+                $frame[$yOffset][7] = "\xc0";
+                $yOffset++;
+            }
+
+            $setPattern = str_repeat("\xc0", 8);
+
+            QRstr::set($frame, 0, 7, $setPattern);
+            QRstr::set($frame, $width - 8, 7, $setPattern);
+            QRstr::set($frame, 0, $width - 8, $setPattern);
+
+            // Format info
+            $setPattern = str_repeat("\x84", 9);
+            QRstr::set($frame, 0, 8, $setPattern);
+            QRstr::set($frame, $width - 8, 8, $setPattern, 8);
+
+            $yOffset = $width - 8;
+
+            for ($y = 0; $y < 8; $y++,$yOffset++) {
+                $frame[$y][8] = "\x84";
+                $frame[$yOffset][8] = "\x84";
+            }
+
+            // Timing pattern
+
+            for ($i = 1; $i < $width - 15; $i++) {
+                $frame[6][7 + $i] = chr(0x90 | ($i & 1));
+                $frame[7 + $i][6] = chr(0x90 | ($i & 1));
+            }
 
+            // Alignment pattern
+            self::putAlignmentPattern($version, $frame, $width);
 
-
-/*
- * PHP QR Code encoder
- *
- * QR Code specifications
- *
- * Based on libqrencode C library distributed under LGPL 2.1
- * Copyright (C) 2006, 2007, 2008, 2009 Kentaro Fukuchi <fukuchi@megaui.net>
- *
- * PHP QR Code is distributed under LGPL 3
- * Copyright (C) 2010 Dominik Dzienia <deltalab at poczta dot fm>
- *
- * The following data / specifications are taken from
- * "Two dimensional symbol -- QR-code -- Basic Specification" (JIS X0510:2004)
- *  or
- * "Automatic identification and data capture techniques -- 
- *  QR Code 2005 bar code symbology specification" (ISO/IEC 18004:2006)
- *
- * This library is free software; you can redistribute it and/or
- * modify it under the terms of the GNU Lesser General Public
- * License as published by the Free Software Foundation; either
- * version 3 of the License, or any later version.
- *
- * This library is distributed in the hope that it will be useful,
- * but WITHOUT ANY WARRANTY; without even the implied warranty of
- * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
- * Lesser General Public License for more details.
- *
- * You should have received a copy of the GNU Lesser General Public
- * License along with this library; if not, write to the Free Software
- * Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA
- */
- 
-    define('QRSPEC_VERSION_MAX', 40);
-    define('QRSPEC_WIDTH_MAX',   177);
-
-    define('QRCAP_WIDTH',        0);
-    define('QRCAP_WORDS',        1);
-    define('QRCAP_REMINDER',     2);
-    define('QRCAP_EC',           3);
-
-    class QRspec {
-    
-        public static $capacity = array(
-            array(  0,    0, 0, array(   0,    0,    0,    0)),
-            array( 21,   26, 0, array(   7,   10,   13,   17)), // 1
-            array( 25,   44, 7, array(  10,   16,   22,   28)),
-            array( 29,   70, 7, array(  15,   26,   36,   44)),
-            array( 33,  100, 7, array(  20,   36,   52,   64)),
-            array( 37,  134, 7, array(  26,   48,   72,   88)), // 5
-            array( 41,  172, 7, array(  36,   64,   96,  112)),
-            array( 45,  196, 0, array(  40,   72,  108,  130)),
-            array( 49,  242, 0, array(  48,   88,  132,  156)),
-            array( 53,  292, 0, array(  60,  110,  160,  192)),
-            array( 57,  346, 0, array(  72,  130,  192,  224)), //10
-            array( 61,  404, 0, array(  80,  150,  224,  264)),
-            array( 65,  466, 0, array(  96,  176,  260,  308)),
-            array( 69,  532, 0, array( 104,  198,  288,  352)),
-            array( 73,  581, 3, array( 120,  216,  320,  384)),
-            array( 77,  655, 3, array( 132,  240,  360,  432)), //15
-            array( 81,  733, 3, array( 144,  280,  408,  480)),
-            array( 85,  815, 3, array( 168,  308,  448,  532)),
-            array( 89,  901, 3, array( 180,  338,  504,  588)),
-            array( 93,  991, 3, array( 196,  364,  546,  650)),
-            array( 97, 1085, 3, array( 224,  416,  600,  700)), //20
-            array(101, 1156, 4, array( 224,  442,  644,  750)),
-            array(105, 1258, 4, array( 252,  476,  690,  816)),
-            array(109, 1364, 4, array( 270,  504,  750,  900)),
-            array(113, 1474, 4, array( 300,  560,  810,  960)),
-            array(117, 1588, 4, array( 312,  588,  870, 1050)), //25
-            array(121, 1706, 4, array( 336,  644,  952, 1110)),
-            array(125, 1828, 4, array( 360,  700, 1020, 1200)),
-            array(129, 1921, 3, array( 390,  728, 1050, 1260)),
-            array(133, 2051, 3, array( 420,  784, 1140, 1350)),
-            array(137, 2185, 3, array( 450,  812, 1200, 1440)), //30
-            array(141, 2323, 3, array( 480,  868, 1290, 1530)),
-            array(145, 2465, 3, array( 510,  924, 1350, 1620)),
-            array(149, 2611, 3, array( 540,  980, 1440, 1710)),
-            array(153, 2761, 3, array( 570, 1036, 1530, 1800)),
-            array(157, 2876, 0, array( 570, 1064, 1590, 1890)), //35
-            array(161, 3034, 0, array( 600, 1120, 1680, 1980)),
-            array(165, 3196, 0, array( 630, 1204, 1770, 2100)),
-            array(169, 3362, 0, array( 660, 1260, 1860, 2220)),
-            array(173, 3532, 0, array( 720, 1316, 1950, 2310)),
-            array(177, 3706, 0, array( 750, 1372, 2040, 2430)) //40
-        );
-        
-        //----------------------------------------------------------------------
-        public static function getDataLength($version, $level)
-        {
-            return self::$capacity[$version][QRCAP_WORDS] - self::$capacity[$version][QRCAP_EC][$level];
-        }
-        
-        //----------------------------------------------------------------------
-        public static function getECCLength($version, $level)
-        {
-            return self::$capacity[$version][QRCAP_EC][$level];
-        }
-        
-        //----------------------------------------------------------------------
-        public static function getWidth($version)
-        {
-            return self::$capacity[$version][QRCAP_WIDTH];
-        }
-        
-        //----------------------------------------------------------------------
-        public static function getRemainder($version)
-        {
-            return self::$capacity[$version][QRCAP_REMINDER];
-        }
-        
-        //----------------------------------------------------------------------
-        public static function getMinimumVersion($size, $level)
-        {
-
-            for($i=1; $i<= QRSPEC_VERSION_MAX; $i++) {
-                $words  = self::$capacity[$i][QRCAP_WORDS] - self::$capacity[$i][QRCAP_EC][$level];
-                if($words >= $size) 
-                    return $i;
-            }
-
-            return -1;
-        }
-    
-        //######################################################################
-        
-        public static $lengthTableBits = array(
-            array(10, 12, 14),
-            array( 9, 11, 13),
-            array( 8, 16, 16),
-            array( 8, 10, 12)
-        );
-        
-        //----------------------------------------------------------------------
-        public static function lengthIndicator($mode, $version)
-        {
-            if ($mode == QR_MODE_STRUCTURE)
-                return 0;
-                
-            if ($version <= 9) {
-                $l = 0;
-            } else if ($version <= 26) {
-                $l = 1;
-            } else {
-                $l = 2;
-            }
-
-            return self::$lengthTableBits[$mode][$l];
-        }
-        
-        //----------------------------------------------------------------------
-        public static function maximumWords($mode, $version)
-        {
-            if($mode == QR_MODE_STRUCTURE) 
-                return 3;
-                
-            if($version <= 9) {
-                $l = 0;
-            } else if($version <= 26) {
-                $l = 1;
-            } else {
-                $l = 2;
-            }
-
-            $bits = self::$lengthTableBits[$mode][$l];
-            $words = (1 << $bits) - 1;
-            
-            if($mode == QR_MODE_KANJI) {
-                $words *= 2; // the number of bytes is required
-            }
-
-            return $words;
-        }
-
-        // Error correction code -----------------------------------------------
-        // Table of the error correction code (Reed-Solomon block)
-        // See Table 12-16 (pp.30-36), JIS X0510:2004.
-
-        public static $eccTable = array(
-            array(array( 0,  0), array( 0,  0), array( 0,  0), array( 0,  0)),
-            array(array( 1,  0), array( 1,  0), array( 1,  0), array( 1,  0)), // 1
-            array(array( 1,  0), array( 1,  0), array( 1,  0), array( 1,  0)),
-            array(array( 1,  0), array( 1,  0), array( 2,  0), array( 2,  0)),
-            array(array( 1,  0), array( 2,  0), array( 2,  0), array( 4,  0)),
-            array(array( 1,  0), array( 2,  0), array( 2,  2), array( 2,  2)), // 5
-            array(array( 2,  0), array( 4,  0), array( 4,  0), array( 4,  0)),
-            array(array( 2,  0), array( 4,  0), array( 2,  4), array( 4,  1)),
-            array(array( 2,  0), array( 2,  2), array( 4,  2), array( 4,  2)),
-            array(array( 2,  0), array( 3,  2), array( 4,  4), array( 4,  4)),
-            array(array( 2,  2), array( 4,  1), array( 6,  2), array( 6,  2)), //10
-            array(array( 4,  0), array( 1,  4), array( 4,  4), array( 3,  8)),
-            array(array( 2,  2), array( 6,  2), array( 4,  6), array( 7,  4)),
-            array(array( 4,  0), array( 8,  1), array( 8,  4), array(12,  4)),
-            array(array( 3,  1), array( 4,  5), array(11,  5), array(11,  5)),
-            array(array( 5,  1), array( 5,  5), array( 5,  7), array(11,  7)), //15
-            array(array( 5,  1), array( 7,  3), array(15,  2), array( 3, 13)),
-            array(array( 1,  5), array(10,  1), array( 1, 15), array( 2, 17)),
-            array(array( 5,  1), array( 9,  4), array(17,  1), array( 2, 19)),
-            array(array( 3,  4), array( 3, 11), array(17,  4), array( 9, 16)),
-            array(array( 3,  5), array( 3, 13), array(15,  5), array(15, 10)), //20
-            array(array( 4,  4), array(17,  0), array(17,  6), array(19,  6)),
-            array(array( 2,  7), array(17,  0), array( 7, 16), array(34,  0)),
-            array(array( 4,  5), array( 4, 14), array(11, 14), array(16, 14)),
-            array(array( 6,  4), array( 6, 14), array(11, 16), array(30,  2)),
-            array(array( 8,  4), array( 8, 13), array( 7, 22), array(22, 13)), //25
-            array(array(10,  2), array(19,  4), array(28,  6), array(33,  4)),
-            array(array( 8,  4), array(22,  3), array( 8, 26), array(12, 28)),
-            array(array( 3, 10), array( 3, 23), array( 4, 31), array(11, 31)),
-            array(array( 7,  7), array(21,  7), array( 1, 37), array(19, 26)),
-            array(array( 5, 10), array(19, 10), array(15, 25), array(23, 25)), //30
-            array(array(13,  3), array( 2, 29), array(42,  1), array(23, 28)),
-            array(array(17,  0), array(10, 23), array(10, 35), array(19, 35)),
-            array(array(17,  1), array(14, 21), array(29, 19), array(11, 46)),
-            array(array(13,  6), array(14, 23), array(44,  7), array(59,  1)),
-            array(array(12,  7), array(12, 26), array(39, 14), array(22, 41)), //35
-            array(array( 6, 14), array( 6, 34), array(46, 10), array( 2, 64)),
-            array(array(17,  4), array(29, 14), array(49, 10), array(24, 46)),
-            array(array( 4, 18), array(13, 32), array(48, 14), array(42, 32)),
-            array(array(20,  4), array(40,  7), array(43, 22), array(10, 67)),
-            array(array(19,  6), array(18, 31), array(34, 34), array(20, 61)),//40
-        );                                                                       
-
-        //----------------------------------------------------------------------
-        // CACHEABLE!!!
-        
-        public static function getEccSpec($version, $level, array &$spec)
-        {
-            if (count($spec) < 5) {
-                $spec = array(0,0,0,0,0);
-            }
-
-            $b1   = self::$eccTable[$version][$level][0];
-            $b2   = self::$eccTable[$version][$level][1];
-            $data = self::getDataLength($version, $level);
-            $ecc  = self::getECCLength($version, $level);
-
-            if($b2 == 0) {
-                $spec[0] = $b1;
-                $spec[1] = (int)($data / $b1);
-                $spec[2] = (int)($ecc / $b1);
-                $spec[3] = 0; 
-                $spec[4] = 0;
-            } else {
-                $spec[0] = $b1;
-                $spec[1] = (int)($data / ($b1 + $b2));
-                $spec[2] = (int)($ecc  / ($b1 + $b2));
-                $spec[3] = $b2;
-                $spec[4] = $spec[1] + 1;
-            }
-        }
-
-        // Alignment pattern ---------------------------------------------------
-
-        // Positions of alignment patterns.
-        // This array includes only the second and the third position of the 
-        // alignment patterns. Rest of them can be calculated from the distance 
-        // between them.
-         
-        // See Table 1 in Appendix E (pp.71) of JIS X0510:2004.
-         
-        public static $alignmentPattern = array(      
-            array( 0,  0),
-            array( 0,  0), array(18,  0), array(22,  0), array(26,  0), array(30,  0), // 1- 5
-            array(34,  0), array(22, 38), array(24, 42), array(26, 46), array(28, 50), // 6-10
-            array(30, 54), array(32, 58), array(34, 62), array(26, 46), array(26, 48), //11-15
-            array(26, 50), array(30, 54), array(30, 56), array(30, 58), array(34, 62), //16-20
-            array(28, 50), array(26, 50), array(30, 54), array(28, 54), array(32, 58), //21-25
-            array(30, 58), array(34, 62), array(26, 50), array(30, 54), array(26, 52), //26-30
-            array(30, 56), array(34, 60), array(30, 58), array(34, 62), array(30, 54), //31-35
-            array(24, 50), array(28, 54), array(32, 58), array(26, 54), array(30, 58), //35-40
-        );                                                                                  
-
-        
-        /** --------------------------------------------------------------------
-         * Put an alignment marker.
-         * @param frame
-         * @param width
-         * @param ox,oy center coordinate of the pattern
-         */
-        public static function putAlignmentMarker(array &$frame, $ox, $oy)
-        {
-            $finder = array(
-                "\xa1\xa1\xa1\xa1\xa1",
-                "\xa1\xa0\xa0\xa0\xa1",
-                "\xa1\xa0\xa1\xa0\xa1",
-                "\xa1\xa0\xa0\xa0\xa1",
-                "\xa1\xa1\xa1\xa1\xa1"
-            );                        
-            
-            $yStart = $oy-2;         
-            $xStart = $ox-2;
-            
-            for($y=0; $y<5; $y++) {
-                QRstr::set($frame, $xStart, $yStart+$y, $finder[$y]);
-            }
-        }
-
-        //----------------------------------------------------------------------
-        public static function putAlignmentPattern($version, &$frame, $width)
-        {
-            if($version < 2)
-                return;
-
-            $d = self::$alignmentPattern[$version][1] - self::$alignmentPattern[$version][0];
-            if($d < 0) {
-                $w = 2;
-            } else {
-                $w = (int)(($width - self::$alignmentPattern[$version][0]) / $d + 2);
-            }
-
-            if($w * $w - 3 == 1) {
-                $x = self::$alignmentPattern[$version][0];
-                $y = self::$alignmentPattern[$version][0];
-                self::putAlignmentMarker($frame, $x, $y);
-                return;
-            }
-
-            $cx = self::$alignmentPattern[$version][0];
-            for($x=1; $x<$w - 1; $x++) {
-                self::putAlignmentMarker($frame, 6, $cx);
-                self::putAlignmentMarker($frame, $cx,  6);
-                $cx += $d;
-            }
-
-            $cy = self::$alignmentPattern[$version][0];
-            for($y=0; $y<$w-1; $y++) {
-                $cx = self::$alignmentPattern[$version][0];
-                for($x=0; $x<$w-1; $x++) {
-                    self::putAlignmentMarker($frame, $cx, $cy);
-                    $cx += $d;
-                }
-                $cy += $d;
-            }
-        }
-
-        // Version information pattern -----------------------------------------
-
-		// Version information pattern (BCH coded).
-        // See Table 1 in Appendix D (pp.68) of JIS X0510:2004.
-        
-		// size: [QRSPEC_VERSION_MAX - 6]
-		
-        public static $versionPattern = array(
-            0x07c94, 0x085bc, 0x09a99, 0x0a4d3, 0x0bbf6, 0x0c762, 0x0d847, 0x0e60d,
-            0x0f928, 0x10b78, 0x1145d, 0x12a17, 0x13532, 0x149a6, 0x15683, 0x168c9,
-            0x177ec, 0x18ec4, 0x191e1, 0x1afab, 0x1b08e, 0x1cc1a, 0x1d33f, 0x1ed75,
-            0x1f250, 0x209d5, 0x216f0, 0x228ba, 0x2379f, 0x24b0b, 0x2542e, 0x26a64,
-            0x27541, 0x28c69
-        );
-
-        //----------------------------------------------------------------------
-        public static function getVersionPattern($version)
-        {
-            if($version < 7 || $version > QRSPEC_VERSION_MAX)
-                return 0;
-
-            return self::$versionPattern[$version -7];
-        }
-
-        // Format information --------------------------------------------------
-        // See calcFormatInfo in tests/test_qrspec.c (orginal qrencode c lib)
-        
-        public static $formatInfo = array(
-            array(0x77c4, 0x72f3, 0x7daa, 0x789d, 0x662f, 0x6318, 0x6c41, 0x6976),
-            array(0x5412, 0x5125, 0x5e7c, 0x5b4b, 0x45f9, 0x40ce, 0x4f97, 0x4aa0),
-            array(0x355f, 0x3068, 0x3f31, 0x3a06, 0x24b4, 0x2183, 0x2eda, 0x2bed),
-            array(0x1689, 0x13be, 0x1ce7, 0x19d0, 0x0762, 0x0255, 0x0d0c, 0x083b)
-        );
-
-        public static function getFormatInfo($mask, $level)
-        {
-            if($mask < 0 || $mask > 7)
-                return 0;
-                
-            if($level < 0 || $level > 3)
-                return 0;                
-
-            return self::$formatInfo[$level][$mask];
-        }
-
-        // Frame ---------------------------------------------------------------
-        // Cache of initial frames.
-         
-        public static $frames = array();
-
-        /** --------------------------------------------------------------------
-         * Put a finder pattern.
-         * @param frame
-         * @param width
-         * @param ox,oy upper-left coordinate of the pattern
-         */
-        public static function putFinderPattern(&$frame, $ox, $oy)
-        {
-            $finder = array(
-                "\xc1\xc1\xc1\xc1\xc1\xc1\xc1",
-                "\xc1\xc0\xc0\xc0\xc0\xc0\xc1",
-                "\xc1\xc0\xc1\xc1\xc1\xc0\xc1",
-                "\xc1\xc0\xc1\xc1\xc1\xc0\xc1",
-                "\xc1\xc0\xc1\xc1\xc1\xc0\xc1",
-                "\xc1\xc0\xc0\xc0\xc0\xc0\xc1",
-                "\xc1\xc1\xc1\xc1\xc1\xc1\xc1"
-            );                            
-            
-            for($y=0; $y<7; $y++) {
-                QRstr::set($frame, $ox, $oy+$y, $finder[$y]);
-            }
-        }
-
-        //----------------------------------------------------------------------
-        public static function createFrame($version)
-        {
-            $width = self::$capacity[$version][QRCAP_WIDTH];
-            $frameLine = str_repeat ("\0", $width);
-            $frame = array_fill(0, $width, $frameLine);
-
-            // Finder pattern
-            self::putFinderPattern($frame, 0, 0);
-            self::putFinderPattern($frame, $width - 7, 0);
-            self::putFinderPattern($frame, 0, $width - 7);
-            
-            // Separator
-            $yOffset = $width - 7;
-            
-            for($y=0; $y<7; $y++) {
-                $frame[$y][7] = "\xc0";
-                $frame[$y][$width - 8] = "\xc0";
-                $frame[$yOffset][7] = "\xc0";
-                $yOffset++;
-            }
-            
-            $setPattern = str_repeat("\xc0", 8);
-            
-            QRstr::set($frame, 0, 7, $setPattern);
-            QRstr::set($frame, $width-8, 7, $setPattern);
-            QRstr::set($frame, 0, $width - 8, $setPattern);
-        
-            // Format info
-            $setPattern = str_repeat("\x84", 9);
-            QRstr::set($frame, 0, 8, $setPattern);
-            QRstr::set($frame, $width - 8, 8, $setPattern, 8);
-            
-            $yOffset = $width - 8;
-
-            for($y=0; $y<8; $y++,$yOffset++) {
-                $frame[$y][8] = "\x84";
-                $frame[$yOffset][8] = "\x84";
-            }
-
-            // Timing pattern  
-            
-            for($i=1; $i<$width-15; $i++) {
-                $frame[6][7+$i] = chr(0x90 | ($i & 1));
-                $frame[7+$i][6] = chr(0x90 | ($i & 1));
-            }
-            
-            // Alignment pattern  
-            self::putAlignmentPattern($version, $frame, $width);
-            
-            // Version information 
-            if($version >= 7) {
-                $vinf = self::getVersionPattern($version);
-
-                $v = $vinf;
-                
-                for($x=0; $x<6; $x++) {
-                    for($y=0; $y<3; $y++) {
-                        $frame[($width - 11)+$y][$x] = chr(0x88 | ($v & 1));
-                        $v = $v >> 1;
-                    }
-                }
-
-                $v = $vinf;
-                for($y=0; $y<6; $y++) {
-                    for($x=0; $x<3; $x++) {
-                        $frame[$y][$x+($width - 11)] = chr(0x88 | ($v & 1));
-                        $v = $v >> 1;
-                    }
-                }
-            }
-    
-            // and a little bit...  
-            $frame[$width - 8][8] = "\x81";
-            
-            return $frame;
-        }
-
-        //----------------------------------------------------------------------
-        public static function debug($frame, $binary_mode = false)
-        {
-            if ($binary_mode) {
-            
-                    foreach ($frame as &$frameLine) {
-                        $frameLine = join('<span class="m">&nbsp;&nbsp;</span>', explode('0', $frameLine));
-                        $frameLine = join('&#9608;&#9608;', explode('1', $frameLine));
-                    }
-                    
-                    ?>
+            // Version information
+            if ($version >= 7) {
+                $vinf = self::getVersionPattern($version);
+
+                $v = $vinf;
+
+                for ($x = 0; $x < 6; $x++) {
+                    for ($y = 0; $y < 3; $y++) {
+                        $frame[($width - 11) + $y][$x] = chr(0x88 | ($v & 1));
+                        $v = $v >> 1;
+                    }
+                }
+
+                $v = $vinf;
+                for ($y = 0; $y < 6; $y++) {
+                    for ($x = 0; $x < 3; $x++) {
+                        $frame[$y][$x + ($width - 11)] = chr(0x88 | ($v & 1));
+                        $v = $v >> 1;
+                    }
+                }
+            }
+
+            // and a little bit...
+            $frame[$width - 8][8] = "\x81";
+
+            return $frame;
+        }
+
+        //----------------------------------------------------------------------
+        public static function debug($frame, $binary_mode = false)
+        {
+            if ($binary_mode) {
+                foreach ($frame as &$frameLine) {
+                    $frameLine = implode('<span class="m">&nbsp;&nbsp;</span>', explode('0', $frameLine));
+                    $frameLine = implode('&#9608;&#9608;', explode('1', $frameLine));
+                } ?>
                 <style>
                     .m { background-color: white; }
                 </style>
-                <?php
-                    echo '<pre><tt><br/ ><br/ ><br/ >&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;';
-                    echo join("<br/ >&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;", $frame);
-                    echo '</tt></pre><br/ ><br/ ><br/ ><br/ ><br/ ><br/ >';
-            
-            } else {
-            
-                foreach ($frame as &$frameLine) {
-                    $frameLine = join('<span class="m">&nbsp;</span>',  explode("\xc0", $frameLine));
-                    $frameLine = join('<span class="m">&#9618;</span>', explode("\xc1", $frameLine));
-                    $frameLine = join('<span class="p">&nbsp;</span>',  explode("\xa0", $frameLine));
-                    $frameLine = join('<span class="p">&#9618;</span>', explode("\xa1", $frameLine));
-                    $frameLine = join('<span class="s">&#9671;</span>', explode("\x84", $frameLine)); //format 0
-                    $frameLine = join('<span class="s">&#9670;</span>', explode("\x85", $frameLine)); //format 1
-                    $frameLine = join('<span class="x">&#9762;</span>', explode("\x81", $frameLine)); //special bit
-                    $frameLine = join('<span class="c">&nbsp;</span>',  explode("\x90", $frameLine)); //clock 0
-                    $frameLine = join('<span class="c">&#9719;</span>', explode("\x91", $frameLine)); //clock 1
-                    $frameLine = join('<span class="f">&nbsp;</span>',  explode("\x88", $frameLine)); //version
-                    $frameLine = join('<span class="f">&#9618;</span>', explode("\x89", $frameLine)); //version
-                    $frameLine = join('&#9830;', explode("\x01", $frameLine));
-                    $frameLine = join('&#8901;', explode("\0", $frameLine));
-                }
-                
-                ?>
+                <?php
+                    echo '<pre><tt><br/ ><br/ ><br/ >&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;';
+                echo implode('<br/ >&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;', $frame);
+                echo '</tt></pre><br/ ><br/ ><br/ ><br/ ><br/ ><br/ >';
+            } else {
+                foreach ($frame as &$frameLine) {
+                    $frameLine = implode('<span class="m">&nbsp;</span>', explode("\xc0", $frameLine));
+                    $frameLine = implode('<span class="m">&#9618;</span>', explode("\xc1", $frameLine));
+                    $frameLine = implode('<span class="p">&nbsp;</span>', explode("\xa0", $frameLine));
+                    $frameLine = implode('<span class="p">&#9618;</span>', explode("\xa1", $frameLine));
+                    $frameLine = implode('<span class="s">&#9671;</span>', explode("\x84", $frameLine)); //format 0
+                    $frameLine = implode('<span class="s">&#9670;</span>', explode("\x85", $frameLine)); //format 1
+                    $frameLine = implode('<span class="x">&#9762;</span>', explode("\x81", $frameLine)); //special bit
+                    $frameLine = implode('<span class="c">&nbsp;</span>', explode("\x90", $frameLine)); //clock 0
+                    $frameLine = implode('<span class="c">&#9719;</span>', explode("\x91", $frameLine)); //clock 1
+                    $frameLine = implode('<span class="f">&nbsp;</span>', explode("\x88", $frameLine)); //version
+                    $frameLine = implode('<span class="f">&#9618;</span>', explode("\x89", $frameLine)); //version
+                    $frameLine = implode('&#9830;', explode("\x01", $frameLine));
+                    $frameLine = implode('&#8901;', explode("\0", $frameLine));
+                } ?>
                 <style>
                     .p { background-color: yellow; }
                     .m { background-color: #00FF00; }
@@ -856,78 +836,1693 @@
                     .x { background-color: pink; }
                     .f { background-color: gold; }
                 </style>
-                <?php
-                echo "<pre><tt>";
-                echo join("<br/ >", $frame);
-                echo "</tt></pre>";
-            
-            }
-        }
-
-        //----------------------------------------------------------------------
-        public static function serial($frame)
-        {
-            return gzcompress(join("\n", $frame), 9);
-        }
-        
-        //----------------------------------------------------------------------
-        public static function unserial($code)
-        {
-            return explode("\n", gzuncompress($code));
-        }
-        
-        //----------------------------------------------------------------------
-        public static function newFrame($version)
-        {
-            if($version < 1 || $version > QRSPEC_VERSION_MAX) 
-                return null;
-
-            if(!isset(self::$frames[$version])) {
-                
-                $fileName = QR_CACHE_DIR.'frame_'.$version.'.dat';
-                
-                if (QR_CACHEABLE) {
-                    if (file_exists($fileName)) {
-                        self::$frames[$version] = self::unserial(file_get_contents($fileName));
-                    } else {
-                        self::$frames[$version] = self::createFrame($version);
-                        file_put_contents($fileName, self::serial(self::$frames[$version]));
-                    }
-                } else {
-                    self::$frames[$version] = self::createFrame($version);
-                }
-            }
-            
-            if(is_null(self::$frames[$version]))
-                return null;
-
-            return self::$frames[$version];
-        }
-
-        //----------------------------------------------------------------------
-        public static function rsBlockNum($spec)     { return $spec[0] + $spec[3]; }
-        public static function rsBlockNum1($spec)    { return $spec[0]; }
-        public static function rsDataCodes1($spec)   { return $spec[1]; }
-        public static function rsEccCodes1($spec)    { return $spec[2]; }
-        public static function rsBlockNum2($spec)    { return $spec[3]; }
-        public static function rsDataCodes2($spec)   { return $spec[4]; }
-        public static function rsEccCodes2($spec)    { return $spec[2]; }
-        public static function rsDataLength($spec)   { return ($spec[0] * $spec[1]) + ($spec[3] * $spec[4]);    }
-        public static function rsEccLength($spec)    { return ($spec[0] + $spec[3]) * $spec[2]; }
-        
+                <?php
+                echo '<pre><tt>';
+                echo implode('<br/ >', $frame);
+                echo '</tt></pre>';
+            }
+        }
+
+        //----------------------------------------------------------------------
+        public static function serial($frame)
+        {
+            return gzcompress(implode("\n", $frame), 9);
+        }
+
+        //----------------------------------------------------------------------
+        public static function unserial($code)
+        {
+            return explode("\n", gzuncompress($code));
+        }
+
+        //----------------------------------------------------------------------
+        public static function newFrame($version)
+        {
+            if ($version < 1 || $version > QRSPEC_VERSION_MAX) {
+                return;
+            }
+
+            if (!isset(self::$frames[$version])) {
+                $fileName = QR_CACHE_DIR.'frame_'.$version.'.dat';
+
+                if (QR_CACHEABLE) {
+                    if (file_exists($fileName)) {
+                        self::$frames[$version] = self::unserial(file_get_contents($fileName));
+                    } else {
+                        self::$frames[$version] = self::createFrame($version);
+                        file_put_contents($fileName, self::serial(self::$frames[$version]));
+                    }
+                } else {
+                    self::$frames[$version] = self::createFrame($version);
+                }
+            }
+
+            if (is_null(self::$frames[$version])) {
+                return;
+            }
+
+            return self::$frames[$version];
+        }
+
+        //----------------------------------------------------------------------
+        public static function rsBlockNum($spec)
+        {
+            return $spec[0] + $spec[3];
+        }
+
+        public static function rsBlockNum1($spec)
+        {
+            return $spec[0];
+        }
+
+        public static function rsDataCodes1($spec)
+        {
+            return $spec[1];
+        }
+
+        public static function rsEccCodes1($spec)
+        {
+            return $spec[2];
+        }
+
+        public static function rsBlockNum2($spec)
+        {
+            return $spec[3];
+        }
+
+        public static function rsDataCodes2($spec)
+        {
+            return $spec[4];
+        }
+
+        public static function rsEccCodes2($spec)
+        {
+            return $spec[2];
+        }
+
+        public static function rsDataLength($spec)
+        {
+            return ($spec[0] * $spec[1]) + ($spec[3] * $spec[4]);
+        }
+
+        public static function rsEccLength($spec)
+        {
+            return ($spec[0] + $spec[3]) * $spec[2];
+        }
+    }
+
+//---- qrimage.php -----------------------------
+
+/*
+ * PHP QR Code encoder
+ *
+ * Image output of code using GD2
+ *
+ * PHP QR Code is distributed under LGPL 3
+ * Copyright (C) 2010 Dominik Dzienia <deltalab at poczta dot fm>
+ *
+ * This library is free software; you can redistribute it and/or
+ * modify it under the terms of the GNU Lesser General Public
+ * License as published by the Free Software Foundation; either
+ * version 3 of the License, or any later version.
+ *
+ * This library is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
+ * Lesser General Public License for more details.
+ *
+ * You should have received a copy of the GNU Lesser General Public
+ * License along with this library; if not, write to the Free Software
+ * Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA
+ */
+
+    define('QR_IMAGE', true);
+
+    class QRimage
+    {
+        //----------------------------------------------------------------------
+        public static function png($frame, $filename, $pixelPerPoint, $outerFrame, $saveandprint, $back_color, $fore_color)
+        {
+            $image = self::image($frame, $pixelPerPoint, $outerFrame, $back_color, $fore_color);
+
+            if ($filename === false) {
+                header('Content-type: image/png');
+                imagepng($image);
+            } else {
+                if ($saveandprint === true) {
+                    imagepng($image, $filename);
+                    header('Content-type: image/png');
+                    imagepng($image);
+                } else {
+                    imagepng($image, $filename);
+                }
+            }
+
+            imagedestroy($image);
+        }
+
+        //----------------------------------------------------------------------
+        public static function jpg($frame, $filename = false, $pixelPerPoint = 8, $outerFrame = 4, $q = 85)
+        {
+            $image = self::image($frame, $pixelPerPoint, $outerFrame);
+
+            if ($filename === false) {
+                header('Content-type: image/jpeg');
+                imagejpeg($image, null, $q);
+            } else {
+                imagejpeg($image, $filename, $q);
+            }
+
+            imagedestroy($image);
+        }
+
+        //----------------------------------------------------------------------
+        private static function image($frame, $pixelPerPoint = 4, $outerFrame = 4, $back_color = 0xFFFFFF, $fore_color = 0x000000)
+        {
+            $h = count($frame);
+            $w = strlen($frame[0]);
+
+            $imgW = $w + 2 * $outerFrame;
+            $imgH = $h + 2 * $outerFrame;
+
+            $base_image = imagecreate($imgW, $imgH);
+
+            // convert a hexadecimal color code into decimal eps format (green = 0 1 0, blue = 0 0 1, ...)
+            $r1 = round((($fore_color & 0xFF0000) >> 16), 5);
+            $b1 = round((($fore_color & 0x00FF00) >> 8), 5);
+            $g1 = round(($fore_color & 0x0000FF), 5);
+
+            // convert a hexadecimal color code into decimal eps format (green = 0 1 0, blue = 0 0 1, ...)
+            $r2 = round((($back_color & 0xFF0000) >> 16), 5);
+            $b2 = round((($back_color & 0x00FF00) >> 8), 5);
+            $g2 = round(($back_color & 0x0000FF), 5);
+
+            $col[0] = imagecolorallocate($base_image, $r2, $b2, $g2);
+            $col[1] = imagecolorallocate($base_image, $r1, $b1, $g1);
+
+            imagefill($base_image, 0, 0, $col[0]);
+
+            for ($y = 0; $y < $h; $y++) {
+                for ($x = 0; $x < $w; $x++) {
+                    if ($frame[$y][$x] == '1') {
+                        imagesetpixel($base_image, $x + $outerFrame, $y + $outerFrame, $col[1]);
+                    }
+                }
+            }
+
+            $target_image = imagecreate($imgW * $pixelPerPoint, $imgH * $pixelPerPoint);
+            imagecopyresized($target_image, $base_image, 0, 0, 0, 0, $imgW * $pixelPerPoint, $imgH * $pixelPerPoint, $imgW, $imgH);
+            imagedestroy($base_image);
+
+            return $target_image;
+        }
+    }
+
+//---- qrinput.php -----------------------------
+
+/*
+ * PHP QR Code encoder
+ *
+ * Input encoding class
+ *
+ * Based on libqrencode C library distributed under LGPL 2.1
+ * Copyright (C) 2006, 2007, 2008, 2009 Kentaro Fukuchi <fukuchi@megaui.net>
+ *
+ * PHP QR Code is distributed under LGPL 3
+ * Copyright (C) 2010 Dominik Dzienia <deltalab at poczta dot fm>
+ *
+ * This library is free software; you can redistribute it and/or
+ * modify it under the terms of the GNU Lesser General Public
+ * License as published by the Free Software Foundation; either
+ * version 3 of the License, or any later version.
+ *
+ * This library is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
+ * Lesser General Public License for more details.
+ *
+ * You should have received a copy of the GNU Lesser General Public
+ * License along with this library; if not, write to the Free Software
+ * Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA
+ */
+
+    define('STRUCTURE_HEADER_BITS', 20);
+    define('MAX_STRUCTURED_SYMBOLS', 16);
+
+    class QRinputItem
+    {
+        public $mode;
+        public $size;
+        public $data;
+        public $bstream;
+
+        public function __construct($mode, $size, $data, $bstream = null)
+        {
+            $setData = array_slice($data, 0, $size);
+
+            if (count($setData) < $size) {
+                $setData = array_merge($setData, array_fill(0, $size - count($setData), 0));
+            }
+
+            if (!QRinput::check($mode, $size, $setData)) {
+                throw new Exception('Error m:'.$mode.',s:'.$size.',d:'.implode(',', $setData));
+                return;
+            }
+
+            $this->mode = $mode;
+            $this->size = $size;
+            $this->data = $setData;
+            $this->bstream = $bstream;
+        }
+
+        //----------------------------------------------------------------------
+        public function encodeModeNum($version)
+        {
+            try {
+                $words = (int) ($this->size / 3);
+                $bs = new QRbitstream();
+
+                $val = 0x1;
+                $bs->appendNum(4, $val);
+                $bs->appendNum(QRspec::lengthIndicator(QR_MODE_NUM, $version), $this->size);
+
+                for ($i = 0; $i < $words; $i++) {
+                    $val = (ord($this->data[$i * 3]) - ord('0')) * 100;
+                    $val += (ord($this->data[$i * 3 + 1]) - ord('0')) * 10;
+                    $val += (ord($this->data[$i * 3 + 2]) - ord('0'));
+                    $bs->appendNum(10, $val);
+                }
+
+                if ($this->size - $words * 3 == 1) {
+                    $val = ord($this->data[$words * 3]) - ord('0');
+                    $bs->appendNum(4, $val);
+                } elseif ($this->size - $words * 3 == 2) {
+                    $val = (ord($this->data[$words * 3]) - ord('0')) * 10;
+                    $val += (ord($this->data[$words * 3 + 1]) - ord('0'));
+                    $bs->appendNum(7, $val);
+                }
+
+                $this->bstream = $bs;
+
+                return 0;
+            } catch (Exception $e) {
+                return -1;
+            }
+        }
+
+        //----------------------------------------------------------------------
+        public function encodeModeAn($version)
+        {
+            try {
+                $words = (int) ($this->size / 2);
+                $bs = new QRbitstream();
+
+                $bs->appendNum(4, 0x02);
+                $bs->appendNum(QRspec::lengthIndicator(QR_MODE_AN, $version), $this->size);
+
+                for ($i = 0; $i < $words; $i++) {
+                    $val = (int) QRinput::lookAnTable(ord($this->data[$i * 2])) * 45;
+                    $val += (int) QRinput::lookAnTable(ord($this->data[$i * 2 + 1]));
+
+                    $bs->appendNum(11, $val);
+                }
+
+                if ($this->size & 1) {
+                    $val = QRinput::lookAnTable(ord($this->data[$words * 2]));
+                    $bs->appendNum(6, $val);
+                }
+
+                $this->bstream = $bs;
+
+                return 0;
+            } catch (Exception $e) {
+                return -1;
+            }
+        }
+
+        //----------------------------------------------------------------------
+        public function encodeMode8($version)
+        {
+            try {
+                $bs = new QRbitstream();
+
+                $bs->appendNum(4, 0x4);
+                $bs->appendNum(QRspec::lengthIndicator(QR_MODE_8, $version), $this->size);
+
+                for ($i = 0; $i < $this->size; $i++) {
+                    $bs->appendNum(8, ord($this->data[$i]));
+                }
+
+                $this->bstream = $bs;
+
+                return 0;
+            } catch (Exception $e) {
+                return -1;
+            }
+        }
+
+        //----------------------------------------------------------------------
+        public function encodeModeKanji($version)
+        {
+            try {
+                $bs = new QRbitrtream();
+
+                $bs->appendNum(4, 0x8);
+                $bs->appendNum(QRspec::lengthIndicator(QR_MODE_KANJI, $version), (int) ($this->size / 2));
+
+                for ($i = 0; $i < $this->size; $i += 2) {
+                    $val = (ord($this->data[$i]) << 8) | ord($this->data[$i + 1]);
+                    if ($val <= 0x9ffc) {
+                        $val -= 0x8140;
+                    } else {
+                        $val -= 0xc140;
+                    }
+
+                    $h = ($val >> 8) * 0xc0;
+                    $val = ($val & 0xff) + $h;
+
+                    $bs->appendNum(13, $val);
+                }
+
+                $this->bstream = $bs;
+
+                return 0;
+            } catch (Exception $e) {
+                return -1;
+            }
+        }
+
+        //----------------------------------------------------------------------
+        public function encodeModeStructure()
+        {
+            try {
+                $bs = new QRbitstream();
+
+                $bs->appendNum(4, 0x03);
+                $bs->appendNum(4, ord($this->data[1]) - 1);
+                $bs->appendNum(4, ord($this->data[0]) - 1);
+                $bs->appendNum(8, ord($this->data[2]));
+
+                $this->bstream = $bs;
+
+                return 0;
+            } catch (Exception $e) {
+                return -1;
+            }
+        }
+
+        //----------------------------------------------------------------------
+        public function estimateBitStreamSizeOfEntry($version)
+        {
+            $bits = 0;
+
+            if ($version == 0) {
+                $version = 1;
+            }
+
+            switch ($this->mode) {
+                case QR_MODE_NUM:        $bits = QRinput::estimateBitsModeNum($this->size); break;
+                case QR_MODE_AN:        $bits = QRinput::estimateBitsModeAn($this->size); break;
+                case QR_MODE_8:            $bits = QRinput::estimateBitsMode8($this->size); break;
+                case QR_MODE_KANJI:        $bits = QRinput::estimateBitsModeKanji($this->size); break;
+                case QR_MODE_STRUCTURE:    return STRUCTURE_HEADER_BITS;
+                default:
+                    return 0;
+            }
+
+            $l = QRspec::lengthIndicator($this->mode, $version);
+            $m = 1 << $l;
+            $num = (int) (($this->size + $m - 1) / $m);
+
+            $bits += $num * (4 + $l);
+
+            return $bits;
+        }
+
+        //----------------------------------------------------------------------
+        public function encodeBitStream($version)
+        {
+            try {
+                unset($this->bstream);
+                $words = QRspec::maximumWords($this->mode, $version);
+
+                if ($this->size > $words) {
+                    $st1 = new self($this->mode, $words, $this->data);
+                    $st2 = new self($this->mode, $this->size - $words, array_slice($this->data, $words));
+
+                    $st1->encodeBitStream($version);
+                    $st2->encodeBitStream($version);
+
+                    $this->bstream = new QRbitstream();
+                    $this->bstream->append($st1->bstream);
+                    $this->bstream->append($st2->bstream);
+
+                    unset($st1);
+                    unset($st2);
+                } else {
+                    $ret = 0;
+
+                    switch ($this->mode) {
+                        case QR_MODE_NUM:        $ret = $this->encodeModeNum($version); break;
+                        case QR_MODE_AN:        $ret = $this->encodeModeAn($version); break;
+                        case QR_MODE_8:            $ret = $this->encodeMode8($version); break;
+                        case QR_MODE_KANJI:        $ret = $this->encodeModeKanji($version); break;
+                        case QR_MODE_STRUCTURE:    $ret = $this->encodeModeStructure(); break;
+
+                        default:
+                            break;
+                    }
+
+                    if ($ret < 0) {
+                        return -1;
+                    }
+                }
+
+                return $this->bstream->size();
+            } catch (Exception $e) {
+                return -1;
+            }
+        }
+    }
+
+    //##########################################################################
+
+    class QRinput
+    {
+        public $items;
+
+        private $version;
+        private $level;
+
+        //----------------------------------------------------------------------
+        public function __construct($version = 0, $level = QR_ECLEVEL_L)
+        {
+            if ($version < 0 || $version > QRSPEC_VERSION_MAX || $level > QR_ECLEVEL_H) {
+                throw new Exception('Invalid version no');
+                return;
+            }
+
+            $this->version = $version;
+            $this->level = $level;
+        }
+
+        //----------------------------------------------------------------------
+        public function getVersion()
+        {
+            return $this->version;
+        }
+
+        //----------------------------------------------------------------------
+        public function setVersion($version)
+        {
+            if ($version < 0 || $version > QRSPEC_VERSION_MAX) {
+                throw new Exception('Invalid version no');
+                return -1;
+            }
+
+            $this->version = $version;
+
+            return 0;
+        }
+
+        //----------------------------------------------------------------------
+        public function getErrorCorrectionLevel()
+        {
+            return $this->level;
+        }
+
+        //----------------------------------------------------------------------
+        public function setErrorCorrectionLevel($level)
+        {
+            if ($level > QR_ECLEVEL_H) {
+                throw new Exception('Invalid ECLEVEL');
+                return -1;
+            }
+
+            $this->level = $level;
+
+            return 0;
+        }
+
+        //----------------------------------------------------------------------
+        public function appendEntry(QRinputItem $entry)
+        {
+            $this->items[] = $entry;
+        }
+
+        //----------------------------------------------------------------------
+        public function append($mode, $size, $data)
+        {
+            try {
+                $entry = new QRinputItem($mode, $size, $data);
+                $this->items[] = $entry;
+
+                return 0;
+            } catch (Exception $e) {
+                return -1;
+            }
+        }
+
+        //----------------------------------------------------------------------
+
+        public function insertStructuredAppendHeader($size, $index, $parity)
+        {
+            if ($size > MAX_STRUCTURED_SYMBOLS) {
+                throw new Exception('insertStructuredAppendHeader wrong size');
+            }
+
+            if ($index <= 0 || $index > MAX_STRUCTURED_SYMBOLS) {
+                throw new Exception('insertStructuredAppendHeader wrong index');
+            }
+
+            $buf = [$size, $index, $parity];
+
+            try {
+                $entry = new QRinputItem(QR_MODE_STRUCTURE, 3, buf);
+                array_unshift($this->items, $entry);
+
+                return 0;
+            } catch (Exception $e) {
+                return -1;
+            }
+        }
+
+        //----------------------------------------------------------------------
+        public function calcParity()
+        {
+            $parity = 0;
+
+            foreach ($this->items as $item) {
+                if ($item->mode != QR_MODE_STRUCTURE) {
+                    for ($i = $item->size - 1; $i >= 0; $i--) {
+                        $parity ^= $item->data[$i];
+                    }
+                }
+            }
+
+            return $parity;
+        }
+
+        //----------------------------------------------------------------------
+        public static function checkModeNum($size, $data)
+        {
+            for ($i = 0; $i < $size; $i++) {
+                if ((ord($data[$i]) < ord('0')) || (ord($data[$i]) > ord('9'))) {
+                    return false;
+                }
+            }
+
+            return true;
+        }
+
+        //----------------------------------------------------------------------
+        public static function estimateBitsModeNum($size)
+        {
+            $w = (int) $size / 3;
+            $bits = $w * 10;
+
+            switch ($size - $w * 3) {
+                case 1:
+                    $bits += 4;
+                    break;
+                case 2:
+                    $bits += 7;
+                    break;
+                default:
+                    break;
+            }
+
+            return $bits;
+        }
+
+        //----------------------------------------------------------------------
+        public static $anTable = [
+            -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
+            -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
+            36, -1, -1, -1, 37, 38, -1, -1, -1, -1, 39, 40, -1, 41, 42, 43,
+             0,  1,  2,  3,  4,  5,  6,  7,  8,  9, 44, -1, -1, -1, -1, -1,
+            -1, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24,
+            25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, -1, -1, -1, -1, -1,
+            -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
+            -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
+        ];
+
+        //----------------------------------------------------------------------
+        public static function lookAnTable($c)
+        {
+            return ($c > 127) ? -1 : self::$anTable[$c];
+        }
+
+        //----------------------------------------------------------------------
+        public static function checkModeAn($size, $data)
+        {
+            for ($i = 0; $i < $size; $i++) {
+                if (self::lookAnTable(ord($data[$i])) == -1) {
+                    return false;
+                }
+            }
+
+            return true;
+        }
+
+        //----------------------------------------------------------------------
+        public static function estimateBitsModeAn($size)
+        {
+            $w = (int) ($size / 2);
+            $bits = $w * 11;
+
+            if ($size & 1) {
+                $bits += 6;
+            }
+
+            return $bits;
+        }
+
+        //----------------------------------------------------------------------
+        public static function estimateBitsMode8($size)
+        {
+            return $size * 8;
+        }
+
+        //----------------------------------------------------------------------
+        public function estimateBitsModeKanji($size)
+        {
+            return (int) (($size / 2) * 13);
+        }
+
+        //----------------------------------------------------------------------
+        public static function checkModeKanji($size, $data)
+        {
+            if ($size & 1) {
+                return false;
+            }
+
+            for ($i = 0; $i < $size; $i += 2) {
+                $val = (ord($data[$i]) << 8) | ord($data[$i + 1]);
+                if ($val < 0x8140
+                || ($val > 0x9ffc && $val < 0xe040)
+                || $val > 0xebbf) {
+                    return false;
+                }
+            }
+
+            return true;
+        }
+
+        /***********************************************************************
+         * Validation
+         **********************************************************************/
+
+        public static function check($mode, $size, $data)
+        {
+            if ($size <= 0) {
+                return false;
+            }
+
+            switch ($mode) {
+                case QR_MODE_NUM:       return self::checkModeNum($size, $data); break;
+                case QR_MODE_AN:        return self::checkModeAn($size, $data); break;
+                case QR_MODE_KANJI:     return self::checkModeKanji($size, $data); break;
+                case QR_MODE_8:         return true; break;
+                case QR_MODE_STRUCTURE: return true; break;
+
+                default:
+                    break;
+            }
+
+            return false;
+        }
+
+        //----------------------------------------------------------------------
+        public function estimateBitStreamSize($version)
+        {
+            $bits = 0;
+
+            foreach ($this->items as $item) {
+                $bits += $item->estimateBitStreamSizeOfEntry($version);
+            }
+
+            return $bits;
+        }
+
+        //----------------------------------------------------------------------
+        public function estimateVersion()
+        {
+            $version = 0;
+            $prev = 0;
+            do {
+                $prev = $version;
+                $bits = $this->estimateBitStreamSize($prev);
+                $version = QRspec::getMinimumVersion((int) (($bits + 7) / 8), $this->level);
+                if ($version < 0) {
+                    return -1;
+                }
+            } while ($version > $prev);
+
+            return $version;
+        }
+
+        //----------------------------------------------------------------------
+        public static function lengthOfCode($mode, $version, $bits)
+        {
+            $payload = $bits - 4 - QRspec::lengthIndicator($mode, $version);
+            switch ($mode) {
+                case QR_MODE_NUM:
+                    $chunks = (int) ($payload / 10);
+                    $remain = $payload - $chunks * 10;
+                    $size = $chunks * 3;
+                    if ($remain >= 7) {
+                        $size += 2;
+                    } elseif ($remain >= 4) {
+                        $size += 1;
+                    }
+                    break;
+                case QR_MODE_AN:
+                    $chunks = (int) ($payload / 11);
+                    $remain = $payload - $chunks * 11;
+                    $size = $chunks * 2;
+                    if ($remain >= 6) {
+                        $size++;
+                    }
+                    break;
+                case QR_MODE_8:
+                    $size = (int) ($payload / 8);
+                    break;
+                case QR_MODE_KANJI:
+                    $size = (int) (($payload / 13) * 2);
+                    break;
+                case QR_MODE_STRUCTURE:
+                    $size = (int) ($payload / 8);
+                    break;
+                default:
+                    $size = 0;
+                    break;
+            }
+
+            $maxsize = QRspec::maximumWords($mode, $version);
+            if ($size < 0) {
+                $size = 0;
+            }
+            if ($size > $maxsize) {
+                $size = $maxsize;
+            }
+
+            return $size;
+        }
+
+        //----------------------------------------------------------------------
+        public function createBitStream()
+        {
+            $total = 0;
+
+            foreach ($this->items as $item) {
+                $bits = $item->encodeBitStream($this->version);
+
+                if ($bits < 0) {
+                    return -1;
+                }
+
+                $total += $bits;
+            }
+
+            return $total;
+        }
+
+        //----------------------------------------------------------------------
+        public function convertData()
+        {
+            $ver = $this->estimateVersion();
+            if ($ver > $this->getVersion()) {
+                $this->setVersion($ver);
+            }
+
+            for (; ;) {
+                $bits = $this->createBitStream();
+
+                if ($bits < 0) {
+                    return -1;
+                }
+
+                $ver = QRspec::getMinimumVersion((int) (($bits + 7) / 8), $this->level);
+                if ($ver < 0) {
+                    throw new Exception('WRONG VERSION');
+                    return -1;
+                } elseif ($ver > $this->getVersion()) {
+                    $this->setVersion($ver);
+                } else {
+                    break;
+                }
+            }
+
+            return 0;
+        }
+
+        //----------------------------------------------------------------------
+        public function appendPaddingBit(&$bstream)
+        {
+            $bits = $bstream->size();
+            $maxwords = QRspec::getDataLength($this->version, $this->level);
+            $maxbits = $maxwords * 8;
+
+            if ($maxbits == $bits) {
+                return 0;
+            }
+
+            if ($maxbits - $bits < 5) {
+                return $bstream->appendNum($maxbits - $bits, 0);
+            }
+
+            $bits += 4;
+            $words = (int) (($bits + 7) / 8);
+
+            $padding = new QRbitstream();
+            $ret = $padding->appendNum($words * 8 - $bits + 4, 0);
+
+            if ($ret < 0) {
+                return $ret;
+            }
+
+            $padlen = $maxwords - $words;
+
+            if ($padlen > 0) {
+                $padbuf = [];
+                for ($i = 0; $i < $padlen; $i++) {
+                    $padbuf[$i] = ($i & 1) ? 0x11 : 0xec;
+                }
+
+                $ret = $padding->appendBytes($padlen, $padbuf);
+
+                if ($ret < 0) {
+                    return $ret;
+                }
+            }
+
+            $ret = $bstream->append($padding);
+
+            return $ret;
+        }
+
+        //----------------------------------------------------------------------
+        public function mergeBitStream()
+        {
+            if ($this->convertData() < 0) {
+                return;
+            }
+
+            $bstream = new QRbitstream();
+
+            foreach ($this->items as $item) {
+                $ret = $bstream->append($item->bstream);
+                if ($ret < 0) {
+                    return;
+                }
+            }
+
+            return $bstream;
+        }
+
+        //----------------------------------------------------------------------
+        public function getBitStream()
+        {
+            $bstream = $this->mergeBitStream();
+
+            if ($bstream == null) {
+                return;
+            }
+
+            $ret = $this->appendPaddingBit($bstream);
+            if ($ret < 0) {
+                return;
+            }
+
+            return $bstream;
+        }
+
+        //----------------------------------------------------------------------
+        public function getByteStream()
+        {
+            $bstream = $this->getBitStream();
+            if ($bstream == null) {
+                return;
+            }
+
+            return $bstream->toByte();
+        }
+    }
+
+//---- qrbitstream.php -----------------------------
+
+/*
+ * PHP QR Code encoder
+ *
+ * Bitstream class
+ *
+ * Based on libqrencode C library distributed under LGPL 2.1
+ * Copyright (C) 2006, 2007, 2008, 2009 Kentaro Fukuchi <fukuchi@megaui.net>
+ *
+ * PHP QR Code is distributed under LGPL 3
+ * Copyright (C) 2010 Dominik Dzienia <deltalab at poczta dot fm>
+ *
+ * This library is free software; you can redistribute it and/or
+ * modify it under the terms of the GNU Lesser General Public
+ * License as published by the Free Software Foundation; either
+ * version 3 of the License, or any later version.
+ *
+ * This library is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
+ * Lesser General Public License for more details.
+ *
+ * You should have received a copy of the GNU Lesser General Public
+ * License along with this library; if not, write to the Free Software
+ * Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA
+ */
+
+    class QRbitstream
+    {
+        public $data = [];
+
+        //----------------------------------------------------------------------
+        public function size()
+        {
+            return count($this->data);
+        }
+
+        //----------------------------------------------------------------------
+        public function allocate($setLength)
+        {
+            $this->data = array_fill(0, $setLength, 0);
+
+            return 0;
+        }
+
+        //----------------------------------------------------------------------
+        public static function newFromNum($bits, $num)
+        {
+            $bstream = new self();
+            $bstream->allocate($bits);
+
+            $mask = 1 << ($bits - 1);
+            for ($i = 0; $i < $bits; $i++) {
+                if ($num & $mask) {
+                    $bstream->data[$i] = 1;
+                } else {
+                    $bstream->data[$i] = 0;
+                }
+                $mask = $mask >> 1;
+            }
+
+            return $bstream;
+        }
+
+        //----------------------------------------------------------------------
+        public static function newFromBytes($size, $data)
+        {
+            $bstream = new self();
+            $bstream->allocate($size * 8);
+            $p = 0;
+
+            for ($i = 0; $i < $size; $i++) {
+                $mask = 0x80;
+                for ($j = 0; $j < 8; $j++) {
+                    if ($data[$i] & $mask) {
+                        $bstream->data[$p] = 1;
+                    } else {
+                        $bstream->data[$p] = 0;
+                    }
+                    $p++;
+                    $mask = $mask >> 1;
+                }
+            }
+
+            return $bstream;
+        }
+
+        //----------------------------------------------------------------------
+        public function append(self $arg)
+        {
+            if (is_null($arg)) {
+                return -1;
+            }
+
+            if ($arg->size() == 0) {
+                return 0;
+            }
+
+            if ($this->size() == 0) {
+                $this->data = $arg->data;
+
+                return 0;
+            }
+
+            $this->data = array_values(array_merge($this->data, $arg->data));
+
+            return 0;
+        }
+
+        //----------------------------------------------------------------------
+        public function appendNum($bits, $num)
+        {
+            if ($bits == 0) {
+                return 0;
+            }
+
+            $b = self::newFromNum($bits, $num);
+
+            if (is_null($b)) {
+                return -1;
+            }
+
+            $ret = $this->append($b);
+            unset($b);
+
+            return $ret;
+        }
+
+        //----------------------------------------------------------------------
+        public function appendBytes($size, $data)
+        {
+            if ($size == 0) {
+                return 0;
+            }
+
+            $b = self::newFromBytes($size, $data);
+
+            if (is_null($b)) {
+                return -1;
+            }
+
+            $ret = $this->append($b);
+            unset($b);
+
+            return $ret;
+        }
+
+        //----------------------------------------------------------------------
+        public function toByte()
+        {
+            $size = $this->size();
+
+            if ($size == 0) {
+                return [];
+            }
+
+            $data = array_fill(0, (int) (($size + 7) / 8), 0);
+            $bytes = (int) ($size / 8);
+
+            $p = 0;
+
+            for ($i = 0; $i < $bytes; $i++) {
+                $v = 0;
+                for ($j = 0; $j < 8; $j++) {
+                    $v = $v << 1;
+                    $v |= $this->data[$p];
+                    $p++;
+                }
+                $data[$i] = $v;
+            }
+
+            if ($size & 7) {
+                $v = 0;
+                for ($j = 0; $j < ($size & 7); $j++) {
+                    $v = $v << 1;
+                    $v |= $this->data[$p];
+                    $p++;
+                }
+                $data[$bytes] = $v;
+            }
+
+            return $data;
+        }
+    }
+
+//---- qrsplit.php -----------------------------
+
+/*
+ * PHP QR Code encoder
+ *
+ * Input splitting classes
+ *
+ * Based on libqrencode C library distributed under LGPL 2.1
+ * Copyright (C) 2006, 2007, 2008, 2009 Kentaro Fukuchi <fukuchi@megaui.net>
+ *
+ * PHP QR Code is distributed under LGPL 3
+ * Copyright (C) 2010 Dominik Dzienia <deltalab at poczta dot fm>
+ *
+ * The following data / specifications are taken from
+ * "Two dimensional symbol -- QR-code -- Basic Specification" (JIS X0510:2004)
+ *  or
+ * "Automatic identification and data capture techniques --
+ *  QR Code 2005 bar code symbology specification" (ISO/IEC 18004:2006)
+ *
+ * This library is free software; you can redistribute it and/or
+ * modify it under the terms of the GNU Lesser General Public
+ * License as published by the Free Software Foundation; either
+ * version 3 of the License, or any later version.
+ *
+ * This library is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
+ * Lesser General Public License for more details.
+ *
+ * You should have received a copy of the GNU Lesser General Public
+ * License along with this library; if not, write to the Free Software
+ * Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA
+ */
+    class QRsplit
+    {
+        public $dataStr = '';
+        public $input;
+        public $modeHint;
+
+        //----------------------------------------------------------------------
+        public function __construct($dataStr, $input, $modeHint)
+        {
+            $this->dataStr = $dataStr;
+            $this->input = $input;
+            $this->modeHint = $modeHint;
+        }
+
+        //----------------------------------------------------------------------
+        public static function isdigitat($str, $pos)
+        {
+            if ($pos >= strlen($str)) {
+                return false;
+            }
+
+            return (ord($str[$pos]) >= ord('0')) && (ord($str[$pos]) <= ord('9'));
+        }
+
+        //----------------------------------------------------------------------
+        public static function isalnumat($str, $pos)
+        {
+            if ($pos >= strlen($str)) {
+                return false;
+            }
+
+            return QRinput::lookAnTable(ord($str[$pos])) >= 0;
+        }
+
+        //----------------------------------------------------------------------
+        public function identifyMode($pos)
+        {
+            if ($pos >= strlen($this->dataStr)) {
+                return QR_MODE_NUL;
+            }
+
+            $c = $this->dataStr[$pos];
+
+            if (self::isdigitat($this->dataStr, $pos)) {
+                return QR_MODE_NUM;
+            } elseif (self::isalnumat($this->dataStr, $pos)) {
+                return QR_MODE_AN;
+            } elseif ($this->modeHint == QR_MODE_KANJI) {
+                if ($pos + 1 < strlen($this->dataStr)) {
+                    $d = $this->dataStr[$pos + 1];
+                    $word = (ord($c) << 8) | ord($d);
+                    if (($word >= 0x8140 && $word <= 0x9ffc) || ($word >= 0xe040 && $word <= 0xebbf)) {
+                        return QR_MODE_KANJI;
+                    }
+                }
+            }
+
+            return QR_MODE_8;
+        }
+
+        //----------------------------------------------------------------------
+        public function eatNum()
+        {
+            $ln = QRspec::lengthIndicator(QR_MODE_NUM, $this->input->getVersion());
+
+            $p = 0;
+            while (self::isdigitat($this->dataStr, $p)) {
+                $p++;
+            }
+
+            $run = $p;
+            $mode = $this->identifyMode($p);
+
+            if ($mode == QR_MODE_8) {
+                $dif = QRinput::estimateBitsModeNum($run) + 4 + $ln
+                     + QRinput::estimateBitsMode8(1)         // + 4 + l8
+                     - QRinput::estimateBitsMode8($run + 1); // - 4 - l8
+                if ($dif > 0) {
+                    return $this->eat8();
+                }
+            }
+            if ($mode == QR_MODE_AN) {
+                $dif = QRinput::estimateBitsModeNum($run) + 4 + $ln
+                     + QRinput::estimateBitsModeAn(1)        // + 4 + la
+                     - QRinput::estimateBitsModeAn($run + 1); // - 4 - la
+                if ($dif > 0) {
+                    return $this->eatAn();
+                }
+            }
+
+            $ret = $this->input->append(QR_MODE_NUM, $run, str_split($this->dataStr));
+            if ($ret < 0) {
+                return -1;
+            }
+
+            return $run;
+        }
+
+        //----------------------------------------------------------------------
+        public function eatAn()
+        {
+            $la = QRspec::lengthIndicator(QR_MODE_AN, $this->input->getVersion());
+            $ln = QRspec::lengthIndicator(QR_MODE_NUM, $this->input->getVersion());
+
+            $p = 0;
+
+            while (self::isalnumat($this->dataStr, $p)) {
+                if (self::isdigitat($this->dataStr, $p)) {
+                    $q = $p;
+                    while (self::isdigitat($this->dataStr, $q)) {
+                        $q++;
+                    }
+
+                    $dif = QRinput::estimateBitsModeAn($p) // + 4 + la
+                         + QRinput::estimateBitsModeNum($q - $p) + 4 + $ln
+                         - QRinput::estimateBitsModeAn($q); // - 4 - la
+
+                    if ($dif < 0) {
+                        break;
+                    } else {
+                        $p = $q;
+                    }
+                } else {
+                    $p++;
+                }
+            }
+
+            $run = $p;
+
+            if (!self::isalnumat($this->dataStr, $p)) {
+                $dif = QRinput::estimateBitsModeAn($run) + 4 + $la
+                     + QRinput::estimateBitsMode8(1) // + 4 + l8
+                      - QRinput::estimateBitsMode8($run + 1); // - 4 - l8
+                if ($dif > 0) {
+                    return $this->eat8();
+                }
+            }
+
+            $ret = $this->input->append(QR_MODE_AN, $run, str_split($this->dataStr));
+            if ($ret < 0) {
+                return -1;
+            }
+
+            return $run;
+        }
+
+        //----------------------------------------------------------------------
+        public function eatKanji()
+        {
+            $p = 0;
+
+            while ($this->identifyMode($p) == QR_MODE_KANJI) {
+                $p += 2;
+            }
+
+            $ret = $this->input->append(QR_MODE_KANJI, $p, str_split($this->dataStr));
+            if ($ret < 0) {
+                return -1;
+            }
+
+            return $ret;
+        }
+
+        //----------------------------------------------------------------------
+        public function eat8()
+        {
+            $la = QRspec::lengthIndicator(QR_MODE_AN, $this->input->getVersion());
+            $ln = QRspec::lengthIndicator(QR_MODE_NUM, $this->input->getVersion());
+
+            $p = 1;
+            $dataStrLen = strlen($this->dataStr);
+
+            while ($p < $dataStrLen) {
+                $mode = $this->identifyMode($p);
+                if ($mode == QR_MODE_KANJI) {
+                    break;
+                }
+                if ($mode == QR_MODE_NUM) {
+                    $q = $p;
+                    while (self::isdigitat($this->dataStr, $q)) {
+                        $q++;
+                    }
+                    $dif = QRinput::estimateBitsMode8($p) // + 4 + l8
+                         + QRinput::estimateBitsModeNum($q - $p) + 4 + $ln
+                         - QRinput::estimateBitsMode8($q); // - 4 - l8
+                    if ($dif < 0) {
+                        break;
+                    } else {
+                        $p = $q;
+                    }
+                } elseif ($mode == QR_MODE_AN) {
+                    $q = $p;
+                    while (self::isalnumat($this->dataStr, $q)) {
+                        $q++;
+                    }
+                    $dif = QRinput::estimateBitsMode8($p)  // + 4 + l8
+                         + QRinput::estimateBitsModeAn($q - $p) + 4 + $la
+                         - QRinput::estimateBitsMode8($q); // - 4 - l8
+                    if ($dif < 0) {
+                        break;
+                    } else {
+                        $p = $q;
+                    }
+                } else {
+                    $p++;
+                }
+            }
+
+            $run = $p;
+            $ret = $this->input->append(QR_MODE_8, $run, str_split($this->dataStr));
+
+            if ($ret < 0) {
+                return -1;
+            }
+
+            return $run;
+        }
+
+        //----------------------------------------------------------------------
+        public function splitString()
+        {
+            while (strlen($this->dataStr) > 0) {
+                if ($this->dataStr == '') {
+                    return 0;
+                }
+
+                $mode = $this->identifyMode(0);
+
+                switch ($mode) {
+                    case QR_MODE_NUM: $length = $this->eatNum(); break;
+                    case QR_MODE_AN:  $length = $this->eatAn(); break;
+                    case QR_MODE_KANJI:
+                        if ($mode == QR_MODE_KANJI) {
+                            $length = $this->eatKanji();
+                        } else {
+                            $length = $this->eat8();
+                        }
+                        break;
+                    default: $length = $this->eat8(); break;
+
+                }
+
+                if ($length == 0) {
+                    return 0;
+                }
+                if ($length < 0) {
+                    return -1;
+                }
+
+                $this->dataStr = substr($this->dataStr, $length);
+            }
+        }
+
+        //----------------------------------------------------------------------
+        public function toUpper()
+        {
+            $stringLen = strlen($this->dataStr);
+            $p = 0;
+
+            while ($p < $stringLen) {
+                $mode = self::identifyMode(substr($this->dataStr, $p), $this->modeHint);
+                if ($mode == QR_MODE_KANJI) {
+                    $p += 2;
+                } else {
+                    if (ord($this->dataStr[$p]) >= ord('a') && ord($this->dataStr[$p]) <= ord('z')) {
+                        $this->dataStr[$p] = chr(ord($this->dataStr[$p]) - 32);
+                    }
+                    $p++;
+                }
+            }
+
+            return $this->dataStr;
+        }
+
+        //----------------------------------------------------------------------
+        public static function splitStringToQRinput($string, QRinput $input, $modeHint, $casesensitive = true)
+        {
+            if (is_null($string) || $string == '\0' || $string == '') {
+                throw new Exception('empty string!!!');
+            }
+
+            $split = new self($string, $input, $modeHint);
+
+            if (!$casesensitive) {
+                $split->toUpper();
+            }
+
+            return $split->splitString();
+        }
+    }
+
+//---- qrrscode.php -----------------------------
+
+/*
+ * PHP QR Code encoder
+ *
+ * Reed-Solomon error correction support
+ *
+ * Copyright (C) 2002, 2003, 2004, 2006 Phil Karn, KA9Q
+ * (libfec is released under the GNU Lesser General Public License.)
+ *
+ * Based on libqrencode C library distributed under LGPL 2.1
+ * Copyright (C) 2006, 2007, 2008, 2009 Kentaro Fukuchi <fukuchi@megaui.net>
+ *
+ * PHP QR Code is distributed under LGPL 3
+ * Copyright (C) 2010 Dominik Dzienia <deltalab at poczta dot fm>
+ *
+ * This library is free software; you can redistribute it and/or
+ * modify it under the terms of the GNU Lesser General Public
+ * License as published by the Free Software Foundation; either
+ * version 3 of the License, or any later version.
+ *
+ * This library is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
+ * Lesser General Public License for more details.
+ *
+ * You should have received a copy of the GNU Lesser General Public
+ * License along with this library; if not, write to the Free Software
+ * Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA
+ */
+
+    class QRrsItem
+    {
+        public $mm;                  // Bits per symbol
+        public $nn;                  // Symbols per block (= (1<<mm)-1)
+        public $alpha_to = [];  // log lookup table
+        public $index_of = [];  // Antilog lookup table
+        public $genpoly = [];   // Generator polynomial
+        public $nroots;              // Number of generator roots = number of parity symbols
+        public $fcr;                 // First consecutive root, index form
+        public $prim;                // Primitive element, index form
+        public $iprim;               // prim-th root of 1, index form
+        public $pad;                 // Padding bytes in shortened block
+        public $gfpoly;
+
+        //----------------------------------------------------------------------
+        public function modnn($x)
+        {
+            while ($x >= $this->nn) {
+                $x -= $this->nn;
+                $x = ($x >> $this->mm) + ($x & $this->nn);
+            }
+
+            return $x;
+        }
+
+        //----------------------------------------------------------------------
+        public static function init_rs_char($symsize, $gfpoly, $fcr, $prim, $nroots, $pad)
+        {
+            // Common code for intializing a Reed-Solomon control block (char or int symbols)
+            // Copyright 2004 Phil Karn, KA9Q
+            // May be used under the terms of the GNU Lesser General Public License (LGPL)
+
+            $rs = null;
+
+            // Check parameter ranges
+            if ($symsize < 0 || $symsize > 8) {
+                return $rs;
+            }
+            if ($fcr < 0 || $fcr >= (1 << $symsize)) {
+                return $rs;
+            }
+            if ($prim <= 0 || $prim >= (1 << $symsize)) {
+                return $rs;
+            }
+            if ($nroots < 0 || $nroots >= (1 << $symsize)) {
+                return $rs;
+            } // Can't have more roots than symbol values!
+            if ($pad < 0 || $pad >= ((1 << $symsize) - 1 - $nroots)) {
+                return $rs;
+            } // Too much padding
+
+            $rs = new self();
+            $rs->mm = $symsize;
+            $rs->nn = (1 << $symsize) - 1;
+            $rs->pad = $pad;
+
+            $rs->alpha_to = array_fill(0, $rs->nn + 1, 0);
+            $rs->index_of = array_fill(0, $rs->nn + 1, 0);
+
+            // PHP style macro replacement ;)
+            $NN = &$rs->nn;
+            $A0 = &$NN;
+
+            // Generate Galois field lookup tables
+            $rs->index_of[0] = $A0; // log(zero) = -inf
+            $rs->alpha_to[$A0] = 0; // alpha**-inf = 0
+            $sr = 1;
+
+            for ($i = 0; $i < $rs->nn; $i++) {
+                $rs->index_of[$sr] = $i;
+                $rs->alpha_to[$i] = $sr;
+                $sr <<= 1;
+                if ($sr & (1 << $symsize)) {
+                    $sr ^= $gfpoly;
+                }
+                $sr &= $rs->nn;
+            }
+
+            if ($sr != 1) {
+                // field generator polynomial is not primitive!
+                $rs = null;
+
+                return $rs;
+            }
+
+            /* Form RS code generator polynomial from its roots */
+            $rs->genpoly = array_fill(0, $nroots + 1, 0);
+
+            $rs->fcr = $fcr;
+            $rs->prim = $prim;
+            $rs->nroots = $nroots;
+            $rs->gfpoly = $gfpoly;
+
+            /* Find prim-th root of 1, used in decoding */
+            for ($iprim = 1; ($iprim % $prim) != 0; $iprim += $rs->nn); // intentional empty-body loop!
+
+            $rs->iprim = (int) ($iprim / $prim);
+            $rs->genpoly[0] = 1;
+
+            for ($i = 0,$root = $fcr * $prim; $i < $nroots; $i++, $root += $prim) {
+                $rs->genpoly[$i + 1] = 1;
+
+                // Multiply rs->genpoly[] by  @**(root + x)
+                for ($j = $i; $j > 0; $j--) {
+                    if ($rs->genpoly[$j] != 0) {
+                        $rs->genpoly[$j] = $rs->genpoly[$j - 1] ^ $rs->alpha_to[$rs->modnn($rs->index_of[$rs->genpoly[$j]] + $root)];
+                    } else {
+                        $rs->genpoly[$j] = $rs->genpoly[$j - 1];
+                    }
+                }
+                // rs->genpoly[0] can never be zero
+                $rs->genpoly[0] = $rs->alpha_to[$rs->modnn($rs->index_of[$rs->genpoly[0]] + $root)];
+            }
+
+            // convert rs->genpoly[] to index form for quicker encoding
+            for ($i = 0; $i <= $nroots; $i++) {
+                $rs->genpoly[$i] = $rs->index_of[$rs->genpoly[$i]];
+            }
+
+            return $rs;
+        }
+
+        //----------------------------------------------------------------------
+        public function encode_rs_char($data, &$parity)
+        {
+            $MM = &$this->mm;
+            $NN = &$this->nn;
+            $ALPHA_TO = &$this->alpha_to;
+            $INDEX_OF = &$this->index_of;
+            $GENPOLY = &$this->genpoly;
+            $NROOTS = &$this->nroots;
+            $FCR = &$this->fcr;
+            $PRIM = &$this->prim;
+            $IPRIM = &$this->iprim;
+            $PAD = &$this->pad;
+            $A0 = &$NN;
+
+            $parity = array_fill(0, $NROOTS, 0);
+
+            for ($i = 0; $i < ($NN - $NROOTS - $PAD); $i++) {
+                $feedback = $INDEX_OF[$data[$i] ^ $parity[0]];
+                if ($feedback != $A0) {
+                    // feedback term is non-zero
+
+                    // This line is unnecessary when GENPOLY[NROOTS] is unity, as it must
+                    // always be for the polynomials constructed by init_rs()
+                    $feedback = $this->modnn($NN - $GENPOLY[$NROOTS] + $feedback);
+
+                    for ($j = 1; $j < $NROOTS; $j++) {
+                        $parity[$j] ^= $ALPHA_TO[$this->modnn($feedback + $GENPOLY[$NROOTS - $j])];
+                    }
+                }
+
+                // Shift
+                array_shift($parity);
+                if ($feedback != $A0) {
+                    array_push($parity, $ALPHA_TO[$this->modnn($feedback + $GENPOLY[0])]);
+                } else {
+                    array_push($parity, 0);
+                }
+            }
+        }
     }
 
+    //##########################################################################
+
+    class QRrs
+    {
+        public static $items = [];
 
+        //----------------------------------------------------------------------
+        public static function init_rs($symsize, $gfpoly, $fcr, $prim, $nroots, $pad)
+        {
+            foreach (self::$items as $rs) {
+                if ($rs->pad != $pad) {
+                    continue;
+                }
+                if ($rs->nroots != $nroots) {
+                    continue;
+                }
+                if ($rs->mm != $symsize) {
+                    continue;
+                }
+                if ($rs->gfpoly != $gfpoly) {
+                    continue;
+                }
+                if ($rs->fcr != $fcr) {
+                    continue;
+                }
+                if ($rs->prim != $prim) {
+                    continue;
+                }
 
-//---- qrimage.php -----------------------------
+                return $rs;
+            }
 
+            $rs = QRrsItem::init_rs_char($symsize, $gfpoly, $fcr, $prim, $nroots, $pad);
+            array_unshift(self::$items, $rs);
 
+            return $rs;
+        }
+    }
 
+//---- qrmask.php -----------------------------
 
 /*
  * PHP QR Code encoder
  *
- * Image output of code using GD2
+ * Masking
+ *
+ * Based on libqrencode C library distributed under LGPL 2.1
+ * Copyright (C) 2006, 2007, 2008, 2009 Kentaro Fukuchi <fukuchi@megaui.net>
  *
  * PHP QR Code is distributed under LGPL 3
  * Copyright (C) 2010 Dominik Dzienia <deltalab at poczta dot fm>
@@ -947,1891 +2542,341 @@
  * Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA
  */
 
-    define('QR_IMAGE', true);
+    define('N1', 3);
+    define('N2', 3);
+    define('N3', 40);
+    define('N4', 10);
 
-    class QRimage {
+    class QRmask
+    {
+        public $runLength = [];
 
         //----------------------------------------------------------------------
-        public static function png($frame, $filename = false, $pixelPerPoint = 4, $outerFrame = 4,$saveandprint=FALSE, $back_color, $fore_color)
+        public function __construct()
         {
-            $image = self::image($frame, $pixelPerPoint, $outerFrame, $back_color, $fore_color);
+            $this->runLength = array_fill(0, QRSPEC_WIDTH_MAX + 1, 0);
+        }
 
-            if ($filename === false) {
-                Header("Content-type: image/png");
-                ImagePng($image);
-            } else {
-                if($saveandprint===TRUE){
-                    ImagePng($image, $filename);
-                    header("Content-type: image/png");
-                    ImagePng($image);
-                }else{
-                    ImagePng($image, $filename);
+        //----------------------------------------------------------------------
+        public function writeFormatInformation($width, &$frame, $mask, $level)
+        {
+            $blacks = 0;
+            $format = QRspec::getFormatInfo($mask, $level);
+
+            for ($i = 0; $i < 8; $i++) {
+                if ($format & 1) {
+                    $blacks += 2;
+                    $v = 0x85;
+                } else {
+                    $v = 0x84;
+                }
+
+                $frame[8][$width - 1 - $i] = chr($v);
+                if ($i < 6) {
+                    $frame[$i][8] = chr($v);
+                } else {
+                    $frame[$i + 1][8] = chr($v);
                 }
+                $format = $format >> 1;
             }
 
-            ImageDestroy($image);
-        }
+            for ($i = 0; $i < 7; $i++) {
+                if ($format & 1) {
+                    $blacks += 2;
+                    $v = 0x85;
+                } else {
+                    $v = 0x84;
+                }
 
-        //----------------------------------------------------------------------
-        public static function jpg($frame, $filename = false, $pixelPerPoint = 8, $outerFrame = 4, $q = 85)
-        {
-            $image = self::image($frame, $pixelPerPoint, $outerFrame);
+                $frame[$width - 7 + $i][8] = chr($v);
+                if ($i == 0) {
+                    $frame[8][7] = chr($v);
+                } else {
+                    $frame[8][6 - $i] = chr($v);
+                }
 
-            if ($filename === false) {
-                Header("Content-type: image/jpeg");
-                ImageJpeg($image, null, $q);
-            } else {
-                ImageJpeg($image, $filename, $q);
+                $format = $format >> 1;
             }
 
-            ImageDestroy($image);
+            return $blacks;
         }
 
         //----------------------------------------------------------------------
-        private static function image($frame, $pixelPerPoint = 4, $outerFrame = 4, $back_color = 0xFFFFFF, $fore_color = 0x000000)
+        public function mask0($x, $y)
         {
-            $h = count($frame);
-            $w = strlen($frame[0]);
+            return ($x + $y) & 1;
+        }
 
-            $imgW = $w + 2*$outerFrame;
-            $imgH = $h + 2*$outerFrame;
+        public function mask1($x, $y)
+        {
+            return $y & 1;
+        }
 
-            $base_image =ImageCreate($imgW, $imgH);
+        public function mask2($x, $y)
+        {
+            return $x % 3;
+        }
 
-            // convert a hexadecimal color code into decimal eps format (green = 0 1 0, blue = 0 0 1, ...)
-            $r1 = round((($fore_color & 0xFF0000) >> 16), 5);
-            $b1 = round((($fore_color & 0x00FF00) >> 8), 5);
-            $g1 = round(($fore_color & 0x0000FF), 5);
+        public function mask3($x, $y)
+        {
+            return ($x + $y) % 3;
+        }
 
-            // convert a hexadecimal color code into decimal eps format (green = 0 1 0, blue = 0 0 1, ...)
-            $r2 = round((($back_color & 0xFF0000) >> 16), 5);
-            $b2 = round((($back_color & 0x00FF00) >> 8), 5);
-            $g2 = round(($back_color & 0x0000FF), 5);
+        public function mask4($x, $y)
+        {
+            return (((int) ($y / 2)) + ((int) ($x / 3))) & 1;
+        }
 
+        public function mask5($x, $y)
+        {
+            return (($x * $y) & 1) + ($x * $y) % 3;
+        }
 
+        public function mask6($x, $y)
+        {
+            return ((($x * $y) & 1) + ($x * $y) % 3) & 1;
+        }
 
-            $col[0] = ImageColorAllocate($base_image,$r2,$b2,$g2);
-            $col[1] = ImageColorAllocate($base_image,$r1,$b1,$g1);
+        public function mask7($x, $y)
+        {
+            return ((($x * $y) % 3) + (($x + $y) & 1)) & 1;
+        }
 
-            imagefill($base_image, 0, 0, $col[0]);
+        //----------------------------------------------------------------------
+        private function generateMaskNo($maskNo, $width, $frame)
+        {
+            $bitMask = array_fill(0, $width, array_fill(0, $width, 0));
 
-            for($y=0; $y<$h; $y++) {
-                for($x=0; $x<$w; $x++) {
-                    if ($frame[$y][$x] == '1') {
-                        ImageSetPixel($base_image,$x+$outerFrame,$y+$outerFrame,$col[1]);
+            for ($y = 0; $y < $width; $y++) {
+                for ($x = 0; $x < $width; $x++) {
+                    if (ord($frame[$y][$x]) & 0x80) {
+                        $bitMask[$y][$x] = 0;
+                    } else {
+                        $maskFunc = call_user_func([$this, 'mask'.$maskNo], $x, $y);
+                        $bitMask[$y][$x] = ($maskFunc == 0) ? 1 : 0;
                     }
                 }
             }
 
-            $target_image =ImageCreate($imgW * $pixelPerPoint, $imgH * $pixelPerPoint);
-            ImageCopyResized($target_image, $base_image, 0, 0, 0, 0, $imgW * $pixelPerPoint, $imgH * $pixelPerPoint, $imgW, $imgH);
-            ImageDestroy($base_image);
-
-            return $target_image;
+            return $bitMask;
         }
-    }
-
 
+        //----------------------------------------------------------------------
+        public static function serial($bitFrame)
+        {
+            $codeArr = [];
 
-//---- qrinput.php -----------------------------
-
+            foreach ($bitFrame as $line) {
+                $codeArr[] = implode('', $line);
+            }
 
+            return gzcompress(implode("\n", $codeArr), 9);
+        }
 
-
-/*
- * PHP QR Code encoder
- *
- * Input encoding class
- *
- * Based on libqrencode C library distributed under LGPL 2.1
- * Copyright (C) 2006, 2007, 2008, 2009 Kentaro Fukuchi <fukuchi@megaui.net>
- *
- * PHP QR Code is distributed under LGPL 3
- * Copyright (C) 2010 Dominik Dzienia <deltalab at poczta dot fm>
- *
- * This library is free software; you can redistribute it and/or
- * modify it under the terms of the GNU Lesser General Public
- * License as published by the Free Software Foundation; either
- * version 3 of the License, or any later version.
- *
- * This library is distributed in the hope that it will be useful,
- * but WITHOUT ANY WARRANTY; without even the implied warranty of
- * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
- * Lesser General Public License for more details.
- *
- * You should have received a copy of the GNU Lesser General Public
- * License along with this library; if not, write to the Free Software
- * Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA
- */
- 
-    define('STRUCTURE_HEADER_BITS',  20);
-    define('MAX_STRUCTURED_SYMBOLS', 16);
-
-    class QRinputItem {
-    
-        public $mode;
-        public $size;
-        public $data;
-        public $bstream;
-
-        public function __construct($mode, $size, $data, $bstream = null) 
-        {
-            $setData = array_slice($data, 0, $size);
-            
-            if (count($setData) < $size) {
-                $setData = array_merge($setData, array_fill(0,$size-count($setData),0));
-            }
-        
-            if(!QRinput::check($mode, $size, $setData)) {
-                throw new Exception('Error m:'.$mode.',s:'.$size.',d:'.join(',',$setData));
-                return null;
-            }
-            
-            $this->mode = $mode;
-            $this->size = $size;
-            $this->data = $setData;
-            $this->bstream = $bstream;
-        }
-        
-        //----------------------------------------------------------------------
-        public function encodeModeNum($version)
-        {
-            try {
-            
-                $words = (int)($this->size / 3);
-                $bs = new QRbitstream();
-                
-                $val = 0x1;
-                $bs->appendNum(4, $val);
-                $bs->appendNum(QRspec::lengthIndicator(QR_MODE_NUM, $version), $this->size);
-
-                for($i=0; $i<$words; $i++) {
-                    $val  = (ord($this->data[$i*3  ]) - ord('0')) * 100;
-                    $val += (ord($this->data[$i*3+1]) - ord('0')) * 10;
-                    $val += (ord($this->data[$i*3+2]) - ord('0'));
-                    $bs->appendNum(10, $val);
-                }
-
-                if($this->size - $words * 3 == 1) {
-                    $val = ord($this->data[$words*3]) - ord('0');
-                    $bs->appendNum(4, $val);
-                } else if($this->size - $words * 3 == 2) {
-                    $val  = (ord($this->data[$words*3  ]) - ord('0')) * 10;
-                    $val += (ord($this->data[$words*3+1]) - ord('0'));
-                    $bs->appendNum(7, $val);
-                }
-
-                $this->bstream = $bs;
-                return 0;
-                
-            } catch (Exception $e) {
-                return -1;
-            }
-        }
-        
-        //----------------------------------------------------------------------
-        public function encodeModeAn($version)
-        {
-            try {
-                $words = (int)($this->size / 2);
-                $bs = new QRbitstream();
-                
-                $bs->appendNum(4, 0x02);
-                $bs->appendNum(QRspec::lengthIndicator(QR_MODE_AN, $version), $this->size);
-
-                for($i=0; $i<$words; $i++) {
-                    $val  = (int)QRinput::lookAnTable(ord($this->data[$i*2  ])) * 45;
-                    $val += (int)QRinput::lookAnTable(ord($this->data[$i*2+1]));
-
-                    $bs->appendNum(11, $val);
-                }
-
-                if($this->size & 1) {
-                    $val = QRinput::lookAnTable(ord($this->data[$words * 2]));
-                    $bs->appendNum(6, $val);
-                }
-        
-                $this->bstream = $bs;
-                return 0;
-            
-            } catch (Exception $e) {
-                return -1;
-            }
-        }
-        
-        //----------------------------------------------------------------------
-        public function encodeMode8($version)
-        {
-            try {
-                $bs = new QRbitstream();
-
-                $bs->appendNum(4, 0x4);
-                $bs->appendNum(QRspec::lengthIndicator(QR_MODE_8, $version), $this->size);
-
-                for($i=0; $i<$this->size; $i++) {
-                    $bs->appendNum(8, ord($this->data[$i]));
-                }
-
-                $this->bstream = $bs;
-                return 0;
-            
-            } catch (Exception $e) {
-                return -1;
-            }
-        }
-        
-        //----------------------------------------------------------------------
-        public function encodeModeKanji($version)
-        {
-            try {
-
-                $bs = new QRbitrtream();
-                
-                $bs->appendNum(4, 0x8);
-                $bs->appendNum(QRspec::lengthIndicator(QR_MODE_KANJI, $version), (int)($this->size / 2));
-
-                for($i=0; $i<$this->size; $i+=2) {
-                    $val = (ord($this->data[$i]) << 8) | ord($this->data[$i+1]);
-                    if($val <= 0x9ffc) {
-                        $val -= 0x8140;
-                    } else {
-                        $val -= 0xc140;
-                    }
-                    
-                    $h = ($val >> 8) * 0xc0;
-                    $val = ($val & 0xff) + $h;
-
-                    $bs->appendNum(13, $val);
-                }
-
-                $this->bstream = $bs;
-                return 0;
-            
-            } catch (Exception $e) {
-                return -1;
-            }
-        }
-
-        //----------------------------------------------------------------------
-        public function encodeModeStructure()
-        {
-            try {
-                $bs =  new QRbitstream();
-                
-                $bs->appendNum(4, 0x03);
-                $bs->appendNum(4, ord($this->data[1]) - 1);
-                $bs->appendNum(4, ord($this->data[0]) - 1);
-                $bs->appendNum(8, ord($this->data[2]));
-
-                $this->bstream = $bs;
-                return 0;
-            
-            } catch (Exception $e) {
-                return -1;
-            }
-        }
-        
-        //----------------------------------------------------------------------
-        public function estimateBitStreamSizeOfEntry($version)
-        {
-            $bits = 0;
-
-            if($version == 0) 
-                $version = 1;
-
-            switch($this->mode) {
-                case QR_MODE_NUM:        $bits = QRinput::estimateBitsModeNum($this->size);    break;
-                case QR_MODE_AN:        $bits = QRinput::estimateBitsModeAn($this->size);    break;
-                case QR_MODE_8:            $bits = QRinput::estimateBitsMode8($this->size);    break;
-                case QR_MODE_KANJI:        $bits = QRinput::estimateBitsModeKanji($this->size);break;
-                case QR_MODE_STRUCTURE:    return STRUCTURE_HEADER_BITS;            
-                default:
-                    return 0;
-            }
-
-            $l = QRspec::lengthIndicator($this->mode, $version);
-            $m = 1 << $l;
-            $num = (int)(($this->size + $m - 1) / $m);
-
-            $bits += $num * (4 + $l);
-
-            return $bits;
-        }
-        
-        //----------------------------------------------------------------------
-        public function encodeBitStream($version)
-        {
-            try {
-            
-                unset($this->bstream);
-                $words = QRspec::maximumWords($this->mode, $version);
-                
-                if($this->size > $words) {
-                
-                    $st1 = new QRinputItem($this->mode, $words, $this->data);
-                    $st2 = new QRinputItem($this->mode, $this->size - $words, array_slice($this->data, $words));
-
-                    $st1->encodeBitStream($version);
-                    $st2->encodeBitStream($version);
-                    
-                    $this->bstream = new QRbitstream();
-                    $this->bstream->append($st1->bstream);
-                    $this->bstream->append($st2->bstream);
-                    
-                    unset($st1);
-                    unset($st2);
-                    
-                } else {
-                    
-                    $ret = 0;
-                    
-                    switch($this->mode) {
-                        case QR_MODE_NUM:        $ret = $this->encodeModeNum($version);    break;
-                        case QR_MODE_AN:        $ret = $this->encodeModeAn($version);    break;
-                        case QR_MODE_8:            $ret = $this->encodeMode8($version);    break;
-                        case QR_MODE_KANJI:        $ret = $this->encodeModeKanji($version);break;
-                        case QR_MODE_STRUCTURE:    $ret = $this->encodeModeStructure();    break;
-                        
-                        default:
-                            break;
-                    }
-                    
-                    if($ret < 0)
-                        return -1;
-                }
-
-                return $this->bstream->size();
-            
-            } catch (Exception $e) {
-                return -1;
-            }
-        }
-    };
-    
-    //##########################################################################
-
-    class QRinput {
-
-        public $items;
-        
-        private $version;
-        private $level;
-        
-        //----------------------------------------------------------------------
-        public function __construct($version = 0, $level = QR_ECLEVEL_L)
-        {
-            if ($version < 0 || $version > QRSPEC_VERSION_MAX || $level > QR_ECLEVEL_H) {
-                throw new Exception('Invalid version no');
-                return NULL;
-            }
-            
-            $this->version = $version;
-            $this->level = $level;
-        }
-        
-        //----------------------------------------------------------------------
-        public function getVersion()
-        {
-            return $this->version;
-        }
-        
-        //----------------------------------------------------------------------
-        public function setVersion($version)
-        {
-            if($version < 0 || $version > QRSPEC_VERSION_MAX) {
-                throw new Exception('Invalid version no');
-                return -1;
-            }
-
-            $this->version = $version;
-
-            return 0;
-        }
-        
-        //----------------------------------------------------------------------
-        public function getErrorCorrectionLevel()
-        {
-            return $this->level;
-        }
-
-        //----------------------------------------------------------------------
-        public function setErrorCorrectionLevel($level)
-        {
-            if($level > QR_ECLEVEL_H) {
-                throw new Exception('Invalid ECLEVEL');
-                return -1;
-            }
-
-            $this->level = $level;
-
-            return 0;
-        }
-        
-        //----------------------------------------------------------------------
-        public function appendEntry(QRinputItem $entry)
-        {
-            $this->items[] = $entry;
-        }
-        
-        //----------------------------------------------------------------------
-        public function append($mode, $size, $data)
-        {
-            try {
-                $entry = new QRinputItem($mode, $size, $data);
-                $this->items[] = $entry;
-                return 0;
-            } catch (Exception $e) {
-                return -1;
-            }
-        }
-        
-        //----------------------------------------------------------------------
-        
-        public function insertStructuredAppendHeader($size, $index, $parity)
-        {
-            if( $size > MAX_STRUCTURED_SYMBOLS ) {
-                throw new Exception('insertStructuredAppendHeader wrong size');
-            }
-            
-            if( $index <= 0 || $index > MAX_STRUCTURED_SYMBOLS ) {
-                throw new Exception('insertStructuredAppendHeader wrong index');
-            }
-
-            $buf = array($size, $index, $parity);
-            
-            try {
-                $entry = new QRinputItem(QR_MODE_STRUCTURE, 3, buf);
-                array_unshift($this->items, $entry);
-                return 0;
-            } catch (Exception $e) {
-                return -1;
-            }
-        }
-
-        //----------------------------------------------------------------------
-        public function calcParity()
-        {
-            $parity = 0;
-            
-            foreach($this->items as $item) {
-                if($item->mode != QR_MODE_STRUCTURE) {
-                    for($i=$item->size-1; $i>=0; $i--) {
-                        $parity ^= $item->data[$i];
-                    }
-                }
-            }
-
-            return $parity;
-        }
-        
-        //----------------------------------------------------------------------
-        public static function checkModeNum($size, $data)
-        {
-            for($i=0; $i<$size; $i++) {
-                if((ord($data[$i]) < ord('0')) || (ord($data[$i]) > ord('9'))){
-                    return false;
-                }
-            }
-
-            return true;
-        }
-
-        //----------------------------------------------------------------------
-        public static function estimateBitsModeNum($size)
-        {
-            $w = (int)$size / 3;
-            $bits = $w * 10;
-            
-            switch($size - $w * 3) {
-                case 1:
-                    $bits += 4;
-                    break;
-                case 2:
-                    $bits += 7;
-                    break;
-                default:
-                    break;
-            }
-
-            return $bits;
-        }
-        
-        //----------------------------------------------------------------------
-        public static $anTable = array(
-            -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
-            -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
-            36, -1, -1, -1, 37, 38, -1, -1, -1, -1, 39, 40, -1, 41, 42, 43,
-             0,  1,  2,  3,  4,  5,  6,  7,  8,  9, 44, -1, -1, -1, -1, -1,
-            -1, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24,
-            25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, -1, -1, -1, -1, -1,
-            -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
-            -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1
-        );
-        
-        //----------------------------------------------------------------------
-        public static function lookAnTable($c)
-        {
-            return (($c > 127)?-1:self::$anTable[$c]);
-        }
-        
-        //----------------------------------------------------------------------
-        public static function checkModeAn($size, $data)
-        {
-            for($i=0; $i<$size; $i++) {
-                if (self::lookAnTable(ord($data[$i])) == -1) {
-                    return false;
-                }
-            }
-
-            return true;
-        }
-        
-        //----------------------------------------------------------------------
-        public static function estimateBitsModeAn($size)
-        {
-            $w = (int)($size / 2);
-            $bits = $w * 11;
-            
-            if($size & 1) {
-                $bits += 6;
-            }
-
-            return $bits;
-        }
-    
-        //----------------------------------------------------------------------
-        public static function estimateBitsMode8($size)
-        {
-            return $size * 8;
-        }
-        
-        //----------------------------------------------------------------------
-        public function estimateBitsModeKanji($size)
-        {
-            return (int)(($size / 2) * 13);
-        }
-        
-        //----------------------------------------------------------------------
-        public static function checkModeKanji($size, $data)
-        {
-            if($size & 1)
-                return false;
-
-            for($i=0; $i<$size; $i+=2) {
-                $val = (ord($data[$i]) << 8) | ord($data[$i+1]);
-                if( $val < 0x8140 
-                || ($val > 0x9ffc && $val < 0xe040) 
-                || $val > 0xebbf) {
-                    return false;
-                }
-            }
-
-            return true;
-        }
-
-        /***********************************************************************
-         * Validation
-         **********************************************************************/
-
-        public static function check($mode, $size, $data)
-        {
-            if($size <= 0) 
-                return false;
-
-            switch($mode) {
-                case QR_MODE_NUM:       return self::checkModeNum($size, $data);   break;
-                case QR_MODE_AN:        return self::checkModeAn($size, $data);    break;
-                case QR_MODE_KANJI:     return self::checkModeKanji($size, $data); break;
-                case QR_MODE_8:         return true; break;
-                case QR_MODE_STRUCTURE: return true; break;
-                
-                default:
-                    break;
-            }
-
-            return false;
-        }
-        
-        
-        //----------------------------------------------------------------------
-        public function estimateBitStreamSize($version)
-        {
-            $bits = 0;
-
-            foreach($this->items as $item) {
-                $bits += $item->estimateBitStreamSizeOfEntry($version);
-            }
-
-            return $bits;
-        }
-        
-        //----------------------------------------------------------------------
-        public function estimateVersion()
-        {
-            $version = 0;
-            $prev = 0;
-            do {
-                $prev = $version;
-                $bits = $this->estimateBitStreamSize($prev);
-                $version = QRspec::getMinimumVersion((int)(($bits + 7) / 8), $this->level);
-                if ($version < 0) {
-                    return -1;
-                }
-            } while ($version > $prev);
-
-            return $version;
-        }
-        
-        //----------------------------------------------------------------------
-        public static function lengthOfCode($mode, $version, $bits)
-        {
-            $payload = $bits - 4 - QRspec::lengthIndicator($mode, $version);
-            switch($mode) {
-                case QR_MODE_NUM:
-                    $chunks = (int)($payload / 10);
-                    $remain = $payload - $chunks * 10;
-                    $size = $chunks * 3;
-                    if($remain >= 7) {
-                        $size += 2;
-                    } else if($remain >= 4) {
-                        $size += 1;
-                    }
-                    break;
-                case QR_MODE_AN:
-                    $chunks = (int)($payload / 11);
-                    $remain = $payload - $chunks * 11;
-                    $size = $chunks * 2;
-                    if($remain >= 6) 
-                        $size++;
-                    break;
-                case QR_MODE_8:
-                    $size = (int)($payload / 8);
-                    break;
-                case QR_MODE_KANJI:
-                    $size = (int)(($payload / 13) * 2);
-                    break;
-                case QR_MODE_STRUCTURE:
-                    $size = (int)($payload / 8);
-                    break;
-                default:
-                    $size = 0;
-                    break;
-            }
-            
-            $maxsize = QRspec::maximumWords($mode, $version);
-            if($size < 0) $size = 0;
-            if($size > $maxsize) $size = $maxsize;
-
-            return $size;
-        }
-        
-        //----------------------------------------------------------------------
-        public function createBitStream()
-        {
-            $total = 0;
-
-            foreach($this->items as $item) {
-                $bits = $item->encodeBitStream($this->version);
-                
-                if($bits < 0) 
-                    return -1;
-                    
-                $total += $bits;
-            }
-
-            return $total;
-        }
-        
-        //----------------------------------------------------------------------
-        public function convertData()
-        {
-            $ver = $this->estimateVersion();
-            if($ver > $this->getVersion()) {
-                $this->setVersion($ver);
-            }
-
-            for(;;) {
-                $bits = $this->createBitStream();
-                
-                if($bits < 0) 
-                    return -1;
-                    
-                $ver = QRspec::getMinimumVersion((int)(($bits + 7) / 8), $this->level);
-                if($ver < 0) {
-                    throw new Exception('WRONG VERSION');
-                    return -1;
-                } else if($ver > $this->getVersion()) {
-                    $this->setVersion($ver);
-                } else {
-                    break;
-                }
-            }
-
-            return 0;
-        }
-        
-        //----------------------------------------------------------------------
-        public function appendPaddingBit(&$bstream)
-        {
-            $bits = $bstream->size();
-            $maxwords = QRspec::getDataLength($this->version, $this->level);
-            $maxbits = $maxwords * 8;
-
-            if ($maxbits == $bits) {
-                return 0;
-            }
-
-            if ($maxbits - $bits < 5) {
-                return $bstream->appendNum($maxbits - $bits, 0);
-            }
-
-            $bits += 4;
-            $words = (int)(($bits + 7) / 8);
-
-            $padding = new QRbitstream();
-            $ret = $padding->appendNum($words * 8 - $bits + 4, 0);
-            
-            if($ret < 0) 
-                return $ret;
-
-            $padlen = $maxwords - $words;
-            
-            if($padlen > 0) {
-                
-                $padbuf = array();
-                for($i=0; $i<$padlen; $i++) {
-                    $padbuf[$i] = ($i&1)?0x11:0xec;
-                }
-                
-                $ret = $padding->appendBytes($padlen, $padbuf);
-                
-                if($ret < 0)
-                    return $ret;
-                
-            }
-
-            $ret = $bstream->append($padding);
-            
-            return $ret;
-        }
-
-        //----------------------------------------------------------------------
-        public function mergeBitStream()
-        {
-            if($this->convertData() < 0) {
-                return null;
-            }
-
-            $bstream = new QRbitstream();
-            
-            foreach($this->items as $item) {
-                $ret = $bstream->append($item->bstream);
-                if($ret < 0) {
-                    return null;
-                }
-            }
-
-            return $bstream;
-        }
-
-        //----------------------------------------------------------------------
-        public function getBitStream()
-        {
-
-            $bstream = $this->mergeBitStream();
-            
-            if($bstream == null) {
-                return null;
-            }
-            
-            $ret = $this->appendPaddingBit($bstream);
-            if($ret < 0) {
-                return null;
-            }
-
-            return $bstream;
-        }
-        
-        //----------------------------------------------------------------------
-        public function getByteStream()
-        {
-            $bstream = $this->getBitStream();
-            if($bstream == null) {
-                return null;
-            }
-            
-            return $bstream->toByte();
-        }
-    }
-        
-        
-    
+        //----------------------------------------------------------------------
+        public static function unserial($code)
+        {
+            $codeArr = [];
 
+            $codeLines = explode("\n", gzuncompress($code));
+            foreach ($codeLines as $line) {
+                $codeArr[] = str_split($line);
+            }
 
+            return $codeArr;
+        }
 
-//---- qrbitstream.php -----------------------------
+        //----------------------------------------------------------------------
+        public function makeMaskNo($maskNo, $width, $s, &$d, $maskGenOnly = false)
+        {
+            $b = 0;
+            $bitMask = [];
 
+            $fileName = QR_CACHE_DIR.'mask_'.$maskNo.DIRECTORY_SEPARATOR.'mask_'.$width.'_'.$maskNo.'.dat';
 
+            if (QR_CACHEABLE) {
+                if (file_exists($fileName)) {
+                    $bitMask = self::unserial(file_get_contents($fileName));
+                } else {
+                    $bitMask = $this->generateMaskNo($maskNo, $width, $s, $d);
+                    if (!file_exists(QR_CACHE_DIR.'mask_'.$maskNo)) {
+                        mkdir(QR_CACHE_DIR.'mask_'.$maskNo);
+                    }
+                    file_put_contents($fileName, self::serial($bitMask));
+                }
+            } else {
+                $bitMask = $this->generateMaskNo($maskNo, $width, $s, $d);
+            }
 
-
-/*
- * PHP QR Code encoder
- *
- * Bitstream class
- *
- * Based on libqrencode C library distributed under LGPL 2.1
- * Copyright (C) 2006, 2007, 2008, 2009 Kentaro Fukuchi <fukuchi@megaui.net>
- *
- * PHP QR Code is distributed under LGPL 3
- * Copyright (C) 2010 Dominik Dzienia <deltalab at poczta dot fm>
- *
- * This library is free software; you can redistribute it and/or
- * modify it under the terms of the GNU Lesser General Public
- * License as published by the Free Software Foundation; either
- * version 3 of the License, or any later version.
- *
- * This library is distributed in the hope that it will be useful,
- * but WITHOUT ANY WARRANTY; without even the implied warranty of
- * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
- * Lesser General Public License for more details.
- *
- * You should have received a copy of the GNU Lesser General Public
- * License along with this library; if not, write to the Free Software
- * Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA
- */
-     
-    class QRbitstream {
-    
-        public $data = array();
-        
-        //----------------------------------------------------------------------
-        public function size()
-        {
-            return count($this->data);
-        }
-        
-        //----------------------------------------------------------------------
-        public function allocate($setLength)
-        {
-            $this->data = array_fill(0, $setLength, 0);
-            return 0;
-        }
-    
-        //----------------------------------------------------------------------
-        public static function newFromNum($bits, $num)
-        {
-            $bstream = new QRbitstream();
-            $bstream->allocate($bits);
-            
-            $mask = 1 << ($bits - 1);
-            for($i=0; $i<$bits; $i++) {
-                if($num & $mask) {
-                    $bstream->data[$i] = 1;
-                } else {
-                    $bstream->data[$i] = 0;
-                }
-                $mask = $mask >> 1;
-            }
-
-            return $bstream;
-        }
-        
-        //----------------------------------------------------------------------
-        public static function newFromBytes($size, $data)
-        {
-            $bstream = new QRbitstream();
-            $bstream->allocate($size * 8);
-            $p=0;
-
-            for($i=0; $i<$size; $i++) {
-                $mask = 0x80;
-                for($j=0; $j<8; $j++) {
-                    if($data[$i] & $mask) {
-                        $bstream->data[$p] = 1;
-                    } else {
-                        $bstream->data[$p] = 0;
-                    }
-                    $p++;
-                    $mask = $mask >> 1;
-                }
-            }
-
-            return $bstream;
-        }
-        
-        //----------------------------------------------------------------------
-        public function append(QRbitstream $arg)
-        {
-            if (is_null($arg)) {
-                return -1;
-            }
-            
-            if($arg->size() == 0) {
-                return 0;
-            }
-            
-            if($this->size() == 0) {
-                $this->data = $arg->data;
-                return 0;
-            }
-            
-            $this->data = array_values(array_merge($this->data, $arg->data));
-
-            return 0;
-        }
-        
-        //----------------------------------------------------------------------
-        public function appendNum($bits, $num)
-        {
-            if ($bits == 0) 
-                return 0;
-
-            $b = QRbitstream::newFromNum($bits, $num);
-            
-            if(is_null($b))
-                return -1;
-
-            $ret = $this->append($b);
-            unset($b);
-
-            return $ret;
-        }
-
-        //----------------------------------------------------------------------
-        public function appendBytes($size, $data)
-        {
-            if ($size == 0) 
-                return 0;
-
-            $b = QRbitstream::newFromBytes($size, $data);
-            
-            if(is_null($b))
-                return -1;
-
-            $ret = $this->append($b);
-            unset($b);
-
-            return $ret;
-        }
-        
-        //----------------------------------------------------------------------
-        public function toByte()
-        {
-        
-            $size = $this->size();
-
-            if($size == 0) {
-                return array();
-            }
-            
-            $data = array_fill(0, (int)(($size + 7) / 8), 0);
-            $bytes = (int)($size / 8);
-
-            $p = 0;
-            
-            for($i=0; $i<$bytes; $i++) {
-                $v = 0;
-                for($j=0; $j<8; $j++) {
-                    $v = $v << 1;
-                    $v |= $this->data[$p];
-                    $p++;
-                }
-                $data[$i] = $v;
-            }
-            
-            if($size & 7) {
-                $v = 0;
-                for($j=0; $j<($size & 7); $j++) {
-                    $v = $v << 1;
-                    $v |= $this->data[$p];
-                    $p++;
-                }
-                $data[$bytes] = $v;
-            }
-
-            return $data;
-        }
-
-    }
+            if ($maskGenOnly) {
+                return;
+            }
 
+            $d = $s;
 
+            for ($y = 0; $y < $width; $y++) {
+                for ($x = 0; $x < $width; $x++) {
+                    if ($bitMask[$y][$x] == 1) {
+                        $d[$y][$x] = chr(ord($s[$y][$x]) ^ (int) $bitMask[$y][$x]);
+                    }
+                    $b += (int) (ord($d[$y][$x]) & 1);
+                }
+            }
 
+            return $b;
+        }
 
-//---- qrsplit.php -----------------------------
+        //----------------------------------------------------------------------
+        public function makeMask($width, $frame, $maskNo, $level)
+        {
+            $masked = array_fill(0, $width, str_repeat("\0", $width));
+            $this->makeMaskNo($maskNo, $width, $frame, $masked);
+            $this->writeFormatInformation($width, $masked, $maskNo, $level);
 
+            return $masked;
+        }
 
+        //----------------------------------------------------------------------
+        public function calcN1N3($length)
+        {
+            $demerit = 0;
 
-
-/*
- * PHP QR Code encoder
- *
- * Input splitting classes
- *
- * Based on libqrencode C library distributed under LGPL 2.1
- * Copyright (C) 2006, 2007, 2008, 2009 Kentaro Fukuchi <fukuchi@megaui.net>
- *
- * PHP QR Code is distributed under LGPL 3
- * Copyright (C) 2010 Dominik Dzienia <deltalab at poczta dot fm>
- *
- * The following data / specifications are taken from
- * "Two dimensional symbol -- QR-code -- Basic Specification" (JIS X0510:2004)
- *  or
- * "Automatic identification and data capture techniques --
- *  QR Code 2005 bar code symbology specification" (ISO/IEC 18004:2006)
- *
- * This library is free software; you can redistribute it and/or
- * modify it under the terms of the GNU Lesser General Public
- * License as published by the Free Software Foundation; either
- * version 3 of the License, or any later version.
- *
- * This library is distributed in the hope that it will be useful,
- * but WITHOUT ANY WARRANTY; without even the implied warranty of
- * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
- * Lesser General Public License for more details.
- *
- * You should have received a copy of the GNU Lesser General Public
- * License along with this library; if not, write to the Free Software
- * Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA
- */
-    class QRsplit {
-
-        public $dataStr = '';
-        public $input;
-        public $modeHint;
-
-        //----------------------------------------------------------------------
-        public function __construct($dataStr, $input, $modeHint)
-        {
-            $this->dataStr  = $dataStr;
-            $this->input    = $input;
-            $this->modeHint = $modeHint;
-        }
-
-        //----------------------------------------------------------------------
-        public static function isdigitat($str, $pos)
-        {
-            if ($pos >= strlen($str))
-                return false;
-
-            return ((ord($str[$pos]) >= ord('0'))&&(ord($str[$pos]) <= ord('9')));
-        }
-
-        //----------------------------------------------------------------------
-        public static function isalnumat($str, $pos)
-        {
-            if ($pos >= strlen($str))
-                return false;
-
-            return (QRinput::lookAnTable(ord($str[$pos])) >= 0);
-        }
-
-        //----------------------------------------------------------------------
-        public function identifyMode($pos)
-        {
-            if ($pos >= strlen($this->dataStr))
-                return QR_MODE_NUL;
-
-            $c = $this->dataStr[$pos];
-
-            if(self::isdigitat($this->dataStr, $pos)) {
-                return QR_MODE_NUM;
-            } else if(self::isalnumat($this->dataStr, $pos)) {
-                return QR_MODE_AN;
-            } else if($this->modeHint == QR_MODE_KANJI) {
-
-                if ($pos+1 < strlen($this->dataStr))
-                {
-                    $d = $this->dataStr[$pos+1];
-                    $word = (ord($c) << 8) | ord($d);
-                    if(($word >= 0x8140 && $word <= 0x9ffc) || ($word >= 0xe040 && $word <= 0xebbf)) {
-                        return QR_MODE_KANJI;
-                    }
-                }
-            }
-
-            return QR_MODE_8;
-        }
-
-        //----------------------------------------------------------------------
-        public function eatNum()
-        {
-            $ln = QRspec::lengthIndicator(QR_MODE_NUM, $this->input->getVersion());
-
-            $p = 0;
-            while(self::isdigitat($this->dataStr, $p)) {
-                $p++;
-            }
-
-            $run = $p;
-            $mode = $this->identifyMode($p);
-
-            if($mode == QR_MODE_8) {
-                $dif = QRinput::estimateBitsModeNum($run) + 4 + $ln
-                     + QRinput::estimateBitsMode8(1)         // + 4 + l8
-                     - QRinput::estimateBitsMode8($run + 1); // - 4 - l8
-                if($dif > 0) {
-                    return $this->eat8();
-                }
-            }
-            if($mode == QR_MODE_AN) {
-                $dif = QRinput::estimateBitsModeNum($run) + 4 + $ln
-                     + QRinput::estimateBitsModeAn(1)        // + 4 + la
-                     - QRinput::estimateBitsModeAn($run + 1);// - 4 - la
-                if($dif > 0) {
-                    return $this->eatAn();
-                }
-            }
-
-            $ret = $this->input->append(QR_MODE_NUM, $run, str_split($this->dataStr));
-            if($ret < 0)
-                return -1;
-
-            return $run;
-        }
-
-        //----------------------------------------------------------------------
-        public function eatAn()
-        {
-            $la = QRspec::lengthIndicator(QR_MODE_AN,  $this->input->getVersion());
-            $ln = QRspec::lengthIndicator(QR_MODE_NUM, $this->input->getVersion());
-
-            $p = 0;
-
-            while(self::isalnumat($this->dataStr, $p)) {
-                if(self::isdigitat($this->dataStr, $p)) {
-                    $q = $p;
-                    while(self::isdigitat($this->dataStr, $q)) {
-                        $q++;
-                    }
-
-                    $dif = QRinput::estimateBitsModeAn($p) // + 4 + la
-                         + QRinput::estimateBitsModeNum($q - $p) + 4 + $ln
-                         - QRinput::estimateBitsModeAn($q); // - 4 - la
-
-                    if($dif < 0) {
-                        break;
-                    } else {
-                        $p = $q;
-                    }
-                } else {
-                    $p++;
-                }
-            }
-
-            $run = $p;
-
-            if(!self::isalnumat($this->dataStr, $p)) {
-                $dif = QRinput::estimateBitsModeAn($run) + 4 + $la
-                     + QRinput::estimateBitsMode8(1) // + 4 + l8
-                      - QRinput::estimateBitsMode8($run + 1); // - 4 - l8
-                if($dif > 0) {
-                    return $this->eat8();
-                }
-            }
-
-            $ret = $this->input->append(QR_MODE_AN, $run, str_split($this->dataStr));
-            if($ret < 0)
-                return -1;
-
-            return $run;
-        }
-
-        //----------------------------------------------------------------------
-        public function eatKanji()
-        {
-            $p = 0;
-
-            while($this->identifyMode($p) == QR_MODE_KANJI) {
-                $p += 2;
-            }
-
-            $ret = $this->input->append(QR_MODE_KANJI, $p, str_split($this->dataStr));
-            if($ret < 0)
-                return -1;
-
-            return $ret;
-        }
-
-        //----------------------------------------------------------------------
-        public function eat8()
-        {
-            $la = QRspec::lengthIndicator(QR_MODE_AN, $this->input->getVersion());
-            $ln = QRspec::lengthIndicator(QR_MODE_NUM, $this->input->getVersion());
-
-            $p = 1;
-            $dataStrLen = strlen($this->dataStr);
-
-            while($p < $dataStrLen) {
-
-                $mode = $this->identifyMode($p);
-                if($mode == QR_MODE_KANJI) {
-                    break;
-                }
-                if($mode == QR_MODE_NUM) {
-                    $q = $p;
-                    while(self::isdigitat($this->dataStr, $q)) {
-                        $q++;
-                    }
-                    $dif = QRinput::estimateBitsMode8($p) // + 4 + l8
-                         + QRinput::estimateBitsModeNum($q - $p) + 4 + $ln
-                         - QRinput::estimateBitsMode8($q); // - 4 - l8
-                    if($dif < 0) {
-                        break;
-                    } else {
-                        $p = $q;
-                    }
-                } else if($mode == QR_MODE_AN) {
-                    $q = $p;
-                    while(self::isalnumat($this->dataStr, $q)) {
-                        $q++;
-                    }
-                    $dif = QRinput::estimateBitsMode8($p)  // + 4 + l8
-                         + QRinput::estimateBitsModeAn($q - $p) + 4 + $la
-                         - QRinput::estimateBitsMode8($q); // - 4 - l8
-                    if($dif < 0) {
-                        break;
-                    } else {
-                        $p = $q;
-                    }
-                } else {
-                    $p++;
-                }
-            }
-
-            $run = $p;
-            $ret = $this->input->append(QR_MODE_8, $run, str_split($this->dataStr));
-
-            if($ret < 0)
-                return -1;
-
-            return $run;
-        }
-
-        //----------------------------------------------------------------------
-        public function splitString()
-        {
-            while (strlen($this->dataStr) > 0)
-            {
-                if($this->dataStr == '')
-                    return 0;
-
-                $mode = $this->identifyMode(0);
-
-                switch ($mode) {
-                    case QR_MODE_NUM: $length = $this->eatNum(); break;
-                    case QR_MODE_AN:  $length = $this->eatAn(); break;
-                    case QR_MODE_KANJI:
-                        if ($mode == QR_MODE_KANJI)
-                                $length = $this->eatKanji();
-                        else    $length = $this->eat8();
-                        break;
-                    default: $length = $this->eat8(); break;
-
-                }
-
-                if($length == 0) return 0;
-                if($length < 0)  return -1;
-
-                $this->dataStr = substr($this->dataStr, $length);
-            }
-        }
-
-        //----------------------------------------------------------------------
-        public function toUpper()
-        {
-            $stringLen = strlen($this->dataStr);
-            $p = 0;
-
-            while ($p<$stringLen) {
-                $mode = self::identifyMode(substr($this->dataStr, $p), $this->modeHint);
-                if($mode == QR_MODE_KANJI) {
-                    $p += 2;
-                } else {
-                    if (ord($this->dataStr[$p]) >= ord('a') && ord($this->dataStr[$p]) <= ord('z')) {
-                        $this->dataStr[$p] = chr(ord($this->dataStr[$p]) - 32);
-                    }
-                    $p++;
-                }
-            }
-
-            return $this->dataStr;
-        }
-
-        //----------------------------------------------------------------------
-        public static function splitStringToQRinput($string, QRinput $input, $modeHint, $casesensitive = true)
-        {
-            if(is_null($string) || $string == '\0' || $string == '') {
-                throw new Exception('empty string!!!');
-            }
-
-            $split = new QRsplit($string, $input, $modeHint);
-
-            if(!$casesensitive)
-                $split->toUpper();
-
-            return $split->splitString();
-        }
-    }
+            for ($i = 0; $i < $length; $i++) {
+                if ($this->runLength[$i] >= 5) {
+                    $demerit += (N1 + ($this->runLength[$i] - 5));
+                }
+                if ($i & 1) {
+                    if (($i >= 3) && ($i < ($length - 2)) && ($this->runLength[$i] % 3 == 0)) {
+                        $fact = (int) ($this->runLength[$i] / 3);
+                        if (($this->runLength[$i - 2] == $fact) &&
+                           ($this->runLength[$i - 1] == $fact) &&
+                           ($this->runLength[$i + 1] == $fact) &&
+                           ($this->runLength[$i + 2] == $fact)) {
+                            if (($this->runLength[$i - 3] < 0) || ($this->runLength[$i - 3] >= (4 * $fact))) {
+                                $demerit += N3;
+                            } elseif ((($i + 3) >= $length) || ($this->runLength[$i + 3] >= (4 * $fact))) {
+                                $demerit += N3;
+                            }
+                        }
+                    }
+                }
+            }
 
+            return $demerit;
+        }
 
+        //----------------------------------------------------------------------
+        public function evaluateSymbol($width, $frame)
+        {
+            $head = 0;
+            $demerit = 0;
 
-//---- qrrscode.php -----------------------------
+            for ($y = 0; $y < $width; $y++) {
+                $head = 0;
+                $this->runLength[0] = 1;
 
+                $frameY = $frame[$y];
 
+                if ($y > 0) {
+                    $frameYM = $frame[$y - 1];
+                }
 
-
-/*
- * PHP QR Code encoder
- *
- * Reed-Solomon error correction support
- * 
- * Copyright (C) 2002, 2003, 2004, 2006 Phil Karn, KA9Q
- * (libfec is released under the GNU Lesser General Public License.)
- *
- * Based on libqrencode C library distributed under LGPL 2.1
- * Copyright (C) 2006, 2007, 2008, 2009 Kentaro Fukuchi <fukuchi@megaui.net>
- *
- * PHP QR Code is distributed under LGPL 3
- * Copyright (C) 2010 Dominik Dzienia <deltalab at poczta dot fm>
- *
- * This library is free software; you can redistribute it and/or
- * modify it under the terms of the GNU Lesser General Public
- * License as published by the Free Software Foundation; either
- * version 3 of the License, or any later version.
- *
- * This library is distributed in the hope that it will be useful,
- * but WITHOUT ANY WARRANTY; without even the implied warranty of
- * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
- * Lesser General Public License for more details.
- *
- * You should have received a copy of the GNU Lesser General Public
- * License along with this library; if not, write to the Free Software
- * Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA
- */
- 
-    class QRrsItem {
-    
-        public $mm;                  // Bits per symbol 
-        public $nn;                  // Symbols per block (= (1<<mm)-1) 
-        public $alpha_to = array();  // log lookup table 
-        public $index_of = array();  // Antilog lookup table 
-        public $genpoly = array();   // Generator polynomial 
-        public $nroots;              // Number of generator roots = number of parity symbols 
-        public $fcr;                 // First consecutive root, index form 
-        public $prim;                // Primitive element, index form 
-        public $iprim;               // prim-th root of 1, index form 
-        public $pad;                 // Padding bytes in shortened block 
-        public $gfpoly;
-    
-        //----------------------------------------------------------------------
-        public function modnn($x)
-        {
-            while ($x >= $this->nn) {
-                $x -= $this->nn;
-                $x = ($x >> $this->mm) + ($x & $this->nn);
-            }
-            
-            return $x;
-        }
-        
-        //----------------------------------------------------------------------
-        public static function init_rs_char($symsize, $gfpoly, $fcr, $prim, $nroots, $pad)
-        {
-            // Common code for intializing a Reed-Solomon control block (char or int symbols)
-            // Copyright 2004 Phil Karn, KA9Q
-            // May be used under the terms of the GNU Lesser General Public License (LGPL)
-
-            $rs = null;
-            
-            // Check parameter ranges
-            if($symsize < 0 || $symsize > 8)                     return $rs;
-            if($fcr < 0 || $fcr >= (1<<$symsize))                return $rs;
-            if($prim <= 0 || $prim >= (1<<$symsize))             return $rs;
-            if($nroots < 0 || $nroots >= (1<<$symsize))          return $rs; // Can't have more roots than symbol values!
-            if($pad < 0 || $pad >= ((1<<$symsize) -1 - $nroots)) return $rs; // Too much padding
-
-            $rs = new QRrsItem();
-            $rs->mm = $symsize;
-            $rs->nn = (1<<$symsize)-1;
-            $rs->pad = $pad;
-
-            $rs->alpha_to = array_fill(0, $rs->nn+1, 0);
-            $rs->index_of = array_fill(0, $rs->nn+1, 0);
-          
-            // PHP style macro replacement ;)
-            $NN =& $rs->nn;
-            $A0 =& $NN;
-            
-            // Generate Galois field lookup tables
-            $rs->index_of[0] = $A0; // log(zero) = -inf
-            $rs->alpha_to[$A0] = 0; // alpha**-inf = 0
-            $sr = 1;
-          
-            for($i=0; $i<$rs->nn; $i++) {
-                $rs->index_of[$sr] = $i;
-                $rs->alpha_to[$i] = $sr;
-                $sr <<= 1;
-                if($sr & (1<<$symsize)) {
-                    $sr ^= $gfpoly;
-                }
-                $sr &= $rs->nn;
-            }
-            
-            if($sr != 1){
-                // field generator polynomial is not primitive!
-                $rs = NULL;
-                return $rs;
-            }
-
-            /* Form RS code generator polynomial from its roots */
-            $rs->genpoly = array_fill(0, $nroots+1, 0);
-        
-            $rs->fcr = $fcr;
-            $rs->prim = $prim;
-            $rs->nroots = $nroots;
-            $rs->gfpoly = $gfpoly;
-
-            /* Find prim-th root of 1, used in decoding */
-            for($iprim=1;($iprim % $prim) != 0;$iprim += $rs->nn)
-            ; // intentional empty-body loop!
-            
-            $rs->iprim = (int)($iprim / $prim);
-            $rs->genpoly[0] = 1;
-            
-            for ($i = 0,$root=$fcr*$prim; $i < $nroots; $i++, $root += $prim) {
-                $rs->genpoly[$i+1] = 1;
-
-                // Multiply rs->genpoly[] by  @**(root + x)
-                for ($j = $i; $j > 0; $j--) {
-                    if ($rs->genpoly[$j] != 0) {
-                        $rs->genpoly[$j] = $rs->genpoly[$j-1] ^ $rs->alpha_to[$rs->modnn($rs->index_of[$rs->genpoly[$j]] + $root)];
-                    } else {
-                        $rs->genpoly[$j] = $rs->genpoly[$j-1];
-                    }
-                }
-                // rs->genpoly[0] can never be zero
-                $rs->genpoly[0] = $rs->alpha_to[$rs->modnn($rs->index_of[$rs->genpoly[0]] + $root)];
-            }
-            
-            // convert rs->genpoly[] to index form for quicker encoding
-            for ($i = 0; $i <= $nroots; $i++)
-                $rs->genpoly[$i] = $rs->index_of[$rs->genpoly[$i]];
-
-            return $rs;
-        }
-        
-        //----------------------------------------------------------------------
-        public function encode_rs_char($data, &$parity)
-        {
-            $MM       =& $this->mm;
-            $NN       =& $this->nn;
-            $ALPHA_TO =& $this->alpha_to;
-            $INDEX_OF =& $this->index_of;
-            $GENPOLY  =& $this->genpoly;
-            $NROOTS   =& $this->nroots;
-            $FCR      =& $this->fcr;
-            $PRIM     =& $this->prim;
-            $IPRIM    =& $this->iprim;
-            $PAD      =& $this->pad;
-            $A0       =& $NN;
-
-            $parity = array_fill(0, $NROOTS, 0);
-
-            for($i=0; $i< ($NN-$NROOTS-$PAD); $i++) {
-                
-                $feedback = $INDEX_OF[$data[$i] ^ $parity[0]];
-                if($feedback != $A0) {      
-                    // feedback term is non-zero
-            
-                    // This line is unnecessary when GENPOLY[NROOTS] is unity, as it must
-                    // always be for the polynomials constructed by init_rs()
-                    $feedback = $this->modnn($NN - $GENPOLY[$NROOTS] + $feedback);
-            
-                    for($j=1;$j<$NROOTS;$j++) {
-                        $parity[$j] ^= $ALPHA_TO[$this->modnn($feedback + $GENPOLY[$NROOTS-$j])];
-                    }
-                }
-                
-                // Shift 
-                array_shift($parity);
-                if($feedback != $A0) {
-                    array_push($parity, $ALPHA_TO[$this->modnn($feedback + $GENPOLY[0])]);
-                } else {
-                    array_push($parity, 0);
-                }
-            }
-        }
-    }
-    
-    //##########################################################################
-    
-    class QRrs {
-    
-        public static $items = array();
-        
-        //----------------------------------------------------------------------
-        public static function init_rs($symsize, $gfpoly, $fcr, $prim, $nroots, $pad)
-        {
-            foreach(self::$items as $rs) {
-                if($rs->pad != $pad)       continue;
-                if($rs->nroots != $nroots) continue;
-                if($rs->mm != $symsize)    continue;
-                if($rs->gfpoly != $gfpoly) continue;
-                if($rs->fcr != $fcr)       continue;
-                if($rs->prim != $prim)     continue;
-
-                return $rs;
-            }
-
-            $rs = QRrsItem::init_rs_char($symsize, $gfpoly, $fcr, $prim, $nroots, $pad);
-            array_unshift(self::$items, $rs);
-
-            return $rs;
-        }
-    }
+                for ($x = 0; $x < $width; $x++) {
+                    if (($x > 0) && ($y > 0)) {
+                        $b22 = ord($frameY[$x]) & ord($frameY[$x - 1]) & ord($frameYM[$x]) & ord($frameYM[$x - 1]);
+                        $w22 = ord($frameY[$x]) | ord($frameY[$x - 1]) | ord($frameYM[$x]) | ord($frameYM[$x - 1]);
 
+                        if (($b22 | ($w22 ^ 1)) & 1) {
+                            $demerit += N2;
+                        }
+                    }
+                    if (($x == 0) && (ord($frameY[$x]) & 1)) {
+                        $this->runLength[0] = -1;
+                        $head = 1;
+                        $this->runLength[$head] = 1;
+                    } elseif ($x > 0) {
+                        if ((ord($frameY[$x]) ^ ord($frameY[$x - 1])) & 1) {
+                            $head++;
+                            $this->runLength[$head] = 1;
+                        } else {
+                            $this->runLength[$head]++;
+                        }
+                    }
+                }
 
+                $demerit += $this->calcN1N3($head + 1);
+            }
 
-//---- qrmask.php -----------------------------
+            for ($x = 0; $x < $width; $x++) {
+                $head = 0;
+                $this->runLength[0] = 1;
+
+                for ($y = 0; $y < $width; $y++) {
+                    if ($y == 0 && (ord($frame[$y][$x]) & 1)) {
+                        $this->runLength[0] = -1;
+                        $head = 1;
+                        $this->runLength[$head] = 1;
+                    } elseif ($y > 0) {
+                        if ((ord($frame[$y][$x]) ^ ord($frame[$y - 1][$x])) & 1) {
+                            $head++;
+                            $this->runLength[$head] = 1;
+                        } else {
+                            $this->runLength[$head]++;
+                        }
+                    }
+                }
 
+                $demerit += $this->calcN1N3($head + 1);
+            }
 
+            return $demerit;
+        }
 
-
-/*
- * PHP QR Code encoder
- *
- * Masking
- *
- * Based on libqrencode C library distributed under LGPL 2.1
- * Copyright (C) 2006, 2007, 2008, 2009 Kentaro Fukuchi <fukuchi@megaui.net>
- *
- * PHP QR Code is distributed under LGPL 3
- * Copyright (C) 2010 Dominik Dzienia <deltalab at poczta dot fm>
- *
- * This library is free software; you can redistribute it and/or
- * modify it under the terms of the GNU Lesser General Public
- * License as published by the Free Software Foundation; either
- * version 3 of the License, or any later version.
- *
- * This library is distributed in the hope that it will be useful,
- * but WITHOUT ANY WARRANTY; without even the implied warranty of
- * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
- * Lesser General Public License for more details.
- *
- * You should have received a copy of the GNU Lesser General Public
- * License along with this library; if not, write to the Free Software
- * Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA
- */
-
-	define('N1', 3);
-	define('N2', 3);
-	define('N3', 40);
-	define('N4', 10);
-
-	class QRmask {
-
-		public $runLength = array();
-
-		//----------------------------------------------------------------------
-		public function __construct()
-        {
-            $this->runLength = array_fill(0, QRSPEC_WIDTH_MAX + 1, 0);
-        }
-
-        //----------------------------------------------------------------------
-        public function writeFormatInformation($width, &$frame, $mask, $level)
-        {
-            $blacks = 0;
-            $format =  QRspec::getFormatInfo($mask, $level);
-
-            for($i=0; $i<8; $i++) {
-                if($format & 1) {
-                    $blacks += 2;
-                    $v = 0x85;
-                } else {
-                    $v = 0x84;
-                }
-
-                $frame[8][$width - 1 - $i] = chr($v);
-                if($i < 6) {
-                    $frame[$i][8] = chr($v);
-                } else {
-                    $frame[$i + 1][8] = chr($v);
-                }
-                $format = $format >> 1;
-            }
-
-            for($i=0; $i<7; $i++) {
-                if($format & 1) {
-                    $blacks += 2;
-                    $v = 0x85;
-                } else {
-                    $v = 0x84;
-                }
-
-                $frame[$width - 7 + $i][8] = chr($v);
-                if($i == 0) {
-                    $frame[8][7] = chr($v);
-                } else {
-                    $frame[8][6 - $i] = chr($v);
-                }
-
-                $format = $format >> 1;
-            }
-
-            return $blacks;
-        }
-
-        //----------------------------------------------------------------------
-        public function mask0($x, $y) { return ($x+$y)&1;                       }
-        public function mask1($x, $y) { return ($y&1);                          }
-        public function mask2($x, $y) { return ($x%3);                          }
-        public function mask3($x, $y) { return ($x+$y)%3;                       }
-        public function mask4($x, $y) { return (((int)($y/2))+((int)($x/3)))&1; }
-        public function mask5($x, $y) { return (($x*$y)&1)+($x*$y)%3;           }
-        public function mask6($x, $y) { return ((($x*$y)&1)+($x*$y)%3)&1;       }
-        public function mask7($x, $y) { return ((($x*$y)%3)+(($x+$y)&1))&1;     }
-
-        //----------------------------------------------------------------------
-        private function generateMaskNo($maskNo, $width, $frame)
-        {
-            $bitMask = array_fill(0, $width, array_fill(0, $width, 0));
-
-            for($y=0; $y<$width; $y++) {
-                for($x=0; $x<$width; $x++) {
-                    if(ord($frame[$y][$x]) & 0x80) {
-                        $bitMask[$y][$x] = 0;
-                    } else {
-                        $maskFunc = call_user_func(array($this, 'mask'.$maskNo), $x, $y);
-                        $bitMask[$y][$x] = ($maskFunc == 0)?1:0;
-                    }
-
-                }
-            }
-
-            return $bitMask;
-        }
-
-        //----------------------------------------------------------------------
-        public static function serial($bitFrame)
-        {
-            $codeArr = array();
-
-            foreach ($bitFrame as $line)
-                $codeArr[] = join('', $line);
-
-            return gzcompress(join("\n", $codeArr), 9);
-        }
-
-        //----------------------------------------------------------------------
-        public static function unserial($code)
-        {
-            $codeArr = array();
-
-            $codeLines = explode("\n", gzuncompress($code));
-            foreach ($codeLines as $line)
-                $codeArr[] = str_split($line);
-
-            return $codeArr;
-        }
-
-        //----------------------------------------------------------------------
-        public function makeMaskNo($maskNo, $width, $s, &$d, $maskGenOnly = false)
-        {
-            $b = 0;
-            $bitMask = array();
-
-            $fileName = QR_CACHE_DIR.'mask_'.$maskNo.DIRECTORY_SEPARATOR.'mask_'.$width.'_'.$maskNo.'.dat';
-
-            if (QR_CACHEABLE) {
-                if (file_exists($fileName)) {
-                    $bitMask = self::unserial(file_get_contents($fileName));
-                } else {
-                    $bitMask = $this->generateMaskNo($maskNo, $width, $s, $d);
-                    if (!file_exists(QR_CACHE_DIR.'mask_'.$maskNo))
-                        mkdir(QR_CACHE_DIR.'mask_'.$maskNo);
-                    file_put_contents($fileName, self::serial($bitMask));
-                }
-            } else {
-                $bitMask = $this->generateMaskNo($maskNo, $width, $s, $d);
-            }
-
-            if ($maskGenOnly)
-                return;
-
-            $d = $s;
-
-            for($y=0; $y<$width; $y++) {
-                for($x=0; $x<$width; $x++) {
-                    if($bitMask[$y][$x] == 1) {
-                        $d[$y][$x] = chr(ord($s[$y][$x]) ^ (int)$bitMask[$y][$x]);
-                    }
-                    $b += (int)(ord($d[$y][$x]) & 1);
-                }
-            }
-
-            return $b;
-        }
-
-        //----------------------------------------------------------------------
-        public function makeMask($width, $frame, $maskNo, $level)
-        {
-            $masked = array_fill(0, $width, str_repeat("\0", $width));
-            $this->makeMaskNo($maskNo, $width, $frame, $masked);
-            $this->writeFormatInformation($width, $masked, $maskNo, $level);
-
-            return $masked;
-        }
-
-        //----------------------------------------------------------------------
-        public function calcN1N3($length)
-        {
-            $demerit = 0;
-
-            for($i=0; $i<$length; $i++) {
-
-                if($this->runLength[$i] >= 5) {
-                    $demerit += (N1 + ($this->runLength[$i] - 5));
-                }
-                if($i & 1) {
-                    if(($i >= 3) && ($i < ($length-2)) && ($this->runLength[$i] % 3 == 0)) {
-                        $fact = (int)($this->runLength[$i] / 3);
-                        if(($this->runLength[$i-2] == $fact) &&
-                           ($this->runLength[$i-1] == $fact) &&
-                           ($this->runLength[$i+1] == $fact) &&
-                           ($this->runLength[$i+2] == $fact)) {
-                            if(($this->runLength[$i-3] < 0) || ($this->runLength[$i-3] >= (4 * $fact))) {
-                                $demerit += N3;
-                            } else if((($i+3) >= $length) || ($this->runLength[$i+3] >= (4 * $fact))) {
-                                $demerit += N3;
-                            }
-                        }
-                    }
-                }
-            }
-            return $demerit;
-        }
-
-        //----------------------------------------------------------------------
-        public function evaluateSymbol($width, $frame)
-        {
-            $head = 0;
-            $demerit = 0;
-
-            for($y=0; $y<$width; $y++) {
-                $head = 0;
-                $this->runLength[0] = 1;
-
-                $frameY = $frame[$y];
-
-                if ($y>0)
-                    $frameYM = $frame[$y-1];
-
-                for($x=0; $x<$width; $x++) {
-                    if(($x > 0) && ($y > 0)) {
-                        $b22 = ord($frameY[$x]) & ord($frameY[$x-1]) & ord($frameYM[$x]) & ord($frameYM[$x-1]);
-                        $w22 = ord($frameY[$x]) | ord($frameY[$x-1]) | ord($frameYM[$x]) | ord($frameYM[$x-1]);
-
-                        if(($b22 | ($w22 ^ 1))&1) {
-                            $demerit += N2;
-                        }
-                    }
-                    if(($x == 0) && (ord($frameY[$x]) & 1)) {
-                        $this->runLength[0] = -1;
-                        $head = 1;
-                        $this->runLength[$head] = 1;
-                    } else if($x > 0) {
-                        if((ord($frameY[$x]) ^ ord($frameY[$x-1])) & 1) {
-                            $head++;
-                            $this->runLength[$head] = 1;
-                        } else {
-                            $this->runLength[$head]++;
-                        }
-                    }
-                }
-
-                $demerit += $this->calcN1N3($head+1);
-            }
-
-            for($x=0; $x<$width; $x++) {
-                $head = 0;
-                $this->runLength[0] = 1;
-
-                for($y=0; $y<$width; $y++) {
-                    if($y == 0 && (ord($frame[$y][$x]) & 1)) {
-                        $this->runLength[0] = -1;
-                        $head = 1;
-                        $this->runLength[$head] = 1;
-                    } else if($y > 0) {
-                        if((ord($frame[$y][$x]) ^ ord($frame[$y-1][$x])) & 1) {
-                            $head++;
-                            $this->runLength[$head] = 1;
-                        } else {
-                            $this->runLength[$head]++;
-                        }
-                    }
-                }
-
-                $demerit += $this->calcN1N3($head+1);
-            }
-
-            return $demerit;
-        }
-
-
-        //----------------------------------------------------------------------
-        public function mask($width, $frame, $level)
-        {
-            $minDemerit = PHP_INT_MAX;
-            $bestMaskNum = 0;
-            $bestMask = array();
-
-            $checked_masks = array(0,1,2,3,4,5,6,7);
-
-            if (QR_FIND_FROM_RANDOM !== false) {
-
-                $howManuOut = 8-(QR_FIND_FROM_RANDOM % 9);
-                for ($i = 0; $i <  $howManuOut; $i++) {
-                    $remPos = rand (0, count($checked_masks)-1);
-                    unset($checked_masks[$remPos]);
-                    $checked_masks = array_values($checked_masks);
-                }
-
-            }
-
-            $bestMask = $frame;
-
-            foreach($checked_masks as $i) {
-                $mask = array_fill(0, $width, str_repeat("\0", $width));
-
-                $demerit = 0;
-                $blacks = 0;
-                $blacks  = $this->makeMaskNo($i, $width, $frame, $mask);
-                $blacks += $this->writeFormatInformation($width, $mask, $i, $level);
-                $blacks  = (int)(100 * $blacks / ($width * $width));
-                $demerit = (int)((int)(abs($blacks - 50) / 5) * N4);
-                $demerit += $this->evaluateSymbol($width, $mask);
-
-                if($demerit < $minDemerit) {
-                    $minDemerit = $demerit;
-                    $bestMask = $mask;
-                    $bestMaskNum = $i;
-                }
-            }
-
-            return $bestMask;
-        }
-
-        //----------------------------------------------------------------------
-    }
+        //----------------------------------------------------------------------
+        public function mask($width, $frame, $level)
+        {
+            $minDemerit = PHP_INT_MAX;
+            $bestMaskNum = 0;
+            $bestMask = [];
+
+            $checked_masks = [0, 1, 2, 3, 4, 5, 6, 7];
+
+            if (QR_FIND_FROM_RANDOM !== false) {
+                $howManuOut = 8 - (QR_FIND_FROM_RANDOM % 9);
+                for ($i = 0; $i < $howManuOut; $i++) {
+                    $remPos = rand(0, count($checked_masks) - 1);
+                    unset($checked_masks[$remPos]);
+                    $checked_masks = array_values($checked_masks);
+                }
+            }
 
+            $bestMask = $frame;
 
+            foreach ($checked_masks as $i) {
+                $mask = array_fill(0, $width, str_repeat("\0", $width));
 
+                $demerit = 0;
+                $blacks = 0;
+                $blacks = $this->makeMaskNo($i, $width, $frame, $mask);
+                $blacks += $this->writeFormatInformation($width, $mask, $i, $level);
+                $blacks = (int) (100 * $blacks / ($width * $width));
+                $demerit = (int) ((int) (abs($blacks - 50) / 5) * N4);
+                $demerit += $this->evaluateSymbol($width, $mask);
 
-//---- qrencode.php -----------------------------
+                if ($demerit < $minDemerit) {
+                    $minDemerit = $demerit;
+                    $bestMask = $mask;
+                    $bestMaskNum = $i;
+                }
+            }
 
+            return $bestMask;
+        }
 
+        //----------------------------------------------------------------------
+    }
 
+//---- qrencode.php -----------------------------
 
 /*
  * PHP QR Code encoder
@@ -2858,44 +2903,46 @@
  * License along with this library; if not, write to the Free Software
  * Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA
  */
- 
-    class QRrsblock {
+
+    class QRrsblock
+    {
         public $dataLength;
-        public $data = array();
+        public $data = [];
         public $eccLength;
-        public $ecc = array();
-        
+        public $ecc = [];
+
         public function __construct($dl, $data, $el, &$ecc, QRrsItem $rs)
         {
             $rs->encode_rs_char($data, $ecc);
-        
+
             $this->dataLength = $dl;
             $this->data = $data;
             $this->eccLength = $el;
             $this->ecc = $ecc;
         }
-    };
-    
+    }
+
     //##########################################################################
 
-    class QRrawcode {
+    class QRrawcode
+    {
         public $version;
-        public $datacode = array();
-        public $ecccode = array();
+        public $datacode = [];
+        public $ecccode = [];
         public $blocks;
-        public $rsblocks = array(); //of RSblock
+        public $rsblocks = []; //of RSblock
         public $count;
         public $dataLength;
         public $eccLength;
         public $b1;
-        
+
         //----------------------------------------------------------------------
         public function __construct(QRinput $input)
         {
-            $spec = array(0,0,0,0,0);
-            
+            $spec = [0, 0, 0, 0, 0];
+
             $this->datacode = $input->getByteStream();
-            if(is_null($this->datacode)) {
+            if (is_null($this->datacode)) {
                 throw new Exception('null imput string');
             }
 
@@ -2907,51 +2954,53 @@
             $this->eccLength = QRspec::rsEccLength($spec);
             $this->ecccode = array_fill(0, $this->eccLength, 0);
             $this->blocks = QRspec::rsBlockNum($spec);
-            
+
             $ret = $this->init($spec);
-            if($ret < 0) {
+            if ($ret < 0) {
                 throw new Exception('block alloc error');
-                return null;
+                return;
             }
 
             $this->count = 0;
         }
-        
+
         //----------------------------------------------------------------------
         public function init(array $spec)
         {
             $dl = QRspec::rsDataCodes1($spec);
             $el = QRspec::rsEccCodes1($spec);
             $rs = QRrs::init_rs(8, 0x11d, 0, 1, $el, 255 - $dl - $el);
-            
 
             $blockNo = 0;
             $dataPos = 0;
             $eccPos = 0;
-            for($i=0; $i<QRspec::rsBlockNum1($spec); $i++) {
-                $ecc = array_slice($this->ecccode,$eccPos);
-                $this->rsblocks[$blockNo] = new QRrsblock($dl, array_slice($this->datacode, $dataPos), $el,  $ecc, $rs);
-                $this->ecccode = array_merge(array_slice($this->ecccode,0, $eccPos), $ecc);
-                
+            for ($i = 0; $i < QRspec::rsBlockNum1($spec); $i++) {
+                $ecc = array_slice($this->ecccode, $eccPos);
+                $this->rsblocks[$blockNo] = new QRrsblock($dl, array_slice($this->datacode, $dataPos), $el, $ecc, $rs);
+                $this->ecccode = array_merge(array_slice($this->ecccode, 0, $eccPos), $ecc);
+
                 $dataPos += $dl;
                 $eccPos += $el;
                 $blockNo++;
             }
 
-            if(QRspec::rsBlockNum2($spec) == 0)
+            if (QRspec::rsBlockNum2($spec) == 0) {
                 return 0;
+            }
 
             $dl = QRspec::rsDataCodes2($spec);
             $el = QRspec::rsEccCodes2($spec);
             $rs = QRrs::init_rs(8, 0x11d, 0, 1, $el, 255 - $dl - $el);
-            
-            if($rs == NULL) return -1;
-            
-            for($i=0; $i<QRspec::rsBlockNum2($spec); $i++) {
-                $ecc = array_slice($this->ecccode,$eccPos);
+
+            if ($rs == null) {
+                return -1;
+            }
+
+            for ($i = 0; $i < QRspec::rsBlockNum2($spec); $i++) {
+                $ecc = array_slice($this->ecccode, $eccPos);
                 $this->rsblocks[$blockNo] = new QRrsblock($dl, array_slice($this->datacode, $dataPos), $el, $ecc, $rs);
-                $this->ecccode = array_merge(array_slice($this->ecccode,0, $eccPos), $ecc);
-                
+                $this->ecccode = array_merge(array_slice($this->ecccode, 0, $eccPos), $ecc);
+
                 $dataPos += $dl;
                 $eccPos += $el;
                 $blockNo++;
@@ -2959,20 +3008,20 @@
 
             return 0;
         }
-        
+
         //----------------------------------------------------------------------
         public function getCode()
         {
             $ret;
 
-            if($this->count < $this->dataLength) {
+            if ($this->count < $this->dataLength) {
                 $row = $this->count % $this->blocks;
                 $col = $this->count / $this->blocks;
-                if($col >= $this->rsblocks[0]->dataLength) {
+                if ($col >= $this->rsblocks[0]->dataLength) {
                     $row += $this->b1;
                 }
                 $ret = $this->rsblocks[$row]->data[$col];
-            } else if($this->count < $this->dataLength + $this->eccLength) {
+            } elseif ($this->count < $this->dataLength + $this->eccLength) {
                 $row = ($this->count - $this->dataLength) % $this->blocks;
                 $col = ($this->count - $this->dataLength) / $this->blocks;
                 $ret = $this->rsblocks[$row]->ecc[$col];
@@ -2980,72 +3029,70 @@
                 return 0;
             }
             $this->count++;
-            
+
             return $ret;
         }
     }
 
     //##########################################################################
-    
-    class QRcode {
-    
+
+    class QRcode
+    {
         public $version;
         public $width;
-        public $data; 
-        
+        public $data;
+
         //----------------------------------------------------------------------
         public function encodeMask(QRinput $input, $mask)
         {
-            if($input->getVersion() < 0 || $input->getVersion() > QRSPEC_VERSION_MAX) {
+            if ($input->getVersion() < 0 || $input->getVersion() > QRSPEC_VERSION_MAX) {
                 throw new Exception('wrong version');
             }
-            if($input->getErrorCorrectionLevel() > QR_ECLEVEL_H) {
+            if ($input->getErrorCorrectionLevel() > QR_ECLEVEL_H) {
                 throw new Exception('wrong level');
             }
 
             $raw = new QRrawcode($input);
-            
+
             QRtools::markTime('after_raw');
-            
+
             $version = $raw->version;
             $width = QRspec::getWidth($version);
             $frame = QRspec::newFrame($version);
-            
+
             $filler = new FrameFiller($width, $frame);
-            if(is_null($filler)) {
-                return NULL;
+            if (is_null($filler)) {
+                return;
             }
 
             // inteleaved data and ecc codes
-            for($i=0; $i<$raw->dataLength + $raw->eccLength; $i++) {
+            for ($i = 0; $i < $raw->dataLength + $raw->eccLength; $i++) {
                 $code = $raw->getCode();
                 $bit = 0x80;
-                for($j=0; $j<8; $j++) {
+                for ($j = 0; $j < 8; $j++) {
                     $addr = $filler->next();
                     $filler->setFrameAt($addr, 0x02 | (($bit & $code) != 0));
                     $bit = $bit >> 1;
                 }
             }
-            
+
             QRtools::markTime('after_filler');
-            
+
             unset($raw);
-            
+
             // remainder bits
             $j = QRspec::getRemainder($version);
-            for($i=0; $i<$j; $i++) {
+            for ($i = 0; $i < $j; $i++) {
                 $addr = $filler->next();
                 $filler->setFrameAt($addr, 0x02);
             }
-            
+
             $frame = $filler->frame;
             unset($filler);
-            
-            
+
             // masking
             $maskObj = new QRmask();
-            if($mask < 0) {
-            
+            if ($mask < 0) {
                 if (QR_FIND_BEST_MASK) {
                     $masked = $maskObj->mask($width, $frame, $input->getErrorCorrectionLevel());
                 } else {
@@ -3054,112 +3101,122 @@
             } else {
                 $masked = $maskObj->makeMask($width, $frame, $mask, $input->getErrorCorrectionLevel());
             }
-            
-            if($masked == NULL) {
-                return NULL;
+
+            if ($masked == null) {
+                return;
             }
-            
+
             QRtools::markTime('after_mask');
-            
+
             $this->version = $version;
             $this->width = $width;
             $this->data = $masked;
-            
+
             return $this;
         }
-    
+
         //----------------------------------------------------------------------
         public function encodeInput(QRinput $input)
         {
             return $this->encodeMask($input, -1);
         }
-        
+
         //----------------------------------------------------------------------
         public function encodeString8bit($string, $version, $level)
         {
-            if(string == NULL) {
+            if (string == null) {
                 throw new Exception('empty string!');
-                return NULL;
+                return;
             }
 
             $input = new QRinput($version, $level);
-            if($input == NULL) return NULL;
+            if ($input == null) {
+                return;
+            }
 
             $ret = $input->append($input, QR_MODE_8, strlen($string), str_split($string));
-            if($ret < 0) {
+            if ($ret < 0) {
                 unset($input);
-                return NULL;
+
+                return;
             }
+
             return $this->encodeInput($input);
         }
 
         //----------------------------------------------------------------------
         public function encodeString($string, $version, $level, $hint, $casesensitive)
         {
-
-            if($hint != QR_MODE_8 && $hint != QR_MODE_KANJI) {
+            if ($hint != QR_MODE_8 && $hint != QR_MODE_KANJI) {
                 throw new Exception('bad hint');
-                return NULL;
+                return;
             }
 
             $input = new QRinput($version, $level);
-            if($input == NULL) return NULL;
+            if ($input == null) {
+                return;
+            }
 
             $ret = QRsplit::splitStringToQRinput($string, $input, $hint, $casesensitive);
-            if($ret < 0) {
-                return NULL;
+            if ($ret < 0) {
+                return;
             }
 
             return $this->encodeInput($input);
         }
-        
+
         //----------------------------------------------------------------------
-        public static function png($text, $outfile = false, $level = QR_ECLEVEL_L, $size = 3, $margin = 4, $saveandprint=false, $back_color = 0xFFFFFF, $fore_color = 0x000000) 
+        public static function png($text, $outfile = false, $level = QR_ECLEVEL_L, $size = 3, $margin = 4, $saveandprint = false, $back_color = 0xFFFFFF, $fore_color = 0x000000)
         {
             $enc = QRencode::factory($level, $size, $margin, $back_color, $fore_color);
-            return $enc->encodePNG($text, $outfile, $saveandprint=false);
+
+            return $enc->encodePNG($text, $outfile, $saveandprint = false);
         }
 
         //----------------------------------------------------------------------
-        public static function text($text, $outfile = false, $level = QR_ECLEVEL_L, $size = 3, $margin = 4) 
+        public static function text($text, $outfile = false, $level = QR_ECLEVEL_L, $size = 3, $margin = 4)
         {
             $enc = QRencode::factory($level, $size, $margin);
+
             return $enc->encode($text, $outfile);
         }
-        
+
         //----------------------------------------------------------------------
-        public static function eps($text, $outfile = false, $level = QR_ECLEVEL_L, $size = 3, $margin = 4, $saveandprint=false, $back_color = 0xFFFFFF, $fore_color = 0x000000, $cmyk = false) 
+        public static function eps($text, $outfile = false, $level = QR_ECLEVEL_L, $size = 3, $margin = 4, $saveandprint = false, $back_color = 0xFFFFFF, $fore_color = 0x000000, $cmyk = false)
         {
             $enc = QRencode::factory($level, $size, $margin, $back_color, $fore_color, $cmyk);
-            return $enc->encodeEPS($text, $outfile, $saveandprint=false);
+
+            return $enc->encodeEPS($text, $outfile, $saveandprint = false);
         }
-        
+
         //----------------------------------------------------------------------
-        public static function svg($text, $outfile = false, $level = QR_ECLEVEL_L, $size = 3, $margin = 4, $saveandprint=false, $back_color = 0xFFFFFF, $fore_color = 0x000000)
+        public static function svg($text, $outfile = false, $level = QR_ECLEVEL_L, $size = 3, $margin = 4, $saveandprint = false, $back_color = 0xFFFFFF, $fore_color = 0x000000)
         {
             $enc = QRencode::factory($level, $size, $margin, $back_color, $fore_color);
-            return $enc->encodeSVG($text, $outfile, $saveandprint=false);
+
+            return $enc->encodeSVG($text, $outfile, $saveandprint = false);
         }
 
         //----------------------------------------------------------------------
-        public static function raw($text, $outfile = false, $level = QR_ECLEVEL_L, $size = 3, $margin = 4) 
+        public static function raw($text, $outfile = false, $level = QR_ECLEVEL_L, $size = 3, $margin = 4)
         {
             $enc = QRencode::factory($level, $size, $margin);
+
             return $enc->encodeRAW($text, $outfile);
         }
     }
-    
+
     //##########################################################################
-    
-    class FrameFiller {
-    
+
+    class FrameFiller
+    {
         public $width;
         public $frame;
         public $x;
         public $y;
         public $dir;
         public $bit;
-        
+
         //----------------------------------------------------------------------
         public function __construct($width, &$frame)
         {
@@ -3170,34 +3227,34 @@
             $this->dir = -1;
             $this->bit = -1;
         }
-        
+
         //----------------------------------------------------------------------
         public function setFrameAt($at, $val)
         {
             $this->frame[$at['y']][$at['x']] = chr($val);
         }
-        
+
         //----------------------------------------------------------------------
         public function getFrameAt($at)
         {
             return ord($this->frame[$at['y']][$at['x']]);
         }
-        
+
         //----------------------------------------------------------------------
         public function next()
         {
             do {
-            
-                if($this->bit == -1) {
+                if ($this->bit == -1) {
                     $this->bit = 0;
-                    return array('x'=>$this->x, 'y'=>$this->y);
+
+                    return ['x'=>$this->x, 'y'=>$this->y];
                 }
 
                 $x = $this->x;
                 $y = $this->y;
                 $w = $this->width;
 
-                if($this->bit == 0) {
+                if ($this->bit == 0) {
                     $x--;
                     $this->bit++;
                 } else {
@@ -3206,67 +3263,67 @@
                     $this->bit--;
                 }
 
-                if($this->dir < 0) {
-                    if($y < 0) {
+                if ($this->dir < 0) {
+                    if ($y < 0) {
                         $y = 0;
                         $x -= 2;
                         $this->dir = 1;
-                        if($x == 6) {
+                        if ($x == 6) {
                             $x--;
                             $y = 9;
                         }
                     }
                 } else {
-                    if($y == $w) {
+                    if ($y == $w) {
                         $y = $w - 1;
                         $x -= 2;
                         $this->dir = -1;
-                        if($x == 6) {
+                        if ($x == 6) {
                             $x--;
                             $y -= 8;
                         }
                     }
                 }
-                if($x < 0 || $y < 0) return null;
+                if ($x < 0 || $y < 0) {
+                    return;
+                }
 
                 $this->x = $x;
                 $this->y = $y;
+            } while (ord($this->frame[$y][$x]) & 0x80);
+
+            return ['x'=>$x, 'y'=>$y];
+        }
+    }
+
+    //##########################################################################
 
-            } while(ord($this->frame[$y][$x]) & 0x80);
-                        
-            return array('x'=>$x, 'y'=>$y);
-        }
-        
-    } ;
-    
-    //##########################################################################    
-    
-    class QRencode {
-    
+    class QRencode
+    {
         public $casesensitive = true;
         public $eightbit = false;
-        
+
         public $version = 0;
         public $size = 3;
         public $margin = 4;
         public $back_color = 0xFFFFFF;
         public $fore_color = 0x000000;
-        
+
         public $structured = 0; // not supported yet
-        
+
         public $level = QR_ECLEVEL_L;
         public $hint = QR_MODE_8;
-        
+
         //----------------------------------------------------------------------
         public static function factory($level = QR_ECLEVEL_L, $size = 3, $margin = 4, $back_color = 0xFFFFFF, $fore_color = 0x000000, $cmyk = false)
         {
-            $enc = new QRencode();
+            $enc = new self();
             $enc->size = $size;
             $enc->margin = $margin;
             $enc->fore_color = $fore_color;
             $enc->back_color = $back_color;
             $enc->cmyk = $cmyk;
-            
+
             switch ($level.'') {
                 case '0':
                 case '1':
@@ -3291,125 +3348,110 @@
                         $enc->level = QR_ECLEVEL_H;
                     break;
             }
-            
+
             return $enc;
         }
-        
+
         //----------------------------------------------------------------------
-        public function encodeRAW($intext, $outfile = false) 
+        public function encodeRAW($intext, $outfile = false)
         {
             $code = new QRcode();
 
-            if($this->eightbit) {
+            if ($this->eightbit) {
                 $code->encodeString8bit($intext, $this->version, $this->level);
             } else {
                 $code->encodeString($intext, $this->version, $this->level, $this->hint, $this->casesensitive);
             }
-            
+
             return $code->data;
         }
 
         //----------------------------------------------------------------------
-        public function encode($intext, $outfile = false) 
+        public function encode($intext, $outfile = false)
         {
             $code = new QRcode();
 
-            if($this->eightbit) {
+            if ($this->eightbit) {
                 $code->encodeString8bit($intext, $this->version, $this->level);
             } else {
                 $code->encodeString($intext, $this->version, $this->level, $this->hint, $this->casesensitive);
             }
-            
+
             QRtools::markTime('after_encode');
-            
-            if ($outfile!== false) {
-                file_put_contents($outfile, join("\n", QRtools::binarize($code->data)));
+
+            if ($outfile !== false) {
+                file_put_contents($outfile, implode("\n", QRtools::binarize($code->data)));
             } else {
                 return QRtools::binarize($code->data);
             }
         }
-        
+
         //----------------------------------------------------------------------
-        public function encodePNG($intext, $outfile = false,$saveandprint=false) 
+        public function encodePNG($intext, $outfile = false, $saveandprint = false)
         {
             try {
-            
                 ob_start();
                 $tab = $this->encode($intext);
                 $err = ob_get_contents();
                 ob_end_clean();
-                
-                if ($err != '')
+
+                if ($err != '') {
                     QRtools::log($outfile, $err);
-                
-                $maxSize = (int)(QR_PNG_MAXIMUM_SIZE / (count($tab)+2*$this->margin));
-                
-                QRimage::png($tab, $outfile, min(max(1, $this->size), $maxSize), $this->margin,$saveandprint, $this->back_color, $this->fore_color);
-            
+                }
+
+                $maxSize = (int) (QR_PNG_MAXIMUM_SIZE / (count($tab) + 2 * $this->margin));
+
+                QRimage::png($tab, $outfile, min(max(1, $this->size), $maxSize), $this->margin, $saveandprint, $this->back_color, $this->fore_color);
             } catch (Exception $e) {
-            
                 QRtools::log($outfile, $e->getMessage());
-            
             }
         }
-        
+
         //----------------------------------------------------------------------
-        public function encodeEPS($intext, $outfile = false,$saveandprint=false) 
+        public function encodeEPS($intext, $outfile = false, $saveandprint = false)
         {
             try {
-            
                 ob_start();
                 $tab = $this->encode($intext);
                 $err = ob_get_contents();
                 ob_end_clean();
-                
-                if ($err != '')
+
+                if ($err != '') {
                     QRtools::log($outfile, $err);
-                
-                $maxSize = (int)(QR_PNG_MAXIMUM_SIZE / (count($tab)+2*$this->margin));
-                
-                QRvect::eps($tab, $outfile, min(max(1, $this->size), $maxSize), $this->margin,$saveandprint, $this->back_color, $this->fore_color, $this->cmyk);
-            
+                }
+
+                $maxSize = (int) (QR_PNG_MAXIMUM_SIZE / (count($tab) + 2 * $this->margin));
+
+                QRvect::eps($tab, $outfile, min(max(1, $this->size), $maxSize), $this->margin, $saveandprint, $this->back_color, $this->fore_color, $this->cmyk);
             } catch (Exception $e) {
-            
                 QRtools::log($outfile, $e->getMessage());
-            
             }
         }
 
         //----------------------------------------------------------------------
-        public function encodeSVG($intext, $outfile = false,$saveandprint=false) 
+        public function encodeSVG($intext, $outfile = false, $saveandprint = false)
         {
             try {
-            
                 ob_start();
                 $tab = $this->encode($intext);
                 $err = ob_get_contents();
                 ob_end_clean();
-                
-                if ($err != '')
+
+                if ($err != '') {
                     QRtools::log($outfile, $err);
-                
-                $maxSize = (int)(QR_PNG_MAXIMUM_SIZE / (count($tab)+2*$this->margin));
+                }
+
+                $maxSize = (int) (QR_PNG_MAXIMUM_SIZE / (count($tab) + 2 * $this->margin));
 
-                QRvect::svg($tab, $outfile, min(max(1, $this->size), $maxSize), $this->margin,$saveandprint, $this->back_color, $this->fore_color);
-            
+                QRvect::svg($tab, $outfile, min(max(1, $this->size), $maxSize), $this->margin, $saveandprint, $this->back_color, $this->fore_color);
             } catch (Exception $e) {
-            
                 QRtools::log($outfile, $e->getMessage());
-            
             }
         }
     }
 
-
-
-
 //---- qrvect.php -----------------------------
 
-
-
-
 /*
  * PHP QR Code encoder
  *
@@ -3432,44 +3474,42 @@
  * License along with this library; if not, write to the Free Software
  * Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA
  */
- 
+
     define('QR_VECT', true);
 
-    class QRvect {
-    
+    class QRvect
+    {
         //----------------------------------------------------------------------
-        public static function eps($frame, $filename = false, $pixelPerPoint = 4, $outerFrame = 4,$saveandprint=FALSE, $back_color = 0xFFFFFF, $fore_color = 0x000000, $cmyk = false) 
+        public static function eps($frame, $filename = false, $pixelPerPoint = 4, $outerFrame = 4, $saveandprint = false, $back_color = 0xFFFFFF, $fore_color = 0x000000, $cmyk = false)
         {
             $vect = self::vectEPS($frame, $pixelPerPoint, $outerFrame, $back_color, $fore_color, $cmyk);
-            
+
             if ($filename === false) {
-                header("Content-Type: application/postscript");
+                header('Content-Type: application/postscript');
                 header('Content-Disposition: filename="qrcode.eps"');
                 echo $vect;
             } else {
-                if($saveandprint===TRUE){
+                if ($saveandprint === true) {
                     QRtools::save($vect, $filename);
-                    header("Content-Type: application/postscript");
+                    header('Content-Type: application/postscript');
                     header('Content-Disposition: filename="qrcode.eps"');
                     echo $vect;
-                }else{
+                } else {
                     QRtools::save($vect, $filename);
                 }
             }
         }
-        
-    
+
         //----------------------------------------------------------------------
-        private static function vectEPS($frame, $pixelPerPoint = 4, $outerFrame = 4, $back_color = 0xFFFFFF, $fore_color = 0x000000, $cmyk = false) 
+        private static function vectEPS($frame, $pixelPerPoint = 4, $outerFrame = 4, $back_color = 0xFFFFFF, $fore_color = 0x000000, $cmyk = false)
         {
             $h = count($frame);
             $w = strlen($frame[0]);
-            
-            $imgW = $w + 2*$outerFrame;
-            $imgH = $h + 2*$outerFrame;
-            
-            if ($cmyk)
-            {
+
+            $imgW = $w + 2 * $outerFrame;
+            $imgH = $h + 2 * $outerFrame;
+
+            if ($cmyk) {
                 // convert color value into decimal eps format
                 $c = round((($fore_color & 0xFF000000) >> 16) / 255, 5);
                 $m = round((($fore_color & 0x00FF0000) >> 16) / 255, 5);
@@ -3483,9 +3523,7 @@
                 $y = round((($back_color & 0x0000FF00) >> 8) / 255, 5);
                 $k = round(($back_color & 0x000000FF) / 255, 5);
                 $back_color_string = $c.' '.$m.' '.$y.' '.$k.' setcmykcolor'."\n";
-            }
-            else
-            {
+            } else {
                 // convert a hexadecimal color code into decimal eps format (green = 0 1 0, blue = 0 0 1, ...)
                 $r = round((($fore_color & 0xFF0000) >> 16) / 255, 5);
                 $b = round((($fore_color & 0x00FF00) >> 8) / 255, 5);
@@ -3498,8 +3536,8 @@
                 $g = round(($back_color & 0x0000FF) / 255, 5);
                 $back_color_string = $r.' '.$b.' '.$g.' setrgbcolor'."\n";
             }
-            
-            $output = 
+
+            $output =
             '%!PS-Adobe EPSF-3.0'."\n".
             '%%Creator: PHPQrcodeLib'."\n".
             '%%Title: QRcode'."\n".
@@ -3508,120 +3546,108 @@
             '%%LanguageLevel: 2'."\n".
             '%%Pages: 1'."\n".
             '%%BoundingBox: 0 0 '.$imgW * $pixelPerPoint.' '.$imgH * $pixelPerPoint."\n";
-            
+
             // set the scale
             $output .= $pixelPerPoint.' '.$pixelPerPoint.' scale'."\n";
             // position the center of the coordinate system
-            
+
             $output .= $outerFrame.' '.$outerFrame.' translate'."\n";
-           
-           
-            
-            
+
             // redefine the 'rectfill' operator to shorten the syntax
             $output .= '/F { rectfill } def'."\n";
-            
+
             // set the symbol color
             $output .= $back_color_string;
-            $output .= '-'.$outerFrame.' -'.$outerFrame.' '.($w + 2*$outerFrame).' '.($h + 2*$outerFrame).' F'."\n";
-            
-            
+            $output .= '-'.$outerFrame.' -'.$outerFrame.' '.($w + 2 * $outerFrame).' '.($h + 2 * $outerFrame).' F'."\n";
+
             // set the symbol color
             $output .= $fore_color_string;
 
             // Convert the matrix into pixels
 
-            for($i=0; $i<$h; $i++) {
-                for($j=0; $j<$w; $j++) {
-                    if( $frame[$i][$j] == '1') {
+            for ($i = 0; $i < $h; $i++) {
+                for ($j = 0; $j < $w; $j++) {
+                    if ($frame[$i][$j] == '1') {
                         $y = $h - 1 - $i;
                         $x = $j;
                         $output .= $x.' '.$y.' 1 1 F'."\n";
                     }
                 }
             }
-            
-            
-            $output .='%%EOF';
-            
+
+            $output .= '%%EOF';
+
             return $output;
         }
-        
+
         //----------------------------------------------------------------------
-        public static function svg($frame, $filename = false, $pixelPerPoint = 4, $outerFrame = 4,$saveandprint=FALSE, $back_color, $fore_color) 
+        public static function svg($frame, $filename, $pixelPerPoint, $outerFrame, $saveandprint, $back_color, $fore_color)
         {
             $vect = self::vectSVG($frame, $pixelPerPoint, $outerFrame, $back_color, $fore_color);
-            
+
             if ($filename === false) {
-                header("Content-Type: image/svg+xml");
+                header('Content-Type: image/svg+xml');
                 //header('Content-Disposition: attachment, filename="qrcode.svg"');
                 echo $vect;
             } else {
-                if($saveandprint===TRUE){
+                if ($saveandprint === true) {
                     QRtools::save($vect, $filename);
-                    header("Content-Type: image/svg+xml");
+                    header('Content-Type: image/svg+xml');
                     //header('Content-Disposition: filename="'.$filename.'"');
                     echo $vect;
-                }else{
+                } else {
                     QRtools::save($vect, $filename);
                 }
             }
         }
-        
-    
+
         //----------------------------------------------------------------------
-        private static function vectSVG($frame, $pixelPerPoint = 4, $outerFrame = 4, $back_color = 0xFFFFFF, $fore_color = 0x000000) 
+        private static function vectSVG($frame, $pixelPerPoint = 4, $outerFrame = 4, $back_color = 0xFFFFFF, $fore_color = 0x000000)
         {
             $h = count($frame);
             $w = strlen($frame[0]);
-            
-            $imgW = $w + 2*$outerFrame;
-            $imgH = $h + 2*$outerFrame;
-            
-            
-            $output = 
+
+            $imgW = $w + 2 * $outerFrame;
+            $imgH = $h + 2 * $outerFrame;
+
+            $output =
             '<?xml version="1.0" encoding="utf-8"?>'."\n".
             '<svg version="1.1" baseProfile="full"  width="'.$imgW * $pixelPerPoint.'" height="'.$imgH * $pixelPerPoint.'" viewBox="0 0 '.$imgW * $pixelPerPoint.' '.$imgH * $pixelPerPoint.'"
              xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:ev="http://www.w3.org/2001/xml-events">'."\n".
             '<desc></desc>'."\n";
 
-            $output = 
+            $output =
             '<?xml version="1.0" encoding="utf-8"?>'."\n".
             '<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 20010904//EN" "http://www.w3.org/TR/2001/REC-SVG-20010904/DTD/svg10.dtd">'."\n".
             '<svg xmlns="http://www.w3.org/2000/svg" xml:space="preserve" xmlns:xlink="http://www.w3.org/1999/xlink" width="'.$imgW * $pixelPerPoint.'" height="'.$imgH * $pixelPerPoint.'" viewBox="0 0 '.$imgW * $pixelPerPoint.' '.$imgH * $pixelPerPoint.'">'."\n".
             '<desc></desc>'."\n";
-                
-            if(!empty($back_color)) {
-                $backgroundcolor = str_pad(dechex($back_color), 6, "0", STR_PAD_LEFT);
+
+            if (!empty($back_color)) {
+                $backgroundcolor = str_pad(dechex($back_color), 6, '0', STR_PAD_LEFT);
                 $output .= '<rect width="'.$imgW * $pixelPerPoint.'" height="'.$imgH * $pixelPerPoint.'" fill="#'.$backgroundcolor.'" cx="0" cy="0" />'."\n";
             }
-                
-            $output .= 
+
+            $output .=
             '<defs>'."\n".
             '<rect id="p" width="'.$pixelPerPoint.'" height="'.$pixelPerPoint.'" />'."\n".
             '</defs>'."\n".
-            '<g fill="#'.str_pad(dechex($fore_color), 6, "0", STR_PAD_LEFT).'">'."\n";
-                
-                
+            '<g fill="#'.str_pad(dechex($fore_color), 6, '0', STR_PAD_LEFT).'">'."\n";
+
             // Convert the matrix into pixels
 
-            for($i=0; $i<$h; $i++) {
-                for($j=0; $j<$w; $j++) {
-                    if( $frame[$i][$j] == '1') {
+            for ($i = 0; $i < $h; $i++) {
+                for ($j = 0; $j < $w; $j++) {
+                    if ($frame[$i][$j] == '1') {
                         $y = ($i + $outerFrame) * $pixelPerPoint;
                         $x = ($j + $outerFrame) * $pixelPerPoint;
                         $output .= '<use x="'.$x.'" y="'.$y.'" xlink:href="#p" />'."\n";
                     }
                 }
             }
-            $output .= 
+            $output .=
             '</g>'."\n".
             '</svg>';
-            
+
             return $output;
         }
     }
-    
-    
-
-
diff --git a/config/qrcode/qr.php b/config/qrcode/qr.php
index 888220720cdf9e3e43e258df91211bd1723c8cf5..a82970cc6cb73114942e0de4b9151a2b6b6f023a 100755
--- a/config/qrcode/qr.php
+++ b/config/qrcode/qr.php
@@ -1,9 +1,7 @@
-<?
-include "qrlib.php";
-
-QRcode::png("U1160100004","image.png","L",5,5);
-
-echo "<img src='image.png'>";
-
-
-?>
\ No newline at end of file
+<?php
+
+include 'qrlib.php';
+
+QRcode::png('U1160100004', 'image.png', 'L', 5, 5);
+
+echo "<img src='image.png'>";
diff --git a/config/qrcode/qrbitstream.php b/config/qrcode/qrbitstream.php
index 7d4ec4a6cc6de90c2602bd76fdcdb9e0e1313d72..ed36f0938277bcbc18d9ac13b9e8e2b0b9247628 100755
--- a/config/qrcode/qrbitstream.php
+++ b/config/qrcode/qrbitstream.php
@@ -1,180 +1,184 @@
-<?php
-/*
- * PHP QR Code encoder
- *
- * Bitstream class
- *
- * Based on libqrencode C library distributed under LGPL 2.1
- * Copyright (C) 2006, 2007, 2008, 2009 Kentaro Fukuchi <fukuchi@megaui.net>
- *
- * PHP QR Code is distributed under LGPL 3
- * Copyright (C) 2010 Dominik Dzienia <deltalab at poczta dot fm>
- *
- * This library is free software; you can redistribute it and/or
- * modify it under the terms of the GNU Lesser General Public
- * License as published by the Free Software Foundation; either
- * version 3 of the License, or any later version.
- *
- * This library is distributed in the hope that it will be useful,
- * but WITHOUT ANY WARRANTY; without even the implied warranty of
- * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
- * Lesser General Public License for more details.
- *
- * You should have received a copy of the GNU Lesser General Public
- * License along with this library; if not, write to the Free Software
- * Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA
- */
-     
-    class QRbitstream {
-    
-        public $data = array();
-        
-        //----------------------------------------------------------------------
-        public function size()
-        {
-            return count($this->data);
-        }
-        
-        //----------------------------------------------------------------------
-        public function allocate($setLength)
-        {
-            $this->data = array_fill(0, $setLength, 0);
-            return 0;
-        }
-    
-        //----------------------------------------------------------------------
-        public static function newFromNum($bits, $num)
-        {
-            $bstream = new QRbitstream();
-            $bstream->allocate($bits);
-            
-            $mask = 1 << ($bits - 1);
-            for($i=0; $i<$bits; $i++) {
-                if($num & $mask) {
-                    $bstream->data[$i] = 1;
-                } else {
-                    $bstream->data[$i] = 0;
-                }
-                $mask = $mask >> 1;
-            }
-
-            return $bstream;
-        }
-        
-        //----------------------------------------------------------------------
-        public static function newFromBytes($size, $data)
-        {
-            $bstream = new QRbitstream();
-            $bstream->allocate($size * 8);
-            $p=0;
-
-            for($i=0; $i<$size; $i++) {
-                $mask = 0x80;
-                for($j=0; $j<8; $j++) {
-                    if($data[$i] & $mask) {
-                        $bstream->data[$p] = 1;
-                    } else {
-                        $bstream->data[$p] = 0;
-                    }
-                    $p++;
-                    $mask = $mask >> 1;
-                }
-            }
-
-            return $bstream;
-        }
-        
-        //----------------------------------------------------------------------
-        public function append(QRbitstream $arg)
-        {
-            if (is_null($arg)) {
-                return -1;
-            }
-            
-            if($arg->size() == 0) {
-                return 0;
-            }
-            
-            if($this->size() == 0) {
-                $this->data = $arg->data;
-                return 0;
-            }
-            
-            $this->data = array_values(array_merge($this->data, $arg->data));
-
-            return 0;
-        }
-        
-        //----------------------------------------------------------------------
-        public function appendNum($bits, $num)
-        {
-            if ($bits == 0) 
-                return 0;
-
-            $b = QRbitstream::newFromNum($bits, $num);
-            
-            if(is_null($b))
-                return -1;
-
-            $ret = $this->append($b);
-            unset($b);
-
-            return $ret;
-        }
-
-        //----------------------------------------------------------------------
-        public function appendBytes($size, $data)
-        {
-            if ($size == 0) 
-                return 0;
-
-            $b = QRbitstream::newFromBytes($size, $data);
-            
-            if(is_null($b))
-                return -1;
-
-            $ret = $this->append($b);
-            unset($b);
-
-            return $ret;
-        }
-        
-        //----------------------------------------------------------------------
-        public function toByte()
-        {
-        
-            $size = $this->size();
-
-            if($size == 0) {
-                return array();
-            }
-            
-            $data = array_fill(0, (int)(($size + 7) / 8), 0);
-            $bytes = (int)($size / 8);
-
-            $p = 0;
-            
-            for($i=0; $i<$bytes; $i++) {
-                $v = 0;
-                for($j=0; $j<8; $j++) {
-                    $v = $v << 1;
-                    $v |= $this->data[$p];
-                    $p++;
-                }
-                $data[$i] = $v;
-            }
-            
-            if($size & 7) {
-                $v = 0;
-                for($j=0; $j<($size & 7); $j++) {
-                    $v = $v << 1;
-                    $v |= $this->data[$p];
-                    $p++;
-                }
-                $data[$bytes] = $v;
-            }
-
-            return $data;
-        }
-
-    }
+<?php
+/*
+ * PHP QR Code encoder
+ *
+ * Bitstream class
+ *
+ * Based on libqrencode C library distributed under LGPL 2.1
+ * Copyright (C) 2006, 2007, 2008, 2009 Kentaro Fukuchi <fukuchi@megaui.net>
+ *
+ * PHP QR Code is distributed under LGPL 3
+ * Copyright (C) 2010 Dominik Dzienia <deltalab at poczta dot fm>
+ *
+ * This library is free software; you can redistribute it and/or
+ * modify it under the terms of the GNU Lesser General Public
+ * License as published by the Free Software Foundation; either
+ * version 3 of the License, or any later version.
+ *
+ * This library is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
+ * Lesser General Public License for more details.
+ *
+ * You should have received a copy of the GNU Lesser General Public
+ * License along with this library; if not, write to the Free Software
+ * Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA
+ */
+
+    class qrbitstream
+    {
+        public $data = [];
+
+        //----------------------------------------------------------------------
+        public function size()
+        {
+            return count($this->data);
+        }
+
+        //----------------------------------------------------------------------
+        public function allocate($setLength)
+        {
+            $this->data = array_fill(0, $setLength, 0);
+
+            return 0;
+        }
+
+        //----------------------------------------------------------------------
+        public static function newFromNum($bits, $num)
+        {
+            $bstream = new self();
+            $bstream->allocate($bits);
+
+            $mask = 1 << ($bits - 1);
+            for ($i = 0; $i < $bits; $i++) {
+                if ($num & $mask) {
+                    $bstream->data[$i] = 1;
+                } else {
+                    $bstream->data[$i] = 0;
+                }
+                $mask = $mask >> 1;
+            }
+
+            return $bstream;
+        }
+
+        //----------------------------------------------------------------------
+        public static function newFromBytes($size, $data)
+        {
+            $bstream = new self();
+            $bstream->allocate($size * 8);
+            $p = 0;
+
+            for ($i = 0; $i < $size; $i++) {
+                $mask = 0x80;
+                for ($j = 0; $j < 8; $j++) {
+                    if ($data[$i] & $mask) {
+                        $bstream->data[$p] = 1;
+                    } else {
+                        $bstream->data[$p] = 0;
+                    }
+                    $p++;
+                    $mask = $mask >> 1;
+                }
+            }
+
+            return $bstream;
+        }
+
+        //----------------------------------------------------------------------
+        public function append(self $arg)
+        {
+            if (is_null($arg)) {
+                return -1;
+            }
+
+            if ($arg->size() == 0) {
+                return 0;
+            }
+
+            if ($this->size() == 0) {
+                $this->data = $arg->data;
+
+                return 0;
+            }
+
+            $this->data = array_values(array_merge($this->data, $arg->data));
+
+            return 0;
+        }
+
+        //----------------------------------------------------------------------
+        public function appendNum($bits, $num)
+        {
+            if ($bits == 0) {
+                return 0;
+            }
+
+            $b = self::newFromNum($bits, $num);
+
+            if (is_null($b)) {
+                return -1;
+            }
+
+            $ret = $this->append($b);
+            unset($b);
+
+            return $ret;
+        }
+
+        //----------------------------------------------------------------------
+        public function appendBytes($size, $data)
+        {
+            if ($size == 0) {
+                return 0;
+            }
+
+            $b = self::newFromBytes($size, $data);
+
+            if (is_null($b)) {
+                return -1;
+            }
+
+            $ret = $this->append($b);
+            unset($b);
+
+            return $ret;
+        }
+
+        //----------------------------------------------------------------------
+        public function toByte()
+        {
+            $size = $this->size();
+
+            if ($size == 0) {
+                return [];
+            }
+
+            $data = array_fill(0, (int) (($size + 7) / 8), 0);
+            $bytes = (int) ($size / 8);
+
+            $p = 0;
+
+            for ($i = 0; $i < $bytes; $i++) {
+                $v = 0;
+                for ($j = 0; $j < 8; $j++) {
+                    $v = $v << 1;
+                    $v |= $this->data[$p];
+                    $p++;
+                }
+                $data[$i] = $v;
+            }
+
+            if ($size & 7) {
+                $v = 0;
+                for ($j = 0; $j < ($size & 7); $j++) {
+                    $v = $v << 1;
+                    $v |= $this->data[$p];
+                    $p++;
+                }
+                $data[$bytes] = $v;
+            }
+
+            return $data;
+        }
+    }
diff --git a/config/qrcode/qrconfig.php b/config/qrcode/qrconfig.php
index e53dff8c24c48e87bfb24e480bc62b96a8b1324e..7d46657628e964940d0210d41750b0311dfe63da 100755
--- a/config/qrcode/qrconfig.php
+++ b/config/qrcode/qrconfig.php
@@ -1,17 +1,16 @@
-<?php
-/*
- * PHP QR Code encoder
- *
- * Config file, feel free to modify
- */
-     
-    define('QR_CACHEABLE', true);                                                               // use cache - more disk reads but less CPU power, masks and format templates are stored there
-    define('QR_CACHE_DIR', dirname(__FILE__).DIRECTORY_SEPARATOR.'cache'.DIRECTORY_SEPARATOR);  // used when QR_CACHEABLE === true
-    define('QR_LOG_DIR', dirname(__FILE__).DIRECTORY_SEPARATOR);                                // default error logs dir   
-    
-    define('QR_FIND_BEST_MASK', true);                                                          // if true, estimates best mask (spec. default, but extremally slow; set to false to significant performance boost but (propably) worst quality code
-    define('QR_FIND_FROM_RANDOM', false);                                                       // if false, checks all masks available, otherwise value tells count of masks need to be checked, mask id are got randomly
-    define('QR_DEFAULT_MASK', 2);                                                               // when QR_FIND_BEST_MASK === false
-                                                  
-    define('QR_PNG_MAXIMUM_SIZE',  1024);                                                       // maximum allowed png image width (in pixels), tune to make sure GD and PHP can handle such big images
-                                                  
\ No newline at end of file
+<?php
+/*
+ * PHP QR Code encoder
+ *
+ * Config file, feel free to modify
+ */
+
+    define('QR_CACHEABLE', true);                                                               // use cache - more disk reads but less CPU power, masks and format templates are stored there
+    define('QR_CACHE_DIR', dirname(__FILE__).DIRECTORY_SEPARATOR.'cache'.DIRECTORY_SEPARATOR);  // used when QR_CACHEABLE === true
+    define('QR_LOG_DIR', dirname(__FILE__).DIRECTORY_SEPARATOR);                                // default error logs dir
+
+    define('QR_FIND_BEST_MASK', true);                                                          // if true, estimates best mask (spec. default, but extremally slow; set to false to significant performance boost but (propably) worst quality code
+    define('QR_FIND_FROM_RANDOM', false);                                                       // if false, checks all masks available, otherwise value tells count of masks need to be checked, mask id are got randomly
+    define('QR_DEFAULT_MASK', 2);                                                               // when QR_FIND_BEST_MASK === false
+
+    define('QR_PNG_MAXIMUM_SIZE', 1024);                                                       // maximum allowed png image width (in pixels), tune to make sure GD and PHP can handle such big images
diff --git a/config/qrcode/qrconst.php b/config/qrcode/qrconst.php
index 9fac9fdc109de80e24f65d98d5f65bea3d9caca8..cb0de37979b0586c69482bb77c3eafeffa34d812 100755
--- a/config/qrcode/qrconst.php
+++ b/config/qrcode/qrconst.php
@@ -1,54 +1,56 @@
-<?php
-
-/*
- * PHP QR Code encoder
- *
- * Common constants
- *
- * Based on libqrencode C library distributed under LGPL 2.1
- * Copyright (C) 2006, 2007, 2008, 2009 Kentaro Fukuchi <fukuchi@megaui.net>
- *
- * PHP QR Code is distributed under LGPL 3
- * Copyright (C) 2010 Dominik Dzienia <deltalab at poczta dot fm>
- *
- * This library is free software; you can redistribute it and/or
- * modify it under the terms of the GNU Lesser General Public
- * License as published by the Free Software Foundation; either
- * version 3 of the License, or any later version.
- *
- * This library is distributed in the hope that it will be useful,
- * but WITHOUT ANY WARRANTY; without even the implied warranty of
- * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
- * Lesser General Public License for more details.
- *
- * You should have received a copy of the GNU Lesser General Public
- * License along with this library; if not, write to the Free Software
- * Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA
- */
- 
-	// Encoding modes
-	 
-	define('QR_MODE_NUL', -1);
-	define('QR_MODE_NUM', 0);
-	define('QR_MODE_AN', 1);
-	define('QR_MODE_8', 2);
-	define('QR_MODE_KANJI', 3);
-	define('QR_MODE_STRUCTURE', 4);
-
-	// Levels of error correction.
-
-	define('QR_ECLEVEL_L', 0);
-	define('QR_ECLEVEL_M', 1);
-	define('QR_ECLEVEL_Q', 2);
-	define('QR_ECLEVEL_H', 3);
-	
-	// Supported output formats
-	
-	define('QR_FORMAT_TEXT', 0);
-	define('QR_FORMAT_PNG',  1);
-	
-	class qrstr {
-		public static function set(&$srctab, $x, $y, $repl, $replLen = false) {
-			$srctab[$y] = substr_replace($srctab[$y], ($replLen !== false)?substr($repl,0,$replLen):$repl, $x, ($replLen !== false)?$replLen:strlen($repl));
-		}
-	}	
\ No newline at end of file
+<?php
+
+/*
+ * PHP QR Code encoder
+ *
+ * Common constants
+ *
+ * Based on libqrencode C library distributed under LGPL 2.1
+ * Copyright (C) 2006, 2007, 2008, 2009 Kentaro Fukuchi <fukuchi@megaui.net>
+ *
+ * PHP QR Code is distributed under LGPL 3
+ * Copyright (C) 2010 Dominik Dzienia <deltalab at poczta dot fm>
+ *
+ * This library is free software; you can redistribute it and/or
+ * modify it under the terms of the GNU Lesser General Public
+ * License as published by the Free Software Foundation; either
+ * version 3 of the License, or any later version.
+ *
+ * This library is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
+ * Lesser General Public License for more details.
+ *
+ * You should have received a copy of the GNU Lesser General Public
+ * License along with this library; if not, write to the Free Software
+ * Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA
+ */
+
+    // Encoding modes
+
+    define('QR_MODE_NUL', -1);
+    define('QR_MODE_NUM', 0);
+    define('QR_MODE_AN', 1);
+    define('QR_MODE_8', 2);
+    define('QR_MODE_KANJI', 3);
+    define('QR_MODE_STRUCTURE', 4);
+
+    // Levels of error correction.
+
+    define('QR_ECLEVEL_L', 0);
+    define('QR_ECLEVEL_M', 1);
+    define('QR_ECLEVEL_Q', 2);
+    define('QR_ECLEVEL_H', 3);
+
+    // Supported output formats
+
+    define('QR_FORMAT_TEXT', 0);
+    define('QR_FORMAT_PNG', 1);
+
+    class qrstr
+    {
+        public static function set(&$srctab, $x, $y, $repl, $replLen = false)
+        {
+            $srctab[$y] = substr_replace($srctab[$y], ($replLen !== false) ? substr($repl, 0, $replLen) : $repl, $x, ($replLen !== false) ? $replLen : strlen($repl));
+        }
+    }
diff --git a/config/qrcode/qrencode.php b/config/qrcode/qrencode.php
index 249235c18777b5ef86364660d047a990b5fc87df..748a28f7bb3851077c0309c840c9400982059e61 100755
--- a/config/qrcode/qrencode.php
+++ b/config/qrcode/qrencode.php
@@ -24,44 +24,46 @@
  * License along with this library; if not, write to the Free Software
  * Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA
  */
- 
-    class QRrsblock {
+
+    class QRrsblock
+    {
         public $dataLength;
-        public $data = array();
+        public $data = [];
         public $eccLength;
-        public $ecc = array();
-        
+        public $ecc = [];
+
         public function __construct($dl, $data, $el, &$ecc, QRrsItem $rs)
         {
             $rs->encode_rs_char($data, $ecc);
-        
+
             $this->dataLength = $dl;
             $this->data = $data;
             $this->eccLength = $el;
             $this->ecc = $ecc;
         }
-    };
-    
+    }
+
     //##########################################################################
 
-    class QRrawcode {
+    class QRrawcode
+    {
         public $version;
-        public $datacode = array();
-        public $ecccode = array();
+        public $datacode = [];
+        public $ecccode = [];
         public $blocks;
-        public $rsblocks = array(); //of RSblock
+        public $rsblocks = []; //of RSblock
         public $count;
         public $dataLength;
         public $eccLength;
         public $b1;
-        
+
         //----------------------------------------------------------------------
         public function __construct(QRinput $input)
         {
-            $spec = array(0,0,0,0,0);
-            
+            $spec = [0, 0, 0, 0, 0];
+
             $this->datacode = $input->getByteStream();
-            if(is_null($this->datacode)) {
+            if (is_null($this->datacode)) {
                 throw new Exception('null imput string');
             }
 
@@ -73,51 +75,53 @@
             $this->eccLength = QRspec::rsEccLength($spec);
             $this->ecccode = array_fill(0, $this->eccLength, 0);
             $this->blocks = QRspec::rsBlockNum($spec);
-            
+
             $ret = $this->init($spec);
-            if($ret < 0) {
+            if ($ret < 0) {
                 throw new Exception('block alloc error');
-                return null;
+                return;
             }
 
             $this->count = 0;
         }
-        
+
         //----------------------------------------------------------------------
         public function init(array $spec)
         {
             $dl = QRspec::rsDataCodes1($spec);
             $el = QRspec::rsEccCodes1($spec);
             $rs = QRrs::init_rs(8, 0x11d, 0, 1, $el, 255 - $dl - $el);
-            
 
             $blockNo = 0;
             $dataPos = 0;
             $eccPos = 0;
-            for($i=0; $i<QRspec::rsBlockNum1($spec); $i++) {
-                $ecc = array_slice($this->ecccode,$eccPos);
-                $this->rsblocks[$blockNo] = new QRrsblock($dl, array_slice($this->datacode, $dataPos), $el,  $ecc, $rs);
-                $this->ecccode = array_merge(array_slice($this->ecccode,0, $eccPos), $ecc);
-                
+            for ($i = 0; $i < QRspec::rsBlockNum1($spec); $i++) {
+                $ecc = array_slice($this->ecccode, $eccPos);
+                $this->rsblocks[$blockNo] = new QRrsblock($dl, array_slice($this->datacode, $dataPos), $el, $ecc, $rs);
+                $this->ecccode = array_merge(array_slice($this->ecccode, 0, $eccPos), $ecc);
+
                 $dataPos += $dl;
                 $eccPos += $el;
                 $blockNo++;
             }
 
-            if(QRspec::rsBlockNum2($spec) == 0)
+            if (QRspec::rsBlockNum2($spec) == 0) {
                 return 0;
+            }
 
             $dl = QRspec::rsDataCodes2($spec);
             $el = QRspec::rsEccCodes2($spec);
             $rs = QRrs::init_rs(8, 0x11d, 0, 1, $el, 255 - $dl - $el);
-            
-            if($rs == NULL) return -1;
-            
-            for($i=0; $i<QRspec::rsBlockNum2($spec); $i++) {
-                $ecc = array_slice($this->ecccode,$eccPos);
+
+            if ($rs == null) {
+                return -1;
+            }
+
+            for ($i = 0; $i < QRspec::rsBlockNum2($spec); $i++) {
+                $ecc = array_slice($this->ecccode, $eccPos);
                 $this->rsblocks[$blockNo] = new QRrsblock($dl, array_slice($this->datacode, $dataPos), $el, $ecc, $rs);
-                $this->ecccode = array_merge(array_slice($this->ecccode,0, $eccPos), $ecc);
-                
+                $this->ecccode = array_merge(array_slice($this->ecccode, 0, $eccPos), $ecc);
+
                 $dataPos += $dl;
                 $eccPos += $el;
                 $blockNo++;
@@ -125,20 +129,20 @@
 
             return 0;
         }
-        
+
         //----------------------------------------------------------------------
         public function getCode()
         {
             $ret;
 
-            if($this->count < $this->dataLength) {
+            if ($this->count < $this->dataLength) {
                 $row = $this->count % $this->blocks;
                 $col = $this->count / $this->blocks;
-                if($col >= $this->rsblocks[0]->dataLength) {
+                if ($col >= $this->rsblocks[0]->dataLength) {
                     $row += $this->b1;
                 }
                 $ret = $this->rsblocks[$row]->data[$col];
-            } else if($this->count < $this->dataLength + $this->eccLength) {
+            } elseif ($this->count < $this->dataLength + $this->eccLength) {
                 $row = ($this->count - $this->dataLength) % $this->blocks;
                 $col = ($this->count - $this->dataLength) / $this->blocks;
                 $ret = $this->rsblocks[$row]->ecc[$col];
@@ -146,72 +150,70 @@
                 return 0;
             }
             $this->count++;
-            
+
             return $ret;
         }
     }
 
     //##########################################################################
-    
-    class QRcode {
-    
+
+    class QRcode
+    {
         public $version;
         public $width;
-        public $data; 
-        
+        public $data;
+
         //----------------------------------------------------------------------
         public function encodeMask(QRinput $input, $mask)
         {
-            if($input->getVersion() < 0 || $input->getVersion() > QRSPEC_VERSION_MAX) {
+            if ($input->getVersion() < 0 || $input->getVersion() > QRSPEC_VERSION_MAX) {
                 throw new Exception('wrong version');
             }
-            if($input->getErrorCorrectionLevel() > QR_ECLEVEL_H) {
+            if ($input->getErrorCorrectionLevel() > QR_ECLEVEL_H) {
                 throw new Exception('wrong level');
             }
 
             $raw = new QRrawcode($input);
-            
+
             QRtools::markTime('after_raw');
-            
+
             $version = $raw->version;
             $width = QRspec::getWidth($version);
             $frame = QRspec::newFrame($version);
-            
+
             $filler = new FrameFiller($width, $frame);
-            if(is_null($filler)) {
-                return NULL;
+            if (is_null($filler)) {
+                return;
             }
 
             // inteleaved data and ecc codes
-            for($i=0; $i<$raw->dataLength + $raw->eccLength; $i++) {
+            for ($i = 0; $i < $raw->dataLength + $raw->eccLength; $i++) {
                 $code = $raw->getCode();
                 $bit = 0x80;
-                for($j=0; $j<8; $j++) {
+                for ($j = 0; $j < 8; $j++) {
                     $addr = $filler->next();
                     $filler->setFrameAt($addr, 0x02 | (($bit & $code) != 0));
                     $bit = $bit >> 1;
                 }
             }
-            
+
             QRtools::markTime('after_filler');
-            
+
             unset($raw);
-            
+
             // remainder bits
             $j = QRspec::getRemainder($version);
-            for($i=0; $i<$j; $i++) {
+            for ($i = 0; $i < $j; $i++) {
                 $addr = $filler->next();
                 $filler->setFrameAt($addr, 0x02);
             }
-            
+
             $frame = $filler->frame;
             unset($filler);
-            
-            
+
             // masking
             $maskObj = new QRmask();
-            if($mask < 0) {
-            
+            if ($mask < 0) {
                 if (QR_FIND_BEST_MASK) {
                     $masked = $maskObj->mask($width, $frame, $input->getErrorCorrectionLevel());
                 } else {
@@ -220,112 +222,122 @@
             } else {
                 $masked = $maskObj->makeMask($width, $frame, $mask, $input->getErrorCorrectionLevel());
             }
-            
-            if($masked == NULL) {
-                return NULL;
+
+            if ($masked == null) {
+                return;
             }
-            
+
             QRtools::markTime('after_mask');
-            
+
             $this->version = $version;
             $this->width = $width;
             $this->data = $masked;
-            
+
             return $this;
         }
-    
+
         //----------------------------------------------------------------------
         public function encodeInput(QRinput $input)
         {
             return $this->encodeMask($input, -1);
         }
-        
+
         //----------------------------------------------------------------------
         public function encodeString8bit($string, $version, $level)
         {
-            if(string == NULL) {
+            if (string == null) {
                 throw new Exception('empty string!');
-                return NULL;
+                return;
             }
 
             $input = new QRinput($version, $level);
-            if($input == NULL) return NULL;
+            if ($input == null) {
+                return;
+            }
 
             $ret = $input->append($input, QR_MODE_8, strlen($string), str_split($string));
-            if($ret < 0) {
+            if ($ret < 0) {
                 unset($input);
-                return NULL;
+
+                return;
             }
+
             return $this->encodeInput($input);
         }
 
         //----------------------------------------------------------------------
         public function encodeString($string, $version, $level, $hint, $casesensitive)
         {
-
-            if($hint != QR_MODE_8 && $hint != QR_MODE_KANJI) {
+            if ($hint != QR_MODE_8 && $hint != QR_MODE_KANJI) {
                 throw new Exception('bad hint');
-                return NULL;
+                return;
             }
 
             $input = new QRinput($version, $level);
-            if($input == NULL) return NULL;
+            if ($input == null) {
+                return;
+            }
 
             $ret = QRsplit::splitStringToQRinput($string, $input, $hint, $casesensitive);
-            if($ret < 0) {
-                return NULL;
+            if ($ret < 0) {
+                return;
             }
 
             return $this->encodeInput($input);
         }
-        
+
         //----------------------------------------------------------------------
-        public static function png($text, $outfile = false, $level = QR_ECLEVEL_L, $size = 3, $margin = 4, $saveandprint=false, $back_color = 0xFFFFFF, $fore_color = 0x000000) 
+        public static function png($text, $outfile = false, $level = QR_ECLEVEL_L, $size = 3, $margin = 4, $saveandprint = false, $back_color = 0xFFFFFF, $fore_color = 0x000000)
         {
             $enc = QRencode::factory($level, $size, $margin, $back_color, $fore_color);
-            return $enc->encodePNG($text, $outfile, $saveandprint=false);
+
+            return $enc->encodePNG($text, $outfile, $saveandprint = false);
         }
 
         //----------------------------------------------------------------------
-        public static function text($text, $outfile = false, $level = QR_ECLEVEL_L, $size = 3, $margin = 4) 
+        public static function text($text, $outfile = false, $level = QR_ECLEVEL_L, $size = 3, $margin = 4)
         {
             $enc = QRencode::factory($level, $size, $margin);
+
             return $enc->encode($text, $outfile);
         }
-        
+
         //----------------------------------------------------------------------
-        public static function eps($text, $outfile = false, $level = QR_ECLEVEL_L, $size = 3, $margin = 4, $saveandprint=false, $back_color = 0xFFFFFF, $fore_color = 0x000000, $cmyk = false) 
+        public static function eps($text, $outfile = false, $level = QR_ECLEVEL_L, $size = 3, $margin = 4, $saveandprint = false, $back_color = 0xFFFFFF, $fore_color = 0x000000, $cmyk = false)
         {
             $enc = QRencode::factory($level, $size, $margin, $back_color, $fore_color, $cmyk);
-            return $enc->encodeEPS($text, $outfile, $saveandprint=false);
+
+            return $enc->encodeEPS($text, $outfile, $saveandprint = false);
         }
-        
+
         //----------------------------------------------------------------------
-        public static function svg($text, $outfile = false, $level = QR_ECLEVEL_L, $size = 3, $margin = 4, $saveandprint=false, $back_color = 0xFFFFFF, $fore_color = 0x000000)
+        public static function svg($text, $outfile = false, $level = QR_ECLEVEL_L, $size = 3, $margin = 4, $saveandprint = false, $back_color = 0xFFFFFF, $fore_color = 0x000000)
         {
             $enc = QRencode::factory($level, $size, $margin, $back_color, $fore_color);
-            return $enc->encodeSVG($text, $outfile, $saveandprint=false);
+
+            return $enc->encodeSVG($text, $outfile, $saveandprint = false);
         }
 
         //----------------------------------------------------------------------
-        public static function raw($text, $outfile = false, $level = QR_ECLEVEL_L, $size = 3, $margin = 4) 
+        public static function raw($text, $outfile = false, $level = QR_ECLEVEL_L, $size = 3, $margin = 4)
         {
             $enc = QRencode::factory($level, $size, $margin);
+
             return $enc->encodeRAW($text, $outfile);
         }
     }
-    
+
     //##########################################################################
-    
-    class FrameFiller {
-    
+
+    class FrameFiller
+    {
         public $width;
         public $frame;
         public $x;
         public $y;
         public $dir;
         public $bit;
-        
+
         //----------------------------------------------------------------------
         public function __construct($width, &$frame)
         {
@@ -336,34 +348,34 @@
             $this->dir = -1;
             $this->bit = -1;
         }
-        
+
         //----------------------------------------------------------------------
         public function setFrameAt($at, $val)
         {
             $this->frame[$at['y']][$at['x']] = chr($val);
         }
-        
+
         //----------------------------------------------------------------------
         public function getFrameAt($at)
         {
             return ord($this->frame[$at['y']][$at['x']]);
         }
-        
+
         //----------------------------------------------------------------------
         public function next()
         {
             do {
-            
-                if($this->bit == -1) {
+                if ($this->bit == -1) {
                     $this->bit = 0;
-                    return array('x'=>$this->x, 'y'=>$this->y);
+
+                    return ['x'=>$this->x, 'y'=>$this->y];
                 }
 
                 $x = $this->x;
                 $y = $this->y;
                 $w = $this->width;
 
-                if($this->bit == 0) {
+                if ($this->bit == 0) {
                     $x--;
                     $this->bit++;
                 } else {
@@ -372,67 +384,67 @@
                     $this->bit--;
                 }
 
-                if($this->dir < 0) {
-                    if($y < 0) {
+                if ($this->dir < 0) {
+                    if ($y < 0) {
                         $y = 0;
                         $x -= 2;
                         $this->dir = 1;
-                        if($x == 6) {
+                        if ($x == 6) {
                             $x--;
                             $y = 9;
                         }
                     }
                 } else {
-                    if($y == $w) {
+                    if ($y == $w) {
                         $y = $w - 1;
                         $x -= 2;
                         $this->dir = -1;
-                        if($x == 6) {
+                        if ($x == 6) {
                             $x--;
                             $y -= 8;
                         }
                     }
                 }
-                if($x < 0 || $y < 0) return null;
+                if ($x < 0 || $y < 0) {
+                    return;
+                }
 
                 $this->x = $x;
                 $this->y = $y;
+            } while (ord($this->frame[$y][$x]) & 0x80);
 
-            } while(ord($this->frame[$y][$x]) & 0x80);
-                        
-            return array('x'=>$x, 'y'=>$y);
+            return ['x'=>$x, 'y'=>$y];
         }
-        
-    } ;
-    
-    //##########################################################################    
-    
-    class QRencode {
-    
+    }
+
+    //##########################################################################
+
+    class QRencode
+    {
         public $casesensitive = true;
         public $eightbit = false;
-        
+
         public $version = 0;
         public $size = 3;
         public $margin = 4;
         public $back_color = 0xFFFFFF;
         public $fore_color = 0x000000;
-        
+
         public $structured = 0; // not supported yet
-        
+
         public $level = QR_ECLEVEL_L;
         public $hint = QR_MODE_8;
-        
+
         //----------------------------------------------------------------------
         public static function factory($level = QR_ECLEVEL_L, $size = 3, $margin = 4, $back_color = 0xFFFFFF, $fore_color = 0x000000, $cmyk = false)
         {
-            $enc = new QRencode();
+            $enc = new self();
             $enc->size = $size;
             $enc->margin = $margin;
             $enc->fore_color = $fore_color;
             $enc->back_color = $back_color;
             $enc->cmyk = $cmyk;
-            
+
             switch ($level.'') {
                 case '0':
                 case '1':
@@ -457,113 +469,104 @@
                         $enc->level = QR_ECLEVEL_H;
                     break;
             }
-            
+
             return $enc;
         }
-        
+
         //----------------------------------------------------------------------
-        public function encodeRAW($intext, $outfile = false) 
+        public function encodeRAW($intext, $outfile = false)
         {
             $code = new QRcode();
 
-            if($this->eightbit) {
+            if ($this->eightbit) {
                 $code->encodeString8bit($intext, $this->version, $this->level);
             } else {
                 $code->encodeString($intext, $this->version, $this->level, $this->hint, $this->casesensitive);
             }
-            
+
             return $code->data;
         }
 
         //----------------------------------------------------------------------
-        public function encode($intext, $outfile = false) 
+        public function encode($intext, $outfile = false)
         {
             $code = new QRcode();
 
-            if($this->eightbit) {
+            if ($this->eightbit) {
                 $code->encodeString8bit($intext, $this->version, $this->level);
             } else {
                 $code->encodeString($intext, $this->version, $this->level, $this->hint, $this->casesensitive);
             }
-            
+
             QRtools::markTime('after_encode');
-            
-            if ($outfile!== false) {
-                file_put_contents($outfile, join("\n", QRtools::binarize($code->data)));
+
+            if ($outfile !== false) {
+                file_put_contents($outfile, implode("\n", QRtools::binarize($code->data)));
             } else {
                 return QRtools::binarize($code->data);
             }
         }
-        
+
         //----------------------------------------------------------------------
-        public function encodePNG($intext, $outfile = false,$saveandprint=false) 
+        public function encodePNG($intext, $outfile = false, $saveandprint = false)
         {
             try {
-            
                 ob_start();
                 $tab = $this->encode($intext);
                 $err = ob_get_contents();
                 ob_end_clean();
-                
-                if ($err != '')
+
+                if ($err != '') {
                     QRtools::log($outfile, $err);
-                
-                $maxSize = (int)(QR_PNG_MAXIMUM_SIZE / (count($tab)+2*$this->margin));
-                
-                QRimage::png($tab, $outfile, min(max(1, $this->size), $maxSize), $this->margin,$saveandprint, $this->back_color, $this->fore_color);
-            
+                }
+
+                $maxSize = (int) (QR_PNG_MAXIMUM_SIZE / (count($tab) + 2 * $this->margin));
+
+                QRimage::png($tab, $outfile, min(max(1, $this->size), $maxSize), $this->margin, $saveandprint, $this->back_color, $this->fore_color);
             } catch (Exception $e) {
-            
                 QRtools::log($outfile, $e->getMessage());
-            
             }
         }
-        
+
         //----------------------------------------------------------------------
-        public function encodeEPS($intext, $outfile = false,$saveandprint=false) 
+        public function encodeEPS($intext, $outfile = false, $saveandprint = false)
         {
             try {
-            
                 ob_start();
                 $tab = $this->encode($intext);
                 $err = ob_get_contents();
                 ob_end_clean();
-                
-                if ($err != '')
+
+                if ($err != '') {
                     QRtools::log($outfile, $err);
-                
-                $maxSize = (int)(QR_PNG_MAXIMUM_SIZE / (count($tab)+2*$this->margin));
-                
-                QRvect::eps($tab, $outfile, min(max(1, $this->size), $maxSize), $this->margin,$saveandprint, $this->back_color, $this->fore_color, $this->cmyk);
-            
+                }
+
+                $maxSize = (int) (QR_PNG_MAXIMUM_SIZE / (count($tab) + 2 * $this->margin));
+
+                QRvect::eps($tab, $outfile, min(max(1, $this->size), $maxSize), $this->margin, $saveandprint, $this->back_color, $this->fore_color, $this->cmyk);
             } catch (Exception $e) {
-            
                 QRtools::log($outfile, $e->getMessage());
-            
             }
         }
 
         //----------------------------------------------------------------------
-        public function encodeSVG($intext, $outfile = false,$saveandprint=false) 
+        public function encodeSVG($intext, $outfile = false, $saveandprint = false)
         {
             try {
-            
                 ob_start();
                 $tab = $this->encode($intext);
                 $err = ob_get_contents();
                 ob_end_clean();
-                
-                if ($err != '')
+
+                if ($err != '') {
                     QRtools::log($outfile, $err);
-                
-                $maxSize = (int)(QR_PNG_MAXIMUM_SIZE / (count($tab)+2*$this->margin));
+                }
+
+                $maxSize = (int) (QR_PNG_MAXIMUM_SIZE / (count($tab) + 2 * $this->margin));
 
-                QRvect::svg($tab, $outfile, min(max(1, $this->size), $maxSize), $this->margin,$saveandprint, $this->back_color, $this->fore_color);
-            
+                QRvect::svg($tab, $outfile, min(max(1, $this->size), $maxSize), $this->margin, $saveandprint, $this->back_color, $this->fore_color);
             } catch (Exception $e) {
-            
                 QRtools::log($outfile, $e->getMessage());
-            
             }
         }
     }
diff --git a/config/qrcode/qrimage.php b/config/qrcode/qrimage.php
index 593018b680f32ed8d7a6b6c44875bc713f5bb5d2..5a5c960bdc20bdbcf05773d145fa4d012df8a016 100755
--- a/config/qrcode/qrimage.php
+++ b/config/qrcode/qrimage.php
@@ -24,27 +24,27 @@
 
     define('QR_IMAGE', true);
 
-    class QRimage {
-
+    class qrimage
+    {
         //----------------------------------------------------------------------
-        public static function png($frame, $filename = false, $pixelPerPoint = 4, $outerFrame = 4,$saveandprint=FALSE, $back_color, $fore_color)
+        public static function png($frame, $filename, $pixelPerPoint, $outerFrame, $saveandprint, $back_color, $fore_color)
         {
             $image = self::image($frame, $pixelPerPoint, $outerFrame, $back_color, $fore_color);
 
             if ($filename === false) {
-                Header("Content-type: image/png");
-                ImagePng($image);
+                header('Content-type: image/png');
+                imagepng($image);
             } else {
-                if($saveandprint===TRUE){
-                    ImagePng($image, $filename);
-                    header("Content-type: image/png");
-                    ImagePng($image);
-                }else{
-                    @ImagePng($image, $filename);
+                if ($saveandprint === true) {
+                    imagepng($image, $filename);
+                    header('Content-type: image/png');
+                    imagepng($image);
+                } else {
+                    @imagepng($image, $filename);
                 }
             }
 
-            ImageDestroy($image);
+            imagedestroy($image);
         }
 
         //----------------------------------------------------------------------
@@ -53,13 +53,13 @@
             $image = self::image($frame, $pixelPerPoint, $outerFrame);
 
             if ($filename === false) {
-                Header("Content-type: image/jpeg");
-                ImageJpeg($image, null, $q);
+                header('Content-type: image/jpeg');
+                imagejpeg($image, null, $q);
             } else {
-                ImageJpeg($image, $filename, $q);
+                imagejpeg($image, $filename, $q);
             }
 
-            ImageDestroy($image);
+            imagedestroy($image);
         }
 
         //----------------------------------------------------------------------
@@ -68,10 +68,10 @@
             $h = count($frame);
             $w = strlen($frame[0]);
 
-            $imgW = $w + 2*$outerFrame;
-            $imgH = $h + 2*$outerFrame;
+            $imgW = $w + 2 * $outerFrame;
+            $imgH = $h + 2 * $outerFrame;
 
-            $base_image =ImageCreate($imgW, $imgH);
+            $base_image = imagecreate($imgW, $imgH);
 
             // convert a hexadecimal color code into decimal eps format (green = 0 1 0, blue = 0 0 1, ...)
             $r1 = round((($fore_color & 0xFF0000) >> 16), 5);
@@ -83,25 +83,23 @@
             $b2 = round((($back_color & 0x00FF00) >> 8), 5);
             $g2 = round(($back_color & 0x0000FF), 5);
 
-
-
-            $col[0] = ImageColorAllocate($base_image,$r2,$b2,$g2);
-            $col[1] = ImageColorAllocate($base_image,$r1,$b1,$g1);
+            $col[0] = imagecolorallocate($base_image, $r2, $b2, $g2);
+            $col[1] = imagecolorallocate($base_image, $r1, $b1, $g1);
 
             imagefill($base_image, 0, 0, $col[0]);
 
-            for($y=0; $y<$h; $y++) {
-                for($x=0; $x<$w; $x++) {
+            for ($y = 0; $y < $h; $y++) {
+                for ($x = 0; $x < $w; $x++) {
                     if ($frame[$y][$x] == '1') {
-                        ImageSetPixel($base_image,$x+$outerFrame,$y+$outerFrame,$col[1]);
+                        imagesetpixel($base_image, $x + $outerFrame, $y + $outerFrame, $col[1]);
                     }
                 }
             }
 
-            $target_image =ImageCreate($imgW * $pixelPerPoint, $imgH * $pixelPerPoint);
-            ImageCopyResized($target_image, $base_image, 0, 0, 0, 0, $imgW * $pixelPerPoint, $imgH * $pixelPerPoint, $imgW, $imgH);
-            ImageDestroy($base_image);
+            $target_image = imagecreate($imgW * $pixelPerPoint, $imgH * $pixelPerPoint);
+            imagecopyresized($target_image, $base_image, 0, 0, 0, 0, $imgW * $pixelPerPoint, $imgH * $pixelPerPoint, $imgW, $imgH);
+            imagedestroy($base_image);
 
             return $target_image;
         }
-    }
\ No newline at end of file
+    }
diff --git a/config/qrcode/qrinput.php b/config/qrcode/qrinput.php
index 0f6d7f94444b0d86d13b7d7ac6ddadcafc84a879..b7ebde08d73145b6446daaf963c1aff6c5b9f46f 100755
--- a/config/qrcode/qrinput.php
+++ b/config/qrcode/qrinput.php
@@ -1,729 +1,730 @@
-<?php
-/*
- * PHP QR Code encoder
- *
- * Input encoding class
- *
- * Based on libqrencode C library distributed under LGPL 2.1
- * Copyright (C) 2006, 2007, 2008, 2009 Kentaro Fukuchi <fukuchi@megaui.net>
- *
- * PHP QR Code is distributed under LGPL 3
- * Copyright (C) 2010 Dominik Dzienia <deltalab at poczta dot fm>
- *
- * This library is free software; you can redistribute it and/or
- * modify it under the terms of the GNU Lesser General Public
- * License as published by the Free Software Foundation; either
- * version 3 of the License, or any later version.
- *
- * This library is distributed in the hope that it will be useful,
- * but WITHOUT ANY WARRANTY; without even the implied warranty of
- * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
- * Lesser General Public License for more details.
- *
- * You should have received a copy of the GNU Lesser General Public
- * License along with this library; if not, write to the Free Software
- * Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA
- */
- 
-    define('STRUCTURE_HEADER_BITS',  20);
-    define('MAX_STRUCTURED_SYMBOLS', 16);
-
-    class QRinputItem {
-    
-        public $mode;
-        public $size;
-        public $data;
-        public $bstream;
-
-        public function __construct($mode, $size, $data, $bstream = null) 
-        {
-            $setData = array_slice($data, 0, $size);
-            
-            if (count($setData) < $size) {
-                $setData = array_merge($setData, array_fill(0,$size-count($setData),0));
-            }
-        
-            if(!QRinput::check($mode, $size, $setData)) {
-                throw new Exception('Error m:'.$mode.',s:'.$size.',d:'.join(',',$setData));
-                return null;
-            }
-            
-            $this->mode = $mode;
-            $this->size = $size;
-            $this->data = $setData;
-            $this->bstream = $bstream;
-        }
-        
-        //----------------------------------------------------------------------
-        public function encodeModeNum($version)
-        {
-            try {
-            
-                $words = (int)($this->size / 3);
-                $bs = new QRbitstream();
-                
-                $val = 0x1;
-                $bs->appendNum(4, $val);
-                $bs->appendNum(QRspec::lengthIndicator(QR_MODE_NUM, $version), $this->size);
-
-                for($i=0; $i<$words; $i++) {
-                    $val  = (ord($this->data[$i*3  ]) - ord('0')) * 100;
-                    $val += (ord($this->data[$i*3+1]) - ord('0')) * 10;
-                    $val += (ord($this->data[$i*3+2]) - ord('0'));
-                    $bs->appendNum(10, $val);
-                }
-
-                if($this->size - $words * 3 == 1) {
-                    $val = ord($this->data[$words*3]) - ord('0');
-                    $bs->appendNum(4, $val);
-                } else if($this->size - $words * 3 == 2) {
-                    $val  = (ord($this->data[$words*3  ]) - ord('0')) * 10;
-                    $val += (ord($this->data[$words*3+1]) - ord('0'));
-                    $bs->appendNum(7, $val);
-                }
-
-                $this->bstream = $bs;
-                return 0;
-                
-            } catch (Exception $e) {
-                return -1;
-            }
-        }
-        
-        //----------------------------------------------------------------------
-        public function encodeModeAn($version)
-        {
-            try {
-                $words = (int)($this->size / 2);
-                $bs = new QRbitstream();
-                
-                $bs->appendNum(4, 0x02);
-                $bs->appendNum(QRspec::lengthIndicator(QR_MODE_AN, $version), $this->size);
-
-                for($i=0; $i<$words; $i++) {
-                    $val  = (int)QRinput::lookAnTable(ord($this->data[$i*2  ])) * 45;
-                    $val += (int)QRinput::lookAnTable(ord($this->data[$i*2+1]));
-
-                    $bs->appendNum(11, $val);
-                }
-
-                if($this->size & 1) {
-                    $val = QRinput::lookAnTable(ord($this->data[$words * 2]));
-                    $bs->appendNum(6, $val);
-                }
-        
-                $this->bstream = $bs;
-                return 0;
-            
-            } catch (Exception $e) {
-                return -1;
-            }
-        }
-        
-        //----------------------------------------------------------------------
-        public function encodeMode8($version)
-        {
-            try {
-                $bs = new QRbitstream();
-
-                $bs->appendNum(4, 0x4);
-                $bs->appendNum(QRspec::lengthIndicator(QR_MODE_8, $version), $this->size);
-
-                for($i=0; $i<$this->size; $i++) {
-                    $bs->appendNum(8, ord($this->data[$i]));
-                }
-
-                $this->bstream = $bs;
-                return 0;
-            
-            } catch (Exception $e) {
-                return -1;
-            }
-        }
-        
-        //----------------------------------------------------------------------
-        public function encodeModeKanji($version)
-        {
-            try {
-
-                $bs = new QRbitrtream();
-                
-                $bs->appendNum(4, 0x8);
-                $bs->appendNum(QRspec::lengthIndicator(QR_MODE_KANJI, $version), (int)($this->size / 2));
-
-                for($i=0; $i<$this->size; $i+=2) {
-                    $val = (ord($this->data[$i]) << 8) | ord($this->data[$i+1]);
-                    if($val <= 0x9ffc) {
-                        $val -= 0x8140;
-                    } else {
-                        $val -= 0xc140;
-                    }
-                    
-                    $h = ($val >> 8) * 0xc0;
-                    $val = ($val & 0xff) + $h;
-
-                    $bs->appendNum(13, $val);
-                }
-
-                $this->bstream = $bs;
-                return 0;
-            
-            } catch (Exception $e) {
-                return -1;
-            }
-        }
-
-        //----------------------------------------------------------------------
-        public function encodeModeStructure()
-        {
-            try {
-                $bs =  new QRbitstream();
-                
-                $bs->appendNum(4, 0x03);
-                $bs->appendNum(4, ord($this->data[1]) - 1);
-                $bs->appendNum(4, ord($this->data[0]) - 1);
-                $bs->appendNum(8, ord($this->data[2]));
-
-                $this->bstream = $bs;
-                return 0;
-            
-            } catch (Exception $e) {
-                return -1;
-            }
-        }
-        
-        //----------------------------------------------------------------------
-        public function estimateBitStreamSizeOfEntry($version)
-        {
-            $bits = 0;
-
-            if($version == 0) 
-                $version = 1;
-
-            switch($this->mode) {
-                case QR_MODE_NUM:        $bits = QRinput::estimateBitsModeNum($this->size);    break;
-                case QR_MODE_AN:        $bits = QRinput::estimateBitsModeAn($this->size);    break;
-                case QR_MODE_8:            $bits = QRinput::estimateBitsMode8($this->size);    break;
-                case QR_MODE_KANJI:        $bits = QRinput::estimateBitsModeKanji($this->size);break;
-                case QR_MODE_STRUCTURE:    return STRUCTURE_HEADER_BITS;            
-                default:
-                    return 0;
-            }
-
-            $l = QRspec::lengthIndicator($this->mode, $version);
-            $m = 1 << $l;
-            $num = (int)(($this->size + $m - 1) / $m);
-
-            $bits += $num * (4 + $l);
-
-            return $bits;
-        }
-        
-        //----------------------------------------------------------------------
-        public function encodeBitStream($version)
-        {
-            try {
-            
-                unset($this->bstream);
-                $words = QRspec::maximumWords($this->mode, $version);
-                
-                if($this->size > $words) {
-                
-                    $st1 = new QRinputItem($this->mode, $words, $this->data);
-                    $st2 = new QRinputItem($this->mode, $this->size - $words, array_slice($this->data, $words));
-
-                    $st1->encodeBitStream($version);
-                    $st2->encodeBitStream($version);
-                    
-                    $this->bstream = new QRbitstream();
-                    $this->bstream->append($st1->bstream);
-                    $this->bstream->append($st2->bstream);
-                    
-                    unset($st1);
-                    unset($st2);
-                    
-                } else {
-                    
-                    $ret = 0;
-                    
-                    switch($this->mode) {
-                        case QR_MODE_NUM:        $ret = $this->encodeModeNum($version);    break;
-                        case QR_MODE_AN:        $ret = $this->encodeModeAn($version);    break;
-                        case QR_MODE_8:            $ret = $this->encodeMode8($version);    break;
-                        case QR_MODE_KANJI:        $ret = $this->encodeModeKanji($version);break;
-                        case QR_MODE_STRUCTURE:    $ret = $this->encodeModeStructure();    break;
-                        
-                        default:
-                            break;
-                    }
-                    
-                    if($ret < 0)
-                        return -1;
-                }
-
-                return $this->bstream->size();
-            
-            } catch (Exception $e) {
-                return -1;
-            }
-        }
-    };
-    
-    //##########################################################################
-
-    class QRinput {
-
-        public $items;
-        
-        private $version;
-        private $level;
-        
-        //----------------------------------------------------------------------
-        public function __construct($version = 0, $level = QR_ECLEVEL_L)
-        {
-            if ($version < 0 || $version > QRSPEC_VERSION_MAX || $level > QR_ECLEVEL_H) {
-                throw new Exception('Invalid version no');
-                return NULL;
-            }
-            
-            $this->version = $version;
-            $this->level = $level;
-        }
-        
-        //----------------------------------------------------------------------
-        public function getVersion()
-        {
-            return $this->version;
-        }
-        
-        //----------------------------------------------------------------------
-        public function setVersion($version)
-        {
-            if($version < 0 || $version > QRSPEC_VERSION_MAX) {
-                throw new Exception('Invalid version no');
-                return -1;
-            }
-
-            $this->version = $version;
-
-            return 0;
-        }
-        
-        //----------------------------------------------------------------------
-        public function getErrorCorrectionLevel()
-        {
-            return $this->level;
-        }
-
-        //----------------------------------------------------------------------
-        public function setErrorCorrectionLevel($level)
-        {
-            if($level > QR_ECLEVEL_H) {
-                throw new Exception('Invalid ECLEVEL');
-                return -1;
-            }
-
-            $this->level = $level;
-
-            return 0;
-        }
-        
-        //----------------------------------------------------------------------
-        public function appendEntry(QRinputItem $entry)
-        {
-            $this->items[] = $entry;
-        }
-        
-        //----------------------------------------------------------------------
-        public function append($mode, $size, $data)
-        {
-            try {
-                $entry = new QRinputItem($mode, $size, $data);
-                $this->items[] = $entry;
-                return 0;
-            } catch (Exception $e) {
-                return -1;
-            }
-        }
-        
-        //----------------------------------------------------------------------
-        
-        public function insertStructuredAppendHeader($size, $index, $parity)
-        {
-            if( $size > MAX_STRUCTURED_SYMBOLS ) {
-                throw new Exception('insertStructuredAppendHeader wrong size');
-            }
-            
-            if( $index <= 0 || $index > MAX_STRUCTURED_SYMBOLS ) {
-                throw new Exception('insertStructuredAppendHeader wrong index');
-            }
-
-            $buf = array($size, $index, $parity);
-            
-            try {
-                $entry = new QRinputItem(QR_MODE_STRUCTURE, 3, buf);
-                array_unshift($this->items, $entry);
-                return 0;
-            } catch (Exception $e) {
-                return -1;
-            }
-        }
-
-        //----------------------------------------------------------------------
-        public function calcParity()
-        {
-            $parity = 0;
-            
-            foreach($this->items as $item) {
-                if($item->mode != QR_MODE_STRUCTURE) {
-                    for($i=$item->size-1; $i>=0; $i--) {
-                        $parity ^= $item->data[$i];
-                    }
-                }
-            }
-
-            return $parity;
-        }
-        
-        //----------------------------------------------------------------------
-        public static function checkModeNum($size, $data)
-        {
-            for($i=0; $i<$size; $i++) {
-                if((ord($data[$i]) < ord('0')) || (ord($data[$i]) > ord('9'))){
-                    return false;
-                }
-            }
-
-            return true;
-        }
-
-        //----------------------------------------------------------------------
-        public static function estimateBitsModeNum($size)
-        {
-            $w = (int)$size / 3;
-            $bits = $w * 10;
-            
-            switch($size - $w * 3) {
-                case 1:
-                    $bits += 4;
-                    break;
-                case 2:
-                    $bits += 7;
-                    break;
-                default:
-                    break;
-            }
-
-            return $bits;
-        }
-        
-        //----------------------------------------------------------------------
-        public static $anTable = array(
-            -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
-            -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
-            36, -1, -1, -1, 37, 38, -1, -1, -1, -1, 39, 40, -1, 41, 42, 43,
-             0,  1,  2,  3,  4,  5,  6,  7,  8,  9, 44, -1, -1, -1, -1, -1,
-            -1, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24,
-            25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, -1, -1, -1, -1, -1,
-            -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
-            -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1
-        );
-        
-        //----------------------------------------------------------------------
-        public static function lookAnTable($c)
-        {
-            return (($c > 127)?-1:self::$anTable[$c]);
-        }
-        
-        //----------------------------------------------------------------------
-        public static function checkModeAn($size, $data)
-        {
-            for($i=0; $i<$size; $i++) {
-                if (self::lookAnTable(ord($data[$i])) == -1) {
-                    return false;
-                }
-            }
-
-            return true;
-        }
-        
-        //----------------------------------------------------------------------
-        public static function estimateBitsModeAn($size)
-        {
-            $w = (int)($size / 2);
-            $bits = $w * 11;
-            
-            if($size & 1) {
-                $bits += 6;
-            }
-
-            return $bits;
-        }
-    
-        //----------------------------------------------------------------------
-        public static function estimateBitsMode8($size)
-        {
-            return $size * 8;
-        }
-        
-        //----------------------------------------------------------------------
-        public function estimateBitsModeKanji($size)
-        {
-            return (int)(($size / 2) * 13);
-        }
-        
-        //----------------------------------------------------------------------
-        public static function checkModeKanji($size, $data)
-        {
-            if($size & 1)
-                return false;
-
-            for($i=0; $i<$size; $i+=2) {
-                $val = (ord($data[$i]) << 8) | ord($data[$i+1]);
-                if( $val < 0x8140 
-                || ($val > 0x9ffc && $val < 0xe040) 
-                || $val > 0xebbf) {
-                    return false;
-                }
-            }
-
-            return true;
-        }
-
-        /***********************************************************************
-         * Validation
-         **********************************************************************/
-
-        public static function check($mode, $size, $data)
-        {
-            if($size <= 0) 
-                return false;
-
-            switch($mode) {
-                case QR_MODE_NUM:       return self::checkModeNum($size, $data);   break;
-                case QR_MODE_AN:        return self::checkModeAn($size, $data);    break;
-                case QR_MODE_KANJI:     return self::checkModeKanji($size, $data); break;
-                case QR_MODE_8:         return true; break;
-                case QR_MODE_STRUCTURE: return true; break;
-                
-                default:
-                    break;
-            }
-
-            return false;
-        }
-        
-        
-        //----------------------------------------------------------------------
-        public function estimateBitStreamSize($version)
-        {
-            $bits = 0;
-
-            foreach($this->items as $item) {
-                $bits += $item->estimateBitStreamSizeOfEntry($version);
-            }
-
-            return $bits;
-        }
-        
-        //----------------------------------------------------------------------
-        public function estimateVersion()
-        {
-            $version = 0;
-            $prev = 0;
-            do {
-                $prev = $version;
-                $bits = $this->estimateBitStreamSize($prev);
-                $version = QRspec::getMinimumVersion((int)(($bits + 7) / 8), $this->level);
-                if ($version < 0) {
-                    return -1;
-                }
-            } while ($version > $prev);
-
-            return $version;
-        }
-        
-        //----------------------------------------------------------------------
-        public static function lengthOfCode($mode, $version, $bits)
-        {
-            $payload = $bits - 4 - QRspec::lengthIndicator($mode, $version);
-            switch($mode) {
-                case QR_MODE_NUM:
-                    $chunks = (int)($payload / 10);
-                    $remain = $payload - $chunks * 10;
-                    $size = $chunks * 3;
-                    if($remain >= 7) {
-                        $size += 2;
-                    } else if($remain >= 4) {
-                        $size += 1;
-                    }
-                    break;
-                case QR_MODE_AN:
-                    $chunks = (int)($payload / 11);
-                    $remain = $payload - $chunks * 11;
-                    $size = $chunks * 2;
-                    if($remain >= 6) 
-                        $size++;
-                    break;
-                case QR_MODE_8:
-                    $size = (int)($payload / 8);
-                    break;
-                case QR_MODE_KANJI:
-                    $size = (int)(($payload / 13) * 2);
-                    break;
-                case QR_MODE_STRUCTURE:
-                    $size = (int)($payload / 8);
-                    break;
-                default:
-                    $size = 0;
-                    break;
-            }
-            
-            $maxsize = QRspec::maximumWords($mode, $version);
-            if($size < 0) $size = 0;
-            if($size > $maxsize) $size = $maxsize;
-
-            return $size;
-        }
-        
-        //----------------------------------------------------------------------
-        public function createBitStream()
-        {
-            $total = 0;
-
-            foreach($this->items as $item) {
-                $bits = $item->encodeBitStream($this->version);
-                
-                if($bits < 0) 
-                    return -1;
-                    
-                $total += $bits;
-            }
-
-            return $total;
-        }
-        
-        //----------------------------------------------------------------------
-        public function convertData()
-        {
-            $ver = $this->estimateVersion();
-            if($ver > $this->getVersion()) {
-                $this->setVersion($ver);
-            }
-
-            for(;;) {
-                $bits = $this->createBitStream();
-                
-                if($bits < 0) 
-                    return -1;
-                    
-                $ver = QRspec::getMinimumVersion((int)(($bits + 7) / 8), $this->level);
-                if($ver < 0) {
-                    throw new Exception('WRONG VERSION');
-                    return -1;
-                } else if($ver > $this->getVersion()) {
-                    $this->setVersion($ver);
-                } else {
-                    break;
-                }
-            }
-
-            return 0;
-        }
-        
-        //----------------------------------------------------------------------
-        public function appendPaddingBit(&$bstream)
-        {
-            $bits = $bstream->size();
-            $maxwords = QRspec::getDataLength($this->version, $this->level);
-            $maxbits = $maxwords * 8;
-
-            if ($maxbits == $bits) {
-                return 0;
-            }
-
-            if ($maxbits - $bits < 5) {
-                return $bstream->appendNum($maxbits - $bits, 0);
-            }
-
-            $bits += 4;
-            $words = (int)(($bits + 7) / 8);
-
-            $padding = new QRbitstream();
-            $ret = $padding->appendNum($words * 8 - $bits + 4, 0);
-            
-            if($ret < 0) 
-                return $ret;
-
-            $padlen = $maxwords - $words;
-            
-            if($padlen > 0) {
-                
-                $padbuf = array();
-                for($i=0; $i<$padlen; $i++) {
-                    $padbuf[$i] = ($i&1)?0x11:0xec;
-                }
-                
-                $ret = $padding->appendBytes($padlen, $padbuf);
-                
-                if($ret < 0)
-                    return $ret;
-                
-            }
-
-            $ret = $bstream->append($padding);
-            
-            return $ret;
-        }
-
-        //----------------------------------------------------------------------
-        public function mergeBitStream()
-        {
-            if($this->convertData() < 0) {
-                return null;
-            }
-
-            $bstream = new QRbitstream();
-            
-            foreach($this->items as $item) {
-                $ret = $bstream->append($item->bstream);
-                if($ret < 0) {
-                    return null;
-                }
-            }
-
-            return $bstream;
-        }
-
-        //----------------------------------------------------------------------
-        public function getBitStream()
-        {
-
-            $bstream = $this->mergeBitStream();
-            
-            if($bstream == null) {
-                return null;
-            }
-            
-            $ret = $this->appendPaddingBit($bstream);
-            if($ret < 0) {
-                return null;
-            }
-
-            return $bstream;
-        }
-        
-        //----------------------------------------------------------------------
-        public function getByteStream()
-        {
-            $bstream = $this->getBitStream();
-            if($bstream == null) {
-                return null;
-            }
-            
-            return $bstream->toByte();
-        }
-    }
-        
-        
-    
\ No newline at end of file
+<?php
+/*
+ * PHP QR Code encoder
+ *
+ * Input encoding class
+ *
+ * Based on libqrencode C library distributed under LGPL 2.1
+ * Copyright (C) 2006, 2007, 2008, 2009 Kentaro Fukuchi <fukuchi@megaui.net>
+ *
+ * PHP QR Code is distributed under LGPL 3
+ * Copyright (C) 2010 Dominik Dzienia <deltalab at poczta dot fm>
+ *
+ * This library is free software; you can redistribute it and/or
+ * modify it under the terms of the GNU Lesser General Public
+ * License as published by the Free Software Foundation; either
+ * version 3 of the License, or any later version.
+ *
+ * This library is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
+ * Lesser General Public License for more details.
+ *
+ * You should have received a copy of the GNU Lesser General Public
+ * License along with this library; if not, write to the Free Software
+ * Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA
+ */
+
+    define('STRUCTURE_HEADER_BITS', 20);
+    define('MAX_STRUCTURED_SYMBOLS', 16);
+
+    class QRinputItem
+    {
+        public $mode;
+        public $size;
+        public $data;
+        public $bstream;
+
+        public function __construct($mode, $size, $data, $bstream = null)
+        {
+            $setData = array_slice($data, 0, $size);
+
+            if (count($setData) < $size) {
+                $setData = array_merge($setData, array_fill(0, $size - count($setData), 0));
+            }
+
+            if (!QRinput::check($mode, $size, $setData)) {
+                throw new Exception('Error m:'.$mode.',s:'.$size.',d:'.implode(',', $setData));
+                return;
+            }
+
+            $this->mode = $mode;
+            $this->size = $size;
+            $this->data = $setData;
+            $this->bstream = $bstream;
+        }
+
+        //----------------------------------------------------------------------
+        public function encodeModeNum($version)
+        {
+            try {
+                $words = (int) ($this->size / 3);
+                $bs = new QRbitstream();
+
+                $val = 0x1;
+                $bs->appendNum(4, $val);
+                $bs->appendNum(QRspec::lengthIndicator(QR_MODE_NUM, $version), $this->size);
+
+                for ($i = 0; $i < $words; $i++) {
+                    $val = (ord($this->data[$i * 3]) - ord('0')) * 100;
+                    $val += (ord($this->data[$i * 3 + 1]) - ord('0')) * 10;
+                    $val += (ord($this->data[$i * 3 + 2]) - ord('0'));
+                    $bs->appendNum(10, $val);
+                }
+
+                if ($this->size - $words * 3 == 1) {
+                    $val = ord($this->data[$words * 3]) - ord('0');
+                    $bs->appendNum(4, $val);
+                } elseif ($this->size - $words * 3 == 2) {
+                    $val = (ord($this->data[$words * 3]) - ord('0')) * 10;
+                    $val += (ord($this->data[$words * 3 + 1]) - ord('0'));
+                    $bs->appendNum(7, $val);
+                }
+
+                $this->bstream = $bs;
+
+                return 0;
+            } catch (Exception $e) {
+                return -1;
+            }
+        }
+
+        //----------------------------------------------------------------------
+        public function encodeModeAn($version)
+        {
+            try {
+                $words = (int) ($this->size / 2);
+                $bs = new QRbitstream();
+
+                $bs->appendNum(4, 0x02);
+                $bs->appendNum(QRspec::lengthIndicator(QR_MODE_AN, $version), $this->size);
+
+                for ($i = 0; $i < $words; $i++) {
+                    $val = (int) QRinput::lookAnTable(ord($this->data[$i * 2])) * 45;
+                    $val += (int) QRinput::lookAnTable(ord($this->data[$i * 2 + 1]));
+
+                    $bs->appendNum(11, $val);
+                }
+
+                if ($this->size & 1) {
+                    $val = QRinput::lookAnTable(ord($this->data[$words * 2]));
+                    $bs->appendNum(6, $val);
+                }
+
+                $this->bstream = $bs;
+
+                return 0;
+            } catch (Exception $e) {
+                return -1;
+            }
+        }
+
+        //----------------------------------------------------------------------
+        public function encodeMode8($version)
+        {
+            try {
+                $bs = new QRbitstream();
+
+                $bs->appendNum(4, 0x4);
+                $bs->appendNum(QRspec::lengthIndicator(QR_MODE_8, $version), $this->size);
+
+                for ($i = 0; $i < $this->size; $i++) {
+                    $bs->appendNum(8, ord($this->data[$i]));
+                }
+
+                $this->bstream = $bs;
+
+                return 0;
+            } catch (Exception $e) {
+                return -1;
+            }
+        }
+
+        //----------------------------------------------------------------------
+        public function encodeModeKanji($version)
+        {
+            try {
+                $bs = new QRbitrtream();
+
+                $bs->appendNum(4, 0x8);
+                $bs->appendNum(QRspec::lengthIndicator(QR_MODE_KANJI, $version), (int) ($this->size / 2));
+
+                for ($i = 0; $i < $this->size; $i += 2) {
+                    $val = (ord($this->data[$i]) << 8) | ord($this->data[$i + 1]);
+                    if ($val <= 0x9ffc) {
+                        $val -= 0x8140;
+                    } else {
+                        $val -= 0xc140;
+                    }
+
+                    $h = ($val >> 8) * 0xc0;
+                    $val = ($val & 0xff) + $h;
+
+                    $bs->appendNum(13, $val);
+                }
+
+                $this->bstream = $bs;
+
+                return 0;
+            } catch (Exception $e) {
+                return -1;
+            }
+        }
+
+        //----------------------------------------------------------------------
+        public function encodeModeStructure()
+        {
+            try {
+                $bs = new QRbitstream();
+
+                $bs->appendNum(4, 0x03);
+                $bs->appendNum(4, ord($this->data[1]) - 1);
+                $bs->appendNum(4, ord($this->data[0]) - 1);
+                $bs->appendNum(8, ord($this->data[2]));
+
+                $this->bstream = $bs;
+
+                return 0;
+            } catch (Exception $e) {
+                return -1;
+            }
+        }
+
+        //----------------------------------------------------------------------
+        public function estimateBitStreamSizeOfEntry($version)
+        {
+            $bits = 0;
+
+            if ($version == 0) {
+                $version = 1;
+            }
+
+            switch ($this->mode) {
+                case QR_MODE_NUM:        $bits = QRinput::estimateBitsModeNum($this->size); break;
+                case QR_MODE_AN:        $bits = QRinput::estimateBitsModeAn($this->size); break;
+                case QR_MODE_8:            $bits = QRinput::estimateBitsMode8($this->size); break;
+                case QR_MODE_KANJI:        $bits = QRinput::estimateBitsModeKanji($this->size); break;
+                case QR_MODE_STRUCTURE:    return STRUCTURE_HEADER_BITS;
+                default:
+                    return 0;
+            }
+
+            $l = QRspec::lengthIndicator($this->mode, $version);
+            $m = 1 << $l;
+            $num = (int) (($this->size + $m - 1) / $m);
+
+            $bits += $num * (4 + $l);
+
+            return $bits;
+        }
+
+        //----------------------------------------------------------------------
+        public function encodeBitStream($version)
+        {
+            try {
+                unset($this->bstream);
+                $words = QRspec::maximumWords($this->mode, $version);
+
+                if ($this->size > $words) {
+                    $st1 = new self($this->mode, $words, $this->data);
+                    $st2 = new self($this->mode, $this->size - $words, array_slice($this->data, $words));
+
+                    $st1->encodeBitStream($version);
+                    $st2->encodeBitStream($version);
+
+                    $this->bstream = new QRbitstream();
+                    $this->bstream->append($st1->bstream);
+                    $this->bstream->append($st2->bstream);
+
+                    unset($st1);
+                    unset($st2);
+                } else {
+                    $ret = 0;
+
+                    switch ($this->mode) {
+                        case QR_MODE_NUM:        $ret = $this->encodeModeNum($version); break;
+                        case QR_MODE_AN:        $ret = $this->encodeModeAn($version); break;
+                        case QR_MODE_8:            $ret = $this->encodeMode8($version); break;
+                        case QR_MODE_KANJI:        $ret = $this->encodeModeKanji($version); break;
+                        case QR_MODE_STRUCTURE:    $ret = $this->encodeModeStructure(); break;
+
+                        default:
+                            break;
+                    }
+
+                    if ($ret < 0) {
+                        return -1;
+                    }
+                }
+
+                return $this->bstream->size();
+            } catch (Exception $e) {
+                return -1;
+            }
+        }
+    }
+
+    //##########################################################################
+
+    class QRinput
+    {
+        public $items;
+
+        private $version;
+        private $level;
+
+        //----------------------------------------------------------------------
+        public function __construct($version = 0, $level = QR_ECLEVEL_L)
+        {
+            if ($version < 0 || $version > QRSPEC_VERSION_MAX || $level > QR_ECLEVEL_H) {
+                throw new Exception('Invalid version no');
+                return;
+            }
+
+            $this->version = $version;
+            $this->level = $level;
+        }
+
+        //----------------------------------------------------------------------
+        public function getVersion()
+        {
+            return $this->version;
+        }
+
+        //----------------------------------------------------------------------
+        public function setVersion($version)
+        {
+            if ($version < 0 || $version > QRSPEC_VERSION_MAX) {
+                throw new Exception('Invalid version no');
+                return -1;
+            }
+
+            $this->version = $version;
+
+            return 0;
+        }
+
+        //----------------------------------------------------------------------
+        public function getErrorCorrectionLevel()
+        {
+            return $this->level;
+        }
+
+        //----------------------------------------------------------------------
+        public function setErrorCorrectionLevel($level)
+        {
+            if ($level > QR_ECLEVEL_H) {
+                throw new Exception('Invalid ECLEVEL');
+                return -1;
+            }
+
+            $this->level = $level;
+
+            return 0;
+        }
+
+        //----------------------------------------------------------------------
+        public function appendEntry(QRinputItem $entry)
+        {
+            $this->items[] = $entry;
+        }
+
+        //----------------------------------------------------------------------
+        public function append($mode, $size, $data)
+        {
+            try {
+                $entry = new QRinputItem($mode, $size, $data);
+                $this->items[] = $entry;
+
+                return 0;
+            } catch (Exception $e) {
+                return -1;
+            }
+        }
+
+        //----------------------------------------------------------------------
+
+        public function insertStructuredAppendHeader($size, $index, $parity)
+        {
+            if ($size > MAX_STRUCTURED_SYMBOLS) {
+                throw new Exception('insertStructuredAppendHeader wrong size');
+            }
+
+            if ($index <= 0 || $index > MAX_STRUCTURED_SYMBOLS) {
+                throw new Exception('insertStructuredAppendHeader wrong index');
+            }
+
+            $buf = [$size, $index, $parity];
+
+            try {
+                $entry = new QRinputItem(QR_MODE_STRUCTURE, 3, buf);
+                array_unshift($this->items, $entry);
+
+                return 0;
+            } catch (Exception $e) {
+                return -1;
+            }
+        }
+
+        //----------------------------------------------------------------------
+        public function calcParity()
+        {
+            $parity = 0;
+
+            foreach ($this->items as $item) {
+                if ($item->mode != QR_MODE_STRUCTURE) {
+                    for ($i = $item->size - 1; $i >= 0; $i--) {
+                        $parity ^= $item->data[$i];
+                    }
+                }
+            }
+
+            return $parity;
+        }
+
+        //----------------------------------------------------------------------
+        public static function checkModeNum($size, $data)
+        {
+            for ($i = 0; $i < $size; $i++) {
+                if ((ord($data[$i]) < ord('0')) || (ord($data[$i]) > ord('9'))) {
+                    return false;
+                }
+            }
+
+            return true;
+        }
+
+        //----------------------------------------------------------------------
+        public static function estimateBitsModeNum($size)
+        {
+            $w = (int) $size / 3;
+            $bits = $w * 10;
+
+            switch ($size - $w * 3) {
+                case 1:
+                    $bits += 4;
+                    break;
+                case 2:
+                    $bits += 7;
+                    break;
+                default:
+                    break;
+            }
+
+            return $bits;
+        }
+
+        //----------------------------------------------------------------------
+        public static $anTable = [
+            -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
+            -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
+            36, -1, -1, -1, 37, 38, -1, -1, -1, -1, 39, 40, -1, 41, 42, 43,
+             0,  1,  2,  3,  4,  5,  6,  7,  8,  9, 44, -1, -1, -1, -1, -1,
+            -1, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24,
+            25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, -1, -1, -1, -1, -1,
+            -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
+            -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
+        ];
+
+        //----------------------------------------------------------------------
+        public static function lookAnTable($c)
+        {
+            return ($c > 127) ? -1 : self::$anTable[$c];
+        }
+
+        //----------------------------------------------------------------------
+        public static function checkModeAn($size, $data)
+        {
+            for ($i = 0; $i < $size; $i++) {
+                if (self::lookAnTable(ord($data[$i])) == -1) {
+                    return false;
+                }
+            }
+
+            return true;
+        }
+
+        //----------------------------------------------------------------------
+        public static function estimateBitsModeAn($size)
+        {
+            $w = (int) ($size / 2);
+            $bits = $w * 11;
+
+            if ($size & 1) {
+                $bits += 6;
+            }
+
+            return $bits;
+        }
+
+        //----------------------------------------------------------------------
+        public static function estimateBitsMode8($size)
+        {
+            return $size * 8;
+        }
+
+        //----------------------------------------------------------------------
+        public function estimateBitsModeKanji($size)
+        {
+            return (int) (($size / 2) * 13);
+        }
+
+        //----------------------------------------------------------------------
+        public static function checkModeKanji($size, $data)
+        {
+            if ($size & 1) {
+                return false;
+            }
+
+            for ($i = 0; $i < $size; $i += 2) {
+                $val = (ord($data[$i]) << 8) | ord($data[$i + 1]);
+                if ($val < 0x8140
+                || ($val > 0x9ffc && $val < 0xe040)
+                || $val > 0xebbf) {
+                    return false;
+                }
+            }
+
+            return true;
+        }
+
+        /***********************************************************************
+         * Validation
+         **********************************************************************/
+
+        public static function check($mode, $size, $data)
+        {
+            if ($size <= 0) {
+                return false;
+            }
+
+            switch ($mode) {
+                case QR_MODE_NUM:       return self::checkModeNum($size, $data); break;
+                case QR_MODE_AN:        return self::checkModeAn($size, $data); break;
+                case QR_MODE_KANJI:     return self::checkModeKanji($size, $data); break;
+                case QR_MODE_8:         return true; break;
+                case QR_MODE_STRUCTURE: return true; break;
+
+                default:
+                    break;
+            }
+
+            return false;
+        }
+
+        //----------------------------------------------------------------------
+        public function estimateBitStreamSize($version)
+        {
+            $bits = 0;
+
+            foreach ($this->items as $item) {
+                $bits += $item->estimateBitStreamSizeOfEntry($version);
+            }
+
+            return $bits;
+        }
+
+        //----------------------------------------------------------------------
+        public function estimateVersion()
+        {
+            $version = 0;
+            $prev = 0;
+            do {
+                $prev = $version;
+                $bits = $this->estimateBitStreamSize($prev);
+                $version = QRspec::getMinimumVersion((int) (($bits + 7) / 8), $this->level);
+                if ($version < 0) {
+                    return -1;
+                }
+            } while ($version > $prev);
+
+            return $version;
+        }
+
+        //----------------------------------------------------------------------
+        public static function lengthOfCode($mode, $version, $bits)
+        {
+            $payload = $bits - 4 - QRspec::lengthIndicator($mode, $version);
+            switch ($mode) {
+                case QR_MODE_NUM:
+                    $chunks = (int) ($payload / 10);
+                    $remain = $payload - $chunks * 10;
+                    $size = $chunks * 3;
+                    if ($remain >= 7) {
+                        $size += 2;
+                    } elseif ($remain >= 4) {
+                        $size += 1;
+                    }
+                    break;
+                case QR_MODE_AN:
+                    $chunks = (int) ($payload / 11);
+                    $remain = $payload - $chunks * 11;
+                    $size = $chunks * 2;
+                    if ($remain >= 6) {
+                        $size++;
+                    }
+                    break;
+                case QR_MODE_8:
+                    $size = (int) ($payload / 8);
+                    break;
+                case QR_MODE_KANJI:
+                    $size = (int) (($payload / 13) * 2);
+                    break;
+                case QR_MODE_STRUCTURE:
+                    $size = (int) ($payload / 8);
+                    break;
+                default:
+                    $size = 0;
+                    break;
+            }
+
+            $maxsize = QRspec::maximumWords($mode, $version);
+            if ($size < 0) {
+                $size = 0;
+            }
+            if ($size > $maxsize) {
+                $size = $maxsize;
+            }
+
+            return $size;
+        }
+
+        //----------------------------------------------------------------------
+        public function createBitStream()
+        {
+            $total = 0;
+
+            foreach ($this->items as $item) {
+                $bits = $item->encodeBitStream($this->version);
+
+                if ($bits < 0) {
+                    return -1;
+                }
+
+                $total += $bits;
+            }
+
+            return $total;
+        }
+
+        //----------------------------------------------------------------------
+        public function convertData()
+        {
+            $ver = $this->estimateVersion();
+            if ($ver > $this->getVersion()) {
+                $this->setVersion($ver);
+            }
+
+            for (; ;) {
+                $bits = $this->createBitStream();
+
+                if ($bits < 0) {
+                    return -1;
+                }
+
+                $ver = QRspec::getMinimumVersion((int) (($bits + 7) / 8), $this->level);
+                if ($ver < 0) {
+                    throw new Exception('WRONG VERSION');
+                    return -1;
+                } elseif ($ver > $this->getVersion()) {
+                    $this->setVersion($ver);
+                } else {
+                    break;
+                }
+            }
+
+            return 0;
+        }
+
+        //----------------------------------------------------------------------
+        public function appendPaddingBit(&$bstream)
+        {
+            $bits = $bstream->size();
+            $maxwords = QRspec::getDataLength($this->version, $this->level);
+            $maxbits = $maxwords * 8;
+
+            if ($maxbits == $bits) {
+                return 0;
+            }
+
+            if ($maxbits - $bits < 5) {
+                return $bstream->appendNum($maxbits - $bits, 0);
+            }
+
+            $bits += 4;
+            $words = (int) (($bits + 7) / 8);
+
+            $padding = new QRbitstream();
+            $ret = $padding->appendNum($words * 8 - $bits + 4, 0);
+
+            if ($ret < 0) {
+                return $ret;
+            }
+
+            $padlen = $maxwords - $words;
+
+            if ($padlen > 0) {
+                $padbuf = [];
+                for ($i = 0; $i < $padlen; $i++) {
+                    $padbuf[$i] = ($i & 1) ? 0x11 : 0xec;
+                }
+
+                $ret = $padding->appendBytes($padlen, $padbuf);
+
+                if ($ret < 0) {
+                    return $ret;
+                }
+            }
+
+            $ret = $bstream->append($padding);
+
+            return $ret;
+        }
+
+        //----------------------------------------------------------------------
+        public function mergeBitStream()
+        {
+            if ($this->convertData() < 0) {
+                return;
+            }
+
+            $bstream = new QRbitstream();
+
+            foreach ($this->items as $item) {
+                $ret = $bstream->append($item->bstream);
+                if ($ret < 0) {
+                    return;
+                }
+            }
+
+            return $bstream;
+        }
+
+        //----------------------------------------------------------------------
+        public function getBitStream()
+        {
+            $bstream = $this->mergeBitStream();
+
+            if ($bstream == null) {
+                return;
+            }
+
+            $ret = $this->appendPaddingBit($bstream);
+            if ($ret < 0) {
+                return;
+            }
+
+            return $bstream;
+        }
+
+        //----------------------------------------------------------------------
+        public function getByteStream()
+        {
+            $bstream = $this->getBitStream();
+            if ($bstream == null) {
+                return;
+            }
+
+            return $bstream->toByte();
+        }
+    }
diff --git a/config/qrcode/qrlib.php b/config/qrcode/qrlib.php
index 768d534b6aa755ad16672c8d64e3ca743e12d480..b3457453355bd06b3e3b70146f6f20763350e197 100755
--- a/config/qrcode/qrlib.php
+++ b/config/qrcode/qrlib.php
@@ -24,21 +24,20 @@
  * License along with this library; if not, write to the Free Software
  * Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA
  */
-	
-	$QR_BASEDIR = dirname(__FILE__).DIRECTORY_SEPARATOR;
-	
-	// Required libs
-	
-	include $QR_BASEDIR."qrconst.php";
-	include $QR_BASEDIR."qrconfig.php";
-	include $QR_BASEDIR."qrtools.php";
-	include $QR_BASEDIR."qrspec.php";
-	include $QR_BASEDIR."qrimage.php";
-	include $QR_BASEDIR."qrvect.php";
-	include $QR_BASEDIR."qrinput.php";
-	include $QR_BASEDIR."qrbitstream.php";
-	include $QR_BASEDIR."qrsplit.php";
-	include $QR_BASEDIR."qrrscode.php";
-	include $QR_BASEDIR."qrmask.php";
-	include $QR_BASEDIR."qrencode.php";
 
+    $QR_BASEDIR = dirname(__FILE__).DIRECTORY_SEPARATOR;
+
+    // Required libs
+
+    include $QR_BASEDIR.'qrconst.php';
+    include $QR_BASEDIR.'qrconfig.php';
+    include $QR_BASEDIR.'qrtools.php';
+    include $QR_BASEDIR.'qrspec.php';
+    include $QR_BASEDIR.'qrimage.php';
+    include $QR_BASEDIR.'qrvect.php';
+    include $QR_BASEDIR.'qrinput.php';
+    include $QR_BASEDIR.'qrbitstream.php';
+    include $QR_BASEDIR.'qrsplit.php';
+    include $QR_BASEDIR.'qrrscode.php';
+    include $QR_BASEDIR.'qrmask.php';
+    include $QR_BASEDIR.'qrencode.php';
diff --git a/config/qrcode/qrmask.php b/config/qrcode/qrmask.php
index 1f00fb9ad0ca72a1c0dcdfe0dbe027739b97bfba..b28f5df22d8657e8c8dd8b07e0b287d6d579ee76 100755
--- a/config/qrcode/qrmask.php
+++ b/config/qrcode/qrmask.php
@@ -1,328 +1,360 @@
-<?php
-/*
- * PHP QR Code encoder
- *
- * Masking
- *
- * Based on libqrencode C library distributed under LGPL 2.1
- * Copyright (C) 2006, 2007, 2008, 2009 Kentaro Fukuchi <fukuchi@megaui.net>
- *
- * PHP QR Code is distributed under LGPL 3
- * Copyright (C) 2010 Dominik Dzienia <deltalab at poczta dot fm>
- *
- * This library is free software; you can redistribute it and/or
- * modify it under the terms of the GNU Lesser General Public
- * License as published by the Free Software Foundation; either
- * version 3 of the License, or any later version.
- *
- * This library is distributed in the hope that it will be useful,
- * but WITHOUT ANY WARRANTY; without even the implied warranty of
- * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
- * Lesser General Public License for more details.
- *
- * You should have received a copy of the GNU Lesser General Public
- * License along with this library; if not, write to the Free Software
- * Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA
- */
-
-	define('N1', 3);
-	define('N2', 3);
-	define('N3', 40);
-	define('N4', 10);
-
-	class QRmask {
-
-		public $runLength = array();
-
-		//----------------------------------------------------------------------
-		public function __construct()
-        {
-            $this->runLength = array_fill(0, QRSPEC_WIDTH_MAX + 1, 0);
-        }
-
-        //----------------------------------------------------------------------
-        public function writeFormatInformation($width, &$frame, $mask, $level)
-        {
-            $blacks = 0;
-            $format =  QRspec::getFormatInfo($mask, $level);
-
-            for($i=0; $i<8; $i++) {
-                if($format & 1) {
-                    $blacks += 2;
-                    $v = 0x85;
-                } else {
-                    $v = 0x84;
-                }
-
-                $frame[8][$width - 1 - $i] = chr($v);
-                if($i < 6) {
-                    $frame[$i][8] = chr($v);
-                } else {
-                    $frame[$i + 1][8] = chr($v);
-                }
-                $format = $format >> 1;
-            }
-
-            for($i=0; $i<7; $i++) {
-                if($format & 1) {
-                    $blacks += 2;
-                    $v = 0x85;
-                } else {
-                    $v = 0x84;
-                }
-
-                $frame[$width - 7 + $i][8] = chr($v);
-                if($i == 0) {
-                    $frame[8][7] = chr($v);
-                } else {
-                    $frame[8][6 - $i] = chr($v);
-                }
-
-                $format = $format >> 1;
-            }
-
-            return $blacks;
-        }
-
-        //----------------------------------------------------------------------
-        public function mask0($x, $y) { return ($x+$y)&1;                       }
-        public function mask1($x, $y) { return ($y&1);                          }
-        public function mask2($x, $y) { return ($x%3);                          }
-        public function mask3($x, $y) { return ($x+$y)%3;                       }
-        public function mask4($x, $y) { return (((int)($y/2))+((int)($x/3)))&1; }
-        public function mask5($x, $y) { return (($x*$y)&1)+($x*$y)%3;           }
-        public function mask6($x, $y) { return ((($x*$y)&1)+($x*$y)%3)&1;       }
-        public function mask7($x, $y) { return ((($x*$y)%3)+(($x+$y)&1))&1;     }
-
-        //----------------------------------------------------------------------
-        private function generateMaskNo($maskNo, $width, $frame)
-        {
-            $bitMask = array_fill(0, $width, array_fill(0, $width, 0));
-
-            for($y=0; $y<$width; $y++) {
-                for($x=0; $x<$width; $x++) {
-                    if(ord($frame[$y][$x]) & 0x80) {
-                        $bitMask[$y][$x] = 0;
-                    } else {
-                        $maskFunc = call_user_func(array($this, 'mask'.$maskNo), $x, $y);
-                        $bitMask[$y][$x] = ($maskFunc == 0)?1:0;
-                    }
-
-                }
-            }
-
-            return $bitMask;
-        }
-
-        //----------------------------------------------------------------------
-        public static function serial($bitFrame)
-        {
-            $codeArr = array();
-
-            foreach ($bitFrame as $line)
-                $codeArr[] = join('', $line);
-
-            return gzcompress(join("\n", $codeArr), 9);
-        }
-
-        //----------------------------------------------------------------------
-        public static function unserial($code)
-        {
-            $codeArr = array();
-
-            $codeLines = explode("\n", gzuncompress($code));
-            foreach ($codeLines as $line)
-                $codeArr[] = str_split($line);
-
-            return $codeArr;
-        }
-
-        //----------------------------------------------------------------------
-        public function makeMaskNo($maskNo, $width, $s, &$d, $maskGenOnly = false)
-        {
-            $b = 0;
-            $bitMask = array();
-
-            $fileName = QR_CACHE_DIR.'mask_'.$maskNo.DIRECTORY_SEPARATOR.'mask_'.$width.'_'.$maskNo.'.dat';
-
-            if (QR_CACHEABLE) {
-                if (file_exists($fileName)) {
-                    $bitMask = self::unserial(file_get_contents($fileName));
-                } else {
-                    $bitMask = $this->generateMaskNo($maskNo, $width, $s, $d);
-                    if (!file_exists(QR_CACHE_DIR.'mask_'.$maskNo))
-                        mkdir(QR_CACHE_DIR.'mask_'.$maskNo);
-                    file_put_contents($fileName, self::serial($bitMask));
-                }
-            } else {
-                $bitMask = $this->generateMaskNo($maskNo, $width, $s, $d);
-            }
-
-            if ($maskGenOnly)
-                return;
-
-            $d = $s;
-
-            for($y=0; $y<$width; $y++) {
-                for($x=0; $x<$width; $x++) {
-                    if($bitMask[$y][$x] == 1) {
-                        $d[$y][$x] = chr(ord($s[$y][$x]) ^ (int)$bitMask[$y][$x]);
-                    }
-                    $b += (int)(ord($d[$y][$x]) & 1);
-                }
-            }
-
-            return $b;
-        }
-
-        //----------------------------------------------------------------------
-        public function makeMask($width, $frame, $maskNo, $level)
-        {
-            $masked = array_fill(0, $width, str_repeat("\0", $width));
-            $this->makeMaskNo($maskNo, $width, $frame, $masked);
-            $this->writeFormatInformation($width, $masked, $maskNo, $level);
-
-            return $masked;
-        }
-
-        //----------------------------------------------------------------------
-        public function calcN1N3($length)
-        {
-            $demerit = 0;
-
-            for($i=0; $i<$length; $i++) {
-
-                if($this->runLength[$i] >= 5) {
-                    $demerit += (N1 + ($this->runLength[$i] - 5));
-                }
-                if($i & 1) {
-                    if(($i >= 3) && ($i < ($length-2)) && ($this->runLength[$i] % 3 == 0)) {
-                        $fact = (int)($this->runLength[$i] / 3);
-                        if(($this->runLength[$i-2] == $fact) &&
-                           ($this->runLength[$i-1] == $fact) &&
-                           ($this->runLength[$i+1] == $fact) &&
-                           ($this->runLength[$i+2] == $fact)) {
-                            if(($this->runLength[$i-3] < 0) || ($this->runLength[$i-3] >= (4 * $fact))) {
-                                $demerit += N3;
-                            } else if((($i+3) >= $length) || ($this->runLength[$i+3] >= (4 * $fact))) {
-                                $demerit += N3;
-                            }
-                        }
-                    }
-                }
-            }
-            return $demerit;
-        }
-
-        //----------------------------------------------------------------------
-        public function evaluateSymbol($width, $frame)
-        {
-            $head = 0;
-            $demerit = 0;
-
-            for($y=0; $y<$width; $y++) {
-                $head = 0;
-                $this->runLength[0] = 1;
-
-                $frameY = $frame[$y];
-
-                if ($y>0)
-                    $frameYM = $frame[$y-1];
-
-                for($x=0; $x<$width; $x++) {
-                    if(($x > 0) && ($y > 0)) {
-                        $b22 = ord($frameY[$x]) & ord($frameY[$x-1]) & ord($frameYM[$x]) & ord($frameYM[$x-1]);
-                        $w22 = ord($frameY[$x]) | ord($frameY[$x-1]) | ord($frameYM[$x]) | ord($frameYM[$x-1]);
-
-                        if(($b22 | ($w22 ^ 1))&1) {
-                            $demerit += N2;
-                        }
-                    }
-                    if(($x == 0) && (ord($frameY[$x]) & 1)) {
-                        $this->runLength[0] = -1;
-                        $head = 1;
-                        $this->runLength[$head] = 1;
-                    } else if($x > 0) {
-                        if((ord($frameY[$x]) ^ ord($frameY[$x-1])) & 1) {
-                            $head++;
-                            $this->runLength[$head] = 1;
-                        } else {
-                            $this->runLength[$head]++;
-                        }
-                    }
-                }
-
-                $demerit += $this->calcN1N3($head+1);
-            }
-
-            for($x=0; $x<$width; $x++) {
-                $head = 0;
-                $this->runLength[0] = 1;
-
-                for($y=0; $y<$width; $y++) {
-                    if($y == 0 && (ord($frame[$y][$x]) & 1)) {
-                        $this->runLength[0] = -1;
-                        $head = 1;
-                        $this->runLength[$head] = 1;
-                    } else if($y > 0) {
-                        if((ord($frame[$y][$x]) ^ ord($frame[$y-1][$x])) & 1) {
-                            $head++;
-                            $this->runLength[$head] = 1;
-                        } else {
-                            $this->runLength[$head]++;
-                        }
-                    }
-                }
-
-                $demerit += $this->calcN1N3($head+1);
-            }
-
-            return $demerit;
-        }
-
-
-        //----------------------------------------------------------------------
-        public function mask($width, $frame, $level)
-        {
-            $minDemerit = PHP_INT_MAX;
-            $bestMaskNum = 0;
-            $bestMask = array();
-
-            $checked_masks = array(0,1,2,3,4,5,6,7);
-
-            if (QR_FIND_FROM_RANDOM !== false) {
-
-                $howManuOut = 8-(QR_FIND_FROM_RANDOM % 9);
-                for ($i = 0; $i <  $howManuOut; $i++) {
-                    $remPos = rand (0, count($checked_masks)-1);
-                    unset($checked_masks[$remPos]);
-                    $checked_masks = array_values($checked_masks);
-                }
-
-            }
-
-            $bestMask = $frame;
-
-            foreach($checked_masks as $i) {
-                $mask = array_fill(0, $width, str_repeat("\0", $width));
-
-                $demerit = 0;
-                $blacks = 0;
-                $blacks  = $this->makeMaskNo($i, $width, $frame, $mask);
-                $blacks += $this->writeFormatInformation($width, $mask, $i, $level);
-                $blacks  = (int)(100 * $blacks / ($width * $width));
-                $demerit = (int)((int)(abs($blacks - 50) / 5) * N4);
-                $demerit += $this->evaluateSymbol($width, $mask);
-
-                if($demerit < $minDemerit) {
-                    $minDemerit = $demerit;
-                    $bestMask = $mask;
-                    $bestMaskNum = $i;
-                }
-            }
-
-            return $bestMask;
-        }
-
-        //----------------------------------------------------------------------
-    }
+<?php
+/*
+ * PHP QR Code encoder
+ *
+ * Masking
+ *
+ * Based on libqrencode C library distributed under LGPL 2.1
+ * Copyright (C) 2006, 2007, 2008, 2009 Kentaro Fukuchi <fukuchi@megaui.net>
+ *
+ * PHP QR Code is distributed under LGPL 3
+ * Copyright (C) 2010 Dominik Dzienia <deltalab at poczta dot fm>
+ *
+ * This library is free software; you can redistribute it and/or
+ * modify it under the terms of the GNU Lesser General Public
+ * License as published by the Free Software Foundation; either
+ * version 3 of the License, or any later version.
+ *
+ * This library is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
+ * Lesser General Public License for more details.
+ *
+ * You should have received a copy of the GNU Lesser General Public
+ * License along with this library; if not, write to the Free Software
+ * Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA
+ */
+
+    define('N1', 3);
+    define('N2', 3);
+    define('N3', 40);
+    define('N4', 10);
+
+    class qrmask
+    {
+        public $runLength = [];
+
+        //----------------------------------------------------------------------
+        public function __construct()
+        {
+            $this->runLength = array_fill(0, QRSPEC_WIDTH_MAX + 1, 0);
+        }
+
+        //----------------------------------------------------------------------
+        public function writeFormatInformation($width, &$frame, $mask, $level)
+        {
+            $blacks = 0;
+            $format = QRspec::getFormatInfo($mask, $level);
+
+            for ($i = 0; $i < 8; $i++) {
+                if ($format & 1) {
+                    $blacks += 2;
+                    $v = 0x85;
+                } else {
+                    $v = 0x84;
+                }
+
+                $frame[8][$width - 1 - $i] = chr($v);
+                if ($i < 6) {
+                    $frame[$i][8] = chr($v);
+                } else {
+                    $frame[$i + 1][8] = chr($v);
+                }
+                $format = $format >> 1;
+            }
+
+            for ($i = 0; $i < 7; $i++) {
+                if ($format & 1) {
+                    $blacks += 2;
+                    $v = 0x85;
+                } else {
+                    $v = 0x84;
+                }
+
+                $frame[$width - 7 + $i][8] = chr($v);
+                if ($i == 0) {
+                    $frame[8][7] = chr($v);
+                } else {
+                    $frame[8][6 - $i] = chr($v);
+                }
+
+                $format = $format >> 1;
+            }
+
+            return $blacks;
+        }
+
+        //----------------------------------------------------------------------
+        public function mask0($x, $y)
+        {
+            return ($x + $y) & 1;
+        }
+
+        public function mask1($x, $y)
+        {
+            return $y & 1;
+        }
+
+        public function mask2($x, $y)
+        {
+            return $x % 3;
+        }
+
+        public function mask3($x, $y)
+        {
+            return ($x + $y) % 3;
+        }
+
+        public function mask4($x, $y)
+        {
+            return (((int) ($y / 2)) + ((int) ($x / 3))) & 1;
+        }
+
+        public function mask5($x, $y)
+        {
+            return (($x * $y) & 1) + ($x * $y) % 3;
+        }
+
+        public function mask6($x, $y)
+        {
+            return ((($x * $y) & 1) + ($x * $y) % 3) & 1;
+        }
+
+        public function mask7($x, $y)
+        {
+            return ((($x * $y) % 3) + (($x + $y) & 1)) & 1;
+        }
+
+        //----------------------------------------------------------------------
+        private function generateMaskNo($maskNo, $width, $frame)
+        {
+            $bitMask = array_fill(0, $width, array_fill(0, $width, 0));
+
+            for ($y = 0; $y < $width; $y++) {
+                for ($x = 0; $x < $width; $x++) {
+                    if (ord($frame[$y][$x]) & 0x80) {
+                        $bitMask[$y][$x] = 0;
+                    } else {
+                        $maskFunc = call_user_func([$this, 'mask'.$maskNo], $x, $y);
+                        $bitMask[$y][$x] = ($maskFunc == 0) ? 1 : 0;
+                    }
+                }
+            }
+
+            return $bitMask;
+        }
+
+        //----------------------------------------------------------------------
+        public static function serial($bitFrame)
+        {
+            $codeArr = [];
+
+            foreach ($bitFrame as $line) {
+                $codeArr[] = implode('', $line);
+            }
+
+            return gzcompress(implode("\n", $codeArr), 9);
+        }
+
+        //----------------------------------------------------------------------
+        public static function unserial($code)
+        {
+            $codeArr = [];
+
+            $codeLines = explode("\n", gzuncompress($code));
+            foreach ($codeLines as $line) {
+                $codeArr[] = str_split($line);
+            }
+
+            return $codeArr;
+        }
+
+        //----------------------------------------------------------------------
+        public function makeMaskNo($maskNo, $width, $s, &$d, $maskGenOnly = false)
+        {
+            $b = 0;
+            $bitMask = [];
+
+            $fileName = QR_CACHE_DIR.'mask_'.$maskNo.DIRECTORY_SEPARATOR.'mask_'.$width.'_'.$maskNo.'.dat';
+
+            if (QR_CACHEABLE) {
+                if (file_exists($fileName)) {
+                    $bitMask = self::unserial(file_get_contents($fileName));
+                } else {
+                    $bitMask = $this->generateMaskNo($maskNo, $width, $s, $d);
+                    if (!file_exists(QR_CACHE_DIR.'mask_'.$maskNo)) {
+                        mkdir(QR_CACHE_DIR.'mask_'.$maskNo);
+                    }
+                    file_put_contents($fileName, self::serial($bitMask));
+                }
+            } else {
+                $bitMask = $this->generateMaskNo($maskNo, $width, $s, $d);
+            }
+
+            if ($maskGenOnly) {
+                return;
+            }
+
+            $d = $s;
+
+            for ($y = 0; $y < $width; $y++) {
+                for ($x = 0; $x < $width; $x++) {
+                    if ($bitMask[$y][$x] == 1) {
+                        $d[$y][$x] = chr(ord($s[$y][$x]) ^ (int) $bitMask[$y][$x]);
+                    }
+                    $b += (int) (ord($d[$y][$x]) & 1);
+                }
+            }
+
+            return $b;
+        }
+
+        //----------------------------------------------------------------------
+        public function makeMask($width, $frame, $maskNo, $level)
+        {
+            $masked = array_fill(0, $width, str_repeat("\0", $width));
+            $this->makeMaskNo($maskNo, $width, $frame, $masked);
+            $this->writeFormatInformation($width, $masked, $maskNo, $level);
+
+            return $masked;
+        }
+
+        //----------------------------------------------------------------------
+        public function calcN1N3($length)
+        {
+            $demerit = 0;
+
+            for ($i = 0; $i < $length; $i++) {
+                if ($this->runLength[$i] >= 5) {
+                    $demerit += (N1 + ($this->runLength[$i] - 5));
+                }
+                if ($i & 1) {
+                    if (($i >= 3) && ($i < ($length - 2)) && ($this->runLength[$i] % 3 == 0)) {
+                        $fact = (int) ($this->runLength[$i] / 3);
+                        if (($this->runLength[$i - 2] == $fact) &&
+                           ($this->runLength[$i - 1] == $fact) &&
+                           ($this->runLength[$i + 1] == $fact) &&
+                           ($this->runLength[$i + 2] == $fact)) {
+                            if (($this->runLength[$i - 3] < 0) || ($this->runLength[$i - 3] >= (4 * $fact))) {
+                                $demerit += N3;
+                            } elseif ((($i + 3) >= $length) || ($this->runLength[$i + 3] >= (4 * $fact))) {
+                                $demerit += N3;
+                            }
+                        }
+                    }
+                }
+            }
+
+            return $demerit;
+        }
+
+        //----------------------------------------------------------------------
+        public function evaluateSymbol($width, $frame)
+        {
+            $head = 0;
+            $demerit = 0;
+
+            for ($y = 0; $y < $width; $y++) {
+                $head = 0;
+                $this->runLength[0] = 1;
+
+                $frameY = $frame[$y];
+
+                if ($y > 0) {
+                    $frameYM = $frame[$y - 1];
+                }
+
+                for ($x = 0; $x < $width; $x++) {
+                    if (($x > 0) && ($y > 0)) {
+                        $b22 = ord($frameY[$x]) & ord($frameY[$x - 1]) & ord($frameYM[$x]) & ord($frameYM[$x - 1]);
+                        $w22 = ord($frameY[$x]) | ord($frameY[$x - 1]) | ord($frameYM[$x]) | ord($frameYM[$x - 1]);
+
+                        if (($b22 | ($w22 ^ 1)) & 1) {
+                            $demerit += N2;
+                        }
+                    }
+                    if (($x == 0) && (ord($frameY[$x]) & 1)) {
+                        $this->runLength[0] = -1;
+                        $head = 1;
+                        $this->runLength[$head] = 1;
+                    } elseif ($x > 0) {
+                        if ((ord($frameY[$x]) ^ ord($frameY[$x - 1])) & 1) {
+                            $head++;
+                            $this->runLength[$head] = 1;
+                        } else {
+                            $this->runLength[$head]++;
+                        }
+                    }
+                }
+
+                $demerit += $this->calcN1N3($head + 1);
+            }
+
+            for ($x = 0; $x < $width; $x++) {
+                $head = 0;
+                $this->runLength[0] = 1;
+
+                for ($y = 0; $y < $width; $y++) {
+                    if ($y == 0 && (ord($frame[$y][$x]) & 1)) {
+                        $this->runLength[0] = -1;
+                        $head = 1;
+                        $this->runLength[$head] = 1;
+                    } elseif ($y > 0) {
+                        if ((ord($frame[$y][$x]) ^ ord($frame[$y - 1][$x])) & 1) {
+                            $head++;
+                            $this->runLength[$head] = 1;
+                        } else {
+                            $this->runLength[$head]++;
+                        }
+                    }
+                }
+
+                $demerit += $this->calcN1N3($head + 1);
+            }
+
+            return $demerit;
+        }
+
+        //----------------------------------------------------------------------
+        public function mask($width, $frame, $level)
+        {
+            $minDemerit = PHP_INT_MAX;
+            $bestMaskNum = 0;
+            $bestMask = [];
+
+            $checked_masks = [0, 1, 2, 3, 4, 5, 6, 7];
+
+            if (QR_FIND_FROM_RANDOM !== false) {
+                $howManuOut = 8 - (QR_FIND_FROM_RANDOM % 9);
+                for ($i = 0; $i < $howManuOut; $i++) {
+                    $remPos = rand(0, count($checked_masks) - 1);
+                    unset($checked_masks[$remPos]);
+                    $checked_masks = array_values($checked_masks);
+                }
+            }
+
+            $bestMask = $frame;
+
+            foreach ($checked_masks as $i) {
+                $mask = array_fill(0, $width, str_repeat("\0", $width));
+
+                $demerit = 0;
+                $blacks = 0;
+                $blacks = $this->makeMaskNo($i, $width, $frame, $mask);
+                $blacks += $this->writeFormatInformation($width, $mask, $i, $level);
+                $blacks = (int) (100 * $blacks / ($width * $width));
+                $demerit = (int) ((int) (abs($blacks - 50) / 5) * N4);
+                $demerit += $this->evaluateSymbol($width, $mask);
+
+                if ($demerit < $minDemerit) {
+                    $minDemerit = $demerit;
+                    $bestMask = $mask;
+                    $bestMaskNum = $i;
+                }
+            }
+
+            return $bestMask;
+        }
+
+        //----------------------------------------------------------------------
+    }
diff --git a/config/qrcode/qrrscode.php b/config/qrcode/qrrscode.php
index 591129a3298dc37534a82290cb15ef6e77152e1d..a2197ebc433b7138be29f3868b22fa89834167bb 100755
--- a/config/qrcode/qrrscode.php
+++ b/config/qrcode/qrrscode.php
@@ -1,210 +1,232 @@
-<?php
-/*
- * PHP QR Code encoder
- *
- * Reed-Solomon error correction support
- * 
- * Copyright (C) 2002, 2003, 2004, 2006 Phil Karn, KA9Q
- * (libfec is released under the GNU Lesser General Public License.)
- *
- * Based on libqrencode C library distributed under LGPL 2.1
- * Copyright (C) 2006, 2007, 2008, 2009 Kentaro Fukuchi <fukuchi@megaui.net>
- *
- * PHP QR Code is distributed under LGPL 3
- * Copyright (C) 2010 Dominik Dzienia <deltalab at poczta dot fm>
- *
- * This library is free software; you can redistribute it and/or
- * modify it under the terms of the GNU Lesser General Public
- * License as published by the Free Software Foundation; either
- * version 3 of the License, or any later version.
- *
- * This library is distributed in the hope that it will be useful,
- * but WITHOUT ANY WARRANTY; without even the implied warranty of
- * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
- * Lesser General Public License for more details.
- *
- * You should have received a copy of the GNU Lesser General Public
- * License along with this library; if not, write to the Free Software
- * Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA
- */
- 
-    class QRrsItem {
-    
-        public $mm;                  // Bits per symbol 
-        public $nn;                  // Symbols per block (= (1<<mm)-1) 
-        public $alpha_to = array();  // log lookup table 
-        public $index_of = array();  // Antilog lookup table 
-        public $genpoly = array();   // Generator polynomial 
-        public $nroots;              // Number of generator roots = number of parity symbols 
-        public $fcr;                 // First consecutive root, index form 
-        public $prim;                // Primitive element, index form 
-        public $iprim;               // prim-th root of 1, index form 
-        public $pad;                 // Padding bytes in shortened block 
-        public $gfpoly;
-    
-        //----------------------------------------------------------------------
-        public function modnn($x)
-        {
-            while ($x >= $this->nn) {
-                $x -= $this->nn;
-                $x = ($x >> $this->mm) + ($x & $this->nn);
-            }
-            
-            return $x;
-        }
-        
-        //----------------------------------------------------------------------
-        public static function init_rs_char($symsize, $gfpoly, $fcr, $prim, $nroots, $pad)
-        {
-            // Common code for intializing a Reed-Solomon control block (char or int symbols)
-            // Copyright 2004 Phil Karn, KA9Q
-            // May be used under the terms of the GNU Lesser General Public License (LGPL)
-
-            $rs = null;
-            
-            // Check parameter ranges
-            if($symsize < 0 || $symsize > 8)                     return $rs;
-            if($fcr < 0 || $fcr >= (1<<$symsize))                return $rs;
-            if($prim <= 0 || $prim >= (1<<$symsize))             return $rs;
-            if($nroots < 0 || $nroots >= (1<<$symsize))          return $rs; // Can't have more roots than symbol values!
-            if($pad < 0 || $pad >= ((1<<$symsize) -1 - $nroots)) return $rs; // Too much padding
-
-            $rs = new QRrsItem();
-            $rs->mm = $symsize;
-            $rs->nn = (1<<$symsize)-1;
-            $rs->pad = $pad;
-
-            $rs->alpha_to = array_fill(0, $rs->nn+1, 0);
-            $rs->index_of = array_fill(0, $rs->nn+1, 0);
-          
-            // PHP style macro replacement ;)
-            $NN =& $rs->nn;
-            $A0 =& $NN;
-            
-            // Generate Galois field lookup tables
-            $rs->index_of[0] = $A0; // log(zero) = -inf
-            $rs->alpha_to[$A0] = 0; // alpha**-inf = 0
-            $sr = 1;
-          
-            for($i=0; $i<$rs->nn; $i++) {
-                $rs->index_of[$sr] = $i;
-                $rs->alpha_to[$i] = $sr;
-                $sr <<= 1;
-                if($sr & (1<<$symsize)) {
-                    $sr ^= $gfpoly;
-                }
-                $sr &= $rs->nn;
-            }
-            
-            if($sr != 1){
-                // field generator polynomial is not primitive!
-                $rs = NULL;
-                return $rs;
-            }
-
-            /* Form RS code generator polynomial from its roots */
-            $rs->genpoly = array_fill(0, $nroots+1, 0);
-        
-            $rs->fcr = $fcr;
-            $rs->prim = $prim;
-            $rs->nroots = $nroots;
-            $rs->gfpoly = $gfpoly;
-
-            /* Find prim-th root of 1, used in decoding */
-            for($iprim=1;($iprim % $prim) != 0;$iprim += $rs->nn)
-            ; // intentional empty-body loop!
-            
-            $rs->iprim = (int)($iprim / $prim);
-            $rs->genpoly[0] = 1;
-            
-            for ($i = 0,$root=$fcr*$prim; $i < $nroots; $i++, $root += $prim) {
-                $rs->genpoly[$i+1] = 1;
-
-                // Multiply rs->genpoly[] by  @**(root + x)
-                for ($j = $i; $j > 0; $j--) {
-                    if ($rs->genpoly[$j] != 0) {
-                        $rs->genpoly[$j] = $rs->genpoly[$j-1] ^ $rs->alpha_to[$rs->modnn($rs->index_of[$rs->genpoly[$j]] + $root)];
-                    } else {
-                        $rs->genpoly[$j] = $rs->genpoly[$j-1];
-                    }
-                }
-                // rs->genpoly[0] can never be zero
-                $rs->genpoly[0] = $rs->alpha_to[$rs->modnn($rs->index_of[$rs->genpoly[0]] + $root)];
-            }
-            
-            // convert rs->genpoly[] to index form for quicker encoding
-            for ($i = 0; $i <= $nroots; $i++)
-                $rs->genpoly[$i] = $rs->index_of[$rs->genpoly[$i]];
-
-            return $rs;
-        }
-        
-        //----------------------------------------------------------------------
-        public function encode_rs_char($data, &$parity)
-        {
-            $MM       =& $this->mm;
-            $NN       =& $this->nn;
-            $ALPHA_TO =& $this->alpha_to;
-            $INDEX_OF =& $this->index_of;
-            $GENPOLY  =& $this->genpoly;
-            $NROOTS   =& $this->nroots;
-            $FCR      =& $this->fcr;
-            $PRIM     =& $this->prim;
-            $IPRIM    =& $this->iprim;
-            $PAD      =& $this->pad;
-            $A0       =& $NN;
-
-            $parity = array_fill(0, $NROOTS, 0);
-
-            for($i=0; $i< ($NN-$NROOTS-$PAD); $i++) {
-                
-                $feedback = $INDEX_OF[$data[$i] ^ $parity[0]];
-                if($feedback != $A0) {      
-                    // feedback term is non-zero
-            
-                    // This line is unnecessary when GENPOLY[NROOTS] is unity, as it must
-                    // always be for the polynomials constructed by init_rs()
-                    $feedback = $this->modnn($NN - $GENPOLY[$NROOTS] + $feedback);
-            
-                    for($j=1;$j<$NROOTS;$j++) {
-                        $parity[$j] ^= $ALPHA_TO[$this->modnn($feedback + $GENPOLY[$NROOTS-$j])];
-                    }
-                }
-                
-                // Shift 
-                array_shift($parity);
-                if($feedback != $A0) {
-                    array_push($parity, $ALPHA_TO[$this->modnn($feedback + $GENPOLY[0])]);
-                } else {
-                    array_push($parity, 0);
-                }
-            }
-        }
-    }
-    
-    //##########################################################################
-    
-    class QRrs {
-    
-        public static $items = array();
-        
-        //----------------------------------------------------------------------
-        public static function init_rs($symsize, $gfpoly, $fcr, $prim, $nroots, $pad)
-        {
-            foreach(self::$items as $rs) {
-                if($rs->pad != $pad)       continue;
-                if($rs->nroots != $nroots) continue;
-                if($rs->mm != $symsize)    continue;
-                if($rs->gfpoly != $gfpoly) continue;
-                if($rs->fcr != $fcr)       continue;
-                if($rs->prim != $prim)     continue;
-
-                return $rs;
-            }
-
-            $rs = QRrsItem::init_rs_char($symsize, $gfpoly, $fcr, $prim, $nroots, $pad);
-            array_unshift(self::$items, $rs);
-
-            return $rs;
-        }
-    }
\ No newline at end of file
+<?php
+/*
+ * PHP QR Code encoder
+ *
+ * Reed-Solomon error correction support
+ *
+ * Copyright (C) 2002, 2003, 2004, 2006 Phil Karn, KA9Q
+ * (libfec is released under the GNU Lesser General Public License.)
+ *
+ * Based on libqrencode C library distributed under LGPL 2.1
+ * Copyright (C) 2006, 2007, 2008, 2009 Kentaro Fukuchi <fukuchi@megaui.net>
+ *
+ * PHP QR Code is distributed under LGPL 3
+ * Copyright (C) 2010 Dominik Dzienia <deltalab at poczta dot fm>
+ *
+ * This library is free software; you can redistribute it and/or
+ * modify it under the terms of the GNU Lesser General Public
+ * License as published by the Free Software Foundation; either
+ * version 3 of the License, or any later version.
+ *
+ * This library is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
+ * Lesser General Public License for more details.
+ *
+ * You should have received a copy of the GNU Lesser General Public
+ * License along with this library; if not, write to the Free Software
+ * Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA
+ */
+
+    class QRrsItem
+    {
+        public $mm;                  // Bits per symbol
+        public $nn;                  // Symbols per block (= (1<<mm)-1)
+        public $alpha_to = [];  // log lookup table
+        public $index_of = [];  // Antilog lookup table
+        public $genpoly = [];   // Generator polynomial
+        public $nroots;              // Number of generator roots = number of parity symbols
+        public $fcr;                 // First consecutive root, index form
+        public $prim;                // Primitive element, index form
+        public $iprim;               // prim-th root of 1, index form
+        public $pad;                 // Padding bytes in shortened block
+        public $gfpoly;
+
+        //----------------------------------------------------------------------
+        public function modnn($x)
+        {
+            while ($x >= $this->nn) {
+                $x -= $this->nn;
+                $x = ($x >> $this->mm) + ($x & $this->nn);
+            }
+
+            return $x;
+        }
+
+        //----------------------------------------------------------------------
+        public static function init_rs_char($symsize, $gfpoly, $fcr, $prim, $nroots, $pad)
+        {
+            // Common code for intializing a Reed-Solomon control block (char or int symbols)
+            // Copyright 2004 Phil Karn, KA9Q
+            // May be used under the terms of the GNU Lesser General Public License (LGPL)
+
+            $rs = null;
+
+            // Check parameter ranges
+            if ($symsize < 0 || $symsize > 8) {
+                return $rs;
+            }
+            if ($fcr < 0 || $fcr >= (1 << $symsize)) {
+                return $rs;
+            }
+            if ($prim <= 0 || $prim >= (1 << $symsize)) {
+                return $rs;
+            }
+            if ($nroots < 0 || $nroots >= (1 << $symsize)) {
+                return $rs;
+            } // Can't have more roots than symbol values!
+            if ($pad < 0 || $pad >= ((1 << $symsize) - 1 - $nroots)) {
+                return $rs;
+            } // Too much padding
+
+            $rs = new self();
+            $rs->mm = $symsize;
+            $rs->nn = (1 << $symsize) - 1;
+            $rs->pad = $pad;
+
+            $rs->alpha_to = array_fill(0, $rs->nn + 1, 0);
+            $rs->index_of = array_fill(0, $rs->nn + 1, 0);
+
+            // PHP style macro replacement ;)
+            $NN = &$rs->nn;
+            $A0 = &$NN;
+
+            // Generate Galois field lookup tables
+            $rs->index_of[0] = $A0; // log(zero) = -inf
+            $rs->alpha_to[$A0] = 0; // alpha**-inf = 0
+            $sr = 1;
+
+            for ($i = 0; $i < $rs->nn; $i++) {
+                $rs->index_of[$sr] = $i;
+                $rs->alpha_to[$i] = $sr;
+                $sr <<= 1;
+                if ($sr & (1 << $symsize)) {
+                    $sr ^= $gfpoly;
+                }
+                $sr &= $rs->nn;
+            }
+
+            if ($sr != 1) {
+                // field generator polynomial is not primitive!
+                $rs = null;
+
+                return $rs;
+            }
+
+            /* Form RS code generator polynomial from its roots */
+            $rs->genpoly = array_fill(0, $nroots + 1, 0);
+
+            $rs->fcr = $fcr;
+            $rs->prim = $prim;
+            $rs->nroots = $nroots;
+            $rs->gfpoly = $gfpoly;
+
+            /* Find prim-th root of 1, used in decoding */
+            for ($iprim = 1; ($iprim % $prim) != 0; $iprim += $rs->nn); // intentional empty-body loop!
+
+            $rs->iprim = (int) ($iprim / $prim);
+            $rs->genpoly[0] = 1;
+
+            for ($i = 0,$root = $fcr * $prim; $i < $nroots; $i++, $root += $prim) {
+                $rs->genpoly[$i + 1] = 1;
+
+                // Multiply rs->genpoly[] by  @**(root + x)
+                for ($j = $i; $j > 0; $j--) {
+                    if ($rs->genpoly[$j] != 0) {
+                        $rs->genpoly[$j] = $rs->genpoly[$j - 1] ^ $rs->alpha_to[$rs->modnn($rs->index_of[$rs->genpoly[$j]] + $root)];
+                    } else {
+                        $rs->genpoly[$j] = $rs->genpoly[$j - 1];
+                    }
+                }
+                // rs->genpoly[0] can never be zero
+                $rs->genpoly[0] = $rs->alpha_to[$rs->modnn($rs->index_of[$rs->genpoly[0]] + $root)];
+            }
+
+            // convert rs->genpoly[] to index form for quicker encoding
+            for ($i = 0; $i <= $nroots; $i++) {
+                $rs->genpoly[$i] = $rs->index_of[$rs->genpoly[$i]];
+            }
+
+            return $rs;
+        }
+
+        //----------------------------------------------------------------------
+        public function encode_rs_char($data, &$parity)
+        {
+            $MM = &$this->mm;
+            $NN = &$this->nn;
+            $ALPHA_TO = &$this->alpha_to;
+            $INDEX_OF = &$this->index_of;
+            $GENPOLY = &$this->genpoly;
+            $NROOTS = &$this->nroots;
+            $FCR = &$this->fcr;
+            $PRIM = &$this->prim;
+            $IPRIM = &$this->iprim;
+            $PAD = &$this->pad;
+            $A0 = &$NN;
+
+            $parity = array_fill(0, $NROOTS, 0);
+
+            for ($i = 0; $i < ($NN - $NROOTS - $PAD); $i++) {
+                $feedback = $INDEX_OF[$data[$i] ^ $parity[0]];
+                if ($feedback != $A0) {
+                    // feedback term is non-zero
+
+                    // This line is unnecessary when GENPOLY[NROOTS] is unity, as it must
+                    // always be for the polynomials constructed by init_rs()
+                    $feedback = $this->modnn($NN - $GENPOLY[$NROOTS] + $feedback);
+
+                    for ($j = 1; $j < $NROOTS; $j++) {
+                        $parity[$j] ^= $ALPHA_TO[$this->modnn($feedback + $GENPOLY[$NROOTS - $j])];
+                    }
+                }
+
+                // Shift
+                array_shift($parity);
+                if ($feedback != $A0) {
+                    array_push($parity, $ALPHA_TO[$this->modnn($feedback + $GENPOLY[0])]);
+                } else {
+                    array_push($parity, 0);
+                }
+            }
+        }
+    }
+
+    //##########################################################################
+
+    class QRrs
+    {
+        public static $items = [];
+
+        //----------------------------------------------------------------------
+        public static function init_rs($symsize, $gfpoly, $fcr, $prim, $nroots, $pad)
+        {
+            foreach (self::$items as $rs) {
+                if ($rs->pad != $pad) {
+                    continue;
+                }
+                if ($rs->nroots != $nroots) {
+                    continue;
+                }
+                if ($rs->mm != $symsize) {
+                    continue;
+                }
+                if ($rs->gfpoly != $gfpoly) {
+                    continue;
+                }
+                if ($rs->fcr != $fcr) {
+                    continue;
+                }
+                if ($rs->prim != $prim) {
+                    continue;
+                }
+
+                return $rs;
+            }
+
+            $rs = QRrsItem::init_rs_char($symsize, $gfpoly, $fcr, $prim, $nroots, $pad);
+            array_unshift(self::$items, $rs);
+
+            return $rs;
+        }
+    }
diff --git a/config/qrcode/qrspec.php b/config/qrcode/qrspec.php
index 92aea0c7894db01eee46e93d7c8dcf6f7d5c132b..7f6608a9cc8a2956cc344a7e1c3def7baea39fd4 100755
--- a/config/qrcode/qrspec.php
+++ b/config/qrcode/qrspec.php
@@ -1,527 +1,528 @@
-<?php
-/*
- * PHP QR Code encoder
- *
- * QR Code specifications
- *
- * Based on libqrencode C library distributed under LGPL 2.1
- * Copyright (C) 2006, 2007, 2008, 2009 Kentaro Fukuchi <fukuchi@megaui.net>
- *
- * PHP QR Code is distributed under LGPL 3
- * Copyright (C) 2010 Dominik Dzienia <deltalab at poczta dot fm>
- *
- * The following data / specifications are taken from
- * "Two dimensional symbol -- QR-code -- Basic Specification" (JIS X0510:2004)
- *  or
- * "Automatic identification and data capture techniques -- 
- *  QR Code 2005 bar code symbology specification" (ISO/IEC 18004:2006)
- *
- * This library is free software; you can redistribute it and/or
- * modify it under the terms of the GNU Lesser General Public
- * License as published by the Free Software Foundation; either
- * version 3 of the License, or any later version.
- *
- * This library is distributed in the hope that it will be useful,
- * but WITHOUT ANY WARRANTY; without even the implied warranty of
- * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
- * Lesser General Public License for more details.
- *
- * You should have received a copy of the GNU Lesser General Public
- * License along with this library; if not, write to the Free Software
- * Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA
- */
- 
-    define('QRSPEC_VERSION_MAX', 40);
-    define('QRSPEC_WIDTH_MAX',   177);
-
-    define('QRCAP_WIDTH',        0);
-    define('QRCAP_WORDS',        1);
-    define('QRCAP_REMINDER',     2);
-    define('QRCAP_EC',           3);
-
-    class QRspec {
-    
-        public static $capacity = array(
-            array(  0,    0, 0, array(   0,    0,    0,    0)),
-            array( 21,   26, 0, array(   7,   10,   13,   17)), // 1
-            array( 25,   44, 7, array(  10,   16,   22,   28)),
-            array( 29,   70, 7, array(  15,   26,   36,   44)),
-            array( 33,  100, 7, array(  20,   36,   52,   64)),
-            array( 37,  134, 7, array(  26,   48,   72,   88)), // 5
-            array( 41,  172, 7, array(  36,   64,   96,  112)),
-            array( 45,  196, 0, array(  40,   72,  108,  130)),
-            array( 49,  242, 0, array(  48,   88,  132,  156)),
-            array( 53,  292, 0, array(  60,  110,  160,  192)),
-            array( 57,  346, 0, array(  72,  130,  192,  224)), //10
-            array( 61,  404, 0, array(  80,  150,  224,  264)),
-            array( 65,  466, 0, array(  96,  176,  260,  308)),
-            array( 69,  532, 0, array( 104,  198,  288,  352)),
-            array( 73,  581, 3, array( 120,  216,  320,  384)),
-            array( 77,  655, 3, array( 132,  240,  360,  432)), //15
-            array( 81,  733, 3, array( 144,  280,  408,  480)),
-            array( 85,  815, 3, array( 168,  308,  448,  532)),
-            array( 89,  901, 3, array( 180,  338,  504,  588)),
-            array( 93,  991, 3, array( 196,  364,  546,  650)),
-            array( 97, 1085, 3, array( 224,  416,  600,  700)), //20
-            array(101, 1156, 4, array( 224,  442,  644,  750)),
-            array(105, 1258, 4, array( 252,  476,  690,  816)),
-            array(109, 1364, 4, array( 270,  504,  750,  900)),
-            array(113, 1474, 4, array( 300,  560,  810,  960)),
-            array(117, 1588, 4, array( 312,  588,  870, 1050)), //25
-            array(121, 1706, 4, array( 336,  644,  952, 1110)),
-            array(125, 1828, 4, array( 360,  700, 1020, 1200)),
-            array(129, 1921, 3, array( 390,  728, 1050, 1260)),
-            array(133, 2051, 3, array( 420,  784, 1140, 1350)),
-            array(137, 2185, 3, array( 450,  812, 1200, 1440)), //30
-            array(141, 2323, 3, array( 480,  868, 1290, 1530)),
-            array(145, 2465, 3, array( 510,  924, 1350, 1620)),
-            array(149, 2611, 3, array( 540,  980, 1440, 1710)),
-            array(153, 2761, 3, array( 570, 1036, 1530, 1800)),
-            array(157, 2876, 0, array( 570, 1064, 1590, 1890)), //35
-            array(161, 3034, 0, array( 600, 1120, 1680, 1980)),
-            array(165, 3196, 0, array( 630, 1204, 1770, 2100)),
-            array(169, 3362, 0, array( 660, 1260, 1860, 2220)),
-            array(173, 3532, 0, array( 720, 1316, 1950, 2310)),
-            array(177, 3706, 0, array( 750, 1372, 2040, 2430)) //40
-        );
-        
-        //----------------------------------------------------------------------
-        public static function getDataLength($version, $level)
-        {
-            return self::$capacity[$version][QRCAP_WORDS] - self::$capacity[$version][QRCAP_EC][$level];
-        }
-        
-        //----------------------------------------------------------------------
-        public static function getECCLength($version, $level)
-        {
-            return self::$capacity[$version][QRCAP_EC][$level];
-        }
-        
-        //----------------------------------------------------------------------
-        public static function getWidth($version)
-        {
-            return self::$capacity[$version][QRCAP_WIDTH];
-        }
-        
-        //----------------------------------------------------------------------
-        public static function getRemainder($version)
-        {
-            return self::$capacity[$version][QRCAP_REMINDER];
-        }
-        
-        //----------------------------------------------------------------------
-        public static function getMinimumVersion($size, $level)
-        {
-
-            for($i=1; $i<= QRSPEC_VERSION_MAX; $i++) {
-                $words  = self::$capacity[$i][QRCAP_WORDS] - self::$capacity[$i][QRCAP_EC][$level];
-                if($words >= $size) 
-                    return $i;
-            }
-
-            return -1;
-        }
-    
-        //######################################################################
-        
-        public static $lengthTableBits = array(
-            array(10, 12, 14),
-            array( 9, 11, 13),
-            array( 8, 16, 16),
-            array( 8, 10, 12)
-        );
-        
-        //----------------------------------------------------------------------
-        public static function lengthIndicator($mode, $version)
-        {
-            if ($mode == QR_MODE_STRUCTURE)
-                return 0;
-                
-            if ($version <= 9) {
-                $l = 0;
-            } else if ($version <= 26) {
-                $l = 1;
-            } else {
-                $l = 2;
-            }
-
-            return self::$lengthTableBits[$mode][$l];
-        }
-        
-        //----------------------------------------------------------------------
-        public static function maximumWords($mode, $version)
-        {
-            if($mode == QR_MODE_STRUCTURE) 
-                return 3;
-                
-            if($version <= 9) {
-                $l = 0;
-            } else if($version <= 26) {
-                $l = 1;
-            } else {
-                $l = 2;
-            }
-
-            $bits = self::$lengthTableBits[$mode][$l];
-            $words = (1 << $bits) - 1;
-            
-            if($mode == QR_MODE_KANJI) {
-                $words *= 2; // the number of bytes is required
-            }
-
-            return $words;
-        }
-
-        // Error correction code -----------------------------------------------
-        // Table of the error correction code (Reed-Solomon block)
-        // See Table 12-16 (pp.30-36), JIS X0510:2004.
-
-        public static $eccTable = array(
-            array(array( 0,  0), array( 0,  0), array( 0,  0), array( 0,  0)),
-            array(array( 1,  0), array( 1,  0), array( 1,  0), array( 1,  0)), // 1
-            array(array( 1,  0), array( 1,  0), array( 1,  0), array( 1,  0)),
-            array(array( 1,  0), array( 1,  0), array( 2,  0), array( 2,  0)),
-            array(array( 1,  0), array( 2,  0), array( 2,  0), array( 4,  0)),
-            array(array( 1,  0), array( 2,  0), array( 2,  2), array( 2,  2)), // 5
-            array(array( 2,  0), array( 4,  0), array( 4,  0), array( 4,  0)),
-            array(array( 2,  0), array( 4,  0), array( 2,  4), array( 4,  1)),
-            array(array( 2,  0), array( 2,  2), array( 4,  2), array( 4,  2)),
-            array(array( 2,  0), array( 3,  2), array( 4,  4), array( 4,  4)),
-            array(array( 2,  2), array( 4,  1), array( 6,  2), array( 6,  2)), //10
-            array(array( 4,  0), array( 1,  4), array( 4,  4), array( 3,  8)),
-            array(array( 2,  2), array( 6,  2), array( 4,  6), array( 7,  4)),
-            array(array( 4,  0), array( 8,  1), array( 8,  4), array(12,  4)),
-            array(array( 3,  1), array( 4,  5), array(11,  5), array(11,  5)),
-            array(array( 5,  1), array( 5,  5), array( 5,  7), array(11,  7)), //15
-            array(array( 5,  1), array( 7,  3), array(15,  2), array( 3, 13)),
-            array(array( 1,  5), array(10,  1), array( 1, 15), array( 2, 17)),
-            array(array( 5,  1), array( 9,  4), array(17,  1), array( 2, 19)),
-            array(array( 3,  4), array( 3, 11), array(17,  4), array( 9, 16)),
-            array(array( 3,  5), array( 3, 13), array(15,  5), array(15, 10)), //20
-            array(array( 4,  4), array(17,  0), array(17,  6), array(19,  6)),
-            array(array( 2,  7), array(17,  0), array( 7, 16), array(34,  0)),
-            array(array( 4,  5), array( 4, 14), array(11, 14), array(16, 14)),
-            array(array( 6,  4), array( 6, 14), array(11, 16), array(30,  2)),
-            array(array( 8,  4), array( 8, 13), array( 7, 22), array(22, 13)), //25
-            array(array(10,  2), array(19,  4), array(28,  6), array(33,  4)),
-            array(array( 8,  4), array(22,  3), array( 8, 26), array(12, 28)),
-            array(array( 3, 10), array( 3, 23), array( 4, 31), array(11, 31)),
-            array(array( 7,  7), array(21,  7), array( 1, 37), array(19, 26)),
-            array(array( 5, 10), array(19, 10), array(15, 25), array(23, 25)), //30
-            array(array(13,  3), array( 2, 29), array(42,  1), array(23, 28)),
-            array(array(17,  0), array(10, 23), array(10, 35), array(19, 35)),
-            array(array(17,  1), array(14, 21), array(29, 19), array(11, 46)),
-            array(array(13,  6), array(14, 23), array(44,  7), array(59,  1)),
-            array(array(12,  7), array(12, 26), array(39, 14), array(22, 41)), //35
-            array(array( 6, 14), array( 6, 34), array(46, 10), array( 2, 64)),
-            array(array(17,  4), array(29, 14), array(49, 10), array(24, 46)),
-            array(array( 4, 18), array(13, 32), array(48, 14), array(42, 32)),
-            array(array(20,  4), array(40,  7), array(43, 22), array(10, 67)),
-            array(array(19,  6), array(18, 31), array(34, 34), array(20, 61)),//40
-        );                                                                       
-
-        //----------------------------------------------------------------------
-        // CACHEABLE!!!
-        
-        public static function getEccSpec($version, $level, array &$spec)
-        {
-            if (count($spec) < 5) {
-                $spec = array(0,0,0,0,0);
-            }
-
-            $b1   = self::$eccTable[$version][$level][0];
-            $b2   = self::$eccTable[$version][$level][1];
-            $data = self::getDataLength($version, $level);
-            $ecc  = self::getECCLength($version, $level);
-
-            if($b2 == 0) {
-                $spec[0] = $b1;
-                $spec[1] = (int)($data / $b1);
-                $spec[2] = (int)($ecc / $b1);
-                $spec[3] = 0; 
-                $spec[4] = 0;
-            } else {
-                $spec[0] = $b1;
-                $spec[1] = (int)($data / ($b1 + $b2));
-                $spec[2] = (int)($ecc  / ($b1 + $b2));
-                $spec[3] = $b2;
-                $spec[4] = $spec[1] + 1;
-            }
-        }
-
-        // Alignment pattern ---------------------------------------------------
-
-        // Positions of alignment patterns.
-        // This array includes only the second and the third position of the 
-        // alignment patterns. Rest of them can be calculated from the distance 
-        // between them.
-         
-        // See Table 1 in Appendix E (pp.71) of JIS X0510:2004.
-         
-        public static $alignmentPattern = array(      
-            array( 0,  0),
-            array( 0,  0), array(18,  0), array(22,  0), array(26,  0), array(30,  0), // 1- 5
-            array(34,  0), array(22, 38), array(24, 42), array(26, 46), array(28, 50), // 6-10
-            array(30, 54), array(32, 58), array(34, 62), array(26, 46), array(26, 48), //11-15
-            array(26, 50), array(30, 54), array(30, 56), array(30, 58), array(34, 62), //16-20
-            array(28, 50), array(26, 50), array(30, 54), array(28, 54), array(32, 58), //21-25
-            array(30, 58), array(34, 62), array(26, 50), array(30, 54), array(26, 52), //26-30
-            array(30, 56), array(34, 60), array(30, 58), array(34, 62), array(30, 54), //31-35
-            array(24, 50), array(28, 54), array(32, 58), array(26, 54), array(30, 58), //35-40
-        );                                                                                  
-
-        
-        /** --------------------------------------------------------------------
-         * Put an alignment marker.
-         * @param frame
-         * @param width
-         * @param ox,oy center coordinate of the pattern
-         */
-        public static function putAlignmentMarker(array &$frame, $ox, $oy)
-        {
-            $finder = array(
-                "\xa1\xa1\xa1\xa1\xa1",
-                "\xa1\xa0\xa0\xa0\xa1",
-                "\xa1\xa0\xa1\xa0\xa1",
-                "\xa1\xa0\xa0\xa0\xa1",
-                "\xa1\xa1\xa1\xa1\xa1"
-            );                        
-            
-            $yStart = $oy-2;         
-            $xStart = $ox-2;
-            
-            for($y=0; $y<5; $y++) {
-                QRstr::set($frame, $xStart, $yStart+$y, $finder[$y]);
-            }
-        }
-
-        //----------------------------------------------------------------------
-        public static function putAlignmentPattern($version, &$frame, $width)
-        {
-            if($version < 2)
-                return;
-
-            $d = self::$alignmentPattern[$version][1] - self::$alignmentPattern[$version][0];
-            if($d < 0) {
-                $w = 2;
-            } else {
-                $w = (int)(($width - self::$alignmentPattern[$version][0]) / $d + 2);
-            }
-
-            if($w * $w - 3 == 1) {
-                $x = self::$alignmentPattern[$version][0];
-                $y = self::$alignmentPattern[$version][0];
-                self::putAlignmentMarker($frame, $x, $y);
-                return;
-            }
-
-            $cx = self::$alignmentPattern[$version][0];
-            for($x=1; $x<$w - 1; $x++) {
-                self::putAlignmentMarker($frame, 6, $cx);
-                self::putAlignmentMarker($frame, $cx,  6);
-                $cx += $d;
-            }
-
-            $cy = self::$alignmentPattern[$version][0];
-            for($y=0; $y<$w-1; $y++) {
-                $cx = self::$alignmentPattern[$version][0];
-                for($x=0; $x<$w-1; $x++) {
-                    self::putAlignmentMarker($frame, $cx, $cy);
-                    $cx += $d;
-                }
-                $cy += $d;
-            }
-        }
-
-        // Version information pattern -----------------------------------------
-
-		// Version information pattern (BCH coded).
-        // See Table 1 in Appendix D (pp.68) of JIS X0510:2004.
-        
-		// size: [QRSPEC_VERSION_MAX - 6]
-		
-        public static $versionPattern = array(
-            0x07c94, 0x085bc, 0x09a99, 0x0a4d3, 0x0bbf6, 0x0c762, 0x0d847, 0x0e60d,
-            0x0f928, 0x10b78, 0x1145d, 0x12a17, 0x13532, 0x149a6, 0x15683, 0x168c9,
-            0x177ec, 0x18ec4, 0x191e1, 0x1afab, 0x1b08e, 0x1cc1a, 0x1d33f, 0x1ed75,
-            0x1f250, 0x209d5, 0x216f0, 0x228ba, 0x2379f, 0x24b0b, 0x2542e, 0x26a64,
-            0x27541, 0x28c69
-        );
-
-        //----------------------------------------------------------------------
-        public static function getVersionPattern($version)
-        {
-            if($version < 7 || $version > QRSPEC_VERSION_MAX)
-                return 0;
-
-            return self::$versionPattern[$version -7];
-        }
-
-        // Format information --------------------------------------------------
-        // See calcFormatInfo in tests/test_qrspec.c (orginal qrencode c lib)
-        
-        public static $formatInfo = array(
-            array(0x77c4, 0x72f3, 0x7daa, 0x789d, 0x662f, 0x6318, 0x6c41, 0x6976),
-            array(0x5412, 0x5125, 0x5e7c, 0x5b4b, 0x45f9, 0x40ce, 0x4f97, 0x4aa0),
-            array(0x355f, 0x3068, 0x3f31, 0x3a06, 0x24b4, 0x2183, 0x2eda, 0x2bed),
-            array(0x1689, 0x13be, 0x1ce7, 0x19d0, 0x0762, 0x0255, 0x0d0c, 0x083b)
-        );
-
-        public static function getFormatInfo($mask, $level)
-        {
-            if($mask < 0 || $mask > 7)
-                return 0;
-                
-            if($level < 0 || $level > 3)
-                return 0;                
-
-            return self::$formatInfo[$level][$mask];
-        }
-
-        // Frame ---------------------------------------------------------------
-        // Cache of initial frames.
-         
-        public static $frames = array();
-
-        /** --------------------------------------------------------------------
-         * Put a finder pattern.
-         * @param frame
-         * @param width
-         * @param ox,oy upper-left coordinate of the pattern
-         */
-        public static function putFinderPattern(&$frame, $ox, $oy)
-        {
-            $finder = array(
-                "\xc1\xc1\xc1\xc1\xc1\xc1\xc1",
-                "\xc1\xc0\xc0\xc0\xc0\xc0\xc1",
-                "\xc1\xc0\xc1\xc1\xc1\xc0\xc1",
-                "\xc1\xc0\xc1\xc1\xc1\xc0\xc1",
-                "\xc1\xc0\xc1\xc1\xc1\xc0\xc1",
-                "\xc1\xc0\xc0\xc0\xc0\xc0\xc1",
-                "\xc1\xc1\xc1\xc1\xc1\xc1\xc1"
-            );                            
-            
-            for($y=0; $y<7; $y++) {
-                QRstr::set($frame, $ox, $oy+$y, $finder[$y]);
-            }
-        }
-
-        //----------------------------------------------------------------------
-        public static function createFrame($version)
-        {
-            $width = self::$capacity[$version][QRCAP_WIDTH];
-            $frameLine = str_repeat ("\0", $width);
-            $frame = array_fill(0, $width, $frameLine);
-
-            // Finder pattern
-            self::putFinderPattern($frame, 0, 0);
-            self::putFinderPattern($frame, $width - 7, 0);
-            self::putFinderPattern($frame, 0, $width - 7);
-            
-            // Separator
-            $yOffset = $width - 7;
-            
-            for($y=0; $y<7; $y++) {
-                $frame[$y][7] = "\xc0";
-                $frame[$y][$width - 8] = "\xc0";
-                $frame[$yOffset][7] = "\xc0";
-                $yOffset++;
-            }
-            
-            $setPattern = str_repeat("\xc0", 8);
-            
-            QRstr::set($frame, 0, 7, $setPattern);
-            QRstr::set($frame, $width-8, 7, $setPattern);
-            QRstr::set($frame, 0, $width - 8, $setPattern);
-        
-            // Format info
-            $setPattern = str_repeat("\x84", 9);
-            QRstr::set($frame, 0, 8, $setPattern);
-            QRstr::set($frame, $width - 8, 8, $setPattern, 8);
-            
-            $yOffset = $width - 8;
-
-            for($y=0; $y<8; $y++,$yOffset++) {
-                $frame[$y][8] = "\x84";
-                $frame[$yOffset][8] = "\x84";
-            }
-
-            // Timing pattern  
-            
-            for($i=1; $i<$width-15; $i++) {
-                $frame[6][7+$i] = chr(0x90 | ($i & 1));
-                $frame[7+$i][6] = chr(0x90 | ($i & 1));
-            }
-            
-            // Alignment pattern  
-            self::putAlignmentPattern($version, $frame, $width);
-            
-            // Version information 
-            if($version >= 7) {
-                $vinf = self::getVersionPattern($version);
-
-                $v = $vinf;
-                
-                for($x=0; $x<6; $x++) {
-                    for($y=0; $y<3; $y++) {
-                        $frame[($width - 11)+$y][$x] = chr(0x88 | ($v & 1));
-                        $v = $v >> 1;
-                    }
-                }
-
-                $v = $vinf;
-                for($y=0; $y<6; $y++) {
-                    for($x=0; $x<3; $x++) {
-                        $frame[$y][$x+($width - 11)] = chr(0x88 | ($v & 1));
-                        $v = $v >> 1;
-                    }
-                }
-            }
-    
-            // and a little bit...  
-            $frame[$width - 8][8] = "\x81";
-            
-            return $frame;
-        }
-
-        //----------------------------------------------------------------------
-        public static function debug($frame, $binary_mode = false)
-        {
-            if ($binary_mode) {
-            
-                    foreach ($frame as &$frameLine) {
-                        $frameLine = join('<span class="m">&nbsp;&nbsp;</span>', explode('0', $frameLine));
-                        $frameLine = join('&#9608;&#9608;', explode('1', $frameLine));
-                    }
-                    
-                    ?>
+<?php
+/*
+ * PHP QR Code encoder
+ *
+ * QR Code specifications
+ *
+ * Based on libqrencode C library distributed under LGPL 2.1
+ * Copyright (C) 2006, 2007, 2008, 2009 Kentaro Fukuchi <fukuchi@megaui.net>
+ *
+ * PHP QR Code is distributed under LGPL 3
+ * Copyright (C) 2010 Dominik Dzienia <deltalab at poczta dot fm>
+ *
+ * The following data / specifications are taken from
+ * "Two dimensional symbol -- QR-code -- Basic Specification" (JIS X0510:2004)
+ *  or
+ * "Automatic identification and data capture techniques --
+ *  QR Code 2005 bar code symbology specification" (ISO/IEC 18004:2006)
+ *
+ * This library is free software; you can redistribute it and/or
+ * modify it under the terms of the GNU Lesser General Public
+ * License as published by the Free Software Foundation; either
+ * version 3 of the License, or any later version.
+ *
+ * This library is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
+ * Lesser General Public License for more details.
+ *
+ * You should have received a copy of the GNU Lesser General Public
+ * License along with this library; if not, write to the Free Software
+ * Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA
+ */
+
+    define('QRSPEC_VERSION_MAX', 40);
+    define('QRSPEC_WIDTH_MAX', 177);
+
+    define('QRCAP_WIDTH', 0);
+    define('QRCAP_WORDS', 1);
+    define('QRCAP_REMINDER', 2);
+    define('QRCAP_EC', 3);
+
+    class qrspec
+    {
+        public static $capacity = [
+            [0,    0, 0, [0,    0,    0,    0]],
+            [21,   26, 0, [7,   10,   13,   17]], // 1
+            [25,   44, 7, [10,   16,   22,   28]],
+            [29,   70, 7, [15,   26,   36,   44]],
+            [33,  100, 7, [20,   36,   52,   64]],
+            [37,  134, 7, [26,   48,   72,   88]], // 5
+            [41,  172, 7, [36,   64,   96,  112]],
+            [45,  196, 0, [40,   72,  108,  130]],
+            [49,  242, 0, [48,   88,  132,  156]],
+            [53,  292, 0, [60,  110,  160,  192]],
+            [57,  346, 0, [72,  130,  192,  224]], //10
+            [61,  404, 0, [80,  150,  224,  264]],
+            [65,  466, 0, [96,  176,  260,  308]],
+            [69,  532, 0, [104,  198,  288,  352]],
+            [73,  581, 3, [120,  216,  320,  384]],
+            [77,  655, 3, [132,  240,  360,  432]], //15
+            [81,  733, 3, [144,  280,  408,  480]],
+            [85,  815, 3, [168,  308,  448,  532]],
+            [89,  901, 3, [180,  338,  504,  588]],
+            [93,  991, 3, [196,  364,  546,  650]],
+            [97, 1085, 3, [224,  416,  600,  700]], //20
+            [101, 1156, 4, [224,  442,  644,  750]],
+            [105, 1258, 4, [252,  476,  690,  816]],
+            [109, 1364, 4, [270,  504,  750,  900]],
+            [113, 1474, 4, [300,  560,  810,  960]],
+            [117, 1588, 4, [312,  588,  870, 1050]], //25
+            [121, 1706, 4, [336,  644,  952, 1110]],
+            [125, 1828, 4, [360,  700, 1020, 1200]],
+            [129, 1921, 3, [390,  728, 1050, 1260]],
+            [133, 2051, 3, [420,  784, 1140, 1350]],
+            [137, 2185, 3, [450,  812, 1200, 1440]], //30
+            [141, 2323, 3, [480,  868, 1290, 1530]],
+            [145, 2465, 3, [510,  924, 1350, 1620]],
+            [149, 2611, 3, [540,  980, 1440, 1710]],
+            [153, 2761, 3, [570, 1036, 1530, 1800]],
+            [157, 2876, 0, [570, 1064, 1590, 1890]], //35
+            [161, 3034, 0, [600, 1120, 1680, 1980]],
+            [165, 3196, 0, [630, 1204, 1770, 2100]],
+            [169, 3362, 0, [660, 1260, 1860, 2220]],
+            [173, 3532, 0, [720, 1316, 1950, 2310]],
+            [177, 3706, 0, [750, 1372, 2040, 2430]], //40
+        ];
+
+        //----------------------------------------------------------------------
+        public static function getDataLength($version, $level)
+        {
+            return self::$capacity[$version][QRCAP_WORDS] - self::$capacity[$version][QRCAP_EC][$level];
+        }
+
+        //----------------------------------------------------------------------
+        public static function getECCLength($version, $level)
+        {
+            return self::$capacity[$version][QRCAP_EC][$level];
+        }
+
+        //----------------------------------------------------------------------
+        public static function getWidth($version)
+        {
+            return self::$capacity[$version][QRCAP_WIDTH];
+        }
+
+        //----------------------------------------------------------------------
+        public static function getRemainder($version)
+        {
+            return self::$capacity[$version][QRCAP_REMINDER];
+        }
+
+        //----------------------------------------------------------------------
+        public static function getMinimumVersion($size, $level)
+        {
+            for ($i = 1; $i <= QRSPEC_VERSION_MAX; $i++) {
+                $words = self::$capacity[$i][QRCAP_WORDS] - self::$capacity[$i][QRCAP_EC][$level];
+                if ($words >= $size) {
+                    return $i;
+                }
+            }
+
+            return -1;
+        }
+
+        //######################################################################
+
+        public static $lengthTableBits = [
+            [10, 12, 14],
+            [9, 11, 13],
+            [8, 16, 16],
+            [8, 10, 12],
+        ];
+
+        //----------------------------------------------------------------------
+        public static function lengthIndicator($mode, $version)
+        {
+            if ($mode == QR_MODE_STRUCTURE) {
+                return 0;
+            }
+
+            if ($version <= 9) {
+                $l = 0;
+            } elseif ($version <= 26) {
+                $l = 1;
+            } else {
+                $l = 2;
+            }
+
+            return self::$lengthTableBits[$mode][$l];
+        }
+
+        //----------------------------------------------------------------------
+        public static function maximumWords($mode, $version)
+        {
+            if ($mode == QR_MODE_STRUCTURE) {
+                return 3;
+            }
+
+            if ($version <= 9) {
+                $l = 0;
+            } elseif ($version <= 26) {
+                $l = 1;
+            } else {
+                $l = 2;
+            }
+
+            $bits = self::$lengthTableBits[$mode][$l];
+            $words = (1 << $bits) - 1;
+
+            if ($mode == QR_MODE_KANJI) {
+                $words *= 2; // the number of bytes is required
+            }
+
+            return $words;
+        }
+
+        // Error correction code -----------------------------------------------
+        // Table of the error correction code (Reed-Solomon block)
+        // See Table 12-16 (pp.30-36), JIS X0510:2004.
+
+        public static $eccTable = [
+            [[0,  0], [0,  0], [0,  0], [0,  0]],
+            [[1,  0], [1,  0], [1,  0], [1,  0]], // 1
+            [[1,  0], [1,  0], [1,  0], [1,  0]],
+            [[1,  0], [1,  0], [2,  0], [2,  0]],
+            [[1,  0], [2,  0], [2,  0], [4,  0]],
+            [[1,  0], [2,  0], [2,  2], [2,  2]], // 5
+            [[2,  0], [4,  0], [4,  0], [4,  0]],
+            [[2,  0], [4,  0], [2,  4], [4,  1]],
+            [[2,  0], [2,  2], [4,  2], [4,  2]],
+            [[2,  0], [3,  2], [4,  4], [4,  4]],
+            [[2,  2], [4,  1], [6,  2], [6,  2]], //10
+            [[4,  0], [1,  4], [4,  4], [3,  8]],
+            [[2,  2], [6,  2], [4,  6], [7,  4]],
+            [[4,  0], [8,  1], [8,  4], [12,  4]],
+            [[3,  1], [4,  5], [11,  5], [11,  5]],
+            [[5,  1], [5,  5], [5,  7], [11,  7]], //15
+            [[5,  1], [7,  3], [15,  2], [3, 13]],
+            [[1,  5], [10,  1], [1, 15], [2, 17]],
+            [[5,  1], [9,  4], [17,  1], [2, 19]],
+            [[3,  4], [3, 11], [17,  4], [9, 16]],
+            [[3,  5], [3, 13], [15,  5], [15, 10]], //20
+            [[4,  4], [17,  0], [17,  6], [19,  6]],
+            [[2,  7], [17,  0], [7, 16], [34,  0]],
+            [[4,  5], [4, 14], [11, 14], [16, 14]],
+            [[6,  4], [6, 14], [11, 16], [30,  2]],
+            [[8,  4], [8, 13], [7, 22], [22, 13]], //25
+            [[10,  2], [19,  4], [28,  6], [33,  4]],
+            [[8,  4], [22,  3], [8, 26], [12, 28]],
+            [[3, 10], [3, 23], [4, 31], [11, 31]],
+            [[7,  7], [21,  7], [1, 37], [19, 26]],
+            [[5, 10], [19, 10], [15, 25], [23, 25]], //30
+            [[13,  3], [2, 29], [42,  1], [23, 28]],
+            [[17,  0], [10, 23], [10, 35], [19, 35]],
+            [[17,  1], [14, 21], [29, 19], [11, 46]],
+            [[13,  6], [14, 23], [44,  7], [59,  1]],
+            [[12,  7], [12, 26], [39, 14], [22, 41]], //35
+            [[6, 14], [6, 34], [46, 10], [2, 64]],
+            [[17,  4], [29, 14], [49, 10], [24, 46]],
+            [[4, 18], [13, 32], [48, 14], [42, 32]],
+            [[20,  4], [40,  7], [43, 22], [10, 67]],
+            [[19,  6], [18, 31], [34, 34], [20, 61]], //40
+        ];
+
+        //----------------------------------------------------------------------
+        // CACHEABLE!!!
+
+        public static function getEccSpec($version, $level, array &$spec)
+        {
+            if (count($spec) < 5) {
+                $spec = [0, 0, 0, 0, 0];
+            }
+
+            $b1 = self::$eccTable[$version][$level][0];
+            $b2 = self::$eccTable[$version][$level][1];
+            $data = self::getDataLength($version, $level);
+            $ecc = self::getECCLength($version, $level);
+
+            if ($b2 == 0) {
+                $spec[0] = $b1;
+                $spec[1] = (int) ($data / $b1);
+                $spec[2] = (int) ($ecc / $b1);
+                $spec[3] = 0;
+                $spec[4] = 0;
+            } else {
+                $spec[0] = $b1;
+                $spec[1] = (int) ($data / ($b1 + $b2));
+                $spec[2] = (int) ($ecc / ($b1 + $b2));
+                $spec[3] = $b2;
+                $spec[4] = $spec[1] + 1;
+            }
+        }
+
+        // Alignment pattern ---------------------------------------------------
+
+        // Positions of alignment patterns.
+        // This array includes only the second and the third position of the
+        // alignment patterns. Rest of them can be calculated from the distance
+        // between them.
+
+        // See Table 1 in Appendix E (pp.71) of JIS X0510:2004.
+
+        public static $alignmentPattern = [
+            [0,  0],
+            [0,  0], [18,  0], [22,  0], [26,  0], [30,  0], // 1- 5
+            [34,  0], [22, 38], [24, 42], [26, 46], [28, 50], // 6-10
+            [30, 54], [32, 58], [34, 62], [26, 46], [26, 48], //11-15
+            [26, 50], [30, 54], [30, 56], [30, 58], [34, 62], //16-20
+            [28, 50], [26, 50], [30, 54], [28, 54], [32, 58], //21-25
+            [30, 58], [34, 62], [26, 50], [30, 54], [26, 52], //26-30
+            [30, 56], [34, 60], [30, 58], [34, 62], [30, 54], //31-35
+            [24, 50], [28, 54], [32, 58], [26, 54], [30, 58], //35-40
+        ];
+
+        /** --------------------------------------------------------------------
+         * Put an alignment marker.
+         *
+         * @param frame
+         * @param width
+         * @param ox,oy center coordinate of the pattern
+         */
+        public static function putAlignmentMarker(array &$frame, $ox, $oy)
+        {
+            $finder = [
+                "\xa1\xa1\xa1\xa1\xa1",
+                "\xa1\xa0\xa0\xa0\xa1",
+                "\xa1\xa0\xa1\xa0\xa1",
+                "\xa1\xa0\xa0\xa0\xa1",
+                "\xa1\xa1\xa1\xa1\xa1",
+            ];
+
+            $yStart = $oy - 2;
+            $xStart = $ox - 2;
+
+            for ($y = 0; $y < 5; $y++) {
+                QRstr::set($frame, $xStart, $yStart + $y, $finder[$y]);
+            }
+        }
+
+        //----------------------------------------------------------------------
+        public static function putAlignmentPattern($version, &$frame, $width)
+        {
+            if ($version < 2) {
+                return;
+            }
+
+            $d = self::$alignmentPattern[$version][1] - self::$alignmentPattern[$version][0];
+            if ($d < 0) {
+                $w = 2;
+            } else {
+                $w = (int) (($width - self::$alignmentPattern[$version][0]) / $d + 2);
+            }
+
+            if ($w * $w - 3 == 1) {
+                $x = self::$alignmentPattern[$version][0];
+                $y = self::$alignmentPattern[$version][0];
+                self::putAlignmentMarker($frame, $x, $y);
+
+                return;
+            }
+
+            $cx = self::$alignmentPattern[$version][0];
+            for ($x = 1; $x < $w - 1; $x++) {
+                self::putAlignmentMarker($frame, 6, $cx);
+                self::putAlignmentMarker($frame, $cx, 6);
+                $cx += $d;
+            }
+
+            $cy = self::$alignmentPattern[$version][0];
+            for ($y = 0; $y < $w - 1; $y++) {
+                $cx = self::$alignmentPattern[$version][0];
+                for ($x = 0; $x < $w - 1; $x++) {
+                    self::putAlignmentMarker($frame, $cx, $cy);
+                    $cx += $d;
+                }
+                $cy += $d;
+            }
+        }
+
+        // Version information pattern -----------------------------------------
+
+        // Version information pattern (BCH coded).
+        // See Table 1 in Appendix D (pp.68) of JIS X0510:2004.
+
+        // size: [QRSPEC_VERSION_MAX - 6]
+
+        public static $versionPattern = [
+            0x07c94, 0x085bc, 0x09a99, 0x0a4d3, 0x0bbf6, 0x0c762, 0x0d847, 0x0e60d,
+            0x0f928, 0x10b78, 0x1145d, 0x12a17, 0x13532, 0x149a6, 0x15683, 0x168c9,
+            0x177ec, 0x18ec4, 0x191e1, 0x1afab, 0x1b08e, 0x1cc1a, 0x1d33f, 0x1ed75,
+            0x1f250, 0x209d5, 0x216f0, 0x228ba, 0x2379f, 0x24b0b, 0x2542e, 0x26a64,
+            0x27541, 0x28c69,
+        ];
+
+        //----------------------------------------------------------------------
+        public static function getVersionPattern($version)
+        {
+            if ($version < 7 || $version > QRSPEC_VERSION_MAX) {
+                return 0;
+            }
+
+            return self::$versionPattern[$version - 7];
+        }
+
+        // Format information --------------------------------------------------
+        // See calcFormatInfo in tests/test_qrspec.c (orginal qrencode c lib)
+
+        public static $formatInfo = [
+            [0x77c4, 0x72f3, 0x7daa, 0x789d, 0x662f, 0x6318, 0x6c41, 0x6976],
+            [0x5412, 0x5125, 0x5e7c, 0x5b4b, 0x45f9, 0x40ce, 0x4f97, 0x4aa0],
+            [0x355f, 0x3068, 0x3f31, 0x3a06, 0x24b4, 0x2183, 0x2eda, 0x2bed],
+            [0x1689, 0x13be, 0x1ce7, 0x19d0, 0x0762, 0x0255, 0x0d0c, 0x083b],
+        ];
+
+        public static function getFormatInfo($mask, $level)
+        {
+            if ($mask < 0 || $mask > 7) {
+                return 0;
+            }
+
+            if ($level < 0 || $level > 3) {
+                return 0;
+            }
+
+            return self::$formatInfo[$level][$mask];
+        }
+
+        // Frame ---------------------------------------------------------------
+        // Cache of initial frames.
+
+        public static $frames = [];
+
+        /** --------------------------------------------------------------------
+         * Put a finder pattern.
+         *
+         * @param frame
+         * @param width
+         * @param ox,oy upper-left coordinate of the pattern
+         */
+        public static function putFinderPattern(&$frame, $ox, $oy)
+        {
+            $finder = [
+                "\xc1\xc1\xc1\xc1\xc1\xc1\xc1",
+                "\xc1\xc0\xc0\xc0\xc0\xc0\xc1",
+                "\xc1\xc0\xc1\xc1\xc1\xc0\xc1",
+                "\xc1\xc0\xc1\xc1\xc1\xc0\xc1",
+                "\xc1\xc0\xc1\xc1\xc1\xc0\xc1",
+                "\xc1\xc0\xc0\xc0\xc0\xc0\xc1",
+                "\xc1\xc1\xc1\xc1\xc1\xc1\xc1",
+            ];
+
+            for ($y = 0; $y < 7; $y++) {
+                QRstr::set($frame, $ox, $oy + $y, $finder[$y]);
+            }
+        }
+
+        //----------------------------------------------------------------------
+        public static function createFrame($version)
+        {
+            $width = self::$capacity[$version][QRCAP_WIDTH];
+            $frameLine = str_repeat("\0", $width);
+            $frame = array_fill(0, $width, $frameLine);
+
+            // Finder pattern
+            self::putFinderPattern($frame, 0, 0);
+            self::putFinderPattern($frame, $width - 7, 0);
+            self::putFinderPattern($frame, 0, $width - 7);
+
+            // Separator
+            $yOffset = $width - 7;
+
+            for ($y = 0; $y < 7; $y++) {
+                $frame[$y][7] = "\xc0";
+                $frame[$y][$width - 8] = "\xc0";
+                $frame[$yOffset][7] = "\xc0";
+                $yOffset++;
+            }
+
+            $setPattern = str_repeat("\xc0", 8);
+
+            QRstr::set($frame, 0, 7, $setPattern);
+            QRstr::set($frame, $width - 8, 7, $setPattern);
+            QRstr::set($frame, 0, $width - 8, $setPattern);
+
+            // Format info
+            $setPattern = str_repeat("\x84", 9);
+            QRstr::set($frame, 0, 8, $setPattern);
+            QRstr::set($frame, $width - 8, 8, $setPattern, 8);
+
+            $yOffset = $width - 8;
+
+            for ($y = 0; $y < 8; $y++,$yOffset++) {
+                $frame[$y][8] = "\x84";
+                $frame[$yOffset][8] = "\x84";
+            }
+
+            // Timing pattern
+
+            for ($i = 1; $i < $width - 15; $i++) {
+                $frame[6][7 + $i] = chr(0x90 | ($i & 1));
+                $frame[7 + $i][6] = chr(0x90 | ($i & 1));
+            }
+
+            // Alignment pattern
+            self::putAlignmentPattern($version, $frame, $width);
+
+            // Version information
+            if ($version >= 7) {
+                $vinf = self::getVersionPattern($version);
+
+                $v = $vinf;
+
+                for ($x = 0; $x < 6; $x++) {
+                    for ($y = 0; $y < 3; $y++) {
+                        $frame[($width - 11) + $y][$x] = chr(0x88 | ($v & 1));
+                        $v = $v >> 1;
+                    }
+                }
+
+                $v = $vinf;
+                for ($y = 0; $y < 6; $y++) {
+                    for ($x = 0; $x < 3; $x++) {
+                        $frame[$y][$x + ($width - 11)] = chr(0x88 | ($v & 1));
+                        $v = $v >> 1;
+                    }
+                }
+            }
+
+            // and a little bit...
+            $frame[$width - 8][8] = "\x81";
+
+            return $frame;
+        }
+
+        //----------------------------------------------------------------------
+        public static function debug($frame, $binary_mode = false)
+        {
+            if ($binary_mode) {
+                foreach ($frame as &$frameLine) {
+                    $frameLine = implode('<span class="m">&nbsp;&nbsp;</span>', explode('0', $frameLine));
+                    $frameLine = implode('&#9608;&#9608;', explode('1', $frameLine));
+                } ?>
                 <style>
                     .m { background-color: white; }
                 </style>
-                <?php
-                    echo '<pre><tt><br/ ><br/ ><br/ >&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;';
-                    echo join("<br/ >&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;", $frame);
-                    echo '</tt></pre><br/ ><br/ ><br/ ><br/ ><br/ ><br/ >';
-            
-            } else {
-            
-                foreach ($frame as &$frameLine) {
-                    $frameLine = join('<span class="m">&nbsp;</span>',  explode("\xc0", $frameLine));
-                    $frameLine = join('<span class="m">&#9618;</span>', explode("\xc1", $frameLine));
-                    $frameLine = join('<span class="p">&nbsp;</span>',  explode("\xa0", $frameLine));
-                    $frameLine = join('<span class="p">&#9618;</span>', explode("\xa1", $frameLine));
-                    $frameLine = join('<span class="s">&#9671;</span>', explode("\x84", $frameLine)); //format 0
-                    $frameLine = join('<span class="s">&#9670;</span>', explode("\x85", $frameLine)); //format 1
-                    $frameLine = join('<span class="x">&#9762;</span>', explode("\x81", $frameLine)); //special bit
-                    $frameLine = join('<span class="c">&nbsp;</span>',  explode("\x90", $frameLine)); //clock 0
-                    $frameLine = join('<span class="c">&#9719;</span>', explode("\x91", $frameLine)); //clock 1
-                    $frameLine = join('<span class="f">&nbsp;</span>',  explode("\x88", $frameLine)); //version
-                    $frameLine = join('<span class="f">&#9618;</span>', explode("\x89", $frameLine)); //version
-                    $frameLine = join('&#9830;', explode("\x01", $frameLine));
-                    $frameLine = join('&#8901;', explode("\0", $frameLine));
-                }
-                
-                ?>
+                <?php
+                    echo '<pre><tt><br/ ><br/ ><br/ >&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;';
+                echo implode('<br/ >&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;', $frame);
+                echo '</tt></pre><br/ ><br/ ><br/ ><br/ ><br/ ><br/ >';
+            } else {
+                foreach ($frame as &$frameLine) {
+                    $frameLine = implode('<span class="m">&nbsp;</span>', explode("\xc0", $frameLine));
+                    $frameLine = implode('<span class="m">&#9618;</span>', explode("\xc1", $frameLine));
+                    $frameLine = implode('<span class="p">&nbsp;</span>', explode("\xa0", $frameLine));
+                    $frameLine = implode('<span class="p">&#9618;</span>', explode("\xa1", $frameLine));
+                    $frameLine = implode('<span class="s">&#9671;</span>', explode("\x84", $frameLine)); //format 0
+                    $frameLine = implode('<span class="s">&#9670;</span>', explode("\x85", $frameLine)); //format 1
+                    $frameLine = implode('<span class="x">&#9762;</span>', explode("\x81", $frameLine)); //special bit
+                    $frameLine = implode('<span class="c">&nbsp;</span>', explode("\x90", $frameLine)); //clock 0
+                    $frameLine = implode('<span class="c">&#9719;</span>', explode("\x91", $frameLine)); //clock 1
+                    $frameLine = implode('<span class="f">&nbsp;</span>', explode("\x88", $frameLine)); //version
+                    $frameLine = implode('<span class="f">&#9618;</span>', explode("\x89", $frameLine)); //version
+                    $frameLine = implode('&#9830;', explode("\x01", $frameLine));
+                    $frameLine = implode('&#8901;', explode("\0", $frameLine));
+                } ?>
                 <style>
                     .p { background-color: yellow; }
                     .m { background-color: #00FF00; }
@@ -530,63 +531,97 @@
                     .x { background-color: pink; }
                     .f { background-color: gold; }
                 </style>
-                <?php
-                echo "<pre><tt>";
-                echo join("<br/ >", $frame);
-                echo "</tt></pre>";
-            
-            }
-        }
-
-        //----------------------------------------------------------------------
-        public static function serial($frame)
-        {
-            return gzcompress(join("\n", $frame), 9);
-        }
-        
-        //----------------------------------------------------------------------
-        public static function unserial($code)
-        {
-            return explode("\n", gzuncompress($code));
-        }
-        
-        //----------------------------------------------------------------------
-        public static function newFrame($version)
-        {
-            if($version < 1 || $version > QRSPEC_VERSION_MAX) 
-                return null;
-
-            if(!isset(self::$frames[$version])) {
-                
-                $fileName = QR_CACHE_DIR.'frame_'.$version.'.dat';
-                
-                if (QR_CACHEABLE) {
-                    if (file_exists($fileName)) {
-                        self::$frames[$version] = self::unserial(file_get_contents($fileName));
-                    } else {
-                        self::$frames[$version] = self::createFrame($version);
-                        file_put_contents($fileName, self::serial(self::$frames[$version]));
-                    }
-                } else {
-                    self::$frames[$version] = self::createFrame($version);
-                }
-            }
-            
-            if(is_null(self::$frames[$version]))
-                return null;
-
-            return self::$frames[$version];
-        }
-
-        //----------------------------------------------------------------------
-        public static function rsBlockNum($spec)     { return $spec[0] + $spec[3]; }
-        public static function rsBlockNum1($spec)    { return $spec[0]; }
-        public static function rsDataCodes1($spec)   { return $spec[1]; }
-        public static function rsEccCodes1($spec)    { return $spec[2]; }
-        public static function rsBlockNum2($spec)    { return $spec[3]; }
-        public static function rsDataCodes2($spec)   { return $spec[4]; }
-        public static function rsEccCodes2($spec)    { return $spec[2]; }
-        public static function rsDataLength($spec)   { return ($spec[0] * $spec[1]) + ($spec[3] * $spec[4]);    }
-        public static function rsEccLength($spec)    { return ($spec[0] + $spec[3]) * $spec[2]; }
-        
-    }
\ No newline at end of file
+                <?php
+                echo '<pre><tt>';
+                echo implode('<br/ >', $frame);
+                echo '</tt></pre>';
+            }
+        }
+
+        //----------------------------------------------------------------------
+        public static function serial($frame)
+        {
+            return gzcompress(implode("\n", $frame), 9);
+        }
+
+        //----------------------------------------------------------------------
+        public static function unserial($code)
+        {
+            return explode("\n", gzuncompress($code));
+        }
+
+        //----------------------------------------------------------------------
+        public static function newFrame($version)
+        {
+            if ($version < 1 || $version > QRSPEC_VERSION_MAX) {
+                return;
+            }
+
+            if (!isset(self::$frames[$version])) {
+                $fileName = QR_CACHE_DIR.'frame_'.$version.'.dat';
+
+                if (QR_CACHEABLE) {
+                    if (file_exists($fileName)) {
+                        self::$frames[$version] = self::unserial(file_get_contents($fileName));
+                    } else {
+                        self::$frames[$version] = self::createFrame($version);
+                        file_put_contents($fileName, self::serial(self::$frames[$version]));
+                    }
+                } else {
+                    self::$frames[$version] = self::createFrame($version);
+                }
+            }
+
+            if (is_null(self::$frames[$version])) {
+                return;
+            }
+
+            return self::$frames[$version];
+        }
+
+        //----------------------------------------------------------------------
+        public static function rsBlockNum($spec)
+        {
+            return $spec[0] + $spec[3];
+        }
+
+        public static function rsBlockNum1($spec)
+        {
+            return $spec[0];
+        }
+
+        public static function rsDataCodes1($spec)
+        {
+            return $spec[1];
+        }
+
+        public static function rsEccCodes1($spec)
+        {
+            return $spec[2];
+        }
+
+        public static function rsBlockNum2($spec)
+        {
+            return $spec[3];
+        }
+
+        public static function rsDataCodes2($spec)
+        {
+            return $spec[4];
+        }
+
+        public static function rsEccCodes2($spec)
+        {
+            return $spec[2];
+        }
+
+        public static function rsDataLength($spec)
+        {
+            return ($spec[0] * $spec[1]) + ($spec[3] * $spec[4]);
+        }
+
+        public static function rsEccLength($spec)
+        {
+            return ($spec[0] + $spec[3]) * $spec[2];
+        }
+    }
diff --git a/config/qrcode/qrsplit.php b/config/qrcode/qrsplit.php
index 14ee23985da7fbc77d4284388b8affc36caab4a4..8eb3b31857e827c96411d4e59dfc7af9ac8b5b79 100755
--- a/config/qrcode/qrsplit.php
+++ b/config/qrcode/qrsplit.php
@@ -1,311 +1,322 @@
-<?php
-/*
- * PHP QR Code encoder
- *
- * Input splitting classes
- *
- * Based on libqrencode C library distributed under LGPL 2.1
- * Copyright (C) 2006, 2007, 2008, 2009 Kentaro Fukuchi <fukuchi@megaui.net>
- *
- * PHP QR Code is distributed under LGPL 3
- * Copyright (C) 2010 Dominik Dzienia <deltalab at poczta dot fm>
- *
- * The following data / specifications are taken from
- * "Two dimensional symbol -- QR-code -- Basic Specification" (JIS X0510:2004)
- *  or
- * "Automatic identification and data capture techniques --
- *  QR Code 2005 bar code symbology specification" (ISO/IEC 18004:2006)
- *
- * This library is free software; you can redistribute it and/or
- * modify it under the terms of the GNU Lesser General Public
- * License as published by the Free Software Foundation; either
- * version 3 of the License, or any later version.
- *
- * This library is distributed in the hope that it will be useful,
- * but WITHOUT ANY WARRANTY; without even the implied warranty of
- * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
- * Lesser General Public License for more details.
- *
- * You should have received a copy of the GNU Lesser General Public
- * License along with this library; if not, write to the Free Software
- * Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA
- */
-    class QRsplit {
-
-        public $dataStr = '';
-        public $input;
-        public $modeHint;
-
-        //----------------------------------------------------------------------
-        public function __construct($dataStr, $input, $modeHint)
-        {
-            $this->dataStr  = $dataStr;
-            $this->input    = $input;
-            $this->modeHint = $modeHint;
-        }
-
-        //----------------------------------------------------------------------
-        public static function isdigitat($str, $pos)
-        {
-            if ($pos >= strlen($str))
-                return false;
-
-            return ((ord($str[$pos]) >= ord('0'))&&(ord($str[$pos]) <= ord('9')));
-        }
-
-        //----------------------------------------------------------------------
-        public static function isalnumat($str, $pos)
-        {
-            if ($pos >= strlen($str))
-                return false;
-
-            return (QRinput::lookAnTable(ord($str[$pos])) >= 0);
-        }
-
-        //----------------------------------------------------------------------
-        public function identifyMode($pos)
-        {
-            if ($pos >= strlen($this->dataStr))
-                return QR_MODE_NUL;
-
-            $c = $this->dataStr[$pos];
-
-            if(self::isdigitat($this->dataStr, $pos)) {
-                return QR_MODE_NUM;
-            } else if(self::isalnumat($this->dataStr, $pos)) {
-                return QR_MODE_AN;
-            } else if($this->modeHint == QR_MODE_KANJI) {
-
-                if ($pos+1 < strlen($this->dataStr))
-                {
-                    $d = $this->dataStr[$pos+1];
-                    $word = (ord($c) << 8) | ord($d);
-                    if(($word >= 0x8140 && $word <= 0x9ffc) || ($word >= 0xe040 && $word <= 0xebbf)) {
-                        return QR_MODE_KANJI;
-                    }
-                }
-            }
-
-            return QR_MODE_8;
-        }
-
-        //----------------------------------------------------------------------
-        public function eatNum()
-        {
-            $ln = QRspec::lengthIndicator(QR_MODE_NUM, $this->input->getVersion());
-
-            $p = 0;
-            while(self::isdigitat($this->dataStr, $p)) {
-                $p++;
-            }
-
-            $run = $p;
-            $mode = $this->identifyMode($p);
-
-            if($mode == QR_MODE_8) {
-                $dif = QRinput::estimateBitsModeNum($run) + 4 + $ln
-                     + QRinput::estimateBitsMode8(1)         // + 4 + l8
-                     - QRinput::estimateBitsMode8($run + 1); // - 4 - l8
-                if($dif > 0) {
-                    return $this->eat8();
-                }
-            }
-            if($mode == QR_MODE_AN) {
-                $dif = QRinput::estimateBitsModeNum($run) + 4 + $ln
-                     + QRinput::estimateBitsModeAn(1)        // + 4 + la
-                     - QRinput::estimateBitsModeAn($run + 1);// - 4 - la
-                if($dif > 0) {
-                    return $this->eatAn();
-                }
-            }
-
-            $ret = $this->input->append(QR_MODE_NUM, $run, str_split($this->dataStr));
-            if($ret < 0)
-                return -1;
-
-            return $run;
-        }
-
-        //----------------------------------------------------------------------
-        public function eatAn()
-        {
-            $la = QRspec::lengthIndicator(QR_MODE_AN,  $this->input->getVersion());
-            $ln = QRspec::lengthIndicator(QR_MODE_NUM, $this->input->getVersion());
-
-            $p = 0;
-
-            while(self::isalnumat($this->dataStr, $p)) {
-                if(self::isdigitat($this->dataStr, $p)) {
-                    $q = $p;
-                    while(self::isdigitat($this->dataStr, $q)) {
-                        $q++;
-                    }
-
-                    $dif = QRinput::estimateBitsModeAn($p) // + 4 + la
-                         + QRinput::estimateBitsModeNum($q - $p) + 4 + $ln
-                         - QRinput::estimateBitsModeAn($q); // - 4 - la
-
-                    if($dif < 0) {
-                        break;
-                    } else {
-                        $p = $q;
-                    }
-                } else {
-                    $p++;
-                }
-            }
-
-            $run = $p;
-
-            if(!self::isalnumat($this->dataStr, $p)) {
-                $dif = QRinput::estimateBitsModeAn($run) + 4 + $la
-                     + QRinput::estimateBitsMode8(1) // + 4 + l8
-                      - QRinput::estimateBitsMode8($run + 1); // - 4 - l8
-                if($dif > 0) {
-                    return $this->eat8();
-                }
-            }
-
-            $ret = $this->input->append(QR_MODE_AN, $run, str_split($this->dataStr));
-            if($ret < 0)
-                return -1;
-
-            return $run;
-        }
-
-        //----------------------------------------------------------------------
-        public function eatKanji()
-        {
-            $p = 0;
-
-            while($this->identifyMode($p) == QR_MODE_KANJI) {
-                $p += 2;
-            }
-
-            $ret = $this->input->append(QR_MODE_KANJI, $p, str_split($this->dataStr));
-            if($ret < 0)
-                return -1;
-
-            return $ret;
-        }
-
-        //----------------------------------------------------------------------
-        public function eat8()
-        {
-            $la = QRspec::lengthIndicator(QR_MODE_AN, $this->input->getVersion());
-            $ln = QRspec::lengthIndicator(QR_MODE_NUM, $this->input->getVersion());
-
-            $p = 1;
-            $dataStrLen = strlen($this->dataStr);
-
-            while($p < $dataStrLen) {
-
-                $mode = $this->identifyMode($p);
-                if($mode == QR_MODE_KANJI) {
-                    break;
-                }
-                if($mode == QR_MODE_NUM) {
-                    $q = $p;
-                    while(self::isdigitat($this->dataStr, $q)) {
-                        $q++;
-                    }
-                    $dif = QRinput::estimateBitsMode8($p) // + 4 + l8
-                         + QRinput::estimateBitsModeNum($q - $p) + 4 + $ln
-                         - QRinput::estimateBitsMode8($q); // - 4 - l8
-                    if($dif < 0) {
-                        break;
-                    } else {
-                        $p = $q;
-                    }
-                } else if($mode == QR_MODE_AN) {
-                    $q = $p;
-                    while(self::isalnumat($this->dataStr, $q)) {
-                        $q++;
-                    }
-                    $dif = QRinput::estimateBitsMode8($p)  // + 4 + l8
-                         + QRinput::estimateBitsModeAn($q - $p) + 4 + $la
-                         - QRinput::estimateBitsMode8($q); // - 4 - l8
-                    if($dif < 0) {
-                        break;
-                    } else {
-                        $p = $q;
-                    }
-                } else {
-                    $p++;
-                }
-            }
-
-            $run = $p;
-            $ret = $this->input->append(QR_MODE_8, $run, str_split($this->dataStr));
-
-            if($ret < 0)
-                return -1;
-
-            return $run;
-        }
-
-        //----------------------------------------------------------------------
-        public function splitString()
-        {
-            while (strlen($this->dataStr) > 0)
-            {
-                if($this->dataStr == '')
-                    return 0;
-
-                $mode = $this->identifyMode(0);
-
-                switch ($mode) {
-                    case QR_MODE_NUM: $length = $this->eatNum(); break;
-                    case QR_MODE_AN:  $length = $this->eatAn(); break;
-                    case QR_MODE_KANJI:
-                        if ($mode == QR_MODE_KANJI)
-                                $length = $this->eatKanji();
-                        else    $length = $this->eat8();
-                        break;
-                    default: $length = $this->eat8(); break;
-
-                }
-
-                if($length == 0) return 0;
-                if($length < 0)  return -1;
-
-                $this->dataStr = substr($this->dataStr, $length);
-            }
-        }
-
-        //----------------------------------------------------------------------
-        public function toUpper()
-        {
-            $stringLen = strlen($this->dataStr);
-            $p = 0;
-
-            while ($p<$stringLen) {
-                $mode = self::identifyMode(substr($this->dataStr, $p), $this->modeHint);
-                if($mode == QR_MODE_KANJI) {
-                    $p += 2;
-                } else {
-                    if (ord($this->dataStr[$p]) >= ord('a') && ord($this->dataStr[$p]) <= ord('z')) {
-                        $this->dataStr[$p] = chr(ord($this->dataStr[$p]) - 32);
-                    }
-                    $p++;
-                }
-            }
-
-            return $this->dataStr;
-        }
-
-        //----------------------------------------------------------------------
-        public static function splitStringToQRinput($string, QRinput $input, $modeHint, $casesensitive = true)
-        {
-            if(is_null($string) || $string == '\0' || $string == '') {
-                throw new Exception('empty string!!!');
-            }
-
-            $split = new QRsplit($string, $input, $modeHint);
-
-            if(!$casesensitive)
-                $split->toUpper();
-
-            return $split->splitString();
-        }
-    }
\ No newline at end of file
+<?php
+/*
+ * PHP QR Code encoder
+ *
+ * Input splitting classes
+ *
+ * Based on libqrencode C library distributed under LGPL 2.1
+ * Copyright (C) 2006, 2007, 2008, 2009 Kentaro Fukuchi <fukuchi@megaui.net>
+ *
+ * PHP QR Code is distributed under LGPL 3
+ * Copyright (C) 2010 Dominik Dzienia <deltalab at poczta dot fm>
+ *
+ * The following data / specifications are taken from
+ * "Two dimensional symbol -- QR-code -- Basic Specification" (JIS X0510:2004)
+ *  or
+ * "Automatic identification and data capture techniques --
+ *  QR Code 2005 bar code symbology specification" (ISO/IEC 18004:2006)
+ *
+ * This library is free software; you can redistribute it and/or
+ * modify it under the terms of the GNU Lesser General Public
+ * License as published by the Free Software Foundation; either
+ * version 3 of the License, or any later version.
+ *
+ * This library is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
+ * Lesser General Public License for more details.
+ *
+ * You should have received a copy of the GNU Lesser General Public
+ * License along with this library; if not, write to the Free Software
+ * Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA
+ */
+    class qrsplit
+    {
+        public $dataStr = '';
+        public $input;
+        public $modeHint;
+
+        //----------------------------------------------------------------------
+        public function __construct($dataStr, $input, $modeHint)
+        {
+            $this->dataStr = $dataStr;
+            $this->input = $input;
+            $this->modeHint = $modeHint;
+        }
+
+        //----------------------------------------------------------------------
+        public static function isdigitat($str, $pos)
+        {
+            if ($pos >= strlen($str)) {
+                return false;
+            }
+
+            return (ord($str[$pos]) >= ord('0')) && (ord($str[$pos]) <= ord('9'));
+        }
+
+        //----------------------------------------------------------------------
+        public static function isalnumat($str, $pos)
+        {
+            if ($pos >= strlen($str)) {
+                return false;
+            }
+
+            return QRinput::lookAnTable(ord($str[$pos])) >= 0;
+        }
+
+        //----------------------------------------------------------------------
+        public function identifyMode($pos)
+        {
+            if ($pos >= strlen($this->dataStr)) {
+                return QR_MODE_NUL;
+            }
+
+            $c = $this->dataStr[$pos];
+
+            if (self::isdigitat($this->dataStr, $pos)) {
+                return QR_MODE_NUM;
+            } elseif (self::isalnumat($this->dataStr, $pos)) {
+                return QR_MODE_AN;
+            } elseif ($this->modeHint == QR_MODE_KANJI) {
+                if ($pos + 1 < strlen($this->dataStr)) {
+                    $d = $this->dataStr[$pos + 1];
+                    $word = (ord($c) << 8) | ord($d);
+                    if (($word >= 0x8140 && $word <= 0x9ffc) || ($word >= 0xe040 && $word <= 0xebbf)) {
+                        return QR_MODE_KANJI;
+                    }
+                }
+            }
+
+            return QR_MODE_8;
+        }
+
+        //----------------------------------------------------------------------
+        public function eatNum()
+        {
+            $ln = QRspec::lengthIndicator(QR_MODE_NUM, $this->input->getVersion());
+
+            $p = 0;
+            while (self::isdigitat($this->dataStr, $p)) {
+                $p++;
+            }
+
+            $run = $p;
+            $mode = $this->identifyMode($p);
+
+            if ($mode == QR_MODE_8) {
+                $dif = QRinput::estimateBitsModeNum($run) + 4 + $ln
+                     + QRinput::estimateBitsMode8(1)         // + 4 + l8
+                     - QRinput::estimateBitsMode8($run + 1); // - 4 - l8
+                if ($dif > 0) {
+                    return $this->eat8();
+                }
+            }
+            if ($mode == QR_MODE_AN) {
+                $dif = QRinput::estimateBitsModeNum($run) + 4 + $ln
+                     + QRinput::estimateBitsModeAn(1)        // + 4 + la
+                     - QRinput::estimateBitsModeAn($run + 1); // - 4 - la
+                if ($dif > 0) {
+                    return $this->eatAn();
+                }
+            }
+
+            $ret = $this->input->append(QR_MODE_NUM, $run, str_split($this->dataStr));
+            if ($ret < 0) {
+                return -1;
+            }
+
+            return $run;
+        }
+
+        //----------------------------------------------------------------------
+        public function eatAn()
+        {
+            $la = QRspec::lengthIndicator(QR_MODE_AN, $this->input->getVersion());
+            $ln = QRspec::lengthIndicator(QR_MODE_NUM, $this->input->getVersion());
+
+            $p = 0;
+
+            while (self::isalnumat($this->dataStr, $p)) {
+                if (self::isdigitat($this->dataStr, $p)) {
+                    $q = $p;
+                    while (self::isdigitat($this->dataStr, $q)) {
+                        $q++;
+                    }
+
+                    $dif = QRinput::estimateBitsModeAn($p) // + 4 + la
+                         + QRinput::estimateBitsModeNum($q - $p) + 4 + $ln
+                         - QRinput::estimateBitsModeAn($q); // - 4 - la
+
+                    if ($dif < 0) {
+                        break;
+                    } else {
+                        $p = $q;
+                    }
+                } else {
+                    $p++;
+                }
+            }
+
+            $run = $p;
+
+            if (!self::isalnumat($this->dataStr, $p)) {
+                $dif = QRinput::estimateBitsModeAn($run) + 4 + $la
+                     + QRinput::estimateBitsMode8(1) // + 4 + l8
+                      - QRinput::estimateBitsMode8($run + 1); // - 4 - l8
+                if ($dif > 0) {
+                    return $this->eat8();
+                }
+            }
+
+            $ret = $this->input->append(QR_MODE_AN, $run, str_split($this->dataStr));
+            if ($ret < 0) {
+                return -1;
+            }
+
+            return $run;
+        }
+
+        //----------------------------------------------------------------------
+        public function eatKanji()
+        {
+            $p = 0;
+
+            while ($this->identifyMode($p) == QR_MODE_KANJI) {
+                $p += 2;
+            }
+
+            $ret = $this->input->append(QR_MODE_KANJI, $p, str_split($this->dataStr));
+            if ($ret < 0) {
+                return -1;
+            }
+
+            return $ret;
+        }
+
+        //----------------------------------------------------------------------
+        public function eat8()
+        {
+            $la = QRspec::lengthIndicator(QR_MODE_AN, $this->input->getVersion());
+            $ln = QRspec::lengthIndicator(QR_MODE_NUM, $this->input->getVersion());
+
+            $p = 1;
+            $dataStrLen = strlen($this->dataStr);
+
+            while ($p < $dataStrLen) {
+                $mode = $this->identifyMode($p);
+                if ($mode == QR_MODE_KANJI) {
+                    break;
+                }
+                if ($mode == QR_MODE_NUM) {
+                    $q = $p;
+                    while (self::isdigitat($this->dataStr, $q)) {
+                        $q++;
+                    }
+                    $dif = QRinput::estimateBitsMode8($p) // + 4 + l8
+                         + QRinput::estimateBitsModeNum($q - $p) + 4 + $ln
+                         - QRinput::estimateBitsMode8($q); // - 4 - l8
+                    if ($dif < 0) {
+                        break;
+                    } else {
+                        $p = $q;
+                    }
+                } elseif ($mode == QR_MODE_AN) {
+                    $q = $p;
+                    while (self::isalnumat($this->dataStr, $q)) {
+                        $q++;
+                    }
+                    $dif = QRinput::estimateBitsMode8($p)  // + 4 + l8
+                         + QRinput::estimateBitsModeAn($q - $p) + 4 + $la
+                         - QRinput::estimateBitsMode8($q); // - 4 - l8
+                    if ($dif < 0) {
+                        break;
+                    } else {
+                        $p = $q;
+                    }
+                } else {
+                    $p++;
+                }
+            }
+
+            $run = $p;
+            $ret = $this->input->append(QR_MODE_8, $run, str_split($this->dataStr));
+
+            if ($ret < 0) {
+                return -1;
+            }
+
+            return $run;
+        }
+
+        //----------------------------------------------------------------------
+        public function splitString()
+        {
+            while (strlen($this->dataStr) > 0) {
+                if ($this->dataStr == '') {
+                    return 0;
+                }
+
+                $mode = $this->identifyMode(0);
+
+                switch ($mode) {
+                    case QR_MODE_NUM: $length = $this->eatNum(); break;
+                    case QR_MODE_AN:  $length = $this->eatAn(); break;
+                    case QR_MODE_KANJI:
+                        if ($mode == QR_MODE_KANJI) {
+                            $length = $this->eatKanji();
+                        } else {
+                            $length = $this->eat8();
+                        }
+                        break;
+                    default: $length = $this->eat8(); break;
+
+                }
+
+                if ($length == 0) {
+                    return 0;
+                }
+                if ($length < 0) {
+                    return -1;
+                }
+
+                $this->dataStr = substr($this->dataStr, $length);
+            }
+        }
+
+        //----------------------------------------------------------------------
+        public function toUpper()
+        {
+            $stringLen = strlen($this->dataStr);
+            $p = 0;
+
+            while ($p < $stringLen) {
+                $mode = self::identifyMode(substr($this->dataStr, $p), $this->modeHint);
+                if ($mode == QR_MODE_KANJI) {
+                    $p += 2;
+                } else {
+                    if (ord($this->dataStr[$p]) >= ord('a') && ord($this->dataStr[$p]) <= ord('z')) {
+                        $this->dataStr[$p] = chr(ord($this->dataStr[$p]) - 32);
+                    }
+                    $p++;
+                }
+            }
+
+            return $this->dataStr;
+        }
+
+        //----------------------------------------------------------------------
+        public static function splitStringToQRinput($string, QRinput $input, $modeHint, $casesensitive = true)
+        {
+            if (is_null($string) || $string == '\0' || $string == '') {
+                throw new Exception('empty string!!!');
+            }
+
+            $split = new self($string, $input, $modeHint);
+
+            if (!$casesensitive) {
+                $split->toUpper();
+            }
+
+            return $split->splitString();
+        }
+    }
diff --git a/config/qrcode/qrtools.php b/config/qrcode/qrtools.php
index bb295288c05f5584d9225e85f711c660ff53ad5c..fc86e10e10ee61d737aba22dad11b2cbfaa777e5 100755
--- a/config/qrcode/qrtools.php
+++ b/config/qrcode/qrtools.php
@@ -22,79 +22,81 @@
  * Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA
  */
 
-    class QRtools {
-    
+    class qrtools
+    {
         //----------------------------------------------------------------------
         public static function binarize($frame)
         {
             $len = count($frame);
             foreach ($frame as &$frameLine) {
-                
-                for($i=0; $i<$len; $i++) {
-                    $frameLine[$i] = (ord($frameLine[$i])&1)?'1':'0';
+                for ($i = 0; $i < $len; $i++) {
+                    $frameLine[$i] = (ord($frameLine[$i]) & 1) ? '1' : '0';
                 }
             }
-            
+
             return $frame;
         }
-        
+
         //----------------------------------------------------------------------
         public static function tcpdfBarcodeArray($code, $mode = 'QR,L', $tcPdfVersion = '4.5.037')
         {
-            $barcode_array = array();
-            
-            if (!is_array($mode))
+            $barcode_array = [];
+
+            if (!is_array($mode)) {
                 $mode = explode(',', $mode);
-                
+            }
+
             $eccLevel = 'L';
-                
+
             if (count($mode) > 1) {
                 $eccLevel = $mode[1];
             }
-                
+
             $qrTab = QRcode::text($code, false, $eccLevel);
             $size = count($qrTab);
-                
+
             $barcode_array['num_rows'] = $size;
             $barcode_array['num_cols'] = $size;
-            $barcode_array['bcode'] = array();
-                
+            $barcode_array['bcode'] = [];
+
             foreach ($qrTab as $line) {
-                $arrAdd = array();
-                foreach(str_split($line) as $char)
-                    $arrAdd[] = ($char=='1')?1:0;
+                $arrAdd = [];
+                foreach (str_split($line) as $char) {
+                    $arrAdd[] = ($char == '1') ? 1 : 0;
+                }
                 $barcode_array['bcode'][] = $arrAdd;
             }
-                    
+
             return $barcode_array;
         }
-        
+
         //----------------------------------------------------------------------
         public static function clearCache()
         {
-            self::$frames = array();
+            self::$frames = [];
         }
-        
+
         //----------------------------------------------------------------------
         public static function buildCache()
         {
-			QRtools::markTime('before_build_cache');
-			
-			$mask = new QRmask();
-            for ($a=1; $a <= QRSPEC_VERSION_MAX; $a++) {
+            self::markTime('before_build_cache');
+
+            $mask = new QRmask();
+            for ($a = 1; $a <= QRSPEC_VERSION_MAX; $a++) {
                 $frame = QRspec::newFrame($a);
                 if (QR_IMAGE) {
                     $fileName = QR_CACHE_DIR.'frame_'.$a.'.png';
                     QRimage::png(self::binarize($frame), $fileName, 1, 0);
                 }
-				
-				$width = count($frame);
-				$bitMask = array_fill(0, $width, array_fill(0, $width, 0));
-				for ($maskNo=0; $maskNo<8; $maskNo++)
-					$mask->makeMaskNo($maskNo, $width, $frame, $bitMask, true);
+
+                $width = count($frame);
+                $bitMask = array_fill(0, $width, array_fill(0, $width, 0));
+                for ($maskNo = 0; $maskNo < 8; $maskNo++) {
+                    $mask->makeMaskNo($maskNo, $width, $frame, $bitMask, true);
+                }
             }
-			
-			QRtools::markTime('after_build_cache');
+
+            self::markTime('after_build_cache');
         }
 
         //----------------------------------------------------------------------
@@ -107,38 +109,39 @@
                     } else {
                         file_put_contents(QR_LOG_DIR.'errors.txt', date('Y-m-d H:i:s').': '.$err, FILE_APPEND);
                     }
-                }    
+                }
             }
         }
-        
+
         //----------------------------------------------------------------------
-        public static function dumpMask($frame) 
+        public static function dumpMask($frame)
         {
             $width = count($frame);
-            for($y=0;$y<$width;$y++) {
-                for($x=0;$x<$width;$x++) {
+            for ($y = 0; $y < $width; $y++) {
+                for ($x = 0; $x < $width; $x++) {
                     echo ord($frame[$y][$x]).',';
                 }
             }
         }
-        
+
         //----------------------------------------------------------------------
         public static function markTime($markerId)
         {
-            list($usec, $sec) = explode(" ", microtime());
-            $time = ((float)$usec + (float)$sec);
-            
-            if (!isset($GLOBALS['qr_time_bench']))
-                $GLOBALS['qr_time_bench'] = array();
-            
+            list($usec, $sec) = explode(' ', microtime());
+            $time = ((float) $usec + (float) $sec);
+
+            if (!isset($GLOBALS['qr_time_bench'])) {
+                $GLOBALS['qr_time_bench'] = [];
+            }
+
             $GLOBALS['qr_time_bench'][$markerId] = $time;
         }
-        
+
         //----------------------------------------------------------------------
         public static function timeBenchmark()
         {
             self::markTime('finish');
-        
+
             $lastTime = 0;
             $startTime = 0;
             $p = 0;
@@ -147,39 +150,37 @@
                     <thead><tr style="border-bottom:1px solid silver"><td colspan="2" style="text-align:center">BENCHMARK</td></tr></thead>
                     <tbody>';
 
-            foreach($GLOBALS['qr_time_bench'] as $markerId=>$thisTime) {
+            foreach ($GLOBALS['qr_time_bench'] as $markerId=>$thisTime) {
                 if ($p > 0) {
-                    echo '<tr><th style="text-align:right">till '.$markerId.': </th><td>'.number_format($thisTime-$lastTime, 6).'s</td></tr>';
+                    echo '<tr><th style="text-align:right">till '.$markerId.': </th><td>'.number_format($thisTime - $lastTime, 6).'s</td></tr>';
                 } else {
                     $startTime = $thisTime;
                 }
-                
+
                 $p++;
                 $lastTime = $thisTime;
             }
-            
+
             echo '</tbody><tfoot>
-                <tr style="border-top:2px solid black"><th style="text-align:right">TOTAL: </th><td>'.number_format($lastTime-$startTime, 6).'s</td></tr>
+                <tr style="border-top:2px solid black"><th style="text-align:right">TOTAL: </th><td>'.number_format($lastTime - $startTime, 6).'s</td></tr>
             </tfoot>
             </table>';
         }
-        
+
         public static function save($content, $filename_path)
-        {           
+        {
             try {
-                $handle = fopen($filename_path, "w");
+                $handle = fopen($filename_path, 'w');
                 fwrite($handle, $content);
                 fclose($handle);
+
                 return true;
             } catch (Exception $e) {
                 echo 'Exception reçue : ',  $e->getMessage(), "\n";
-            }      
-            
+            }
         }
-        
     }
-    
+
     //##########################################################################
-    
+
     QRtools::markTime('start');
-    
\ No newline at end of file
diff --git a/config/qrcode/qrvect.php b/config/qrcode/qrvect.php
index 113fd127a95405610a92dd2055ee0e290c05bd4e..28af022c697d268c0ffc716540961f0dcdbc1fc2 100755
--- a/config/qrcode/qrvect.php
+++ b/config/qrcode/qrvect.php
@@ -21,44 +21,42 @@
  * License along with this library; if not, write to the Free Software
  * Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA
  */
- 
+
     define('QR_VECT', true);
 
-    class QRvect {
-    
+    class qrvect
+    {
         //----------------------------------------------------------------------
-        public static function eps($frame, $filename = false, $pixelPerPoint = 4, $outerFrame = 4,$saveandprint=FALSE, $back_color = 0xFFFFFF, $fore_color = 0x000000, $cmyk = false) 
+        public static function eps($frame, $filename = false, $pixelPerPoint = 4, $outerFrame = 4, $saveandprint = false, $back_color = 0xFFFFFF, $fore_color = 0x000000, $cmyk = false)
         {
             $vect = self::vectEPS($frame, $pixelPerPoint, $outerFrame, $back_color, $fore_color, $cmyk);
-            
+
             if ($filename === false) {
-                header("Content-Type: application/postscript");
+                header('Content-Type: application/postscript');
                 header('Content-Disposition: filename="qrcode.eps"');
                 echo $vect;
             } else {
-                if($saveandprint===TRUE){
+                if ($saveandprint === true) {
                     QRtools::save($vect, $filename);
-                    header("Content-Type: application/postscript");
+                    header('Content-Type: application/postscript');
                     header('Content-Disposition: filename="qrcode.eps"');
                     echo $vect;
-                }else{
+                } else {
                     QRtools::save($vect, $filename);
                 }
             }
         }
-        
-    
+
         //----------------------------------------------------------------------
-        private static function vectEPS($frame, $pixelPerPoint = 4, $outerFrame = 4, $back_color = 0xFFFFFF, $fore_color = 0x000000, $cmyk = false) 
+        private static function vectEPS($frame, $pixelPerPoint = 4, $outerFrame = 4, $back_color = 0xFFFFFF, $fore_color = 0x000000, $cmyk = false)
         {
             $h = count($frame);
             $w = strlen($frame[0]);
-            
-            $imgW = $w + 2*$outerFrame;
-            $imgH = $h + 2*$outerFrame;
-            
-            if ($cmyk)
-            {
+
+            $imgW = $w + 2 * $outerFrame;
+            $imgH = $h + 2 * $outerFrame;
+
+            if ($cmyk) {
                 // convert color value into decimal eps format
                 $c = round((($fore_color & 0xFF000000) >> 16) / 255, 5);
                 $m = round((($fore_color & 0x00FF0000) >> 16) / 255, 5);
@@ -72,9 +70,7 @@
                 $y = round((($back_color & 0x0000FF00) >> 8) / 255, 5);
                 $k = round(($back_color & 0x000000FF) / 255, 5);
                 $back_color_string = $c.' '.$m.' '.$y.' '.$k.' setcmykcolor'."\n";
-            }
-            else
-            {
+            } else {
                 // convert a hexadecimal color code into decimal eps format (green = 0 1 0, blue = 0 0 1, ...)
                 $r = round((($fore_color & 0xFF0000) >> 16) / 255, 5);
                 $b = round((($fore_color & 0x00FF00) >> 8) / 255, 5);
@@ -87,8 +83,8 @@
                 $g = round(($back_color & 0x0000FF) / 255, 5);
                 $back_color_string = $r.' '.$b.' '.$g.' setrgbcolor'."\n";
             }
-            
-            $output = 
+
+            $output =
             '%!PS-Adobe EPSF-3.0'."\n".
             '%%Creator: PHPQrcodeLib'."\n".
             '%%Title: QRcode'."\n".
@@ -97,78 +93,71 @@
             '%%LanguageLevel: 2'."\n".
             '%%Pages: 1'."\n".
             '%%BoundingBox: 0 0 '.$imgW * $pixelPerPoint.' '.$imgH * $pixelPerPoint."\n";
-            
+
             // set the scale
             $output .= $pixelPerPoint.' '.$pixelPerPoint.' scale'."\n";
             // position the center of the coordinate system
-            
+
             $output .= $outerFrame.' '.$outerFrame.' translate'."\n";
-           
-           
-            
-            
+
             // redefine the 'rectfill' operator to shorten the syntax
             $output .= '/F { rectfill } def'."\n";
-            
+
             // set the symbol color
             $output .= $back_color_string;
-            $output .= '-'.$outerFrame.' -'.$outerFrame.' '.($w + 2*$outerFrame).' '.($h + 2*$outerFrame).' F'."\n";
-            
-            
+            $output .= '-'.$outerFrame.' -'.$outerFrame.' '.($w + 2 * $outerFrame).' '.($h + 2 * $outerFrame).' F'."\n";
+
             // set the symbol color
             $output .= $fore_color_string;
 
             // Convert the matrix into pixels
 
-            for($i=0; $i<$h; $i++) {
-                for($j=0; $j<$w; $j++) {
-                    if( $frame[$i][$j] == '1') {
+            for ($i = 0; $i < $h; $i++) {
+                for ($j = 0; $j < $w; $j++) {
+                    if ($frame[$i][$j] == '1') {
                         $y = $h - 1 - $i;
                         $x = $j;
                         $output .= $x.' '.$y.' 1 1 F'."\n";
                     }
                 }
             }
-            
-            
-            $output .='%%EOF';
-            
+
+            $output .= '%%EOF';
+
             return $output;
         }
-        
+
         //----------------------------------------------------------------------
-        public static function svg($frame, $filename = false, $pixelPerPoint = 4, $outerFrame = 4,$saveandprint=FALSE, $back_color, $fore_color) 
+        public static function svg($frame, $filename, $pixelPerPoint, $outerFrame, $saveandprint, $back_color, $fore_color)
         {
             $vect = self::vectSVG($frame, $pixelPerPoint, $outerFrame, $back_color, $fore_color);
-            
+
             if ($filename === false) {
-                header("Content-Type: image/svg+xml");
+                header('Content-Type: image/svg+xml');
                 //header('Content-Disposition: attachment, filename="qrcode.svg"');
                 echo $vect;
             } else {
-                if($saveandprint===TRUE){
+                if ($saveandprint === true) {
                     QRtools::save($vect, $filename);
-                    header("Content-Type: image/svg+xml");
+                    header('Content-Type: image/svg+xml');
                     //header('Content-Disposition: filename="'.$filename.'"');
                     echo $vect;
-                }else{
+                } else {
                     QRtools::save($vect, $filename);
                 }
             }
         }
-        
-    
+
         //----------------------------------------------------------------------
-        private static function vectSVG($frame, $pixelPerPoint = 4, $outerFrame = 4, $back_color = 0xFFFFFF, $fore_color = 0x000000) 
+        private static function vectSVG($frame, $pixelPerPoint = 4, $outerFrame = 4, $back_color = 0xFFFFFF, $fore_color = 0x000000)
         {
             $h = count($frame);
             $w = strlen($frame[0]);
-            
-            $imgW = $w + 2*$outerFrame;
-            $imgH = $h + 2*$outerFrame;
-            
-            
-            $output = 
+
+            $imgW = $w + 2 * $outerFrame;
+            $imgH = $h + 2 * $outerFrame;
+
+            $output =
             '<?xml version="1.0" encoding="utf-8"?>'."\n".
             '<svg version="1.1" baseProfile="full"  width="'.$imgW * $pixelPerPoint.'" height="'.$imgH * $pixelPerPoint.'" viewBox="0 0 '.$imgW * $pixelPerPoint.' '.$imgH * $pixelPerPoint.'"
              xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:ev="http://www.w3.org/2001/xml-events">'."\n".
@@ -179,36 +168,33 @@
             '<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.0//EN" "http://www.w3.org/TR/2001/REC-SVG-20010904/DTD/svg10.dtd">'."\n".
             '<svg xmlns="http://www.w3.org/2000/svg" xml:space="preserve" xmlns:xlink="http://www.w3.org/1999/xlink" width="'.$imgW * $pixelPerPoint.'" height="'.$imgH * $pixelPerPoint.'" viewBox="0 0 '.$imgW * $pixelPerPoint.' '.$imgH * $pixelPerPoint.'">'."\n".
             '<desc></desc>'."\n";
-                
-            if(!empty($back_color)) {
-                $backgroundcolor = str_pad(dechex($back_color), 6, "0", STR_PAD_LEFT);
+
+            if (!empty($back_color)) {
+                $backgroundcolor = str_pad(dechex($back_color), 6, '0', STR_PAD_LEFT);
                 $output .= '<rect width="'.$imgW * $pixelPerPoint.'" height="'.$imgH * $pixelPerPoint.'" fill="#'.$backgroundcolor.'" cx="0" cy="0" />'."\n";
             }
-                
-            $output .= 
+
+            $output .=
             '<defs>'."\n".
             '<rect id="p" width="'.$pixelPerPoint.'" height="'.$pixelPerPoint.'" />'."\n".
             '</defs>'."\n".
-            '<g fill="#'.str_pad(dechex($fore_color), 6, "0", STR_PAD_LEFT).'">'."\n";
-                
-                
+            '<g fill="#'.str_pad(dechex($fore_color), 6, '0', STR_PAD_LEFT).'">'."\n";
+
             // Convert the matrix into pixels
 
-            for($i=0; $i<$h; $i++) {
-                for($j=0; $j<$w; $j++) {
-                    if( $frame[$i][$j] == '1') {
+            for ($i = 0; $i < $h; $i++) {
+                for ($j = 0; $j < $w; $j++) {
+                    if ($frame[$i][$j] == '1') {
                         $y = ($i + $outerFrame) * $pixelPerPoint;
                         $x = ($j + $outerFrame) * $pixelPerPoint;
                         $output .= '<use x="'.$x.'" y="'.$y.'" xlink:href="#p" />'."\n";
                     }
                 }
             }
-            $output .= 
+            $output .=
             '</g>'."\n".
             '</svg>';
-            
+
             return $output;
         }
     }
-    
-    
diff --git a/config/qrcode/tools/merge.php b/config/qrcode/tools/merge.php
index 526d6e424a0f19ccdeafe519a23a4e013439998b..821708fd3791fdd5641324796cf520b10afcb4ca 100755
--- a/config/qrcode/tools/merge.php
+++ b/config/qrcode/tools/merge.php
@@ -1,71 +1,69 @@
-<?php
-
-/*
- * PHP QR Code encoder
- *
- * Tool for merging all library files into one, simpler to incorporate.
- * 
- * MAKE SURE THAT RESULTING PHPQRCode.php (and its dir) ARE WRITABLE!
- *
- * PHP QR Code is distributed under LGPL 3
- * Copyright (C) 2010 Dominik Dzienia <deltalab at poczta dot fm>
- *
- * This library is free software; you can redistribute it and/or
- * modify it under the terms of the GNU Lesser General Public
- * License as published by the Free Software Foundation; either
- * version 3 of the License, or any later version.
- *
- * This library is distributed in the hope that it will be useful,
- * but WITHOUT ANY WARRANTY; without even the implied warranty of
- * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
- * Lesser General Public License for more details.
- *
- * You should have received a copy of the GNU Lesser General Public
- * License along with this library; if not, write to the Free Software
- * Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA
- */
- 
-    $QR_BASEDIR = dirname(__FILE__).DIRECTORY_SEPARATOR.'..'.DIRECTORY_SEPARATOR;
-    $QR_TOOLSDIR = dirname(__FILE__).DIRECTORY_SEPARATOR;
-    
-    $outputFile = $QR_BASEDIR.'phpqrcode.php';
-    
-    // Required libs
-    
-    $fileList = array(
-        $QR_BASEDIR.'qrconst.php',
-        $QR_TOOLSDIR.'merged_config.php',
-        $QR_BASEDIR.'qrtools.php',
-        $QR_BASEDIR.'qrspec.php',
-        $QR_BASEDIR.'qrimage.php',
-        $QR_BASEDIR.'qrinput.php',
-        $QR_BASEDIR.'qrbitstream.php',
-        $QR_BASEDIR.'qrsplit.php',
-        $QR_BASEDIR.'qrrscode.php',
-        $QR_BASEDIR.'qrmask.php',
-        $QR_BASEDIR.'qrencode.php',
-        $QR_BASEDIR.'qrvect.php'
-    );
-    
-    $headerFile = $QR_TOOLSDIR.'merged_header.php';
-    $versionFile = $QR_BASEDIR.'VERSION';
-    
-    $outputCode = '';
-    
-    foreach($fileList as $fileName) {
-        $outputCode .= "\n\n".'//---- '.basename($fileName).' -----------------------------'."\n\n";
-        $anotherCode = file_get_contents($fileName);
-        $anotherCode = preg_replace ('/^<\?php/', '', $anotherCode);
-        $anotherCode = preg_replace ('/\?>\*$/', '', $anotherCode);
-        $outputCode .= "\n\n".$anotherCode."\n\n";
-    }
-    
-	$versionDataEx = explode("\n", file_get_contents($versionFile));
-	
-    $outputContents = file_get_contents($headerFile);
-    $outputContents .= "\n\n/*\n * Version: ".trim($versionDataEx[0])."\n * Build: ".trim($versionDataEx[1])."\n */\n\n";
-    $outputContents .= $outputCode;
-    
-    file_put_contents($outputFile, $outputContents);
-    
-    
\ No newline at end of file
+<?php
+
+/*
+ * PHP QR Code encoder
+ *
+ * Tool for merging all library files into one, simpler to incorporate.
+ *
+ * MAKE SURE THAT RESULTING PHPQRCode.php (and its dir) ARE WRITABLE!
+ *
+ * PHP QR Code is distributed under LGPL 3
+ * Copyright (C) 2010 Dominik Dzienia <deltalab at poczta dot fm>
+ *
+ * This library is free software; you can redistribute it and/or
+ * modify it under the terms of the GNU Lesser General Public
+ * License as published by the Free Software Foundation; either
+ * version 3 of the License, or any later version.
+ *
+ * This library is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
+ * Lesser General Public License for more details.
+ *
+ * You should have received a copy of the GNU Lesser General Public
+ * License along with this library; if not, write to the Free Software
+ * Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA
+ */
+
+    $QR_BASEDIR = dirname(__FILE__).DIRECTORY_SEPARATOR.'..'.DIRECTORY_SEPARATOR;
+    $QR_TOOLSDIR = dirname(__FILE__).DIRECTORY_SEPARATOR;
+
+    $outputFile = $QR_BASEDIR.'phpqrcode.php';
+
+    // Required libs
+
+    $fileList = [
+        $QR_BASEDIR.'qrconst.php',
+        $QR_TOOLSDIR.'merged_config.php',
+        $QR_BASEDIR.'qrtools.php',
+        $QR_BASEDIR.'qrspec.php',
+        $QR_BASEDIR.'qrimage.php',
+        $QR_BASEDIR.'qrinput.php',
+        $QR_BASEDIR.'qrbitstream.php',
+        $QR_BASEDIR.'qrsplit.php',
+        $QR_BASEDIR.'qrrscode.php',
+        $QR_BASEDIR.'qrmask.php',
+        $QR_BASEDIR.'qrencode.php',
+        $QR_BASEDIR.'qrvect.php',
+    ];
+
+    $headerFile = $QR_TOOLSDIR.'merged_header.php';
+    $versionFile = $QR_BASEDIR.'VERSION';
+
+    $outputCode = '';
+
+    foreach ($fileList as $fileName) {
+        $outputCode .= "\n\n".'//---- '.basename($fileName).' -----------------------------'."\n\n";
+        $anotherCode = file_get_contents($fileName);
+        $anotherCode = preg_replace('/^<\?php/', '', $anotherCode);
+        $anotherCode = preg_replace('/\?>\*$/', '', $anotherCode);
+        $outputCode .= "\n\n".$anotherCode."\n\n";
+    }
+
+    $versionDataEx = explode("\n", file_get_contents($versionFile));
+
+    $outputContents = file_get_contents($headerFile);
+    $outputContents .= "\n\n/*\n * Version: ".trim($versionDataEx[0])."\n * Build: ".trim($versionDataEx[1])."\n */\n\n";
+    $outputContents .= $outputCode;
+
+    file_put_contents($outputFile, $outputContents);
diff --git a/config/qrcode/tools/merged_config.php b/config/qrcode/tools/merged_config.php
index 55ddb450653225544f634ffc026497cce8572cf4..d355cd872f1423b02df9007f0bf3b47ae0367571 100755
--- a/config/qrcode/tools/merged_config.php
+++ b/config/qrcode/tools/merged_config.php
@@ -1,17 +1,16 @@
-<?php
-/*
- * PHP QR Code encoder
- *
- * Config file, tuned-up for merged verion
- */
-     
-    define('QR_CACHEABLE', false);       // use cache - more disk reads but less CPU power, masks and format templates are stored there
-    define('QR_CACHE_DIR', false);       // used when QR_CACHEABLE === true
-    define('QR_LOG_DIR', false);         // default error logs dir   
-    
-    define('QR_FIND_BEST_MASK', true);                                                          // if true, estimates best mask (spec. default, but extremally slow; set to false to significant performance boost but (propably) worst quality code
-    define('QR_FIND_FROM_RANDOM', 2);                                                       // if false, checks all masks available, otherwise value tells count of masks need to be checked, mask id are got randomly
-    define('QR_DEFAULT_MASK', 2);                                                               // when QR_FIND_BEST_MASK === false
-                                                  
-    define('QR_PNG_MAXIMUM_SIZE',  1024);                                                       // maximum allowed png image width (in pixels), tune to make sure GD and PHP can handle such big images
-                                                  
\ No newline at end of file
+<?php
+/*
+ * PHP QR Code encoder
+ *
+ * Config file, tuned-up for merged verion
+ */
+
+    define('QR_CACHEABLE', false);       // use cache - more disk reads but less CPU power, masks and format templates are stored there
+    define('QR_CACHE_DIR', false);       // used when QR_CACHEABLE === true
+    define('QR_LOG_DIR', false);         // default error logs dir
+
+    define('QR_FIND_BEST_MASK', true);                                                          // if true, estimates best mask (spec. default, but extremally slow; set to false to significant performance boost but (propably) worst quality code
+    define('QR_FIND_FROM_RANDOM', 2);                                                       // if false, checks all masks available, otherwise value tells count of masks need to be checked, mask id are got randomly
+    define('QR_DEFAULT_MASK', 2);                                                               // when QR_FIND_BEST_MASK === false
+
+    define('QR_PNG_MAXIMUM_SIZE', 1024);                                                       // maximum allowed png image width (in pixels), tune to make sure GD and PHP can handle such big images
diff --git a/config/qrcode/tools/merged_header.php b/config/qrcode/tools/merged_header.php
index 1ec22dda372dee69dd27181ba316322ccea6d4da..2bf66e76dffe8cea92cc947e70d448627cac3a64 100755
--- a/config/qrcode/tools/merged_header.php
+++ b/config/qrcode/tools/merged_header.php
@@ -1,37 +1,35 @@
-<?php
-
-/*
- * PHP QR Code encoder
- *
- * This file contains MERGED version of PHP QR Code library.
- * It was auto-generated from full version for your convenience.
- *
- * This merged version was configured to not require any external files,
- * with disabled cache, error logging and weaker but faster mask matching.
- * If you need tune it up please use non-merged version.
- *
- * For full version, documentation, examples of use please visit:
- *
- *    http://phpqrcode.sourceforge.net/
- *    https://sourceforge.net/projects/phpqrcode/
- *    https://github.com/t0k4rt/phpqrcode
- *
- * PHP QR Code is distributed under LGPL 3
- * Copyright (C) 2010 Dominik Dzienia <deltalab at poczta dot fm>
- *
- * This library is free software; you can redistribute it and/or
- * modify it under the terms of the GNU Lesser General Public
- * License as published by the Free Software Foundation; either
- * version 3 of the License, or any later version.
- *
- * This library is distributed in the hope that it will be useful,
- * but WITHOUT ANY WARRANTY; without even the implied warranty of
- * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
- * Lesser General Public License for more details.
- *
- * You should have received a copy of the GNU Lesser General Public
- * License along with this library; if not, write to the Free Software
- * Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA
- */
- 
- 
\ No newline at end of file
+<?php
+
+/*
+ * PHP QR Code encoder
+ *
+ * This file contains MERGED version of PHP QR Code library.
+ * It was auto-generated from full version for your convenience.
+ *
+ * This merged version was configured to not require any external files,
+ * with disabled cache, error logging and weaker but faster mask matching.
+ * If you need tune it up please use non-merged version.
+ *
+ * For full version, documentation, examples of use please visit:
+ *
+ *    http://phpqrcode.sourceforge.net/
+ *    https://sourceforge.net/projects/phpqrcode/
+ *    https://github.com/t0k4rt/phpqrcode
+ *
+ * PHP QR Code is distributed under LGPL 3
+ * Copyright (C) 2010 Dominik Dzienia <deltalab at poczta dot fm>
+ *
+ * This library is free software; you can redistribute it and/or
+ * modify it under the terms of the GNU Lesser General Public
+ * License as published by the Free Software Foundation; either
+ * version 3 of the License, or any later version.
+ *
+ * This library is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
+ * Lesser General Public License for more details.
+ *
+ * You should have received a copy of the GNU Lesser General Public
+ * License along with this library; if not, write to the Free Software
+ * Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA
+ */
diff --git a/content.php b/content.php
index e8f4ae7a51c2927d8b9a97242844ddaae143aab8..13a1cdfa015f28e4d2ef3f97a9842b37edfb1678 100755
--- a/content.php
+++ b/content.php
@@ -1,31 +1,25 @@
-<?php
-include "config/koneksi.php";
-
-
-
-  $tampil=mysql_query("SELECT * FROM modul where link !='' ORDER BY urutan");
-  
-  	
-  while ($r=mysql_fetch_array($tampil)){
-  $p = strlen($r['link']);
-  $mod = substr($r['link'],8,$p);
-  
-//  echo"$mod<br>";
-//  echo"$_GET[module]<br>";
-//  echo"modul/mod_$mod.php<br>";
-//
-
-	if ($_GET['module']==$mod){
-	 //include "modul/mod_$mod.php";
-	 include "modul/mod_$mod/$mod.php";
-	}
-  }	
-  
-
-
-// Apabila modul tidak ditemukan
-//else{
-//  echo "<p><b>Modul Not Found.</b></p>";
-//}
-
-?>
+<?php
+
+include 'config/koneksi.php';
+
+  $tampil = mysql_query("SELECT * FROM modul where link !='' ORDER BY urutan");
+
+  while ($r = mysql_fetch_array($tampil)) {
+      $p = strlen($r['link']);
+      $mod = substr($r['link'], 8, $p);
+
+      //  echo"$mod<br>";
+      //  echo"$_GET[module]<br>";
+      //  echo"modul/mod_$mod.php<br>";
+//
+
+      if ($_GET['module'] == $mod) {
+          //include "modul/mod_$mod.php";
+          include "modul/mod_$mod/$mod.php";
+      }
+  }
+
+// Apabila modul tidak ditemukan
+//else{
+//  echo "<p><b>Modul Not Found.</b></p>";
+//}
diff --git a/index.php b/index.php
index 2fff03f4b90c5880803bd1b83fde5b5dfb7fc2d5..3095605b48de8866fa7248824766f84f734d3820 100755
--- a/index.php
+++ b/index.php
@@ -1,5 +1,5 @@
-<?php
-include "config/koneksi.php";
+<?php
+include 'config/koneksi.php';
 ?>
 <!DOCTYPE html>
 <html>
@@ -13,15 +13,15 @@ include "config/koneksi.php";
 </head>
 <body>
 
-<?php
-if ($_GET['userid']) {
-	$userid = $_GET['userid'];
-	$module = $_GET['module'];
-} else {
-	$userid = '';
-	$module = 'home';
-}
-
+<?php
+if ($_GET['userid']) {
+    $userid = $_GET['userid'];
+    $module = $_GET['module'];
+} else {
+    $userid = '';
+    $module = 'home';
+}
+
 ?>
 	<section class="login-content">
 	<div class="header-title">
@@ -33,11 +33,15 @@ if ($_GET['userid']) {
 		<form method="post" action="cek_login.php" accept-charset="utf-8">
 		
 		<label id="username">
-			<input type="text" name="userid" value='<?php echo $userid;?>' <?php if (!$userid) { echo 'autofocus'; } ?> placeholder="Pengguna" required autofocus onKeyUp="" >
+			<input type="text" name="userid" value='<?php echo $userid; ?>' <?php if (!$userid) {
+    echo 'autofocus';
+} ?> placeholder="Pengguna" required autofocus onKeyUp="" >
 		</label>
 			<br>
 		<label id="password">	
-			<input type="password" name="password" <?php if ($userid) { echo 'autofocus'; } ?> placeholder="Sandi" required>
+			<input type="password" name="password" <?php if ($userid) {
+    echo 'autofocus';
+} ?> placeholder="Sandi" required>
 		</label>	
 			<br><br>
 			<button name="login"><i class="fa fa-sign-in"></i>&nbsp;Masuk	</button>
@@ -47,17 +51,17 @@ if ($_GET['userid']) {
 	</section><br>
 	<footer>
 	<br><br><br>
-	<?php
-	$SQL = "SELECT* FROM versi WHERE status = 'A' ";
-	$tampil=mysql_query($SQL);
-	$p = mysql_fetch_array($tampil);
-
-	$app = $p['aplikasi'];
-
-	$versi = $p['versi'];;
-	?>
+	<?php
+    $SQL = "SELECT* FROM versi WHERE status = 'A' ";
+    $tampil = mysql_query($SQL);
+    $p = mysql_fetch_array($tampil);
+
+    $app = $p['aplikasi'];
+
+    $versi = $p['versi'];
+    ?>
                 
-	<div class="wifi" style="font-size: 33px;"><?php echo $app;?></div>
+	<div class="wifi" style="font-size: 33px;"><?php echo $app; ?></div>
 		<!-- <p class="copyright">Version : <?php echo $versi;?></p> -->
 	</footer>
 </body>
diff --git a/js/datatables/unit_testing/controller.php b/js/datatables/unit_testing/controller.php
index 412375d89769f2b9460f6f18296f5bc78f42cf70..8bb93b2f286a73517bf96fdd383fbb24926aafe2 100755
--- a/js/datatables/unit_testing/controller.php
+++ b/js/datatables/unit_testing/controller.php
@@ -1,9 +1,9 @@
 <?php
-	header( 'Expires: Sat, 26 Jul 1997 05:00:00 GMT' ); 
-	header( 'Last-Modified: ' . gmdate( 'D, d M Y H:i:s' ) . ' GMT' ); 
-	header( 'Cache-Control: no-store, no-cache, must-revalidate' ); 
-	header( 'Cache-Control: post-check=0, pre-check=0', false ); 
-	header( 'Pragma: no-cache' ); 
+    header('Expires: Sat, 26 Jul 1997 05:00:00 GMT');
+    header('Last-Modified: '.gmdate('D, d M Y H:i:s').' GMT');
+    header('Cache-Control: no-store, no-cache, must-revalidate');
+    header('Cache-Control: post-check=0, pre-check=0', false);
+    header('Pragma: no-cache');
 ?><!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01//EN"
 	"http://www.w3.org/TR/html4/strict.dtd">
 <html>
@@ -44,47 +44,40 @@
 		<script type="text/javascript" charset="utf-8">
 			var gaoTest = [
 			<?php
-				function fnReadDir( &$aReturn, $path )
-				{
-					$rDir = opendir( $path );
-        	while ( ($file = readdir($rDir)) !== false )
-					{
-						if ( $file == "." || $file == ".." || $file == ".DS_Store" )
-						{
-							continue;
-						}
-						else if ( is_dir( $path.'/'.$file ) )
-						{
-							fnReadDir( $aReturn, $path.'/'.$file );
-						}
-						else
-						{
-							array_push( $aReturn, $path.'/'.$file );
-						}
-					}
-					closedir($rDir);
-				}
-				
-				/* Get the tests dynamically from the 'tests' directory, and their templates */
-				$aFiles = array();
-				fnReadDir( $aFiles, "tests" );
-				
-				for ( $i=0 ; $i<count($aFiles) ; $i++ )
-				{
-					$sTemplate;
-					$fp = fopen( $aFiles[$i], "r" );
-					fscanf( $fp, "// DATA_TEMPLATE: %s", $sTemplate );
-					fclose( $fp );
-					
-					$aPath = explode('/', $aFiles[$i]);
-					
-					echo '{ '.
-						'"sTemplate": "'.$sTemplate.'", '.
-						'"sTest": "'.$aFiles[$i].'", '.
-						'"sGroup": "'.$aPath[1].'"},'."\n";
-				}
-				
-			?>
+                function fnReadDir(&$aReturn, $path)
+                {
+                    $rDir = opendir($path);
+                    while (($file = readdir($rDir)) !== false) {
+                        if ($file == '.' || $file == '..' || $file == '.DS_Store') {
+                            continue;
+                        } elseif (is_dir($path.'/'.$file)) {
+                            fnReadDir($aReturn, $path.'/'.$file);
+                        } else {
+                            array_push($aReturn, $path.'/'.$file);
+                        }
+                    }
+                    closedir($rDir);
+                }
+
+                /* Get the tests dynamically from the 'tests' directory, and their templates */
+                $aFiles = [];
+                fnReadDir($aFiles, 'tests');
+
+                for ($i = 0; $i < count($aFiles); $i++) {
+                    $sTemplate;
+                    $fp = fopen($aFiles[$i], 'r');
+                    fscanf($fp, '// DATA_TEMPLATE: %s', $sTemplate);
+                    fclose($fp);
+
+                    $aPath = explode('/', $aFiles[$i]);
+
+                    echo '{ '.
+                        '"sTemplate": "'.$sTemplate.'", '.
+                        '"sTest": "'.$aFiles[$i].'", '.
+                        '"sGroup": "'.$aPath[1].'"},'."\n";
+                }
+
+            ?>
 			null ];
 			gaoTest.pop(); /* No interest in the null */
 		</script>
diff --git a/js/datatables/unit_testing/performance/large.php b/js/datatables/unit_testing/performance/large.php
index 1bc0a4143d5722729da532ead2a91eba1d8a0b84..664c29c75a87d5a8c9656da4b43d07b72fc9f181 100755
--- a/js/datatables/unit_testing/performance/large.php
+++ b/js/datatables/unit_testing/performance/large.php
@@ -1,12 +1,12 @@
 <?php
   /* MySQL connection */
-	include( $_SERVER['DOCUMENT_ROOT']."/datatables/mysql.php" ); /* ;-) */
-	
-	$gaSql['link'] =  mysql_pconnect( $gaSql['server'], $gaSql['user'], $gaSql['password']  ) or
-		die( 'Could not open connection to server' );
-	
-	mysql_select_db( $gaSql['db'], $gaSql['link'] ) or 
-		die( 'Could not select database '. $gaSql['db'] );
+    include $_SERVER['DOCUMENT_ROOT'].'/datatables/mysql.php'; /* ;-) */
+
+    $gaSql['link'] = mysql_pconnect($gaSql['server'], $gaSql['user'], $gaSql['password']) or
+        die('Could not open connection to server');
+
+    mysql_select_db($gaSql['db'], $gaSql['link']) or
+        die('Could not select database '.$gaSql['db']);
 
 ?><!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01//EN" "http://www.w3.org/TR/html4/strict.dtd">
 <html>
@@ -77,26 +77,25 @@
 	</thead>
 	<tbody>
 <?php
-	$sQuery = "
+    $sQuery = '
 		SELECT *
 		FROM   testData
 		LIMIT  2000
-	";
-	$rResult = mysql_query( $sQuery, $gaSql['link'] ) or die(mysql_error());
-	while ( $aRow = mysql_fetch_array( $rResult ) )
-	{
-		echo '<tr>';
-		echo '<td><a href="1">'.$aRow['id'].'</a></td>';
-		echo '<td>'.$aRow['name'].'</td>';
-		echo '<td>'.$aRow['phone'].'</td>';
-		echo '<td>'.$aRow['email'].'</td>';
-		echo '<td>'.$aRow['city'].'</td>';
-		echo '<td>'.$aRow['zip'].'</td>';
-		echo '<td>'.$aRow['state'].'</td>';
-		echo '<td>'.$aRow['country'].'</td>';
-		echo '<td>'.$aRow['zip2'].'</td>';
-		echo '</tr>';
-	}
+	';
+    $rResult = mysql_query($sQuery, $gaSql['link']) or die(mysql_error());
+    while ($aRow = mysql_fetch_array($rResult)) {
+        echo '<tr>';
+        echo '<td><a href="1">'.$aRow['id'].'</a></td>';
+        echo '<td>'.$aRow['name'].'</td>';
+        echo '<td>'.$aRow['phone'].'</td>';
+        echo '<td>'.$aRow['email'].'</td>';
+        echo '<td>'.$aRow['city'].'</td>';
+        echo '<td>'.$aRow['zip'].'</td>';
+        echo '<td>'.$aRow['state'].'</td>';
+        echo '<td>'.$aRow['country'].'</td>';
+        echo '<td>'.$aRow['zip2'].'</td>';
+        echo '</tr>';
+    }
 ?>
 	</tbody>
 </table>
diff --git a/js/datatables/unit_testing/templates/-complex_header.php b/js/datatables/unit_testing/templates/-complex_header.php
index 672addaf21bdf802e6fbeee91da566a8047c4543..1e832e04d8ff2d70215b1e831abcb1233a237f90 100755
--- a/js/datatables/unit_testing/templates/-complex_header.php
+++ b/js/datatables/unit_testing/templates/-complex_header.php
@@ -1,9 +1,9 @@
 <?php
-	header( 'Expires: Sat, 26 Jul 1997 05:00:00 GMT' ); 
-	header( 'Last-Modified: ' . gmdate( 'D, d M Y H:i:s' ) . ' GMT' ); 
-	header( 'Cache-Control: no-store, no-cache, must-revalidate' ); 
-	header( 'Cache-Control: post-check=0, pre-check=0', false ); 
-	header( 'Pragma: no-cache' ); 
+    header('Expires: Sat, 26 Jul 1997 05:00:00 GMT');
+    header('Last-Modified: '.gmdate('D, d M Y H:i:s').' GMT');
+    header('Cache-Control: no-store, no-cache, must-revalidate');
+    header('Cache-Control: post-check=0, pre-check=0', false);
+    header('Pragma: no-cache');
 ?><!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01//EN" "http://www.w3.org/TR/html4/strict.dtd">
 <html>
 	<head>
@@ -19,12 +19,11 @@
 		<script type="text/javascript" src="../../js/jquery.dataTables.js"></script>
 		<script type="text/javascript" src="../unit_test.js"></script>
 		<?php
-			$aScripts = explode( ":", $_GET['scripts'] );
-			for ( $i=0 ; $i<count($aScripts) ; $i++ )
-			{
-				echo '<script type="text/javascript" src="../'.$aScripts[$i].'?rand='.rand().'"></script>'."\n";
-			}
-		?>
+            $aScripts = explode(':', $_GET['scripts']);
+            for ($i = 0; $i < count($aScripts); $i++) {
+                echo '<script type="text/javascript" src="../'.$aScripts[$i].'?rand='.rand().'"></script>'."\n";
+            }
+        ?>
 	</head>
 	<body id="dt_example">
 		<div id="container">
diff --git a/js/datatables/unit_testing/templates/2512.php b/js/datatables/unit_testing/templates/2512.php
index fa7da4ccba84eb083d754c9ecc0efbf134570ae6..ba0f7133461ff489c7498152be9b1244ece705a6 100755
--- a/js/datatables/unit_testing/templates/2512.php
+++ b/js/datatables/unit_testing/templates/2512.php
@@ -1,9 +1,9 @@
 <?php
-	header( 'Expires: Sat, 26 Jul 1997 05:00:00 GMT' ); 
-	header( 'Last-Modified: ' . gmdate( 'D, d M Y H:i:s' ) . ' GMT' ); 
-	header( 'Cache-Control: no-store, no-cache, must-revalidate' ); 
-	header( 'Cache-Control: post-check=0, pre-check=0', false ); 
-	header( 'Pragma: no-cache' ); 
+    header('Expires: Sat, 26 Jul 1997 05:00:00 GMT');
+    header('Last-Modified: '.gmdate('D, d M Y H:i:s').' GMT');
+    header('Cache-Control: no-store, no-cache, must-revalidate');
+    header('Cache-Control: post-check=0, pre-check=0', false);
+    header('Pragma: no-cache');
 ?><!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01//EN" "http://www.w3.org/TR/html4/strict.dtd">
 <html>
 	<head>
@@ -19,12 +19,11 @@
 		<script type="text/javascript" src="../../js/jquery.dataTables.js"></script>
 		<script type="text/javascript" src="../unit_test.js"></script>
 		<?php
-			$aScripts = explode( ":", $_GET['scripts'] );
-			for ( $i=0 ; $i<count($aScripts) ; $i++ )
-			{
-				echo '<script type="text/javascript" src="../'.$aScripts[$i].'?rand='.rand().'"></script>'."\n";
-			}
-		?>
+            $aScripts = explode(':', $_GET['scripts']);
+            for ($i = 0; $i < count($aScripts); $i++) {
+                echo '<script type="text/javascript" src="../'.$aScripts[$i].'?rand='.rand().'"></script>'."\n";
+            }
+        ?>
 	</head>
 	<body id="dt_example">
 		<div id="container">
diff --git a/js/datatables/unit_testing/templates/6776.php b/js/datatables/unit_testing/templates/6776.php
index 091d3403c9d8074fdbb949f42987ad34794389e5..c412e85172912f671778ea2496b6197253ccc02a 100755
--- a/js/datatables/unit_testing/templates/6776.php
+++ b/js/datatables/unit_testing/templates/6776.php
@@ -1,9 +1,9 @@
 <?php
-	header( 'Expires: Sat, 26 Jul 1997 05:00:00 GMT' ); 
-	header( 'Last-Modified: ' . gmdate( 'D, d M Y H:i:s' ) . ' GMT' ); 
-	header( 'Cache-Control: no-store, no-cache, must-revalidate' ); 
-	header( 'Cache-Control: post-check=0, pre-check=0', false ); 
-	header( 'Pragma: no-cache' ); 
+    header('Expires: Sat, 26 Jul 1997 05:00:00 GMT');
+    header('Last-Modified: '.gmdate('D, d M Y H:i:s').' GMT');
+    header('Cache-Control: no-store, no-cache, must-revalidate');
+    header('Cache-Control: post-check=0, pre-check=0', false);
+    header('Pragma: no-cache');
 ?><!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01//EN" "http://www.w3.org/TR/html4/strict.dtd">
 <html>
 	<head>
@@ -19,12 +19,11 @@
 		<script type="text/javascript" src="../../js/jquery.dataTables.js"></script>
 		<script type="text/javascript" src="../unit_test.js"></script>
 		<?php
-			$aScripts = explode( ":", $_GET['scripts'] );
-			for ( $i=0 ; $i<count($aScripts) ; $i++ )
-			{
-				echo '<script type="text/javascript" src="../'.$aScripts[$i].'?rand='.rand().'"></script>'."\n";
-			}
-		?>
+            $aScripts = explode(':', $_GET['scripts']);
+            for ($i = 0; $i < count($aScripts); $i++) {
+                echo '<script type="text/javascript" src="../'.$aScripts[$i].'?rand='.rand().'"></script>'."\n";
+            }
+        ?>
 	</head>
   <body id="dt_example">
     <div id="container">
diff --git a/js/datatables/unit_testing/templates/complex_header_2.php b/js/datatables/unit_testing/templates/complex_header_2.php
index 41a9ffffe8461cb1afe18294acff798aba8e04ed..f6d2e2b546bd61a84b0dbafeafa9191026530a10 100755
--- a/js/datatables/unit_testing/templates/complex_header_2.php
+++ b/js/datatables/unit_testing/templates/complex_header_2.php
@@ -1,9 +1,9 @@
 <?php
-	header( 'Expires: Sat, 26 Jul 1997 05:00:00 GMT' ); 
-	header( 'Last-Modified: ' . gmdate( 'D, d M Y H:i:s' ) . ' GMT' ); 
-	header( 'Cache-Control: no-store, no-cache, must-revalidate' ); 
-	header( 'Cache-Control: post-check=0, pre-check=0', false ); 
-	header( 'Pragma: no-cache' ); 
+    header('Expires: Sat, 26 Jul 1997 05:00:00 GMT');
+    header('Last-Modified: '.gmdate('D, d M Y H:i:s').' GMT');
+    header('Cache-Control: no-store, no-cache, must-revalidate');
+    header('Cache-Control: post-check=0, pre-check=0', false);
+    header('Pragma: no-cache');
 ?><!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01//EN" "http://www.w3.org/TR/html4/strict.dtd">
 <html>
 	<head>
@@ -19,12 +19,11 @@
 		<script type="text/javascript" src="../../js/jquery.dataTables.js"></script>
 		<script type="text/javascript" src="../unit_test.js"></script>
 		<?php
-			$aScripts = explode( ":", $_GET['scripts'] );
-			for ( $i=0 ; $i<count($aScripts) ; $i++ )
-			{
-				echo '<script type="text/javascript" src="../'.$aScripts[$i].'?rand='.rand().'"></script>'."\n";
-			}
-		?>
+            $aScripts = explode(':', $_GET['scripts']);
+            for ($i = 0; $i < count($aScripts); $i++) {
+                echo '<script type="text/javascript" src="../'.$aScripts[$i].'?rand='.rand().'"></script>'."\n";
+            }
+        ?>
 	</head>
 	<body id="dt_example">
 		<div id="container">
diff --git a/js/datatables/unit_testing/templates/deferred_table.php b/js/datatables/unit_testing/templates/deferred_table.php
index 1070b195cd8981f300a32fb38ae9d52169719a47..65165dd98d5b37f94e1554912a6d73418d6f9e3d 100755
--- a/js/datatables/unit_testing/templates/deferred_table.php
+++ b/js/datatables/unit_testing/templates/deferred_table.php
@@ -1,9 +1,9 @@
 <?php
-	header( 'Expires: Sat, 26 Jul 1997 05:00:00 GMT' ); 
-	header( 'Last-Modified: ' . gmdate( 'D, d M Y H:i:s' ) . ' GMT' ); 
-	header( 'Cache-Control: no-store, no-cache, must-revalidate' ); 
-	header( 'Cache-Control: post-check=0, pre-check=0', false ); 
-	header( 'Pragma: no-cache' ); 
+    header('Expires: Sat, 26 Jul 1997 05:00:00 GMT');
+    header('Last-Modified: '.gmdate('D, d M Y H:i:s').' GMT');
+    header('Cache-Control: no-store, no-cache, must-revalidate');
+    header('Cache-Control: post-check=0, pre-check=0', false);
+    header('Pragma: no-cache');
 ?><!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01//EN" "http://www.w3.org/TR/html4/strict.dtd">
 <html>
 	<head>
@@ -19,12 +19,11 @@
 		<script type="text/javascript" src="../../js/jquery.dataTables.js"></script>
 		<script type="text/javascript" src="../unit_test.js"></script>
 		<?php
-			$aScripts = explode( ":", $_GET['scripts'] );
-			for ( $i=0 ; $i<count($aScripts) ; $i++ )
-			{
-				echo '<script type="text/javascript" src="../'.$aScripts[$i].'?rand='.rand().'"></script>'."\n";
-			}
-		?>
+            $aScripts = explode(':', $_GET['scripts']);
+            for ($i = 0; $i < count($aScripts); $i++) {
+                echo '<script type="text/javascript" src="../'.$aScripts[$i].'?rand='.rand().'"></script>'."\n";
+            }
+        ?>
 	</head>
 	<body id="dt_example">
 		<div id="container">
diff --git a/js/datatables/unit_testing/templates/dom_data.php b/js/datatables/unit_testing/templates/dom_data.php
index 10e328bbac3af3daa026671b973c751b1eb7fbcd..7cb0f8ba57596094f42784e4a4743d51b56b5c5c 100755
--- a/js/datatables/unit_testing/templates/dom_data.php
+++ b/js/datatables/unit_testing/templates/dom_data.php
@@ -1,9 +1,9 @@
 <?php
-	header( 'Expires: Sat, 26 Jul 1997 05:00:00 GMT' ); 
-	header( 'Last-Modified: ' . gmdate( 'D, d M Y H:i:s' ) . ' GMT' ); 
-	header( 'Cache-Control: no-store, no-cache, must-revalidate' ); 
-	header( 'Cache-Control: post-check=0, pre-check=0', false ); 
-	header( 'Pragma: no-cache' ); 
+    header('Expires: Sat, 26 Jul 1997 05:00:00 GMT');
+    header('Last-Modified: '.gmdate('D, d M Y H:i:s').' GMT');
+    header('Cache-Control: no-store, no-cache, must-revalidate');
+    header('Cache-Control: post-check=0, pre-check=0', false);
+    header('Pragma: no-cache');
 ?><!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01//EN" "http://www.w3.org/TR/html4/strict.dtd">
 <html>
 	<head>
@@ -19,12 +19,11 @@
 		<script type="text/javascript" src="../../js/jquery.dataTables.js"></script>
 		<script type="text/javascript" src="../unit_test.js"></script>
 		<?php
-			$aScripts = explode( ":", $_GET['scripts'] );
-			for ( $i=0 ; $i<count($aScripts) ; $i++ )
-			{
-				echo '<script type="text/javascript" src="../'.$aScripts[$i].'?rand='.rand().'"></script>'."\n";
-			}
-		?>
+            $aScripts = explode(':', $_GET['scripts']);
+            for ($i = 0; $i < count($aScripts); $i++) {
+                echo '<script type="text/javascript" src="../'.$aScripts[$i].'?rand='.rand().'"></script>'."\n";
+            }
+        ?>
 	</head>
 	<body id="dt_example">
 		<div id="container">
diff --git a/js/datatables/unit_testing/templates/dom_data_th.php b/js/datatables/unit_testing/templates/dom_data_th.php
index 9617c36fc730fa029303b27f8d79cb02e9ab1579..697d3bac6fd7a55c1243798d432e67738a1ef9ff 100755
--- a/js/datatables/unit_testing/templates/dom_data_th.php
+++ b/js/datatables/unit_testing/templates/dom_data_th.php
@@ -1,9 +1,9 @@
 <?php
-	header( 'Expires: Sat, 26 Jul 1997 05:00:00 GMT' ); 
-	header( 'Last-Modified: ' . gmdate( 'D, d M Y H:i:s' ) . ' GMT' ); 
-	header( 'Cache-Control: no-store, no-cache, must-revalidate' ); 
-	header( 'Cache-Control: post-check=0, pre-check=0', false ); 
-	header( 'Pragma: no-cache' ); 
+    header('Expires: Sat, 26 Jul 1997 05:00:00 GMT');
+    header('Last-Modified: '.gmdate('D, d M Y H:i:s').' GMT');
+    header('Cache-Control: no-store, no-cache, must-revalidate');
+    header('Cache-Control: post-check=0, pre-check=0', false);
+    header('Pragma: no-cache');
 ?><!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01//EN" "http://www.w3.org/TR/html4/strict.dtd">
 <html>
 	<head>
@@ -19,12 +19,11 @@
 		<script type="text/javascript" src="../../js/jquery.dataTables.js"></script>
 		<script type="text/javascript" src="../unit_test.js"></script>
 		<?php
-			$aScripts = explode( ":", $_GET['scripts'] );
-			for ( $i=0 ; $i<count($aScripts) ; $i++ )
-			{
-				echo '<script type="text/javascript" src="../'.$aScripts[$i].'?rand='.rand().'"></script>'."\n";
-			}
-		?>
+            $aScripts = explode(':', $_GET['scripts']);
+            for ($i = 0; $i < count($aScripts); $i++) {
+                echo '<script type="text/javascript" src="../'.$aScripts[$i].'?rand='.rand().'"></script>'."\n";
+            }
+        ?>
 	</head>
 	<body id="dt_example">
 		<div id="container">
diff --git a/js/datatables/unit_testing/templates/dom_data_two_headers.php b/js/datatables/unit_testing/templates/dom_data_two_headers.php
index 31742642ddb607c79383e5327d3ccea4059221f3..1ced16ea36d1ff17b8b1483d6c2886511b4e4987 100755
--- a/js/datatables/unit_testing/templates/dom_data_two_headers.php
+++ b/js/datatables/unit_testing/templates/dom_data_two_headers.php
@@ -1,9 +1,9 @@
 <?php
-	header( 'Expires: Sat, 26 Jul 1997 05:00:00 GMT' ); 
-	header( 'Last-Modified: ' . gmdate( 'D, d M Y H:i:s' ) . ' GMT' ); 
-	header( 'Cache-Control: no-store, no-cache, must-revalidate' ); 
-	header( 'Cache-Control: post-check=0, pre-check=0', false ); 
-	header( 'Pragma: no-cache' ); 
+    header('Expires: Sat, 26 Jul 1997 05:00:00 GMT');
+    header('Last-Modified: '.gmdate('D, d M Y H:i:s').' GMT');
+    header('Cache-Control: no-store, no-cache, must-revalidate');
+    header('Cache-Control: post-check=0, pre-check=0', false);
+    header('Pragma: no-cache');
 ?><!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01//EN" "http://www.w3.org/TR/html4/strict.dtd">
 <html>
 	<head>
@@ -19,12 +19,11 @@
 		<script type="text/javascript" src="../../js/jquery.dataTables.js"></script>
 		<script type="text/javascript" src="../unit_test.js"></script>
 		<?php
-			$aScripts = explode( ":", $_GET['scripts'] );
-			for ( $i=0 ; $i<count($aScripts) ; $i++ )
-			{
-				echo '<script type="text/javascript" src="../'.$aScripts[$i].'?rand='.rand().'"></script>'."\n";
-			}
-		?>
+            $aScripts = explode(':', $_GET['scripts']);
+            for ($i = 0; $i < count($aScripts); $i++) {
+                echo '<script type="text/javascript" src="../'.$aScripts[$i].'?rand='.rand().'"></script>'."\n";
+            }
+        ?>
 	</head>
 	<body id="dt_example">
 		<div id="container">
diff --git a/js/datatables/unit_testing/templates/dymanic_table.php b/js/datatables/unit_testing/templates/dymanic_table.php
index 89bd97cb065a2b9a9ee5b4bc8e8b5aee6b4629e5..155d7e5161dc6b6a464bf9812d285109914ed0eb 100755
--- a/js/datatables/unit_testing/templates/dymanic_table.php
+++ b/js/datatables/unit_testing/templates/dymanic_table.php
@@ -1,9 +1,9 @@
 <?php
-	header( 'Expires: Sat, 26 Jul 1997 05:00:00 GMT' ); 
-	header( 'Last-Modified: ' . gmdate( 'D, d M Y H:i:s' ) . ' GMT' ); 
-	header( 'Cache-Control: no-store, no-cache, must-revalidate' ); 
-	header( 'Cache-Control: post-check=0, pre-check=0', false ); 
-	header( 'Pragma: no-cache' ); 
+    header('Expires: Sat, 26 Jul 1997 05:00:00 GMT');
+    header('Last-Modified: '.gmdate('D, d M Y H:i:s').' GMT');
+    header('Cache-Control: no-store, no-cache, must-revalidate');
+    header('Cache-Control: post-check=0, pre-check=0', false);
+    header('Pragma: no-cache');
 ?><!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01//EN" "http://www.w3.org/TR/html4/strict.dtd">
 <html>
 	<head>
@@ -24,12 +24,11 @@
 			} );
 		</script>
 		<?php
-			$aScripts = explode( ":", $_GET['scripts'] );
-			for ( $i=0 ; $i<count($aScripts) ; $i++ )
-			{
-				echo '<script type="text/javascript" src="../'.$aScripts[$i].'?rand='.rand().'"></script>'."\n";
-			}
-		?>
+            $aScripts = explode(':', $_GET['scripts']);
+            for ($i = 0; $i < count($aScripts); $i++) {
+                echo '<script type="text/javascript" src="../'.$aScripts[$i].'?rand='.rand().'"></script>'."\n";
+            }
+        ?>
 	</head>
 	<body id="dt_example">
 		<div id="container">
diff --git a/js/datatables/unit_testing/templates/empty_table.php b/js/datatables/unit_testing/templates/empty_table.php
index 58fd2ba1bae2dee9453b2da53a7acff79ef9ddec..4d496181aaf89e29534e42581d3ff1df5613144a 100755
--- a/js/datatables/unit_testing/templates/empty_table.php
+++ b/js/datatables/unit_testing/templates/empty_table.php
@@ -1,9 +1,9 @@
 <?php
-	header( 'Expires: Sat, 26 Jul 1997 05:00:00 GMT' ); 
-	header( 'Last-Modified: ' . gmdate( 'D, d M Y H:i:s' ) . ' GMT' ); 
-	header( 'Cache-Control: no-store, no-cache, must-revalidate' ); 
-	header( 'Cache-Control: post-check=0, pre-check=0', false ); 
-	header( 'Pragma: no-cache' ); 
+    header('Expires: Sat, 26 Jul 1997 05:00:00 GMT');
+    header('Last-Modified: '.gmdate('D, d M Y H:i:s').' GMT');
+    header('Cache-Control: no-store, no-cache, must-revalidate');
+    header('Cache-Control: post-check=0, pre-check=0', false);
+    header('Pragma: no-cache');
 ?><!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01//EN" "http://www.w3.org/TR/html4/strict.dtd">
 <html>
 	<head>
@@ -19,12 +19,11 @@
 		<script type="text/javascript" src="../../js/jquery.dataTables.js"></script>
 		<script type="text/javascript" src="../unit_test.js"></script>
 		<?php
-			$aScripts = explode( ":", $_GET['scripts'] );
-			for ( $i=0 ; $i<count($aScripts) ; $i++ )
-			{
-				echo '<script type="text/javascript" src="../'.$aScripts[$i].'?rand='.rand().'"></script>'."\n";
-			}
-		?>
+            $aScripts = explode(':', $_GET['scripts']);
+            for ($i = 0; $i < count($aScripts); $i++) {
+                echo '<script type="text/javascript" src="../'.$aScripts[$i].'?rand='.rand().'"></script>'."\n";
+            }
+        ?>
 	</head>
 	<body id="dt_example">
 		<div id="container">
diff --git a/js/datatables/unit_testing/templates/html_table.php b/js/datatables/unit_testing/templates/html_table.php
index 75d855261594bcc2a7cc49e2e8e1b46c8f4b788e..481d3da03cf2dddba6ba43bf4fab9764c5c4d6dc 100755
--- a/js/datatables/unit_testing/templates/html_table.php
+++ b/js/datatables/unit_testing/templates/html_table.php
@@ -1,9 +1,9 @@
 <?php
-	header( 'Expires: Sat, 26 Jul 1997 05:00:00 GMT' ); 
-	header( 'Last-Modified: ' . gmdate( 'D, d M Y H:i:s' ) . ' GMT' ); 
-	header( 'Cache-Control: no-store, no-cache, must-revalidate' ); 
-	header( 'Cache-Control: post-check=0, pre-check=0', false ); 
-	header( 'Pragma: no-cache' ); 
+    header('Expires: Sat, 26 Jul 1997 05:00:00 GMT');
+    header('Last-Modified: '.gmdate('D, d M Y H:i:s').' GMT');
+    header('Cache-Control: no-store, no-cache, must-revalidate');
+    header('Cache-Control: post-check=0, pre-check=0', false);
+    header('Pragma: no-cache');
 ?><!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01//EN" "http://www.w3.org/TR/html4/strict.dtd">
 <html>
 	<head>
@@ -19,12 +19,11 @@
 		<script type="text/javascript" src="../../js/jquery.dataTables.js"></script>
 		<script type="text/javascript" src="../unit_test.js"></script>
 		<?php
-			$aScripts = explode( ":", $_GET['scripts'] );
-			for ( $i=0 ; $i<count($aScripts) ; $i++ )
-			{
-				echo '<script type="text/javascript" src="../'.$aScripts[$i].'?rand='.rand().'"></script>'."\n";
-			}
-		?>
+            $aScripts = explode(':', $_GET['scripts']);
+            for ($i = 0; $i < count($aScripts); $i++) {
+                echo '<script type="text/javascript" src="../'.$aScripts[$i].'?rand='.rand().'"></script>'."\n";
+            }
+        ?>
 	</head>
 	<body id="dt_example">
 		<div id="container">
diff --git a/js/datatables/unit_testing/templates/js_data.php b/js/datatables/unit_testing/templates/js_data.php
index 71153e20238b3496054f105eed3674502dd195e1..24605e1ef1f97d17e008c78d120465e67f71016e 100755
--- a/js/datatables/unit_testing/templates/js_data.php
+++ b/js/datatables/unit_testing/templates/js_data.php
@@ -1,9 +1,9 @@
 <?php
-	header( 'Expires: Sat, 26 Jul 1997 05:00:00 GMT' ); 
-	header( 'Last-Modified: ' . gmdate( 'D, d M Y H:i:s' ) . ' GMT' ); 
-	header( 'Cache-Control: no-store, no-cache, must-revalidate' ); 
-	header( 'Cache-Control: post-check=0, pre-check=0', false ); 
-	header( 'Pragma: no-cache' ); 
+    header('Expires: Sat, 26 Jul 1997 05:00:00 GMT');
+    header('Last-Modified: '.gmdate('D, d M Y H:i:s').' GMT');
+    header('Cache-Control: no-store, no-cache, must-revalidate');
+    header('Cache-Control: post-check=0, pre-check=0', false);
+    header('Pragma: no-cache');
 ?><!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01//EN" "http://www.w3.org/TR/html4/strict.dtd">
 <html>
 	<head>
@@ -81,12 +81,11 @@
 			];
 		</script>
 		<?php
-			$aScripts = explode( ":", $_GET['scripts'] );
-			for ( $i=0 ; $i<count($aScripts) ; $i++ )
-			{
-				echo '<script type="text/javascript" src="../'.$aScripts[$i].'?rand='.rand().'"></script>'."\n";
-			}
-		?>
+            $aScripts = explode(':', $_GET['scripts']);
+            for ($i = 0; $i < count($aScripts); $i++) {
+                echo '<script type="text/javascript" src="../'.$aScripts[$i].'?rand='.rand().'"></script>'."\n";
+            }
+        ?>
 	</head>
 	<body id="dt_example">
 		<div id="container">
diff --git a/js/datatables/unit_testing/templates/js_data_mixed_types.php b/js/datatables/unit_testing/templates/js_data_mixed_types.php
index 536e701842d82e8e2b55b8b2d620470a2986c203..070115953ed946af37b53952e6f9d4b09fb56f69 100755
--- a/js/datatables/unit_testing/templates/js_data_mixed_types.php
+++ b/js/datatables/unit_testing/templates/js_data_mixed_types.php
@@ -1,9 +1,9 @@
 <?php
-	header( 'Expires: Sat, 26 Jul 1997 05:00:00 GMT' ); 
-	header( 'Last-Modified: ' . gmdate( 'D, d M Y H:i:s' ) . ' GMT' ); 
-	header( 'Cache-Control: no-store, no-cache, must-revalidate' ); 
-	header( 'Cache-Control: post-check=0, pre-check=0', false ); 
-	header( 'Pragma: no-cache' ); 
+    header('Expires: Sat, 26 Jul 1997 05:00:00 GMT');
+    header('Last-Modified: '.gmdate('D, d M Y H:i:s').' GMT');
+    header('Cache-Control: no-store, no-cache, must-revalidate');
+    header('Cache-Control: post-check=0, pre-check=0', false);
+    header('Pragma: no-cache');
 ?><!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01//EN" "http://www.w3.org/TR/html4/strict.dtd">
 <html>
 	<head>
@@ -81,12 +81,11 @@
 			];
 		</script>
 		<?php
-			$aScripts = explode( ":", $_GET['scripts'] );
-			for ( $i=0 ; $i<count($aScripts) ; $i++ )
-			{
-				echo '<script type="text/javascript" src="../'.$aScripts[$i].'?rand='.rand().'"></script>'."\n";
-			}
-		?>
+            $aScripts = explode(':', $_GET['scripts']);
+            for ($i = 0; $i < count($aScripts); $i++) {
+                echo '<script type="text/javascript" src="../'.$aScripts[$i].'?rand='.rand().'"></script>'."\n";
+            }
+        ?>
 	</head>
 	<body id="dt_example">
 		<div id="container">
diff --git a/js/datatables/unit_testing/templates/two_tables.php b/js/datatables/unit_testing/templates/two_tables.php
index d711db5461eba9b7e4de40cb9b6f4ab1624100dc..d582de7e5bcb0cb53e958c94fc24147306517256 100755
--- a/js/datatables/unit_testing/templates/two_tables.php
+++ b/js/datatables/unit_testing/templates/two_tables.php
@@ -1,9 +1,9 @@
 <?php
-	header( 'Expires: Sat, 26 Jul 1997 05:00:00 GMT' ); 
-	header( 'Last-Modified: ' . gmdate( 'D, d M Y H:i:s' ) . ' GMT' ); 
-	header( 'Cache-Control: no-store, no-cache, must-revalidate' ); 
-	header( 'Cache-Control: post-check=0, pre-check=0', false ); 
-	header( 'Pragma: no-cache' ); 
+    header('Expires: Sat, 26 Jul 1997 05:00:00 GMT');
+    header('Last-Modified: '.gmdate('D, d M Y H:i:s').' GMT');
+    header('Cache-Control: no-store, no-cache, must-revalidate');
+    header('Cache-Control: post-check=0, pre-check=0', false);
+    header('Pragma: no-cache');
 ?><!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01//EN" "http://www.w3.org/TR/html4/strict.dtd">
 <html>
 	<head>
@@ -19,12 +19,11 @@
 		<script type="text/javascript" src="../../js/jquery.dataTables.js"></script>
 		<script type="text/javascript" src="../unit_test.js"></script>
 		<?php
-			$aScripts = explode( ":", $_GET['scripts'] );
-			for ( $i=0 ; $i<count($aScripts) ; $i++ )
-			{
-				echo '<script type="text/javascript" src="../'.$aScripts[$i].'?rand='.rand().'"></script>'."\n";
-			}
-		?>
+            $aScripts = explode(':', $_GET['scripts']);
+            for ($i = 0; $i < count($aScripts); $i++) {
+                echo '<script type="text/javascript" src="../'.$aScripts[$i].'?rand='.rand().'"></script>'."\n";
+            }
+        ?>
 	</head>
 	<body id="dt_example">
 		<div id="container">
diff --git a/koneksi.php b/koneksi.php
index 8735e474886ca8548b6d96eac240d67faac1e517..ef8f93e1253a8a1e4a306bac6c219a447c0e1c04 100755
--- a/koneksi.php
+++ b/koneksi.php
@@ -1,17 +1,16 @@
-<?php
-
-// Added user �k6035570_fajar� with password �5uperman�.
-$server = "localhost";
-$username = "root";
-$password = "root";
-$database = "ehotel";
-
-//$server = "103.11.74.20";
-//$username = "k7398289_elite";
-//$password = "5uperman";
-//$database = "k7398289_three";
-
-// Koneksi dan memilih database di server
-mysql_connect($server,$username,$password) or die("Koneksi gagal");
-mysql_select_db($database) or die("Database tidak bisa dibuka");
-?>
+<?php
+
+// Added user �k6035570_fajar� with password �5uperman�.
+$server = 'localhost';
+$username = 'root';
+$password = 'root';
+$database = 'ehotel';
+
+//$server = "103.11.74.20";
+//$username = "k7398289_elite";
+//$password = "5uperman";
+//$database = "k7398289_three";
+
+// Koneksi dan memilih database di server
+mysql_connect($server, $username, $password) or die('Koneksi gagal');
+mysql_select_db($database) or die('Database tidak bisa dibuka');
diff --git a/logout.php b/logout.php
index 27057e17d6c5d27f2fda06aeb4cd0ad174ef7f74..9189a7799484631ec66129f77b9aff42c5a3b347 100755
--- a/logout.php
+++ b/logout.php
@@ -1,21 +1,17 @@
-<?php
-
-  session_start();
-
-  session_destroy();
-
-  $userid = $_GET['userid'];
-  $module = $_GET['module'];
-
-  header('location:index.php?userid='.$userid.'&module='.$module.'');
-
-
-
-// Apabila setelah logout langsung menuju halaman utama website, aktifkan baris di bawah ini:
-
-
-
-//  header('location:http://www.alamatwebsite.com');
-
+<?php
+
+  session_start();
+
+  session_destroy();
+
+  $userid = $_GET['userid'];
+  $module = $_GET['module'];
+
+  header('location:index.php?userid='.$userid.'&module='.$module.'');
+
+// Apabila setelah logout langsung menuju halaman utama website, aktifkan baris di bawah ini:
+
+//  header('location:http://www.alamatwebsite.com');
+
 ?>
 
diff --git a/main.php b/main.php
index ff0c8505580fc2ef590a6f3f73e339015938e978..bb9fec652e9ff547362b29b2f4b6d5d77af04fe0 100755
--- a/main.php
+++ b/main.php
@@ -1,126 +1,106 @@
-<?php
-session_start();
-if (empty($_SESSION['userid']) AND empty($_SESSION['password'])){
-
- echo "<script>window.alert('Login first.'); window.location=('index.php')</script>";
- 
-
-} else {
-date_default_timezone_set('Asia/Jakarta');
-include "config/koneksi.php";
-//include "config/koneksi_odbc.php";
-include "config/fungsi_indobulan.php";
-include "config/browser_detection.php";
-
-
-$userid   = $_SESSION['userid'];  
-$username = $_SESSION['iusername'];  
-$role     = $_SESSION['role'];  
-$groups   = $_SESSION['groups'];  
-$outlet   = $_SESSION['outlet'];  
-$df_outlet   = $_SESSION['outlet'];  
-
-$tipe_sales   = $_SESSION['tipe_sales'];  
-
-$r_input = $_SESSION['r_input'];  
-$r_edit = $_SESSION['r_edit'];
-$r_delete = $_SESSION['r_delete'];
-$r_admin = $_SESSION['r_admin'];
-$r_department = $_SESSION['r_department'];
-
-
-
-
- $gsql=mysql_query("SELECT a.main_page,b.id_modul FROM groups a inner join modul b
+<?php
+session_start();
+if (empty($_SESSION['userid']) and empty($_SESSION['password'])) {
+    echo "<script>window.alert('Login first.'); window.location=('index.php')</script>";
+} else {
+    date_default_timezone_set('Asia/Jakarta');
+    include 'config/koneksi.php';
+    //include "config/koneksi_odbc.php";
+    include 'config/fungsi_indobulan.php';
+    include 'config/browser_detection.php';
+
+    $userid = $_SESSION['userid'];
+    $username = $_SESSION['iusername'];
+    $role = $_SESSION['role'];
+    $groups = $_SESSION['groups'];
+    $outlet = $_SESSION['outlet'];
+    $df_outlet = $_SESSION['outlet'];
+
+    $tipe_sales = $_SESSION['tipe_sales'];
+
+    $r_input = $_SESSION['r_input'];
+    $r_edit = $_SESSION['r_edit'];
+    $r_delete = $_SESSION['r_delete'];
+    $r_admin = $_SESSION['r_admin'];
+    $r_department = $_SESSION['r_department'];
+
+    $gsql = mysql_query("SELECT a.main_page,b.id_modul FROM groups a inner join modul b
                     on a.main_page = b.link
-                    WHERE id_groups ='$groups'");
-
- $g=mysql_fetch_array($gsql);
-
-
-  if ($g['main_page']) {
-    $lmodule = $g['main_page'].'&id_module='.$g['id_modul'];
-  } else {
-     $lmodule = 'main.php?module=home&id_module=11';
-  }
-
-
-$SQL=   "SELECT * FROM informasi_perusahaan WHERE id_informasi_perusahaan = '1'";   
-
-$tampil=mysql_query($SQL);
-                         
-$r=mysql_fetch_array($tampil);
-
-$company = $r[company];
-
-$logo_hotel = $r[pict];
-$module = trim($_GET[module]);
-
-
-$uSQL=   "SELECT pict FROM user where id_user = '$userid' ";   
-
-$utampil=mysql_query($uSQL);
-                         
-$u=mysql_fetch_array($utampil);
-
-$pict     = $u['pict'];  
-
-
-
-$id_module = $_GET['id_module'];
-
-
-$sql=mysql_query("select * from modul where id_modul = '$_GET[id_module]'");
-$r=mysql_fetch_array($sql);
-
-$imodule    = $_GET['module'];
-$nmmodule   = ucwords($r['nama_modul']);
-$id         = $r['id_modul'];
-
-$fa_icon    = $r['ficon'];
-
-$psql=mysql_query("select * from modul where id_modul = '$r[parentid]'");
-$p=mysql_fetch_array($psql);
-
-$p_imodule   = $p['nama_modul'];
-$p_id        = $p['id_modul'];
-$p_fa_icon   = $p['fa_icon'];
-
-$kode = $_GET['kode'];
-
-
-if($_GET['fdate']) {
-    $fdate  = $_GET['fdate'];
-    $ifdate = $_GET['fdate'];
-} else {
-    $hour = time() - (1 * 1 * 60 * 60);
-    $fdate  = date("Y-m-d", $hour);
-    $ifdate = date("Y-m-d", $hour);
-}
-
-if($_GET['ldate']) {
-    $ldate  = $_GET['ldate'];
-    $ildate = $_GET['ldate'];
-} else {
-    $hour = time() - (1 * 1 * 60 * 60) + (168 * 1 * 60 * 60);
-    $ldate  = date("Y-m-d",$hour);
-    $ildate = date("Y-m-d",$hour);
-}
-
-
-
-
-?>
-
-<?php
-    $SQL = "SELECT* FROM versi WHERE status = 'A' ";
-    $tampil=mysql_query($SQL);
-    $p = mysql_fetch_array($tampil);
-
-    $app = $p['aplikasi'];
-
-    $versi = $p['versi'];;
-?>
+                    WHERE id_groups ='$groups'");
+
+    $g = mysql_fetch_array($gsql);
+
+    if ($g['main_page']) {
+        $lmodule = $g['main_page'].'&id_module='.$g['id_modul'];
+    } else {
+        $lmodule = 'main.php?module=home&id_module=11';
+    }
+
+    $SQL = "SELECT * FROM informasi_perusahaan WHERE id_informasi_perusahaan = '1'";
+
+    $tampil = mysql_query($SQL);
+
+    $r = mysql_fetch_array($tampil);
+
+    $company = $r[company];
+
+    $logo_hotel = $r[pict];
+    $module = trim($_GET[module]);
+
+    $uSQL = "SELECT pict FROM user where id_user = '$userid' ";
+
+    $utampil = mysql_query($uSQL);
+
+    $u = mysql_fetch_array($utampil);
+
+    $pict = $u['pict'];
+
+    $id_module = $_GET['id_module'];
+
+    $sql = mysql_query("select * from modul where id_modul = '$_GET[id_module]'");
+    $r = mysql_fetch_array($sql);
+
+    $imodule = $_GET['module'];
+    $nmmodule = ucwords($r['nama_modul']);
+    $id = $r['id_modul'];
+
+    $fa_icon = $r['ficon'];
+
+    $psql = mysql_query("select * from modul where id_modul = '$r[parentid]'");
+    $p = mysql_fetch_array($psql);
+
+    $p_imodule = $p['nama_modul'];
+    $p_id = $p['id_modul'];
+    $p_fa_icon = $p['fa_icon'];
+
+    $kode = $_GET['kode'];
+
+    if ($_GET['fdate']) {
+        $fdate = $_GET['fdate'];
+        $ifdate = $_GET['fdate'];
+    } else {
+        $hour = time() - (1 * 1 * 60 * 60);
+        $fdate = date('Y-m-d', $hour);
+        $ifdate = date('Y-m-d', $hour);
+    }
+
+    if ($_GET['ldate']) {
+        $ldate = $_GET['ldate'];
+        $ildate = $_GET['ldate'];
+    } else {
+        $hour = time() - (1 * 1 * 60 * 60) + (168 * 1 * 60 * 60);
+        $ldate = date('Y-m-d', $hour);
+        $ildate = date('Y-m-d', $hour);
+    } ?>
+
+<?php
+    $SQL = "SELECT* FROM versi WHERE status = 'A' ";
+    $tampil = mysql_query($SQL);
+    $p = mysql_fetch_array($tampil);
+
+    $app = $p['aplikasi'];
+
+    $versi = $p['versi']; ?>
 
 <!DOCTYPE html>
 <html lang="en">
@@ -131,7 +111,7 @@ if($_GET['ldate']) {
     <meta http-equiv="X-UA-Compatible" content="IE=edge">
     <meta name="viewport" content="width=device-width, initial-scale=1">
 
-    <title><?=$app;?></title>
+    <title><?=$app; ?></title>
 
     
     <!-- Bootstrap core CSS -->
@@ -209,13 +189,13 @@ if($_GET['ldate']) {
 
 
 
-<?php
-$mod = '?module='.$_GET['module'];          
-$tampil=mysql_query("SELECT orientation FROM modul WHERE link='".$mod."'");                     
-$r=mysql_fetch_array($tampil);
-
-if ($r[orientation] == 'P') {
-?>
+<?php
+$mod = '?module='.$_GET['module'];
+    $tampil = mysql_query("SELECT orientation FROM modul WHERE link='".$mod."'");
+    $r = mysql_fetch_array($tampil);
+
+    if ($r[orientation] == 'P') {
+        ?>
         
 <SCRIPT TYPE="text/javascript">
 <!--
@@ -229,7 +209,9 @@ return true;
 //-->
 </SCRIPT>
 
-<?php } elseif ($r[orientation] == 'A') { ?>
+<?php
+    } elseif ($r[orientation] == 'A') {
+        ?>
 
 <SCRIPT TYPE="text/javascript">
 <!--
@@ -243,7 +225,9 @@ return true;
 //-->
 </SCRIPT>
 
-<?php } else { ?>
+<?php
+    } else {
+        ?>
 
 <SCRIPT TYPE="text/javascript">
 <!--
@@ -258,7 +242,8 @@ return true;
 </SCRIPT>
 
 
-<?php } ?>
+<?php
+    } ?>
   
 
 </head>
@@ -266,16 +251,15 @@ return true;
 
 <body class="nav-md">
 
-<?php
-
-$SQL = "SELECT* FROM versi WHERE status = 'A' ";
-$tampil=mysql_query($SQL);
-$p = mysql_fetch_array($tampil);
-
-$app = $p['aplikasi'];
-
-$versi = $p['versi'];
-?>
+<?php
+
+$SQL = "SELECT* FROM versi WHERE status = 'A' ";
+    $tampil = mysql_query($SQL);
+    $p = mysql_fetch_array($tampil);
+
+    $app = $p['aplikasi'];
+
+    $versi = $p['versi']; ?>
 
 <div id="dhtmltooltip"></div>
 <script language="javascript" src="js/dhtml.tooltips.js"></script>
@@ -291,7 +275,7 @@ $versi = $p['versi'];
 
                     <div class="navbar nav_title" style="border: 0;text-align:center;">
                        <!--  <a href="#" class="site_title">
-                           <span style='font-size:14px' class="btn btn-success"><?php echo $app;?></span>
+                           <span style='font-size:14px' class="btn btn-success"><?php echo $app; ?></span>
                         </a> -->
 
                     </div>
@@ -300,11 +284,11 @@ $versi = $p['versi'];
                    
                     <div class="profile">
                         <div class="profile_pic">
-                            <img src="images/profile/<?php echo $pict;?>" alt="..." class="img-circle profile_img">
+                            <img src="images/profile/<?php echo $pict; ?>" alt="..." class="img-circle profile_img">
                         </div>
                         <div class="profile_info">                      
                             <span>Hallo,</span>                       
-                            <h2><?php echo $username;?></h2>
+                            <h2><?php echo $username; ?></h2>
                         </div>
                     </div>
                     <!-- /menu prile quick info -->
@@ -320,7 +304,7 @@ $versi = $p['versi'];
                           <h3>&nbsp </h3> 
                             <ul class="nav side-menu">
 
-                           <?php include "menu.php"; ?> 
+                           <?php include 'menu.php'; ?> 
 
                              </ul>           
                         </div>
@@ -361,7 +345,7 @@ $versi = $p['versi'];
                        <!--  <ul class="nav navbar-nav navbar-right">
                             <li class="">
                                 <a href="javascript:;" class="user-profile dropdown-toggle" data-toggle="dropdown" aria-expanded="false">
-                                    <img src="images/profile/<?php echo $pict;?>" alt=""><?php echo $userid;?>
+                                    <img src="images/profile/<?php echo $pict; ?>" alt=""><?php echo $userid; ?>
                                     <span class=" fa fa-angle-down"></span>
                                 </a>
                                 <ul class="dropdown-menu dropdown-usermenu animated fadeInDown pull-right">
@@ -380,7 +364,7 @@ $versi = $p['versi'];
             <!-- page content -->
             <div class="right_col" role="main">
 
-                 <?php include "content.php"; ?>
+                 <?php include 'content.php'; ?>
                                 
                 <!-- footer content -->
           
@@ -390,15 +374,14 @@ $versi = $p['versi'];
                     
                     <div class="col-md-9 col-sm-12 col-xs-12 form-group"></div>
 
-                    <?php
-                    $SQL = "SELECT* FROM versi WHERE status = 'A' ";
-                    $tampil=mysql_query($SQL);
-                    $p = mysql_fetch_array($tampil);
-
-                    $app = $p['aplikasi'];
-
-                    $versi = $p['versi'];;
-                    ?>
+                    <?php
+                    $SQL = "SELECT* FROM versi WHERE status = 'A' ";
+    $tampil = mysql_query($SQL);
+    $p = mysql_fetch_array($tampil);
+
+    $app = $p['aplikasi'];
+
+    $versi = $p['versi']; ?>
                 
                         <div class="col-md-3 col-sm-12 col-xs-12 form-group" >
                         </div>
@@ -551,6 +534,6 @@ $versi = $p['versi'];
 </body>
 
 </html>
-<?php
-}
+<?php
+}
 ?>
\ No newline at end of file
diff --git a/menu.php b/menu.php
index e1d04e1cfc110dc90d0615ffeb5529bc9b31a0ef..7f4971a2fb16ed372b18945a2c3064b3cbc7aee6 100755
--- a/menu.php
+++ b/menu.php
@@ -1,53 +1,40 @@
-<?php
-session_start();
-include "config/koneksi.php";
-
-
-  if ($_SESSION['role']=='SA'){
-
-                                    $sql=mysql_query("select * from modul where aktif='Y' and status_menu = 'M' order by urutan");
-
-                                    $gjml = '1';
-                             } else {
-
-                                   $sql=mysql_query("select distinct c.* from groupmodul b
+<?php
+session_start();
+include 'config/koneksi.php';
+
+  if ($_SESSION['role'] == 'SA') {
+      $sql = mysql_query("select * from modul where aktif='Y' and status_menu = 'M' order by urutan");
+
+      $gjml = '1';
+  } else {
+      $sql = mysql_query("select distinct c.* from groupmodul b
                                                      inner join modul c
                                                      on b.id_modul = c.id_modul 
                                                      where b.id_groups = '$groups'  and c.aktif='Y' and status_menu='M'
-                                                     order by c.urutan");
-
-                                   $gsql=mysql_query("select * 
+                                                     order by c.urutan");
+
+      $gsql = mysql_query("select * 
                                                       from modul a inner join groupmodul b
                                                       on a.id_modul = b.id_modul
                                                        where link = 'general_setting'
                                                        and b.id_groups = '$groups' 
-                                                       ");
-                                   $gjml = mysql_num_rows($gsql);
-
-
-                             }  
-
-
-
-                             while ($r=mysql_fetch_array($sql)){  
-    
-                                 if ($r[status_menu] == 'M' and !empty($r[link])) {  
-                                     echo "<li><a href='$r[link]&id_module=$r[id_modul]'><i class='$r[icon]'></i> $r[nama_modul]</a>";      
-                                   
-                                  } else if ($r[status_menu] == 'M' and empty($r[link])) {      
-                                  echo "<li><a href='#'><i class='$r[icon]'></i> $r[nama_modul] <span class='fa fa-chevron-down'></span></a>";                                  
-                                  }
-
-                                  echo'<ul class="nav child_menu" style="display: none">'; 
-
-                                   if ($_SESSION['role']=='SA'){
-
-                                    $detil=mysql_query("select * from modul where aktif='Y' and status_menu = 'C' and parentid = '$r[id_modul]' order by urutan");
-
-
-                                 } else {
-
-                                     $detil=mysql_query("select distinct c.* 
+                                                       ");
+      $gjml = mysql_num_rows($gsql);
+  }
+
+                             while ($r = mysql_fetch_array($sql)) {
+                                 if ($r[status_menu] == 'M' and !empty($r[link])) {
+                                     echo "<li><a href='$r[link]&id_module=$r[id_modul]'><i class='$r[icon]'></i> $r[nama_modul]</a>";
+                                 } elseif ($r[status_menu] == 'M' and empty($r[link])) {
+                                     echo "<li><a href='#'><i class='$r[icon]'></i> $r[nama_modul] <span class='fa fa-chevron-down'></span></a>";
+                                 }
+
+                                 echo'<ul class="nav child_menu" style="display: none">';
+
+                                 if ($_SESSION['role'] == 'SA') {
+                                     $detil = mysql_query("select * from modul where aktif='Y' and status_menu = 'C' and parentid = '$r[id_modul]' order by urutan");
+                                 } else {
+                                     $detil = mysql_query("select distinct c.* 
                                                          from groupmodul b
                                                          inner join modul c
                                                          on b.id_modul = c.id_modul    
@@ -55,25 +42,18 @@ include "config/koneksi.php";
                                                          and c.aktif='Y'
                                                          and c.status_menu='C'
                                                          and c.parentid = '$r[id_modul]'
-                                                         order by c.urutan");
-
-                                 }
-                                    while ($d=mysql_fetch_array($detil)){  
-
-                                    if ($d[is_form] == 'Y') {
-                                        echo"<li><a href='modul/mod_$d[link]/form_$d[link].php?width=$d[f_width]&height=$d[f_height]&module=$d[link]&imodule=$imodule&id_module=$id&imenu=$imenu&isub=$isub&TB_iframe=true' title='$d[nama_modul]' class='thickbox' ><i class='$d[fa_icon]'></i>&nbsp&nbsp$d[nama_modul]</a></li>";                            
-                                    } else {
-                                        echo"<li><a href='$d[link]&id_module=$d[id_modul]'><i class='$d[fa_icon]'></i>&nbsp&nbsp$d[nama_modul]</a></li>";
-                                        
-                                    }
-                                    
-                                    }
-                                    
-                                echo"</ul>";    
-                              }   
-
-
- 
-
+                                                         order by c.urutan");
+                                 }
+                                 while ($d = mysql_fetch_array($detil)) {
+                                     if ($d[is_form] == 'Y') {
+                                         echo"<li><a href='modul/mod_$d[link]/form_$d[link].php?width=$d[f_width]&height=$d[f_height]&module=$d[link]&imodule=$imodule&id_module=$id&imenu=$imenu&isub=$isub&TB_iframe=true' title='$d[nama_modul]' class='thickbox' ><i class='$d[fa_icon]'></i>&nbsp&nbsp$d[nama_modul]</a></li>";
+                                     } else {
+                                         echo"<li><a href='$d[link]&id_module=$d[id_modul]'><i class='$d[fa_icon]'></i>&nbsp&nbsp$d[nama_modul]</a></li>";
+                                     }
+                                 }
+
+                                 echo'</ul>';
+                             }
+
 ?>
 
diff --git a/modal.php b/modal.php
index 504a539bfc34fc2dfa436a2a7599522ed1c70c13..b5080d2207c26c50b4d063667b39f48fb5763fe2 100755
--- a/modal.php
+++ b/modal.php
@@ -1,5 +1,5 @@
-<?
-include "config/koneksi.php";
+<?php
+include 'config/koneksi.php';
 ?>
 <!DOCTYPE html>
 <html lang="en">
@@ -54,34 +54,34 @@ include "config/koneksi.php";
          <?// start grid ?>
 
 
-         <?
-
-
-        // $module = $_GET['module'];
-        // $id_module = $_GET['id_module'];
-        // $title = $_GET['title'];
-
-        $prd    = '2016-01';//$_GET['prd']; 
-        $kode    = 'PJ';//$_GET['kode']; 
-
-        $id_outlet  = '1';//$_GET['id_outlet'];
-        $outlet  = '';//$_GET['outlet'];
-        $tanggal = 'A44-1601-0002';//$_GET['tanggal'];
-        $notrans = '2016-09-04';//$_GET['notrans'];
-        $customer = '3';//$_GET['customer'];
-
-        if ($_GET['ioutlet']) {
-          $outlet = $_GET['ioutlet'];   
-        } else {
-          $outlet = '1';   
-        }
-
-        if ($_GET['itipe_barang']) {
-          $tipe_barang = $_GET['itipe_barang'];   
-        } else {
-          $tipe_barang = '1';   
-        }
-
+         <?php
+
+
+        // $module = $_GET['module'];
+        // $id_module = $_GET['id_module'];
+        // $title = $_GET['title'];
+
+        $prd = '2016-01'; //$_GET['prd'];
+        $kode = 'PJ'; //$_GET['kode'];
+
+        $id_outlet = '1'; //$_GET['id_outlet'];
+        $outlet = ''; //$_GET['outlet'];
+        $tanggal = 'A44-1601-0002'; //$_GET['tanggal'];
+        $notrans = '2016-09-04'; //$_GET['notrans'];
+        $customer = '3'; //$_GET['customer'];
+
+        if ($_GET['ioutlet']) {
+            $outlet = $_GET['ioutlet'];
+        } else {
+            $outlet = '1';
+        }
+
+        if ($_GET['itipe_barang']) {
+            $tipe_barang = $_GET['itipe_barang'];
+        } else {
+            $tipe_barang = '1';
+        }
+
         ?>
 
 
@@ -100,38 +100,42 @@ include "config/koneksi.php";
                                          <input type="hidden" name="module" value="<?php echo $module?>" /> 
                                          <input type="hidden" name="prd" value="<?php echo $prd?>" /> 
 
-                                          <input type="hidden" name="kode" id="kode" value="<?php echo $kode;?>">
-                                          <input type="hidden" name="id_outlet" id="id_outlet" value="<?php echo $id_outlet;?>">
-                                          <input type="hidden" name="tanggal" id="tanggal" value="<?php echo $tanggal;?>">
-                                          <input type="hidden" name="customer" id="customer" value="<?php echo $customer;?>">
-                                          <input type="hidden" name="notrans" id="notrans" value="<?php echo $notrans;?>">
+                                          <input type="hidden" name="kode" id="kode" value="<?php echo $kode; ?>">
+                                          <input type="hidden" name="id_outlet" id="id_outlet" value="<?php echo $id_outlet; ?>">
+                                          <input type="hidden" name="tanggal" id="tanggal" value="<?php echo $tanggal; ?>">
+                                          <input type="hidden" name="customer" id="customer" value="<?php echo $customer; ?>">
+                                          <input type="hidden" name="notrans" id="notrans" value="<?php echo $notrans; ?>">
                                                                   
                                          <p class="pull-right">
                                          <select name="itipe_barang" class="form-control" onChange="document.myform.submit();">
-                                            <?
-                                              $query = mysql_query('SELECT * FROM tipe_barang ORDER BY id_tipe_barang');
-                                               if($query && mysql_num_rows($query) > 0){
-                                                  while($row = mysql_fetch_object($query)){
-                                                  echo '<option value="'.$row->id_tipe_barang.'"';
-                                                  if($row->id_tipe_barang == $tipe_barang) echo ' selected';
-                                                  echo '>'.$row->tipe_barang.'</option>';
-                                                  }
-                                               }        
+                                            <?php
+                                              $query = mysql_query('SELECT * FROM tipe_barang ORDER BY id_tipe_barang');
+                                               if ($query && mysql_num_rows($query) > 0) {
+                                                   while ($row = mysql_fetch_object($query)) {
+                                                       echo '<option value="'.$row->id_tipe_barang.'"';
+                                                       if ($row->id_tipe_barang == $tipe_barang) {
+                                                           echo ' selected';
+                                                       }
+                                                       echo '>'.$row->tipe_barang.'</option>';
+                                                   }
+                                               }
                                             ?>  
                                             </select>        
                                         </p>
 
                                          <p class="pull-right">
                                          <select name="ioutlet" class="form-control" onChange="document.myform.submit();">
-                                            <?
-                                              $query = mysql_query('SELECT * FROM outlet ORDER BY id_outlet');
-                                               if($query && mysql_num_rows($query) > 0){
-                                                  while($row = mysql_fetch_object($query)){
-                                                  echo '<option value="'.$row->id_outlet.'"';
-                                                  if($row->id_outlet == $outlet) echo ' selected';
-                                                  echo '>'.$row->outlet.'</option>';
-                                                  }
-                                               }        
+                                            <?php
+                                              $query = mysql_query('SELECT * FROM outlet ORDER BY id_outlet');
+                                               if ($query && mysql_num_rows($query) > 0) {
+                                                   while ($row = mysql_fetch_object($query)) {
+                                                       echo '<option value="'.$row->id_outlet.'"';
+                                                       if ($row->id_outlet == $outlet) {
+                                                           echo ' selected';
+                                                       }
+                                                       echo '>'.$row->outlet.'</option>';
+                                                   }
+                                               }
                                             ?>  
                                             </select>        
                                         </p>
@@ -169,9 +173,9 @@ include "config/koneksi.php";
                         </thead>
                         <tbody>
                             
-                         <?
-                      
-                          $SQL= "SELECT b.jenis_barang
+                         <?php
+
+                          $SQL = "SELECT b.jenis_barang
                                     ,c.unit_barang
                                     ,a.kode as kode_barang
                                      ,a.id_barang
@@ -202,63 +206,53 @@ include "config/koneksi.php";
                                          ,a.kode
                                         ,a.barang   
                                         ,d.harga_jual
-                                      ORDER BY a.id_jenis_barang,a.kode";   
-
-
-                             $tampil=mysql_query($SQL);
-
-                                                          
-                             $no = 1;
-                             
-                             while($r=mysql_fetch_array($tampil)){
-
-                                $id_barang = $r['id_barang'];
-                                $kode_barang = $r['kode_barang'];
-
-                                $dsql   = mysql_query("SELECT sum(qty) as reserve
+                                      ORDER BY a.id_jenis_barang,a.kode";
+
+                             $tampil = mysql_query($SQL);
+
+                             $no = 1;
+
+                             while ($r = mysql_fetch_array($tampil)) {
+                                 $id_barang = $r['id_barang'];
+                                 $kode_barang = $r['kode_barang'];
+
+                                 $dsql = mysql_query("SELECT sum(qty) as reserve
                                                       FROM stok_reserved
                                                       WHERE id_barang_promosi = '$id_barang'
                                                       AND id_outlet = '$outlet'
                                                       AND tipe = 'B'
                                                        and prd = '$prd'
-                                                      "); 
-
-                                 $d     = mysql_fetch_array($dsql); 
-
-                                if ($d['reserve']) {
-                                  $reserve = $d['reserve'];
-                                 } else {
-                                  $reserve = 0;
-                                 }
-
-                                  $sisa_stok   = $r['stok']-$reserve;
-
-                                  if ($sisa_stok == '0') {
-
-                                    echo "";
-                                  } else {
-
-
-
-                                    echo"<tr>";
-                                    echo" <td  style='text-align:center;'>";
-                                    echo"<a href='../../modul/mod_$module/aksi_$module.php?module=$module&act=add&barcode=$kode_barang&prd=$prd&notrans=$notrans&kode=$kode&tanggal=$tanggal&customer=$customer&outlet=$outlet&id_outlet=$id_outlet&id_module=$id_module&look=1'  title=''><span class='icon'><i class='fa fa-check'></i></span></a>";
-                                    
-                                    echo"</td>";   
-                                     echo"<td>".$r['jenis_barang']."</td>";
-                                     echo"<td>".$r['kode_barang']."</td>";
-                                     echo"<td>".$r['barang']."</td>";
-                                     echo"<td>".$r['unit_barang']."</td>";
-                                     echo"<td style='text-align:right;'>".number_format($r['harga_jual'], 0, ".", ",")."</td>";
-                                                                                
-                                    echo"</tr>";
-
-                                  }
-
-                                 
-                                $no++;  
-                                
-                                }
+                                                      ");
+
+                                 $d = mysql_fetch_array($dsql);
+
+                                 if ($d['reserve']) {
+                                     $reserve = $d['reserve'];
+                                 } else {
+                                     $reserve = 0;
+                                 }
+
+                                 $sisa_stok = $r['stok'] - $reserve;
+
+                                 if ($sisa_stok == '0') {
+                                     echo '';
+                                 } else {
+                                     echo'<tr>';
+                                     echo" <td  style='text-align:center;'>";
+                                     echo"<a href='../../modul/mod_$module/aksi_$module.php?module=$module&act=add&barcode=$kode_barang&prd=$prd&notrans=$notrans&kode=$kode&tanggal=$tanggal&customer=$customer&outlet=$outlet&id_outlet=$id_outlet&id_module=$id_module&look=1'  title=''><span class='icon'><i class='fa fa-check'></i></span></a>";
+
+                                     echo'</td>';
+                                     echo'<td>'.$r['jenis_barang'].'</td>';
+                                     echo'<td>'.$r['kode_barang'].'</td>';
+                                     echo'<td>'.$r['barang'].'</td>';
+                                     echo'<td>'.$r['unit_barang'].'</td>';
+                                     echo"<td style='text-align:right;'>".number_format($r['harga_jual'], 0, '.', ',').'</td>';
+
+                                     echo'</tr>';
+                                 }
+
+                                 $no++;
+                             }
                                 ?>
                          </tbody>
                     </table>
diff --git a/modul.php b/modul.php
index 667b9b61653dfcf44cfa4a6a652ea3d127bce429..e95a7a43a4b2f34d27345a79ce627fdf002d359f 100755
--- a/modul.php
+++ b/modul.php
@@ -1,70 +1,54 @@
-<?php
-session_start();
-include "config/koneksi.php";
-
-
-
-if ($_SESSION[role]=='dev'){
-
-  $sql=mysql_query("select * from modul where aktif='Y' order by urutan");
-
-
-} elseif ($_SESSION[role]=='admin'){
-
-  $sql=mysql_query("select * from modul where status !='dev' and aktif='Y' order by urutan");
-
-
-} elseif ($_SESSION[role]=='user'){
-
-	  $sql=mysql_query("select * from modul where status='user' and aktif='Y' order by urutan");
-
-} else {
-
-  $sql=mysql_query("SELECT * FROM modul a inner join usermenu b on a.id_modul = b.id_modul where a.status='user' and a.aktif='Y'  and b.m_aktif='Y' and b.username='$_SESSION[id_user]' ORDER BY a.urutan"); 
-
-} 
-
- 
-while ($r=mysql_fetch_array($sql)){  
-
-//$nt=mysql_query("select count from notice where (status = '1' and id_user2 = '$_SESSION[id_user]') or( status = '3' and id_user2 = '$_SESSION[id_user]')");
-//$cjml = mysql_num_rows($nt);  
-
-//if ($cjml == '0') {
-//$njml ='';
-//} else {
-//$njml = '('.$cjml.')';	
-//}
-	
-  if ($r[status_menu] == 'M' and !empty($r[link])) {  
-   if ($r[nama_modul] == 'Notice') {
-   echo "<a class='menuitem' href='$r[link]'>$r[nama_modul] $njml</a>";
-   } else {
-    echo "<a class='menuitem' href='$r[link]'>$r[nama_modul]</a>";	    
-   }
-  
-  } else if ($r[status_menu] == 'M' and empty($r[link])) {  	
-  echo "<a class='menuitem submenuheader' href='$r[link]'>$r[nama_modul]</a>  ";
-  
-  if ($_SESSION[role]=='dev' or $_SESSION[role]=='admin') {
-   $detil=mysql_query("select * from modul where id_submenu='$r[id_modul]' and status_menu='C' and aktif='Y' order by urutan"); 
-  } else {
-	$detil=mysql_query("select * from modul where id_submenu='$r[id_modul]' and status_menu='C' and aktif='Y' and (id_role = '5' or id_role	 = '$_SESSION[role]') and (id_group = '1' or id_group = '$_SESSION[group]')order by urutan");   
-  }
-  echo"
+<?php
+session_start();
+include 'config/koneksi.php';
+
+if ($_SESSION[role] == 'dev') {
+    $sql = mysql_query("select * from modul where aktif='Y' order by urutan");
+} elseif ($_SESSION[role] == 'admin') {
+    $sql = mysql_query("select * from modul where status !='dev' and aktif='Y' order by urutan");
+} elseif ($_SESSION[role] == 'user') {
+    $sql = mysql_query("select * from modul where status='user' and aktif='Y' order by urutan");
+} else {
+    $sql = mysql_query("SELECT * FROM modul a inner join usermenu b on a.id_modul = b.id_modul where a.status='user' and a.aktif='Y'  and b.m_aktif='Y' and b.username='$_SESSION[id_user]' ORDER BY a.urutan");
+}
+
+while ($r = mysql_fetch_array($sql)) {
+
+//$nt=mysql_query("select count from notice where (status = '1' and id_user2 = '$_SESSION[id_user]') or( status = '3' and id_user2 = '$_SESSION[id_user]')");
+    //$cjml = mysql_num_rows($nt);
+
+    //if ($cjml == '0') {
+    //$njml ='';
+    //} else {
+    //$njml = '('.$cjml.')';
+    //}
+
+    if ($r[status_menu] == 'M' and !empty($r[link])) {
+        if ($r[nama_modul] == 'Notice') {
+            echo "<a class='menuitem' href='$r[link]'>$r[nama_modul] $njml</a>";
+        } else {
+            echo "<a class='menuitem' href='$r[link]'>$r[nama_modul]</a>";
+        }
+    } elseif ($r[status_menu] == 'M' and empty($r[link])) {
+        echo "<a class='menuitem submenuheader' href='$r[link]'>$r[nama_modul]</a>  ";
+
+        if ($_SESSION[role] == 'dev' or $_SESSION[role] == 'admin') {
+            $detil = mysql_query("select * from modul where id_submenu='$r[id_modul]' and status_menu='C' and aktif='Y' order by urutan");
+        } else {
+            $detil = mysql_query("select * from modul where id_submenu='$r[id_modul]' and status_menu='C' and aktif='Y' and (id_role = '5' or id_role	 = '$_SESSION[role]') and (id_group = '1' or id_group = '$_SESSION[group]')order by urutan");
+        }
+        echo"
   <div class='submenu'>
-	";
-	while ($d=mysql_fetch_array($detil)){  
-	echo"<ul><li><a href='$d[link]'>$d[nama_modul]</a></li></ul>";
-	}
-	echo"
+	";
+        while ($d = mysql_fetch_array($detil)) {
+            echo"<ul><li><a href='$d[link]'>$d[nama_modul]</a></li></ul>";
+        }
+        echo'
  </div>	
-  ";
-  } else {
-  echo"";
-  }
-  
- 
-}
+  ';
+    } else {
+        echo'';
+    }
+}
 ?>
 
diff --git a/modul/mod_general_setting/aksi_general_setting.php b/modul/mod_general_setting/aksi_general_setting.php
index d91367e46bf5391e278a3155dcd3d0b9c5773851..0bd41ab5646f7ae5ed46dd9f95821ed3f1a85f09 100755
--- a/modul/mod_general_setting/aksi_general_setting.php
+++ b/modul/mod_general_setting/aksi_general_setting.php
@@ -1,35 +1,33 @@
-<?php
-session_start();
-if (empty($_SESSION['username']) AND empty($_SESSION['password'])){
-  echo "<script>window.alert('Please login first.'); window.location=('../../index.php.php')</script>";
-} else{
-include "./../../config/koneksi.php";
-include "./../../config/fungsi_thumb.php";
-
-$imodule=$_POST[imodule];
-$module=$_GET[module];
-$act=$_GET[act];
-
-$date     = date("d/m/Y");  
-$idate    = date("Y-m-d");
-$hour = time() - (1 * 1 * 60 * 60);
-$datetime   = date("Y-m-d G:i:s", $hour);
-$userid   = $_SESSION['userid'];
-
-
-if ($module=='general_setting' AND $act=='input'){
-
-  $id_module = $_POST['id_module'];
-
-  $lokasi_file    = $_FILES['fupload']['tmp_name'];
-  $tipe_file      = $_FILES['fupload']['type'];
-  $nama_file      = $_FILES['fupload']['name'];
-  $acak           = rand(1,99);
-  $nama_file_unik = $acak.$nama_file; 
-
-    
-      if (empty($lokasi_file)){
-          mysql_query("UPDATE general_setting SET company    = '$_POST[company]'
+<?php
+
+session_start();
+if (empty($_SESSION['username']) and empty($_SESSION['password'])) {
+    echo "<script>window.alert('Please login first.'); window.location=('../../index.php.php')</script>";
+} else {
+    include './../../config/koneksi.php';
+    include './../../config/fungsi_thumb.php';
+
+    $imodule = $_POST[imodule];
+    $module = $_GET[module];
+    $act = $_GET[act];
+
+    $date = date('d/m/Y');
+    $idate = date('Y-m-d');
+    $hour = time() - (1 * 1 * 60 * 60);
+    $datetime = date('Y-m-d G:i:s', $hour);
+    $userid = $_SESSION['userid'];
+
+    if ($module == 'general_setting' and $act == 'input') {
+        $id_module = $_POST['id_module'];
+
+        $lokasi_file = $_FILES['fupload']['tmp_name'];
+        $tipe_file = $_FILES['fupload']['type'];
+        $nama_file = $_FILES['fupload']['name'];
+        $acak = rand(1, 99);
+        $nama_file_unik = $acak.$nama_file;
+
+        if (empty($lokasi_file)) {
+            mysql_query("UPDATE general_setting SET company    = '$_POST[company]'
                           ,address   = '$_POST[address]'
                           ,city      = '$_POST[city]'
                           ,zip       = '$_POST[zip]'      
@@ -38,11 +36,10 @@ if ($module=='general_setting' AND $act=='input'){
                           ,email   = '$_POST[email]' 
                          ,upddt     = '$datetime' 
                          ,updby     = '$userid'    
-                       WHERE id_general_setting     = '$_POST[ID]'");
-       } else {
-
-           LogoImage($nama_file_unik);
-           mysql_query("UPDATE general_setting SET company    = '$_POST[company]'
+                       WHERE id_general_setting     = '$_POST[ID]'");
+        } else {
+            LogoImage($nama_file_unik);
+            mysql_query("UPDATE general_setting SET company    = '$_POST[company]'
                           ,address   = '$_POST[address]'
                           ,city      = '$_POST[city]'
                           ,zip       = '$_POST[zip]'      
@@ -53,15 +50,11 @@ if ($module=='general_setting' AND $act=='input'){
                          ,pict        = '$nama_file_unik'
                          ,upddt     = '$datetime' 
                          ,updby     = '$userid'   
-                       WHERE id_general_setting      = '$_POST[ID]'");
-
-       }   
-
-  $id = $_POST['ID'];       
-                       
-   header('location:form_'.$module.'.php?id='.$id.'&module='.$module.'&id_module='.$id_module);          
-
-}
-
-}
-?>
+                       WHERE id_general_setting      = '$_POST[ID]'");
+        }
+
+        $id = $_POST['ID'];
+
+        header('location:form_'.$module.'.php?id='.$id.'&module='.$module.'&id_module='.$id_module);
+    }
+}
diff --git a/modul/mod_general_setting/form_general_setting.php b/modul/mod_general_setting/form_general_setting.php
index 73910f2dec31617a12f1aa5de781d885257e91cb..68e2ddf0dfed2ca5fce29a200cd22d9638a3aaa5 100755
--- a/modul/mod_general_setting/form_general_setting.php
+++ b/modul/mod_general_setting/form_general_setting.php
@@ -1,11 +1,10 @@
-<?
-session_start();
-if (empty($_SESSION['username']) AND empty($_SESSION['password'])){
-  echo "<script>window.alert('Please login first.'); window.location=('../../index.php.php')</script>";
-} else{
-include "./../../config/koneksi.php";
-include "./../../config/fungsi_thumb.php";
-?>
+<?php
+session_start();
+if (empty($_SESSION['username']) and empty($_SESSION['password'])) {
+    echo "<script>window.alert('Please login first.'); window.location=('../../index.php.php')</script>";
+} else {
+    include './../../config/koneksi.php';
+    include './../../config/fungsi_thumb.php'; ?>
 <!doctype html>
 <html>
 <head>
@@ -66,44 +65,40 @@ include "./../../config/fungsi_thumb.php";
 </head>
 
 <body style='background-color:#fff;'>
-<?
-
-$modul = $_GET['module'];
-$imodule = $_GET['imodule'];
-$title = $_GET['title'];
-
-$role   = $_SESSION['role'];
-
-$id_module = $_GET['id_module']; 
-
-  $id = 1; // isset($_GET['id_general_setting']) ? intval($_GET['id_general_setting']) : false;
-    
-    if($id){
-       $query = mysql_query('SELECT * FROM general_setting WHERE id_general_setting = "'.$id.'"');
-       if($query && mysql_num_rows($query) == 1){
-          $data = mysql_fetch_object($query);
-       }else 
-          die('Data general_setting tidak ditemukan');
-    }
-  
-if ($_GET['igroup']) {
-  $group  = $_GET['igroup'];
-} else {
-  $group  = $data->id_location;
-  
-}
-
-if ($_GET['imenu']) {
-  $imenu  = $_GET['imenu'];
-} else {
-  $imenu  = $data->id_modul;  
-  
-}
-
-$pict  = $data->pict;
-
-  
-?>
+<?php
+
+$modul = $_GET['module'];
+    $imodule = $_GET['imodule'];
+    $title = $_GET['title'];
+
+    $role = $_SESSION['role'];
+
+    $id_module = $_GET['id_module'];
+
+    $id = 1; // isset($_GET['id_general_setting']) ? intval($_GET['id_general_setting']) : false;
+
+    if ($id) {
+        $query = mysql_query('SELECT * FROM general_setting WHERE id_general_setting = "'.$id.'"');
+        if ($query && mysql_num_rows($query) == 1) {
+            $data = mysql_fetch_object($query);
+        } else {
+            die('Data general_setting tidak ditemukan');
+        }
+    }
+
+    if ($_GET['igroup']) {
+        $group = $_GET['igroup'];
+    } else {
+        $group = $data->id_location;
+    }
+
+    if ($_GET['imenu']) {
+        $imenu = $_GET['imenu'];
+    } else {
+        $imenu = $data->id_modul;
+    }
+
+    $pict = $data->pict; ?>
 
 
 <div class="ix_panel">
@@ -375,13 +370,12 @@ $pict  = $data->pict;
         </script>
         <!-- /editor -->
 
-         <?php 
-         if(empty($pict)) { 
-            $ipict = 'logo.png';
-           } else { 
-            $ipict = $pict;
-           } 
-           ?>
+         <?php 
+         if (empty($pict)) {
+             $ipict = 'logo.png';
+         } else {
+             $ipict = $pict;
+         } ?>
 
         <script>
           var btnCust = '<button type="button" class="btn btn-default" title="Add picture tags" ' + 
@@ -400,7 +394,7 @@ $pict  = $data->pict;
               removeTitle: 'Cancel or reset changes',
               elErrorContainer: '#kv-avatar-errors',
               msgErrorClass: 'alert alert-block alert-danger',
-              defaultPreviewContent: '<img src="../../images/logo/<?php echo $ipict;?>" alt="Your Avatar" style="width:180px;">',
+              defaultPreviewContent: '<img src="../../images/logo/<?php echo $ipict; ?>" alt="Your Avatar" style="width:180px;">',
               layoutTemplates: {main2: '{preview} ' + ' {remove} {browse}'},
               allowedFileExtensions: ["jpg"]
           });
@@ -408,6 +402,6 @@ $pict  = $data->pict;
 
 </body>
 </html>
-<?
-}
+<?php
+}
 ?>
\ No newline at end of file
diff --git a/modul/mod_groupmodul/aksi_groupmodul.php b/modul/mod_groupmodul/aksi_groupmodul.php
index cfa8e8940007c45cd0ccf21931b35af551891221..7a3ee0fa6fdcb8861bd14e1c923fbaf4d0e1d99b 100755
--- a/modul/mod_groupmodul/aksi_groupmodul.php
+++ b/modul/mod_groupmodul/aksi_groupmodul.php
@@ -1,42 +1,39 @@
-<?php
-session_start();
-if (empty($_SESSION['username']) AND empty($_SESSION['password'])){
-  echo "<script>window.alert('Please login first.'); window.location=('../../index.php.php')</script>";
-} else{
-include "./../../config/koneksi.php";
-include "./../../config/fungsi_thumb.php";
-
-$module=$_GET[module];
-$act=$_GET[act];
-
-$date     = date("d/m/Y");  
-$idate    = date("Y-m-d");
-$hour = time() - (1 * 1 * 60 * 60);
-$datetime   = date("Y-m-d G:i:s", $hour);
-$userid   = $_SESSION['userid'];
-$business_type = $_SESSION['business_type']; 
-
-// Hapus modul
-if ($module=='groupmodul' AND $act=='hapus'){
-  $id = $_GET['id'];
-   
-  mysql_query("DELETE FROM ".$module." WHERE id_".$module." = $id");
-
-    $id_module = $_GET['id_module'];
-
-    header('location:../../main.php?module='.$module.'&id_module='.$id_module);     
-   
- }
-
-   // Input groupmodul
-elseif ($module=='groupmodul' AND $act=='input'){
-  
-   
-  $jum = $_POST['jum']; 
-  
-     mysql_query("DELETE FROM groupmodul WHERE id_groups = '$_POST[groups]' AND id_modul = '$_POST[imenu]'"); 
-  
-     mysql_query("INSERT INTO groupmodul(id_groups
+<?php
+session_start();
+if (empty($_SESSION['username']) and empty($_SESSION['password'])) {
+    echo "<script>window.alert('Please login first.'); window.location=('../../index.php.php')</script>";
+} else {
+    include './../../config/koneksi.php';
+    include './../../config/fungsi_thumb.php';
+
+    $module = $_GET[module];
+    $act = $_GET[act];
+
+    $date = date('d/m/Y');
+    $idate = date('Y-m-d');
+    $hour = time() - (1 * 1 * 60 * 60);
+    $datetime = date('Y-m-d G:i:s', $hour);
+    $userid = $_SESSION['userid'];
+    $business_type = $_SESSION['business_type'];
+
+    // Hapus modul
+    if ($module == 'groupmodul' and $act == 'hapus') {
+        $id = $_GET['id'];
+
+        mysql_query('DELETE FROM '.$module.' WHERE id_'.$module." = $id");
+
+        $id_module = $_GET['id_module'];
+
+        header('location:../../main.php?module='.$module.'&id_module='.$id_module);
+    }
+
+    // Input groupmodul
+    elseif ($module == 'groupmodul' and $act == 'input') {
+        $jum = $_POST['jum'];
+
+        mysql_query("DELETE FROM groupmodul WHERE id_groups = '$_POST[groups]' AND id_modul = '$_POST[imenu]'");
+
+        mysql_query("INSERT INTO groupmodul(id_groups
                          ,id_modul
                         ,crtdt
                           ,crtby
@@ -49,19 +46,16 @@ elseif ($module=='groupmodul' AND $act=='input'){
                         ,'$userid'
                         ,'$datetime'
                         ,'$userid'
-                        ,'Y')");
-  
-  
-    for($i = 1; $i <= $jum; $i++) {    
-       
-       $id    = $_POST['id'.$i];  
-       $modul = $_POST['modul'.$i];   
-     
-       mysql_query("DELETE FROM groupmodul WHERE id_groups = '$_POST[groups]' AND id_modul = '$modul'");  
-        
-       if (!empty($id)) {
-       
-         mysql_query("INSERT INTO groupmodul(id_groups
+                        ,'Y')");
+
+        for ($i = 1; $i <= $jum; $i++) {
+            $id = $_POST['id'.$i];
+            $modul = $_POST['modul'.$i];
+
+            mysql_query("DELETE FROM groupmodul WHERE id_groups = '$_POST[groups]' AND id_modul = '$modul'");
+
+            if (!empty($id)) {
+                mysql_query("INSERT INTO groupmodul(id_groups
                          ,id_modul
                         ,crtdt
                           ,crtby
@@ -74,24 +68,18 @@ elseif ($module=='groupmodul' AND $act=='input'){
                         ,'$userid'
                         ,'$datetime'
                         ,'$userid'
-                        ,'Y')");
-      }
-      
-    }
-                    
-   
-   $id_module = $_POST['id_module'];
-
-   ?>
+                        ,'Y')");
+            }
+        }
+
+        $id_module = $_POST['id_module']; ?>
    
   <script language="javascript">
-     window.parent.location.href = "<?php echo"./../../main.php?module=$module&id_module=$id_module";?>";  
+     window.parent.location.href = "<?php echo"./../../main.php?module=$module&id_module=$id_module"; ?>";  
      window.parent.tb_remove();
    </script>
   
-  <?php                
-
-}
-
-}
+  <?php
+    }
+}
 ?>
diff --git a/modul/mod_groupmodul/form_groupmodul.php b/modul/mod_groupmodul/form_groupmodul.php
index 419b5eb0a70c852f4b3c8138e217fa36c1f94e79..f1d77b8ed3029532a74650e105e68b3ebf35b930 100755
--- a/modul/mod_groupmodul/form_groupmodul.php
+++ b/modul/mod_groupmodul/form_groupmodul.php
@@ -1,10 +1,9 @@
-<?
-session_start();
-if (empty($_SESSION['username']) AND empty($_SESSION['password'])){
-  echo "<script>window.alert('Please login first.'); window.location=('../../index.php.php')</script>";
-} else{
-include "./../../config/koneksi.php";
-?>
+<?php
+session_start();
+if (empty($_SESSION['username']) and empty($_SESSION['password'])) {
+    echo "<script>window.alert('Please login first.'); window.location=('../../index.php.php')</script>";
+} else {
+    include './../../config/koneksi.php'; ?>
 <!doctype html>
 <html>
 <head>
@@ -32,40 +31,36 @@ include "./../../config/koneksi.php";
 </head>
 
 <body style='background-color:#fff;'>
-<?
-
-$modul = $_GET['module'];
-$title = $_GET['title'];
-$business_type = $_SESSION['business_type']; 
-
-$id_module = $_GET['id_module']; 
-
-  $id = $_GET['id_groupmodul']; // isset($_GET['id_groupmodul']) ? intval($_GET['id_groupmodul']) : false;
-  
-  if($id){
-     $query = mysql_query('SELECT * FROM groupmodul WHERE id_groupmodul = "'.$id.'"');
-     if($query && mysql_num_rows($query) == 1){
-        $data = mysql_fetch_object($query);
-     }else 
-        die('Data groupmodul tidak ditemukan');
-  }
-  
-if ($_GET['igroup']) {
-  $group  = $_GET['igroup'];
-} else {
-  $group  = $data->id_groups;
-  
-}
-
-if ($_GET['imenu']) {
-  $imenu  = $_GET['imenu'];
-} else {
-  $imenu  = $data->id_modul;  
-  
-}
-
-  
-?>
+<?php
+
+$modul = $_GET['module'];
+    $title = $_GET['title'];
+    $business_type = $_SESSION['business_type'];
+
+    $id_module = $_GET['id_module'];
+
+    $id = $_GET['id_groupmodul']; // isset($_GET['id_groupmodul']) ? intval($_GET['id_groupmodul']) : false;
+
+    if ($id) {
+        $query = mysql_query('SELECT * FROM groupmodul WHERE id_groupmodul = "'.$id.'"');
+        if ($query && mysql_num_rows($query) == 1) {
+            $data = mysql_fetch_object($query);
+        } else {
+            die('Data groupmodul tidak ditemukan');
+        }
+    }
+
+    if ($_GET['igroup']) {
+        $group = $_GET['igroup'];
+    } else {
+        $group = $data->id_groups;
+    }
+
+    if ($_GET['imenu']) {
+        $imenu = $_GET['imenu'];
+    } else {
+        $imenu = $data->id_modul;
+    } ?>
 
 
 <div class="ix_panel">
@@ -77,16 +72,17 @@ if ($_GET['imenu']) {
 	           <label class="control-label col-md-3 col-sm-3 col-xs-12" style='padding-top:10px;'>Groups :</label>
               <div class="col-md-6 col-sm-6 col-xs-12" >
                  <select name="igroup" class="form-control" autofocus >
-				    <?
-				       $query = mysql_query('SELECT * FROM groups ORDER BY groups');
-				       if($query && mysql_num_rows($query) > 0){
-				        while($row = mysql_fetch_object($query)){
-				         echo '<option value="'.$row->id_groups.'"';
-				         if($row->id_groups == @$data->id_groups) echo ' selected';
-				         echo '>'.$row->groups.'</option>';
-				        }
-				       }     
-				    ?>
+				    <?php
+                       $query = mysql_query('SELECT * FROM groups ORDER BY groups');
+    if ($query && mysql_num_rows($query) > 0) {
+        while ($row = mysql_fetch_object($query)) {
+            echo '<option value="'.$row->id_groups.'"';
+            if ($row->id_groups == @$data->id_groups) {
+                echo ' selected';
+            }
+            echo '>'.$row->groups.'</option>';
+        }
+    } ?>
 				  </select>
               </div>
           </div>
@@ -95,18 +91,21 @@ if ($_GET['imenu']) {
             <div class="form-group">
 	           <label class="control-label col-md-3 col-sm-3 col-xs-12" style='padding-top:10px;'>Groups :</label>
               <div class="col-md-6 col-sm-6 col-xs-12" >
-                 <select name="imenu" class="form-control" required  onChange="document.myform.submit();" <?php if($id) { ?> disabled <?php } ?>>
+                 <select name="imenu" class="form-control" required  onChange="document.myform.submit();" <?php if ($id) {
+        ?> disabled <?php
+    } ?>>
 				          <option value=''></option>
-				    <?
-				       $query = mysql_query("SELECT * FROM modul WHERE status_menu = 'M' AND aktif = 'Y' ORDER BY urutan ASC");
-				       if($query && mysql_num_rows($query) > 0){
-				        while($row = mysql_fetch_object($query)){
-				         echo '<option value="'.$row->id_modul.'"';
-				         if($imenu == $row->id_modul) echo ' selected';
-				         echo '>'.$row->nama_modul.'</option>';
-				        }
-				       }     
-				    ?>
+				    <?php
+                       $query = mysql_query("SELECT * FROM modul WHERE status_menu = 'M' AND aktif = 'Y' ORDER BY urutan ASC");
+    if ($query && mysql_num_rows($query) > 0) {
+        while ($row = mysql_fetch_object($query)) {
+            echo '<option value="'.$row->id_modul.'"';
+            if ($imenu == $row->id_modul) {
+                echo ' selected';
+            }
+            echo '>'.$row->nama_modul.'</option>';
+        }
+    } ?>
 				    </select>
               </div>
           </div>
@@ -122,65 +121,57 @@ if ($_GET['imenu']) {
             <div class="form-group">
 	           <label class="control-label col-md-3 col-sm-3 col-xs-12" style='padding-top:10px;'>Sub Modul :</label>
               <div class="col-md-6 col-sm-6 col-xs-12" >
-                 <?
-     
-				   $iquery = mysql_query("SELECT * FROM modul WHERE status_menu = 'C' AND aktif = 'Y' AND parentid= '$imenu' ORDER BY urutan ASC");
-				   $irow = mysql_fetch_object($iquery);
-				    ?>     
+                 <?php
+
+                   $iquery = mysql_query("SELECT * FROM modul WHERE status_menu = 'C' AND aktif = 'Y' AND parentid= '$imenu' ORDER BY urutan ASC");
+    $irow = mysql_fetch_object($iquery); ?>     
 				      
-				        <?php    
-				           //echo"<div id='iframe'>";
-				         if($id){
-				           $query = mysql_query("SELECT DISTINCT a.*
+				        <?php 
+                           //echo"<div id='iframe'>";
+                         if ($id) {
+                             $query = mysql_query("SELECT DISTINCT a.*
 				                       ,CASE WHEN ifnull(b.id_groupmodul,0) = '0' THEN 0 ELSE 1 END as flag
 				                        FROM modul a left join groupmodul b
 				                        ON b.id_groups = '$group'
 				                        AND a.id_modul = b.id_modul 
 				                          WHERE a.status_menu = 'C' AND a.aktif = 'Y' AND a.parentid = '$imenu'
-				                        ORDER BY a.urutan ASC");
-				                                                              
-				           if($query && mysql_num_rows($query) > 0){
-				            $no = 1; 
-				            while($row = mysql_fetch_object($query)){
-				            
-				            $status = $row->status_menu;
-				            
-				                     
-				             if ($row->flag == '1') {
-				               echo"<input checked type='checkbox' value='id".$no."'  name='id".$no."' style='width:12px;'>";
-				             } else {
-				               echo"<input type='checkbox' value='id".$no."'  name='id".$no."' style='width:12px;'>";
-				             }
-				          
-				               echo"<input type='hidden' name='modul".$no."' value='".$row->id_modul."'>".$row->nama_modul."</br>";
-				               
-				             
-				            $no++;   
-				            }   
-				           }  
-				           
-				         } else {
-				           
-				           $query = mysql_query("SELECT * FROM modul WHERE status_menu = 'C' AND aktif = 'Y' AND parentid= '$imenu' ORDER BY urutan ASC");
-				           
-				           if($query && mysql_num_rows($query) > 0){
-				            $no = 1; 
-				            while($row = mysql_fetch_object($query)){
-				            $status = $row->status_menu;
-				            
-				        
-				             echo"<input checked type='checkbox' value='id".$no."'  name='id".$no."' style='width:12px;'>
+				                        ORDER BY a.urutan ASC");
+
+                             if ($query && mysql_num_rows($query) > 0) {
+                                 $no = 1;
+                                 while ($row = mysql_fetch_object($query)) {
+                                     $status = $row->status_menu;
+
+                                     if ($row->flag == '1') {
+                                         echo"<input checked type='checkbox' value='id".$no."'  name='id".$no."' style='width:12px;'>";
+                                     } else {
+                                         echo"<input type='checkbox' value='id".$no."'  name='id".$no."' style='width:12px;'>";
+                                     }
+
+                                     echo"<input type='hidden' name='modul".$no."' value='".$row->id_modul."'>".$row->nama_modul.'</br>';
+
+                                     $no++;
+                                 }
+                             }
+                         } else {
+                             $query = mysql_query("SELECT * FROM modul WHERE status_menu = 'C' AND aktif = 'Y' AND parentid= '$imenu' ORDER BY urutan ASC");
+
+                             if ($query && mysql_num_rows($query) > 0) {
+                                 $no = 1;
+                                 while ($row = mysql_fetch_object($query)) {
+                                     $status = $row->status_menu;
+
+                                     echo"<input checked type='checkbox' value='id".$no."'  name='id".$no."' style='width:12px;'>
 				              <input type='hidden' name='modul".$no."' value='".$row->id_modul."'>
-				               ".$row->nama_modul."</br>";
-				             
-				            $no++;   
-				            }   
-				           }      
-				        
-				         }
-				         //echo"</div>";
-				      
-				    ?>
+				               ".$row->nama_modul.'</br>';
+
+                                     $no++;
+                                 }
+                             }
+                         }
+    //echo"</div>";
+
+                    ?>
           		</div>
            </div>
 
@@ -188,7 +179,7 @@ if ($_GET['imenu']) {
 
              <div class="form-group">
                <div class="col-md-6 col-sm-6 col-xs-12 col-md-offset-3" style='margin-top:20px;'>
-                 <input type='hidden' name='jum' value="<?php echo $no-1?>" />  
+                 <input type='hidden' name='jum' value="<?php echo $no - 1?>" />  
 			     <input type="hidden" name="groups" value="<?php echo $group?>" />
 			     <input type="hidden" name="imenu" value="<?php echo $imenu?>" />
 			     <input type="hidden" name="ID" value="<?php echo @$data->id_groupmodul?>" />
@@ -403,6 +394,6 @@ if ($_GET['imenu']) {
 
 </body>
 </html>
-<?
-}
+<?php
+}
 ?>
\ No newline at end of file
diff --git a/modul/mod_groups/aksi_groups.php b/modul/mod_groups/aksi_groups.php
index b71e9b6ab5cc5bb77ca31857beb48f08561b2598..d5edbc37c3fb23fcaad60a06cfa7de1608937680 100755
--- a/modul/mod_groups/aksi_groups.php
+++ b/modul/mod_groups/aksi_groups.php
@@ -1,58 +1,50 @@
-<?php
-session_start();
-if (empty($_SESSION['username']) AND empty($_SESSION['password'])){
-  echo "<script>window.alert('Please login first.'); window.location=('../../index.php.php')</script>";
-} else{
-include "./../../config/koneksi.php";
-include "./../../config/fungsi_thumb.php";
-
-$module=$_GET[module];
-$act=$_GET[act];
-
-$date     = date("d/m/Y");  
-$idate    = date("Y-m-d");
-$hour = time() - (1 * 1 * 60 * 60);
-$datetime   = date("Y-m-d G:i:s", $hour);
-$userid   = $_SESSION['userid'];
-$business_type = $_SESSION['business_type']; 
-
-// Hapus modul
-if ($module=='groups' AND $act=='hapus'){
-  $id = $_GET['id'];
-  $id_module = $_GET['id_module'];
-   
-  mysql_query("DELETE FROM ".$module." WHERE id_".$module." = $id");
-
-   //header('location:../../main.php?module='.$module.'&id_module='.$id_module);          
-
-  ?>
+<?php
+session_start();
+if (empty($_SESSION['username']) and empty($_SESSION['password'])) {
+    echo "<script>window.alert('Please login first.'); window.location=('../../index.php.php')</script>";
+} else {
+    include './../../config/koneksi.php';
+    include './../../config/fungsi_thumb.php';
+
+    $module = $_GET[module];
+    $act = $_GET[act];
+
+    $date = date('d/m/Y');
+    $idate = date('Y-m-d');
+    $hour = time() - (1 * 1 * 60 * 60);
+    $datetime = date('Y-m-d G:i:s', $hour);
+    $userid = $_SESSION['userid'];
+    $business_type = $_SESSION['business_type'];
+
+    // Hapus modul
+    if ($module == 'groups' and $act == 'hapus') {
+        $id = $_GET['id'];
+        $id_module = $_GET['id_module'];
+
+        mysql_query('DELETE FROM '.$module.' WHERE id_'.$module." = $id");
+
+        //header('location:../../main.php?module='.$module.'&id_module='.$id_module); ?>
    
   <script language="javascript">
-     window.parent.location.href = "<?php echo"./../../main.php?module=$module&id_module=$id_module";?>";  
+     window.parent.location.href = "<?php echo"./../../main.php?module=$module&id_module=$id_module"; ?>";  
      window.parent.tb_remove();
    </script>
   
-  <?php                 
-   
- }
-
-  // Input group
-elseif ($module=='groups' AND $act=='input'){
-
-  $id_module = $_POST['id_module'];
-
-
-   if($_POST['ID']){
-   mysql_query("UPDATE groups SET groups   = '$_POST[groups]'
+  <?php
+    }
+
+    // Input group
+    elseif ($module == 'groups' and $act == 'input') {
+        $id_module = $_POST['id_module'];
+
+        if ($_POST['ID']) {
+            mysql_query("UPDATE groups SET groups   = '$_POST[groups]'
                     ,upddt   = '$datetime' 
                     ,updby   = '$userid' 
                     ,aktif     = '$_POST[aktif]'  
-                 WHERE id_groups    = '$_POST[ID]'");
-                          
-
-      
-   } else {
-   mysql_query("INSERT INTO groups(groups
+                 WHERE id_groups    = '$_POST[ID]'");
+        } else {
+            mysql_query("INSERT INTO groups(groups
                    ,crtdt
                    ,crtby
                    ,upddt
@@ -63,25 +55,17 @@ elseif ($module=='groups' AND $act=='input'){
                   ,'$userid'
                   ,'$datetime'
                   ,'$userid'
-                    ,'$_POST[aktif]')");
-  
-                
-   }
-   
-
-   //header('location:../../main.php?module='.$module.'&id_module='.$id_module);          
-
-  ?>
+                    ,'$_POST[aktif]')");
+        }
+
+        //header('location:../../main.php?module='.$module.'&id_module='.$id_module); ?>
    
   <script language="javascript">
-     window.parent.location.href = "<?php echo"./../../main.php?module=$module&id_module=$id_module";?>";  
+     window.parent.location.href = "<?php echo"./../../main.php?module=$module&id_module=$id_module"; ?>";  
      window.parent.tb_remove();
    </script>
   
-  <?php                               
- 
-
-}
-
-}
+  <?php
+    }
+}
 ?>
diff --git a/modul/mod_groups/form_groups.php b/modul/mod_groups/form_groups.php
index a79078d2e8ec617da4bdcf7cf797e87b91464a7a..1028db7386ea6de3689c59c84cd07c79c446609d 100755
--- a/modul/mod_groups/form_groups.php
+++ b/modul/mod_groups/form_groups.php
@@ -1,10 +1,9 @@
-<?
-session_start();
-if (empty($_SESSION['username']) AND empty($_SESSION['password'])){
-  echo "<script>window.alert('Please login first.'); window.location=('../../index.php.php')</script>";
-} else{
-include "./../../config/koneksi.php";
-?>
+<?php
+session_start();
+if (empty($_SESSION['username']) and empty($_SESSION['password'])) {
+    echo "<script>window.alert('Please login first.'); window.location=('../../index.php.php')</script>";
+} else {
+    include './../../config/koneksi.php'; ?>
 <!doctype html>
 <html>
 <head>
@@ -32,41 +31,37 @@ include "./../../config/koneksi.php";
 </head>
 
 <body style='background-color:#fff;'>
-<?
-
-$modul = $_GET['module'];
-$title = $_GET['title'];
-$business_type = $_SESSION['business_type']; 
-$role   = $_SESSION['role'];
-
-$id_module = $_GET['id_module']; 
-
-  $id = isset($_GET['id_groups']) ? intval($_GET['id_groups']) : false;
-  
-  if($id){
-     $query = mysql_query('SELECT * FROM groups WHERE id_groups = "'.$id.'"');
-     if($query && mysql_num_rows($query) == 1){
-        $data = mysql_fetch_object($query);
-     }else 
-        die('Data modul tidak ditemukan');
-  }
-  
-if ($_GET['igroup']) {
-  $group  = $_GET['igroup'];
-} else {
-  $group  = $data->id_groups;
-  
-}
-
-if ($_GET['imenu']) {
-  $imenu  = $_GET['imenu'];
-} else {
-  $imenu  = $data->id_modul;  
-  
-}
-
-  
-?>
+<?php
+
+$modul = $_GET['module'];
+    $title = $_GET['title'];
+    $business_type = $_SESSION['business_type'];
+    $role = $_SESSION['role'];
+
+    $id_module = $_GET['id_module'];
+
+    $id = isset($_GET['id_groups']) ? intval($_GET['id_groups']) : false;
+
+    if ($id) {
+        $query = mysql_query('SELECT * FROM groups WHERE id_groups = "'.$id.'"');
+        if ($query && mysql_num_rows($query) == 1) {
+            $data = mysql_fetch_object($query);
+        } else {
+            die('Data modul tidak ditemukan');
+        }
+    }
+
+    if ($_GET['igroup']) {
+        $group = $_GET['igroup'];
+    } else {
+        $group = $data->id_groups;
+    }
+
+    if ($_GET['imenu']) {
+        $imenu = $_GET['imenu'];
+    } else {
+        $imenu = $data->id_modul;
+    } ?>
 
 
 <div class="ix_panel">
@@ -90,9 +85,11 @@ if ($_GET['imenu']) {
           </div> -->
 
         
-          <?php if ($id){ ?>  
+          <?php if ($id) {
+        ?>  
     
-            <?php if (@$data->aktif=='Y'){ ?>
+            <?php if (@$data->aktif == 'Y') {
+            ?>
               
                 <div class="form-group">
 	               <label class="control-label col-md-3 col-sm-3 col-xs-12" style='padding-top:10px;'>Aktif:</label>
@@ -101,7 +98,9 @@ if ($_GET['imenu']) {
                     <input type=radio name='aktif' value='N' class="flat"> T                
                   </div>
               </div>  
-            <?php   }else{ ?>  
+            <?php
+        } else {
+            ?>  
               
                 <div class="form-group">
 	               <label class="control-label col-md-3 col-sm-3 col-xs-12" style='padding-top:10px;'>Aktif:</label>
@@ -110,9 +109,12 @@ if ($_GET['imenu']) {
                     <input type=radio name='aktif' value='N' class="flat" checked> T          
                   </div>
               </div>  
-             <?php } ?>
+             <?php
+        } ?>
 
-        <?php   }else{ ?>  
+        <?php
+    } else {
+        ?>  
 
            
                 <div class="form-group">
@@ -123,7 +125,8 @@ if ($_GET['imenu']) {
                   </div>
               </div>  
 
-        <?php } ?>
+        <?php
+    } ?>
 
 
 
@@ -342,6 +345,6 @@ if ($_GET['imenu']) {
 
 </body>
 </html>
-<?
-}
+<?php
+}
 ?>
\ No newline at end of file
diff --git a/modul/mod_kasir/aksi_kasir.php b/modul/mod_kasir/aksi_kasir.php
index 7fd6f7f551a58a30bf24b41b0210715ec51bdbc6..608c4315bfd172781ea92decefb29d3057fa5e97 100755
--- a/modul/mod_kasir/aksi_kasir.php
+++ b/modul/mod_kasir/aksi_kasir.php
@@ -1,62 +1,44 @@
-<?php
-
-session_start();
-
-if (empty($_SESSION['username']) AND empty($_SESSION['password'])){
-
-  echo "<script>window.alert('Please login first.'); window.location=('../../index.php.php')</script>";
-
-} else{
-
-include "./../../config/koneksi.php";
-
-include "./../../config/fungsi_thumb.php";
-
-
-
-$module=$_GET[module];
-
-$act=$_GET[act];
-
-
-
-$date     = date("d/m/Y");  
-
-$idate    = date("Y-m-d");
-
-$hour = time() - (1 * 1 * 60 * 60);
-
-$datetime   = date("Y-m-d G:i:s", $hour);
-
-$userid   = $_SESSION['userid'];
-
-
-
-
-
-// Hapus modul
-
-if ($module=='kasir' AND $act=='hapus'){
-
-  $id = $_GET['id'];
-
-  $id_module = $_GET['id_module'];
-
-
-
-
-
-  mysql_query("UPDATE kasir SET status   = '4'
+<?php
+
+session_start();
+
+if (empty($_SESSION['username']) and empty($_SESSION['password'])) {
+    echo "<script>window.alert('Please login first.'); window.location=('../../index.php.php')</script>";
+} else {
+    include './../../config/koneksi.php';
+
+    include './../../config/fungsi_thumb.php';
+
+    $module = $_GET[module];
+
+    $act = $_GET[act];
+
+    $date = date('d/m/Y');
+
+    $idate = date('Y-m-d');
+
+    $hour = time() - (1 * 1 * 60 * 60);
+
+    $datetime = date('Y-m-d G:i:s', $hour);
+
+    $userid = $_SESSION['userid'];
+
+    // Hapus modul
+
+    if ($module == 'kasir' and $act == 'hapus') {
+        $id = $_GET['id'];
+
+        $id_module = $_GET['id_module'];
+
+        mysql_query("UPDATE kasir SET status   = '4'
 
                                 ,upddt   = '$datetime' 
 
                                 ,updby   = '$userid' 
 
-                              WHERE id_kasir = '$id'");  
-
-
-
-  mysql_query("UPDATE kasir_detail SET status   = '4'
+                              WHERE id_kasir = '$id'");
+
+        mysql_query("UPDATE kasir_detail SET status   = '4'
 
                                 ,upddt   = '$datetime' 
 
@@ -64,32 +46,18 @@ if ($module=='kasir' AND $act=='hapus'){
 
                             WHERE id_kasir = '$id'
 
-                              "); 
-
-
-
-  
-
-  header('location:../../main.php?module='.$module.'&id_module='.$id_module.'&kode='.$kode.'&prd='.$prd.'&notrans='.$notrans.'&outlet='.$outlet);          
-   
-
- }
-
-
-
-  // Input group
-
-elseif ($module=='kasir' AND $act=='input'){
-
-
-
- $id_module = $_POST['id_module'];
-
-       
-if($_POST['ID']){
-
-
-  mysql_query("UPDATE kasir SET tanggal   = '$_POST[tanggal]'
+                              ");
+
+        header('location:../../main.php?module='.$module.'&id_module='.$id_module.'&kode='.$kode.'&prd='.$prd.'&notrans='.$notrans.'&outlet='.$outlet);
+    }
+
+    // Input group
+
+    elseif ($module == 'kasir' and $act == 'input') {
+        $id_module = $_POST['id_module'];
+
+        if ($_POST['ID']) {
+            mysql_query("UPDATE kasir SET tanggal   = '$_POST[tanggal]'
 
                                     ,id_shift   = '$_POST[shift]'
 
@@ -99,14 +67,9 @@ if($_POST['ID']){
 
                                     ,updby   = '$userid' 
 
-                                  WHERE id_kasir = '$_POST[ID]'");            
-
-  
-                          
-
-       } else {
-
-       mysql_query("INSERT INTO kasir (tanggal
+                                  WHERE id_kasir = '$_POST[ID]'");
+        } else {
+            mysql_query("INSERT INTO kasir (tanggal
 
                             , id_shift
 
@@ -139,54 +102,32 @@ if($_POST['ID']){
 
                         ,'$datetime'
 
-                        ,'$userid')");  
-
-                    
-
-        }
-
-
-         $sql  = mysql_query("SELECT max(id_kasir) as id FROM kasir");
-      
-
-         $r    = mysql_fetch_array($sql); 
-         
-       
-         $k_ID= $r['id'];
-       
-
-  ?>
+                        ,'$userid')");
+        }
+
+        $sql = mysql_query('SELECT max(id_kasir) as id FROM kasir');
+
+        $r = mysql_fetch_array($sql);
+
+        $k_ID = $r['id']; ?>
 
    
 
   <script language="javascript">
 
-     window.parent.location.href = "<?php echo"./../../main.php?module=$module&id_module=$id_module&act=save&ID=$k_ID";?>";  
+     window.parent.location.href = "<?php echo"./../../main.php?module=$module&id_module=$id_module&act=save&ID=$k_ID"; ?>";  
 
    </script>
 
   
 
-  <?php                               
-
- 
-
-
-
-}
-
-
-
-elseif ($module=='kasir' AND $act=='add'){
-
-
-
- $id_module = $_POST['id_module'];
-
- $k_ID        = $_POST['k_ID'];
-
-
- $detil  = mysql_query("SELECT max(seqno) as seqno 
+  <?php
+    } elseif ($module == 'kasir' and $act == 'add') {
+        $id_module = $_POST['id_module'];
+
+        $k_ID = $_POST['k_ID'];
+
+        $detil = mysql_query("SELECT max(seqno) as seqno 
 
                               FROM kasir_detail 
 
@@ -194,34 +135,20 @@ elseif ($module=='kasir' AND $act=='add'){
 
                           
 
-                              ");
-
-
-
- $d         = mysql_fetch_array($detil);
-
-  
-
- $seqno  = $d['seqno'];
-
-  
-
-  if (empty($seqno)) {
-
-  $iseqno = '1';  
-
-  } else {
-
-  $iseqno = $seqno+1;     
-
-  }
-
- 
-
-   if($_POST['ID']){
-
-
-         mysql_query("UPDATE kasir_detail SET notrans ='$_POST[notrans]' 
+                              ");
+
+        $d = mysql_fetch_array($detil);
+
+        $seqno = $d['seqno'];
+
+        if (empty($seqno)) {
+            $iseqno = '1';
+        } else {
+            $iseqno = $seqno + 1;
+        }
+
+        if ($_POST['ID']) {
+            mysql_query("UPDATE kasir_detail SET notrans ='$_POST[notrans]' 
 
                                 , pasien ='$_POST[pasien]' 
 
@@ -241,14 +168,9 @@ elseif ($module=='kasir' AND $act=='add'){
 
                               WHERE id_kasir_detail = '$_POST[ID]'
 
-                              ");  
-
-
-                                                                           
-
-       } else {
-
-       mysql_query("INSERT INTO kasir_detail (
+                              ");
+        } else {
+            mysql_query("INSERT INTO kasir_detail (
 
                               id_kasir
 
@@ -306,96 +228,52 @@ elseif ($module=='kasir' AND $act=='add'){
 
                         ,'$datetime'
 
-                        ,'$userid')");  
-
-
-
-
-                             
-
-   }
-
-       
-
-  ?>
+                        ,'$userid')");
+        } ?>
 
    
 
   <script language="javascript">
 
-       window.parent.location.href = "<?php echo"./../../main.php?module=$module&id_module=$id_module&act=save&ID=$k_ID";?>";  
+       window.parent.location.href = "<?php echo"./../../main.php?module=$module&id_module=$id_module&act=save&ID=$k_ID"; ?>";  
 
    </script>
 
   
 
-  <?php                               
-
- 
-
-
-
-}
-
-
-
-elseif ($module=='kasir' AND $act=='dhapus'){
-
-  $id = $_GET['id'];
-
-  $id_module = $_GET['id_module'];
-
-  $k_ID        = $_GET['k_ID'];
-
-
-
-   mysql_query("UPDATE kasir_detail SET status   = '4'
+  <?php
+    } elseif ($module == 'kasir' and $act == 'dhapus') {
+        $id = $_GET['id'];
+
+        $id_module = $_GET['id_module'];
+
+        $k_ID = $_GET['k_ID'];
+
+        mysql_query("UPDATE kasir_detail SET status   = '4'
 
                                 ,upddt   = '$datetime' 
 
                                 ,updby   = '$userid' 
 
-                              WHERE id_kasir_detail = '$id'");     
-
-                                                            
-
-
-
-
-
-  header('location:../../main.php?module='.$module.'&id_module='.$id_module.'&act=save&ID='.$k_ID);          
-
-
-
-   
-
- }
-
-
-
-elseif ($module=='kasir' AND $act=='verified'){
-
-  $id = $_GET['id'];
-
-  $id_module = $_GET['id_module'];
-
-  $notrans   = $_GET['notrans'];
-
-  $kode      = $_GET['kode'];
-
-  $prd      = $_GET['prd'];
-
-  $outlet      = $_GET['outlet'];
-
-
-
-
-
-  $istatus = '1';
-
-   
-
-   mysql_query("UPDATE kasir SET status   = '$istatus'
+                              WHERE id_kasir_detail = '$id'");
+
+        header('location:../../main.php?module='.$module.'&id_module='.$id_module.'&act=save&ID='.$k_ID);
+    } elseif ($module == 'kasir' and $act == 'verified') {
+        $id = $_GET['id'];
+
+        $id_module = $_GET['id_module'];
+
+        $notrans = $_GET['notrans'];
+
+        $kode = $_GET['kode'];
+
+        $prd = $_GET['prd'];
+
+        $outlet = $_GET['outlet'];
+
+        $istatus = '1';
+
+        mysql_query("UPDATE kasir SET status   = '$istatus'
 
                                 ,upddt   = '$datetime' 
 
@@ -411,11 +289,9 @@ elseif ($module=='kasir' AND $act=='verified'){
 
                               AND id_outlet = '$outlet'
 
-                              ");    
-
-
-
-   mysql_query("UPDATE kasir_detail SET status   = '$istatus'
+                              ");
+
+        mysql_query("UPDATE kasir_detail SET status   = '$istatus'
 
                                 ,upddt   = '$datetime' 
 
@@ -431,43 +307,23 @@ elseif ($module=='kasir' AND $act=='verified'){
 
                               and status != '4'
 
-                              ");        
-
-
-
-
-
-  header('location:../../main.php?module='.$module.'&id_module='.$id_module.'&act=save&notrans='.$notrans.'&prd='.$prd.'&kode='.$kode.'&outlet='.$outlet);  
-
-
-
-
-
-   
-
- }
-
-
-
- elseif ($module=='kasir' AND $act=='reset'){
-
-  $id = $_GET['id'];
-
-  $id_module = $_GET['id_module'];
-
-  $notrans   = $_GET['notrans'];
-
-  $kode      = $_GET['kode'];
-
-  $prd      = $_GET['prd'];
-
-  $outlet      = $_GET['outlet'];
-
-
-
-
-
-   mysql_query("UPDATE kasir SET status   = '0'
+                              ");
+
+        header('location:../../main.php?module='.$module.'&id_module='.$id_module.'&act=save&notrans='.$notrans.'&prd='.$prd.'&kode='.$kode.'&outlet='.$outlet);
+    } elseif ($module == 'kasir' and $act == 'reset') {
+        $id = $_GET['id'];
+
+        $id_module = $_GET['id_module'];
+
+        $notrans = $_GET['notrans'];
+
+        $kode = $_GET['kode'];
+
+        $prd = $_GET['prd'];
+
+        $outlet = $_GET['outlet'];
+
+        mysql_query("UPDATE kasir SET status   = '0'
 
                                 ,upddt   = '$datetime' 
 
@@ -483,11 +339,9 @@ elseif ($module=='kasir' AND $act=='verified'){
 
                               AND status in ('1')
 
-                              ");       
-
-
-
-   mysql_query("UPDATE kasir_detail SET status   = '0'
+                              ");
+
+        mysql_query("UPDATE kasir_detail SET status   = '0'
 
                                 ,upddt   = '$datetime' 
 
@@ -503,29 +357,11 @@ elseif ($module=='kasir' AND $act=='verified'){
 
                               AND status  in ('1')
 
-                              ");        
-
-
-
-  header('location:../../main.php?module='.$module.'&id_module='.$id_module.'&act=save&notrans='.$notrans.'&prd='.$prd.'&kode='.$kode.'&outlet='.$outlet);           
-
-
-
-   
-
- }
-
-
-
-
-
-
-
-
-
- 
-
-}
-
+                              ");
+
+        header('location:../../main.php?module='.$module.'&id_module='.$id_module.'&act=save&notrans='.$notrans.'&prd='.$prd.'&kode='.$kode.'&outlet='.$outlet);
+    }
+}
+
 ?>
 
diff --git a/modul/mod_kasir/cetak_kasir.php b/modul/mod_kasir/cetak_kasir.php
index 71c166443332cb8b3e8e00026f8ee888e8ae0fea..c9aee4bf5a784f5b2c64ea611b3efb0cb9edd5aa 100755
--- a/modul/mod_kasir/cetak_kasir.php
+++ b/modul/mod_kasir/cetak_kasir.php
@@ -1,38 +1,32 @@
-<?php
-
-if (substr_count($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip')) {
-ob_start("ob_gzhandler");
-}
-else {
-ob_start();
-}
-
-
-include "./../../config/koneksi.php";
-
-
-$report_id = $_GET[report_id];
-$tampil=mysql_query("SELECT * FROM modul WHERE id_modul ='".$report_id."'");
-
-            
-
-$r=mysql_fetch_array($tampil);
-
-//module=$module&report_id=$report_id&k_ID=$k_ID
-
-$module   = $_GET['module'];
-
-$imodule  = ucwords($r['nama_modul']);
-
-$nmmodule   = ucwords($r['nama_modul']);
-
-$id       = $r['id_modul'];
-
-$fa_icon    = $r['fa_icon'];
-
-
-$k_ID  = $_GET['k_ID'];
- 
+<?php
+
+if (substr_count($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip')) {
+    ob_start('ob_gzhandler');
+} else {
+    ob_start();
+}
+
+include './../../config/koneksi.php';
+
+$report_id = $_GET[report_id];
+$tampil = mysql_query("SELECT * FROM modul WHERE id_modul ='".$report_id."'");
+
+$r = mysql_fetch_array($tampil);
+
+//module=$module&report_id=$report_id&k_ID=$k_ID
+
+$module = $_GET['module'];
+
+$imodule = ucwords($r['nama_modul']);
+
+$nmmodule = ucwords($r['nama_modul']);
+
+$id = $r['id_modul'];
+
+$fa_icon = $r['fa_icon'];
+
+$k_ID = $_GET['k_ID'];
+
 ?>
 
 <!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
@@ -40,7 +34,7 @@ $k_ID  = $_GET['k_ID'];
 <meta charset="utf-8">
 <meta http-equiv="X-UA-Compatible" content="IE=edge">
 <link rel="shortcut icon" type="image/x-icon" href="../images/favicon.png">
-<title><?php echo $imodule ;?> (<?php echo $ifdate;?> - <?php echo $ildate;?>)</title>
+<title><?php echo $imodule; ?> (<?php echo $ifdate; ?> - <?php echo $ildate; ?>)</title>
 
 <!-- Tell the browser to be responsive to screen width -->
 <meta content="width=device-width, initial-scale=1, maximum-scale=1, user-scalable=no" name="viewport">
@@ -147,64 +141,52 @@ function idownload(){
       <div class="noprint"  >
         <button class='print pull-right' onclick="javascript:window.close()"><i class="fa fa-lg fa-close"></i> Close</button>
         <button class='print pull-right' onclick="icetak()"><i class="fa fa-lg fa-print"></i> Print</button>
-        <button class='print pull-right' onclick="window.open('ecetak_kasir.php?k_ID=<?=$k_ID;?>&report_id=<?=$report_id;?>', '_blank')"><i class="fa fa-lg fa-file-excel-o"></i> Excel</button>
+        <button class='print pull-right' onclick="window.open('ecetak_kasir.php?k_ID=<?=$k_ID; ?>&report_id=<?=$report_id; ?>', '_blank')"><i class="fa fa-lg fa-file-excel-o"></i> Excel</button>
       </div>   
 
-      <?
-
-       $gtampil=mysql_query("SELECT * FROM informasi_perusahaan where id_informasi_perusahaan = '1'");
-
-       $g=mysql_fetch_array($gtampil);
-
-
-
-      if ($g['pict']) {
-
-        $pict = $g['pict'];
-
-      } else {
-
-        $pict = '';
-
-      }
-
-
-      $company = ucwords($g['company']);
-
-
-
-      $sql   = mysql_query("SELECT a.*,b.shift FROM kasir  a LEFT JOIN shift b 
+      <?php
+
+       $gtampil = mysql_query("SELECT * FROM informasi_perusahaan where id_informasi_perusahaan = '1'");
+
+       $g = mysql_fetch_array($gtampil);
+
+      if ($g['pict']) {
+          $pict = $g['pict'];
+      } else {
+          $pict = '';
+      }
+
+      $company = ucwords($g['company']);
+
+      $sql = mysql_query("SELECT a.*,b.shift FROM kasir  a LEFT JOIN shift b 
                             ON a.id_shift = b.id_shift
                             WHERE a.id_kasir = '$k_ID' 
 
-                           ");
-
-
-
-      $r     = mysql_fetch_array($sql); 
-
-
-      $penjualan_barang   = $r['id_kasir'];  
-
-      $shift   = $r['shift'];  
-
-      $petugas   = $r['petugas'];  
-
-      $status   = $r['status']; 
-
-      $tanggal   = DATE('d/m/Y',strtotime($r['tanggal']));  
-
+                           ");
+
+      $r = mysql_fetch_array($sql);
+
+      $penjualan_barang = $r['id_kasir'];
+
+      $shift = $r['shift'];
+
+      $petugas = $r['petugas'];
+
+      $status = $r['status'];
+
+      $tanggal = date('d/m/Y', strtotime($r['tanggal']));
+
       ?>
 
       <table width="100%">
       <tr>
-      <td style="text-align: center;" colspan="3"><h3 ><?=$company;?><br><?=$nmmodule;?></h3></td>
+      <td style="text-align: center;" colspan="3"><h3 ><?=$company; ?><br><?=$nmmodule; ?></h3></td>
       </tr>
        <tr><td>&nbsp</td></tr>
        <tr>
-        <td width="20%" style="font-size: 11px;">Tanggal : <?=$tanggal;?></td>
+        <td width="20%" style="font-size: 11px;">Tanggal : <?=$tanggal; ?></td>
         <td width="2%">&nbsp&nbsp</td>
-        <td style="font-size: 11px;">Shift : <?=$shift;?></td>
+        <td style="font-size: 11px;">Shift : <?=$shift; ?></td>
         </tr>
         <tr><td>&nbsp</td></tr>
       </table>
@@ -223,26 +205,22 @@ function idownload(){
             </tr> 
 
             <tr>
-               <?
-
-                $itampil=mysql_query("SELECT * FROM jenis_transaksi where aktif = 'Y' ORDER BY id_jenis_transaksi");
-          
-                while ($i=mysql_fetch_array($itampil)){  
-
-                  echo "<th>$i[jenis_transaksi]</th>";
-
-                }
+               <?php
+
+                $itampil = mysql_query("SELECT * FROM jenis_transaksi where aktif = 'Y' ORDER BY id_jenis_transaksi");
+
+                while ($i = mysql_fetch_array($itampil)) {
+                    echo "<th>$i[jenis_transaksi]</th>";
+                }
                ?>
 
-               <?
-
-                $itampil=mysql_query("SELECT * FROM jenis_pembayaran where aktif = 'Y' ORDER BY id_jenis_pembayaran");
-          
-                while ($i=mysql_fetch_array($itampil)){  
-
-                  echo "<th>$i[jenis_pembayaran]</th>";
-
-                }
+               <?php
+
+                $itampil = mysql_query("SELECT * FROM jenis_pembayaran where aktif = 'Y' ORDER BY id_jenis_pembayaran");
+
+                while ($i = mysql_fetch_array($itampil)) {
+                    echo "<th>$i[jenis_pembayaran]</th>";
+                }
                ?>
 
 
@@ -254,8 +232,8 @@ function idownload(){
            
 
           <tbody>
-            <?php
-
+            <?php
+
             $dSQL = "SELECT a.notrans, a.pasien , a.id_jenis_pembayaran, c.penjamin,d.jenis_pembayaran , sum(a.jumlah) as jumlah 
 
                      FROM kasir_detail a LEFT JOIN jenis_transaksi b
@@ -276,86 +254,70 @@ function idownload(){
 
                      group by a.notrans, a.pasien , a.id_jenis_pembayaran, c.penjamin,d.jenis_pembayaran
 
-                     ";
-
-
-
-            $dtampil=mysql_query($dSQL);
-
-            $no = 1;                        
-
-            while ($d=mysql_fetch_array($dtampil)){  
-
-             
-
-             $d_id    = $d['id_kasir_detail'];    
-
-
-
-             $ijumlah = number_format($d['jumlah'], 0, ".", ",");
-
-             $jumlah = number_format($d['jumlah'], 0, ".", "");
-
-             $total =  $total+$d['jumlah'];
-
-             $itotal = number_format($total, 0, ".", ",");
-
-
-             echo"<tr>";
-
-             echo" <td>"; 
-
-             echo $no ;
-
-             echo"</td>";  
-
-
-             echo" <td>"; 
-
-             echo $d['notrans'] ;
-
-             echo"</td>";  
-
-             echo" <td>"; 
-
-             echo $d['pasien'] ;
-
-             echo"</td>"; 
-
-
-              $itampil=mysql_query("SELECT * FROM jenis_transaksi where aktif = 'Y' ORDER BY id_jenis_transaksi");
-          
-                while ($i=mysql_fetch_array($itampil)){  
-
-                  $jtampil=mysql_query("SELECT b.jumlah FROM kasir a INNER JOIN kasir_detail b 
+                     ";
+
+            $dtampil = mysql_query($dSQL);
+
+            $no = 1;
+
+            while ($d = mysql_fetch_array($dtampil)) {
+                $d_id = $d['id_kasir_detail'];
+
+                $ijumlah = number_format($d['jumlah'], 0, '.', ',');
+
+                $jumlah = number_format($d['jumlah'], 0, '.', '');
+
+                $total = $total + $d['jumlah'];
+
+                $itotal = number_format($total, 0, '.', ',');
+
+                echo'<tr>';
+
+                echo' <td>';
+
+                echo $no;
+
+                echo'</td>';
+
+                echo' <td>';
+
+                echo $d['notrans'];
+
+                echo'</td>';
+
+                echo' <td>';
+
+                echo $d['pasien'];
+
+                echo'</td>';
+
+                $itampil = mysql_query("SELECT * FROM jenis_transaksi where aktif = 'Y' ORDER BY id_jenis_transaksi");
+
+                while ($i = mysql_fetch_array($itampil)) {
+                    $jtampil = mysql_query("SELECT b.jumlah FROM kasir a INNER JOIN kasir_detail b 
                                          ON a.id_kasir = b.id_kasir 
                                          where a.tanggal = '$r[tanggal]'
                                          AND a.id_shift  = '$r[id_shift]'
                                          AND b.notrans  = '$d[notrans]'
                                          AND b.id_jenis_transaksi  = '$i[id_jenis_transaksi]'
                                          AND b.status <> '4'
-                                         "); 
-
-                  $j=mysql_fetch_array($jtampil);
-
-                  if ($j[jumlah]) {
-                    $jml = number_format($j['jumlah'], 0, ".", ",");
-                  } else {
-                    $jml = 0;
-                  }
-                  
-                  echo "<td  style='text-align:right;'>$jml</td>";
-
-             }
-
-             
-               $itampil=mysql_query("SELECT * FROM jenis_pembayaran where aktif = 'Y' ORDER BY id_jenis_pembayaran");
-          
-                while ($i=mysql_fetch_array($itampil)){  
-
-                
-
-                  $pSQL = "SELECT  sum(a.jumlah) as jumlah 
+                                         ");
+
+                    $j = mysql_fetch_array($jtampil);
+
+                    if ($j[jumlah]) {
+                        $jml = number_format($j['jumlah'], 0, '.', ',');
+                    } else {
+                        $jml = 0;
+                    }
+
+                    echo "<td  style='text-align:right;'>$jml</td>";
+                }
+
+                $itampil = mysql_query("SELECT * FROM jenis_pembayaran where aktif = 'Y' ORDER BY id_jenis_pembayaran");
+
+                while ($i = mysql_fetch_array($itampil)) {
+                    $pSQL = "SELECT  sum(a.jumlah) as jumlah 
 
                          FROM kasir_detail a LEFT JOIN jenis_transaksi b
 
@@ -383,52 +345,44 @@ function idownload(){
 
                          AND a.status <> '4'
 
-                         ";
-
-
-
-                $ptampil=mysql_query($pSQL);
-
-                               
-                $p=mysql_fetch_array($ptampil);
-
-                     if ($p[jumlah]) {
-                        $jml = number_format($p['jumlah'], 0, ".", ",");
-                     } else {
-                        $jml = 0;
-                     }
-
-                     echo"<td  style='text-align:right;'>$jml </td>"; 
-
-                
-
-             }    
-             
-           
-             echo" <td>"; 
-
-              $jtampil=mysql_query("SELECT b.ket  FROM kasir a INNER JOIN kasir_detail b 
+                         ";
+
+                    $ptampil = mysql_query($pSQL);
+
+                    $p = mysql_fetch_array($ptampil);
+
+                    if ($p[jumlah]) {
+                        $jml = number_format($p['jumlah'], 0, '.', ',');
+                    } else {
+                        $jml = 0;
+                    }
+
+                    echo"<td  style='text-align:right;'>$jml </td>";
+                }
+
+                echo' <td>';
+
+                $jtampil = mysql_query("SELECT b.ket  FROM kasir a INNER JOIN kasir_detail b 
                                          ON a.id_kasir = b.id_kasir 
                                          where a.tanggal = '$r[tanggal]'
                                          AND a.id_shift  = '$r[id_shift]'
                                          AND b.notrans  = '$d[notrans]'
-                                         "); 
-
-              $j=mysql_fetch_array($jtampil);
-
-              echo $j[ket];
-
-              if ($d['penjamin']) {
-                echo'<br>'.'('.$d['penjamin'].')';
-              }
-                
-             echo"</td>";    
-
-
-                 echo "</tr>";  
-               
-               $no++;
-               } 
+                                         ");
+
+                $j = mysql_fetch_array($jtampil);
+
+                echo $j[ket];
+
+                if ($d['penjamin']) {
+                    echo'<br>'.'('.$d['penjamin'].')';
+                }
+
+                echo'</td>';
+
+                echo '</tr>';
+
+                $no++;
+            }
              ?>
              </tbody> 
 
@@ -440,43 +394,37 @@ function idownload(){
                <th>Total</th>  
                <th></th> 
 
-               <?
-
-                          $itampil=mysql_query("SELECT * FROM jenis_transaksi where aktif = 'Y' ORDER BY id_jenis_transaksi");
-                      
-                            while ($i=mysql_fetch_array($itampil)){  
-
-                              $jtampil=mysql_query("SELECT sum(b.jumlah) as jumlah FROM kasir a INNER JOIN kasir_detail b 
+               <?php
+
+                          $itampil = mysql_query("SELECT * FROM jenis_transaksi where aktif = 'Y' ORDER BY id_jenis_transaksi");
+
+                            while ($i = mysql_fetch_array($itampil)) {
+                                $jtampil = mysql_query("SELECT sum(b.jumlah) as jumlah FROM kasir a INNER JOIN kasir_detail b 
                                                      ON a.id_kasir = b.id_kasir 
                                                      where a.tanggal = '$r[tanggal]'
                                                      AND a.id_shift  = '$r[id_shift]'
                                                      AND b.id_jenis_transaksi  = '$i[id_jenis_transaksi]'
                                                      AND b.status <> '4'
-                                                     "); 
-
-                              $j=mysql_fetch_array($jtampil);
-
-                              if ($j[jumlah]) {
-                                $jml = number_format($j['jumlah'], 0, ".", ",");
-                              } else {
-                                $jml = 0;
-                              }
-                              
-                              echo "<th  style='text-align:right;'>$jml</th>";
-
-                         }
-
-                
+                                                     ");
+
+                                $j = mysql_fetch_array($jtampil);
+
+                                if ($j[jumlah]) {
+                                    $jml = number_format($j['jumlah'], 0, '.', ',');
+                                } else {
+                                    $jml = 0;
+                                }
+
+                                echo "<th  style='text-align:right;'>$jml</th>";
+                            }
+
                 ?>        
 
-                 <?
-                 $itampil=mysql_query("SELECT * FROM jenis_pembayaran where aktif = 'Y' ORDER BY id_jenis_pembayaran");
-            
-                  while ($i=mysql_fetch_array($itampil)){  
-
-                  
-
-                    $pSQL = "SELECT  sum(a.jumlah) as jumlah 
+                 <?php
+                 $itampil = mysql_query("SELECT * FROM jenis_pembayaran where aktif = 'Y' ORDER BY id_jenis_pembayaran");
+
+                  while ($i = mysql_fetch_array($itampil)) {
+                      $pSQL = "SELECT  sum(a.jumlah) as jumlah 
 
                            FROM kasir_detail a LEFT JOIN jenis_transaksi b
 
@@ -502,27 +450,21 @@ function idownload(){
 
                            AND a.status <> '4'
 
-                           ";
-
-
-
-                  $ptampil=mysql_query($pSQL);
-
-                                 
-                  $p=mysql_fetch_array($ptampil);
-
-                       if ($p[jumlah]) {
-                          $jml = number_format($p['jumlah'], 0, ".", ",");
-                       } else {
-                          $jml = 0;
-                       }
-
-                       echo"<th  style='text-align:right;'>$jml </th>"; 
-
-                  
-
-               }    
-               
+                           ";
+
+                      $ptampil = mysql_query($pSQL);
+
+                      $p = mysql_fetch_array($ptampil);
+
+                      if ($p[jumlah]) {
+                          $jml = number_format($p['jumlah'], 0, '.', ',');
+                      } else {
+                          $jml = 0;
+                      }
+
+                      echo"<th  style='text-align:right;'>$jml </th>";
+                  }
+
                ?> 
        
                <th></th> 
@@ -531,32 +473,28 @@ function idownload(){
 
             <tr><td colspan="12">&nbsp</td></tr>  
 
-            <?    
-
-                 if($r[id_shift] == '1') {
-                  $id_shift = '1';
-                 } else {
-                  $id_shift = '%';
-                 }
-
-    
-                 $itampil=mysql_query("SELECT * FROM shift where aktif = 'Y' and id_shift LIKE '$id_shift' ORDER BY id_shift");
-            
-                  while ($i=mysql_fetch_array($itampil)){  
-
-                  $shift = $i['shift'];
-
-             ?>       
+            <?php 
+
+                 if ($r[id_shift] == '1') {
+                     $id_shift = '1';
+                 } else {
+                     $id_shift = '%';
+                 }
+
+                 $itampil = mysql_query("SELECT * FROM shift where aktif = 'Y' and id_shift LIKE '$id_shift' ORDER BY id_shift");
+
+                  while ($i = mysql_fetch_array($itampil)) {
+                      $shift = $i['shift']; ?>       
 
                     <tr>
                     <th></th>
                     <th></th>
                     <th colspan="3" style="text-align: left;">Total Seluruh Omzet 
-                    <span style='text-transform: capitalize;'><? echo ucfirst(strtolower(($shift)));?></span></th>
+                    <span style='text-transform: capitalize;'><?php echo ucfirst(strtolower(($shift))); ?></span></th>
                     <th style="text-align: left;">Cash</th>
-                    <?
-                            
-
+                    <?php
+
+
                     $pSQL = "SELECT  sum(a.jumlah) as jumlah 
 
                            FROM kasir_detail a LEFT JOIN jenis_transaksi b
@@ -583,28 +521,23 @@ function idownload(){
                                            
                            AND a.status <> '4'
 
-                           ";
-
-
-
-                        $ptampil=mysql_query($pSQL);
-
-                                       
-                        $p=mysql_fetch_array($ptampil);
-
-                             if ($p[jumlah]) {
-                                $cash = number_format($p['jumlah'], 0, ".", ",");
-                             } else {
-                                $cash = 0;
-                             }
-
-                        ?>
-                    <th style="text-align: right;"><?=$cash;?></th>
+                           ";
+
+                      $ptampil = mysql_query($pSQL);
+
+                      $p = mysql_fetch_array($ptampil);
+
+                      if ($p[jumlah]) {
+                          $cash = number_format($p['jumlah'], 0, '.', ',');
+                      } else {
+                          $cash = 0;
+                      } ?>
+                    <th style="text-align: right;"><?=$cash; ?></th>
                     <th style="text-align: left;">Credit</th>
 
-                    <?
-                            
-
+                    <?php
+
+
                     $pSQL = "SELECT  sum(a.jumlah) as jumlah 
 
                            FROM kasir_detail a LEFT JOIN jenis_transaksi b
@@ -631,44 +564,38 @@ function idownload(){
                                            
                            AND a.status <> '4'
 
-                           ";
-
-
-
-                        $ptampil=mysql_query($pSQL);
-
-                                       
-                        $p=mysql_fetch_array($ptampil);
-
-                             if ($p[jumlah]) {
-                                $credit = number_format($p['jumlah'], 0, ".", ",");
-                             } else {
-                                $credit= 0;
-                             }
-
-                        ?>
-
-                    <th style="text-align: right;"><?=$credit;?></th>
+                           ";
+
+                      $ptampil = mysql_query($pSQL);
+
+                      $p = mysql_fetch_array($ptampil);
+
+                      if ($p[jumlah]) {
+                          $credit = number_format($p['jumlah'], 0, '.', ',');
+                      } else {
+                          $credit = 0;
+                      } ?>
+
+                    <th style="text-align: right;"><?=$credit; ?></th>
                     <th colspan="4"></th>
                     </tr> 
 
 
-               <?     
-                  
-
-               }    
-               
+               <?php
+                  }
+
                ?> 
 
-               <? if ($id_shift == '%') { ?>
+               <?php if ($id_shift == '%') {
+                   ?>
                <tr>
                     <th></th>
                     <th></th>
-                    <th colspan="3" style="text-align: left;">Total Omzet Tgl. <?=$tanggal;?>  </th>
+                    <th colspan="3" style="text-align: left;">Total Omzet Tgl. <?=$tanggal; ?>  </th>
                     <th style="text-align: left;">Cash</th>
-                    <?
-                            
-
+                    <?php
+
+
                     $pSQL = "SELECT  sum(a.jumlah) as jumlah 
 
                            FROM kasir_detail a LEFT JOIN jenis_transaksi b
@@ -694,28 +621,23 @@ function idownload(){
                                            
                            AND a.status <> '4'
 
-                           ";
-
-
-
-                        $ptampil=mysql_query($pSQL);
-
-                                       
-                        $p=mysql_fetch_array($ptampil);
-
-                             if ($p[jumlah]) {
-                                $cash = number_format($p['jumlah'], 0, ".", ",");
-                             } else {
-                                $cash = 0;
-                             }
-
-                        ?>
-                    <th style="text-align: right;"><?=$cash;?></th>
+                           ";
+
+                   $ptampil = mysql_query($pSQL);
+
+                   $p = mysql_fetch_array($ptampil);
+
+                   if ($p[jumlah]) {
+                       $cash = number_format($p['jumlah'], 0, '.', ',');
+                   } else {
+                       $cash = 0;
+                   } ?>
+                    <th style="text-align: right;"><?=$cash; ?></th>
                     <th style="text-align: left;">Credit</th>
 
-                    <?
-                            
-
+                    <?php
+
+
                     $pSQL = "SELECT  sum(a.jumlah) as jumlah 
 
                            FROM kasir_detail a LEFT JOIN jenis_transaksi b
@@ -740,28 +662,24 @@ function idownload(){
                                            
                            AND a.status <> '4'
 
-                           ";
-
-
-
-                        $ptampil=mysql_query($pSQL);
-
-                                       
-                        $p=mysql_fetch_array($ptampil);
-
-                             if ($p[jumlah]) {
-                                $credit = number_format($p['jumlah'], 0, ".", ",");
-                             } else {
-                                $credit= 0;
-                             }
-
-                        ?>
-
-                    <th style="text-align: right;"><?=$credit;?></th>
+                           ";
+
+                   $ptampil = mysql_query($pSQL);
+
+                   $p = mysql_fetch_array($ptampil);
+
+                   if ($p[jumlah]) {
+                       $credit = number_format($p['jumlah'], 0, '.', ',');
+                   } else {
+                       $credit = 0;
+                   } ?>
+
+                    <th style="text-align: right;"><?=$credit; ?></th>
                     <th colspan="4"></th>
                     </tr> 
 
-                <? } ?>
+                <?php
+               } ?>
 
                  <tr><td colspan="12">&nbsp</td></tr>  
 
@@ -779,9 +697,9 @@ function idownload(){
                      <th style="" colspan="6">&nbsp</th>  
                 </tr>   
 
-                <?
-                            
-
+                <?php
+
+
                     $pSQL = "SELECT  sum(a.jumlah) as jumlah 
 
                            FROM kasir_detail a LEFT JOIN jenis_transaksi b
@@ -806,21 +724,18 @@ function idownload(){
                                            
                            AND a.status <> '4'
 
-                           ";
-
-
-
-                        $ptampil=mysql_query($pSQL);
-
-                                       
-                        $p=mysql_fetch_array($ptampil);
-
-                             if ($p[jumlah]) {
-                                $total = number_format($p['jumlah'], 0, ".", ",");
-                             } else {
-                                $total = 0;
-                             }
-
+                           ";
+
+                        $ptampil = mysql_query($pSQL);
+
+                        $p = mysql_fetch_array($ptampil);
+
+                             if ($p[jumlah]) {
+                                 $total = number_format($p['jumlah'], 0, '.', ',');
+                             } else {
+                                 $total = 0;
+                             }
+
               ?>
 
 
diff --git a/modul/mod_kasir/ecetak_kasir.php b/modul/mod_kasir/ecetak_kasir.php
index f46bb24fb093198f51b46fc643f18f6c86352293..3246981eb3ecee0b0087009025cf48942b6c623d 100755
--- a/modul/mod_kasir/ecetak_kasir.php
+++ b/modul/mod_kasir/ecetak_kasir.php
@@ -1,42 +1,37 @@
-<?php
-
-header("Content-Type: application/octet-stream");
-header("Content-Type: application/download");
-header("Content-Type: application/vnd.ms-excel");
-header("Content-Disposition: attachment;filename=laporan_harian_kasir.xls "); 
-header("Content-Transfer-Encoding: binary ");
-
-
+<?php
+
+header('Content-Type: application/octet-stream');
+header('Content-Type: application/download');
+header('Content-Type: application/vnd.ms-excel');
+header('Content-Disposition: attachment;filename=laporan_harian_kasir.xls ');
+header('Content-Transfer-Encoding: binary ');
+
 ?>
 
-<?php
-
-
-include "./../../config/koneksi.php";
-
-
-$report_id = $_GET[report_id];
-$tampil=mysql_query("SELECT * FROM modul WHERE id_modul ='".$report_id."'");
-
-            
-
-$r=mysql_fetch_array($tampil);
-
-//module=$module&report_id=$report_id&k_ID=$k_ID
-
-$module   = $_GET['module'];
-
-$imodule  = ucwords($r['nama_modul']);
-
-$nmmodule   = ucwords($r['nama_modul']);
-
-$id       = $r['id_modul'];
-
-$fa_icon    = $r['fa_icon'];
-
-
-$k_ID  = $_GET['k_ID'];
- 
+<?php
+
+
+include './../../config/koneksi.php';
+
+$report_id = $_GET[report_id];
+$tampil = mysql_query("SELECT * FROM modul WHERE id_modul ='".$report_id."'");
+
+$r = mysql_fetch_array($tampil);
+
+//module=$module&report_id=$report_id&k_ID=$k_ID
+
+$module = $_GET['module'];
+
+$imodule = ucwords($r['nama_modul']);
+
+$nmmodule = ucwords($r['nama_modul']);
+
+$id = $r['id_modul'];
+
+$fa_icon = $r['fa_icon'];
+
+$k_ID = $_GET['k_ID'];
+
 ?>
 
 <!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
@@ -44,7 +39,7 @@ $k_ID  = $_GET['k_ID'];
 <meta charset="utf-8">
 <meta http-equiv="X-UA-Compatible" content="IE=edge">
 <link rel="shortcut icon" type="image/x-icon" href="../images/favicon.png">
-<title><?php echo $imodule ;?> </title>
+<title><?php echo $imodule; ?> </title>
 
 </head>
 
@@ -52,61 +47,49 @@ $k_ID  = $_GET['k_ID'];
 
 
   
-      <?
-
-       $gtampil=mysql_query("SELECT * FROM informasi_perusahaan where id_informasi_perusahaan = '1'");
-
-       $g=mysql_fetch_array($gtampil);
-
-
-
-      if ($g['pict']) {
-
-        $pict = $g['pict'];
-
-      } else {
-
-        $pict = '';
-
-      }
-
-
-      $company = ucwords($g['company']);
-
-
-
-      $sql   = mysql_query("SELECT a.*,b.shift FROM kasir  a LEFT JOIN shift b 
+      <?php
+
+       $gtampil = mysql_query("SELECT * FROM informasi_perusahaan where id_informasi_perusahaan = '1'");
+
+       $g = mysql_fetch_array($gtampil);
+
+      if ($g['pict']) {
+          $pict = $g['pict'];
+      } else {
+          $pict = '';
+      }
+
+      $company = ucwords($g['company']);
+
+      $sql = mysql_query("SELECT a.*,b.shift FROM kasir  a LEFT JOIN shift b 
                             ON a.id_shift = b.id_shift
                             WHERE a.id_kasir = '$k_ID' 
 
-                           ");
-
-
-
-      $r     = mysql_fetch_array($sql); 
-
-
-      $penjualan_barang   = $r['id_kasir'];  
-
-      $shift   = $r['shift'];  
-
-      $petugas   = $r['petugas'];  
-
-      $status   = $r['status']; 
-
-      $tanggal   = DATE('d/m/Y',strtotime($r['tanggal']));  
-
+                           ");
+
+      $r = mysql_fetch_array($sql);
+
+      $penjualan_barang = $r['id_kasir'];
+
+      $shift = $r['shift'];
+
+      $petugas = $r['petugas'];
+
+      $status = $r['status'];
+
+      $tanggal = date('d/m/Y', strtotime($r['tanggal']));
+
       ?>
 
       <table width="100%">
       <tr>
-      <td style="text-align: center;" colspan="12"><h4 ><?=$company;?><br><?=$nmmodule;?></h4></td>
+      <td style="text-align: center;" colspan="12"><h4 ><?=$company; ?><br><?=$nmmodule; ?></h4></td>
       </tr>
        <tr><td>&nbsp</td></tr>
        <tr>
-        <td width="20%" style="font-size: 11px;" colspan="2">Tanggal : <?=$tanggal;?></td>
+        <td width="20%" style="font-size: 11px;" colspan="2">Tanggal : <?=$tanggal; ?></td>
         <td width="2%">&nbsp&nbsp</td>
-        <td style="font-size: 11px;">Shift : <?=$shift;?></td>
+        <td style="font-size: 11px;">Shift : <?=$shift; ?></td>
         <td width="7%">&nbsp&nbsp</td>
         </tr>
         <tr><td>&nbsp</td></tr>
@@ -126,26 +109,22 @@ $k_ID  = $_GET['k_ID'];
             </tr> 
 
             <tr>
-               <?
-
-                $itampil=mysql_query("SELECT * FROM jenis_transaksi where aktif = 'Y' ORDER BY id_jenis_transaksi");
-          
-                while ($i=mysql_fetch_array($itampil)){  
-
-                  echo "<th>$i[jenis_transaksi]</th>";
-
-                }
+               <?php
+
+                $itampil = mysql_query("SELECT * FROM jenis_transaksi where aktif = 'Y' ORDER BY id_jenis_transaksi");
+
+                while ($i = mysql_fetch_array($itampil)) {
+                    echo "<th>$i[jenis_transaksi]</th>";
+                }
                ?>
 
-               <?
-
-                $itampil=mysql_query("SELECT * FROM jenis_pembayaran where aktif = 'Y' ORDER BY id_jenis_pembayaran");
-          
-                while ($i=mysql_fetch_array($itampil)){  
-
-                  echo "<th>$i[jenis_pembayaran]</th>";
-
-                }
+               <?php
+
+                $itampil = mysql_query("SELECT * FROM jenis_pembayaran where aktif = 'Y' ORDER BY id_jenis_pembayaran");
+
+                while ($i = mysql_fetch_array($itampil)) {
+                    echo "<th>$i[jenis_pembayaran]</th>";
+                }
                ?>
 
 
@@ -157,8 +136,8 @@ $k_ID  = $_GET['k_ID'];
            
 
           <tbody>
-            <?php
-
+            <?php
+
             $dSQL = "SELECT a.notrans, a.pasien , a.id_jenis_pembayaran, c.penjamin,d.jenis_pembayaran , sum(a.jumlah) as jumlah 
 
                      FROM kasir_detail a LEFT JOIN jenis_transaksi b
@@ -179,86 +158,70 @@ $k_ID  = $_GET['k_ID'];
 
                      group by a.notrans, a.pasien , a.id_jenis_pembayaran, c.penjamin,d.jenis_pembayaran
 
-                     ";
-
-
-
-            $dtampil=mysql_query($dSQL);
-
-            $no = 1;                        
-
-            while ($d=mysql_fetch_array($dtampil)){  
-
-             
-
-             $d_id    = $d['id_kasir_detail'];    
-
-
-
-             $ijumlah = number_format($d['jumlah'], 0, ".", ",");
-
-             $jumlah = number_format($d['jumlah'], 0, ".", ",");
-
-             $total =  $total+$d['jumlah'];
-
-             $itotal = number_format($total, 0, ".", ",");
-
-
-             echo"<tr>";
-
-             echo" <td>"; 
-
-             echo $no ;
-
-             echo"</td>";  
-
-
-             echo" <td>"; 
-
-             echo $d['notrans'] ;
-
-             echo"</td>";  
-
-             echo" <td>"; 
-
-             echo $d['pasien'] ;
-
-             echo"</td>"; 
-
-
-              $itampil=mysql_query("SELECT * FROM jenis_transaksi where aktif = 'Y' ORDER BY id_jenis_transaksi");
-          
-                while ($i=mysql_fetch_array($itampil)){  
-
-                  $jtampil=mysql_query("SELECT b.jumlah FROM kasir a INNER JOIN kasir_detail b 
+                     ";
+
+            $dtampil = mysql_query($dSQL);
+
+            $no = 1;
+
+            while ($d = mysql_fetch_array($dtampil)) {
+                $d_id = $d['id_kasir_detail'];
+
+                $ijumlah = number_format($d['jumlah'], 0, '.', ',');
+
+                $jumlah = number_format($d['jumlah'], 0, '.', ',');
+
+                $total = $total + $d['jumlah'];
+
+                $itotal = number_format($total, 0, '.', ',');
+
+                echo'<tr>';
+
+                echo' <td>';
+
+                echo $no;
+
+                echo'</td>';
+
+                echo' <td>';
+
+                echo $d['notrans'];
+
+                echo'</td>';
+
+                echo' <td>';
+
+                echo $d['pasien'];
+
+                echo'</td>';
+
+                $itampil = mysql_query("SELECT * FROM jenis_transaksi where aktif = 'Y' ORDER BY id_jenis_transaksi");
+
+                while ($i = mysql_fetch_array($itampil)) {
+                    $jtampil = mysql_query("SELECT b.jumlah FROM kasir a INNER JOIN kasir_detail b 
                                          ON a.id_kasir = b.id_kasir 
                                          where a.tanggal = '$r[tanggal]'
                                          AND a.id_shift  = '$r[id_shift]'
                                          AND b.notrans  = '$d[notrans]'
                                          AND b.id_jenis_transaksi  = '$i[id_jenis_transaksi]'
                                          AND b.status <> '4'
-                                         "); 
-
-                  $j=mysql_fetch_array($jtampil);
-
-                  if ($j[jumlah]) {
-                    $jml = number_format($j['jumlah'], 0, ".", ",");
-                  } else {
-                    $jml = 0;
-                  }
-                  
-                  echo "<td  style='text-align:right;'>$jml</td>";
-
-             }
-
-             
-               $itampil=mysql_query("SELECT * FROM jenis_pembayaran where aktif = 'Y' ORDER BY id_jenis_pembayaran");
-          
-                while ($i=mysql_fetch_array($itampil)){  
-
-                
-
-                  $pSQL = "SELECT  sum(a.jumlah) as jumlah 
+                                         ");
+
+                    $j = mysql_fetch_array($jtampil);
+
+                    if ($j[jumlah]) {
+                        $jml = number_format($j['jumlah'], 0, '.', ',');
+                    } else {
+                        $jml = 0;
+                    }
+
+                    echo "<td  style='text-align:right;'>$jml</td>";
+                }
+
+                $itampil = mysql_query("SELECT * FROM jenis_pembayaran where aktif = 'Y' ORDER BY id_jenis_pembayaran");
+
+                while ($i = mysql_fetch_array($itampil)) {
+                    $pSQL = "SELECT  sum(a.jumlah) as jumlah 
 
                          FROM kasir_detail a LEFT JOIN jenis_transaksi b
 
@@ -286,52 +249,44 @@ $k_ID  = $_GET['k_ID'];
 
                          AND a.status <> '4'
 
-                         ";
-
-
-
-                $ptampil=mysql_query($pSQL);
-
-                               
-                $p=mysql_fetch_array($ptampil);
-
-                     if ($p[jumlah]) {
-                        $jml = number_format($p['jumlah'], 0, ".", ",");
-                     } else {
-                        $jml = 0;
-                     }
-
-                     echo"<td  style='text-align:right;'>$jml </td>"; 
-
-                
-
-             }    
-             
-           
-             echo" <td>"; 
-
-              $jtampil=mysql_query("SELECT b.ket  FROM kasir a INNER JOIN kasir_detail b 
+                         ";
+
+                    $ptampil = mysql_query($pSQL);
+
+                    $p = mysql_fetch_array($ptampil);
+
+                    if ($p[jumlah]) {
+                        $jml = number_format($p['jumlah'], 0, '.', ',');
+                    } else {
+                        $jml = 0;
+                    }
+
+                    echo"<td  style='text-align:right;'>$jml </td>";
+                }
+
+                echo' <td>';
+
+                $jtampil = mysql_query("SELECT b.ket  FROM kasir a INNER JOIN kasir_detail b 
                                          ON a.id_kasir = b.id_kasir 
                                          where a.tanggal = '$r[tanggal]'
                                          AND a.id_shift  = '$r[id_shift]'
                                          AND b.notrans  = '$d[notrans]'
-                                         "); 
-
-                $j=mysql_fetch_array($jtampil);
-
-              echo $j[ket];
-
-              if ($d['penjamin']) {
-                echo'<br>'.'('.$d['penjamin'].')';
-              }
-                
-             echo"</td>";    
-
-
-                 echo "</tr>";  
-               
-               $no++;
-               } 
+                                         ");
+
+                $j = mysql_fetch_array($jtampil);
+
+                echo $j[ket];
+
+                if ($d['penjamin']) {
+                    echo'<br>'.'('.$d['penjamin'].')';
+                }
+
+                echo'</td>';
+
+                echo '</tr>';
+
+                $no++;
+            }
              ?>
              </tbody> 
 
@@ -343,43 +298,37 @@ $k_ID  = $_GET['k_ID'];
                <th>Total</th>  
                <th></th> 
 
-               <?
-
-                          $itampil=mysql_query("SELECT * FROM jenis_transaksi where aktif = 'Y' ORDER BY id_jenis_transaksi");
-                      
-                            while ($i=mysql_fetch_array($itampil)){  
-
-                              $jtampil=mysql_query("SELECT sum(b.jumlah) as jumlah FROM kasir a INNER JOIN kasir_detail b 
+               <?php
+
+                          $itampil = mysql_query("SELECT * FROM jenis_transaksi where aktif = 'Y' ORDER BY id_jenis_transaksi");
+
+                            while ($i = mysql_fetch_array($itampil)) {
+                                $jtampil = mysql_query("SELECT sum(b.jumlah) as jumlah FROM kasir a INNER JOIN kasir_detail b 
                                                      ON a.id_kasir = b.id_kasir 
                                                      where a.tanggal = '$r[tanggal]'
                                                      AND a.id_shift  = '$r[id_shift]'
                                                      AND b.id_jenis_transaksi  = '$i[id_jenis_transaksi]'
                                                      AND b.status <> '4'
-                                                     "); 
-
-                              $j=mysql_fetch_array($jtampil);
-
-                              if ($j[jumlah]) {
-                                $jml = number_format($j['jumlah'], 0, ".", ",");
-                              } else {
-                                $jml = 0;
-                              }
-                              
-                              echo "<th  style='text-align:right;'>$jml</th>";
-
-                         }
-
-                
+                                                     ");
+
+                                $j = mysql_fetch_array($jtampil);
+
+                                if ($j[jumlah]) {
+                                    $jml = number_format($j['jumlah'], 0, '.', ',');
+                                } else {
+                                    $jml = 0;
+                                }
+
+                                echo "<th  style='text-align:right;'>$jml</th>";
+                            }
+
                 ?>        
 
-                 <?
-                 $itampil=mysql_query("SELECT * FROM jenis_pembayaran where aktif = 'Y' ORDER BY id_jenis_pembayaran");
-            
-                  while ($i=mysql_fetch_array($itampil)){  
-
-                  
-
-                    $pSQL = "SELECT  sum(a.jumlah) as jumlah 
+                 <?php
+                 $itampil = mysql_query("SELECT * FROM jenis_pembayaran where aktif = 'Y' ORDER BY id_jenis_pembayaran");
+
+                  while ($i = mysql_fetch_array($itampil)) {
+                      $pSQL = "SELECT  sum(a.jumlah) as jumlah 
 
                            FROM kasir_detail a LEFT JOIN jenis_transaksi b
 
@@ -405,27 +354,21 @@ $k_ID  = $_GET['k_ID'];
 
                            AND a.status <> '4'
 
-                           ";
-
-
-
-                  $ptampil=mysql_query($pSQL);
-
-                                 
-                  $p=mysql_fetch_array($ptampil);
-
-                       if ($p[jumlah]) {
-                          $jml = number_format($p['jumlah'], 0, ".", ",");
-                       } else {
-                          $jml = 0;
-                       }
-
-                       echo"<th  style='text-align:right;'>$jml </th>"; 
-
-                  
-
-               }    
-               
+                           ";
+
+                      $ptampil = mysql_query($pSQL);
+
+                      $p = mysql_fetch_array($ptampil);
+
+                      if ($p[jumlah]) {
+                          $jml = number_format($p['jumlah'], 0, '.', ',');
+                      } else {
+                          $jml = 0;
+                      }
+
+                      echo"<th  style='text-align:right;'>$jml </th>";
+                  }
+
                ?> 
        
                <th></th> 
@@ -444,32 +387,28 @@ $k_ID  = $_GET['k_ID'];
 
             <tr><td colspan="12">&nbsp</td></tr>  
 
-            <?    
-
-                 if($r[id_shift] == '1') {
-                  $id_shift = '1';
-                 } else {
-                  $id_shift = '%';
-                 }
-
-    
-                 $itampil=mysql_query("SELECT * FROM shift where aktif = 'Y' and id_shift LIKE '$id_shift' ORDER BY id_shift");
-            
-                  while ($i=mysql_fetch_array($itampil)){  
-
-                  $shift = $i['shift'];
-
-             ?>       
+            <?php 
+
+                 if ($r[id_shift] == '1') {
+                     $id_shift = '1';
+                 } else {
+                     $id_shift = '%';
+                 }
+
+                 $itampil = mysql_query("SELECT * FROM shift where aktif = 'Y' and id_shift LIKE '$id_shift' ORDER BY id_shift");
+
+                  while ($i = mysql_fetch_array($itampil)) {
+                      $shift = $i['shift']; ?>       
 
                     <tr>
                     <th></th>
                     <th></th>
                     <th colspan="3" style="text-align: left;">Total Seluruh Omzet 
-                    <span style='text-transform: capitalize;'><? echo ucfirst(strtolower(($shift)));?></span></th>
+                    <span style='text-transform: capitalize;'><?php echo ucfirst(strtolower(($shift))); ?></span></th>
                     <th style="text-align: left;">Cash</th>
-                    <?
-                            
-
+                    <?php
+
+
                     $pSQL = "SELECT  sum(a.jumlah) as jumlah 
 
                            FROM kasir_detail a LEFT JOIN jenis_transaksi b
@@ -496,28 +435,23 @@ $k_ID  = $_GET['k_ID'];
                                            
                            AND a.status <> '4'
 
-                           ";
-
-
-
-                        $ptampil=mysql_query($pSQL);
-
-                                       
-                        $p=mysql_fetch_array($ptampil);
-
-                             if ($p[jumlah]) {
-                                $cash = number_format($p['jumlah'], 0, ".", ",");
-                             } else {
-                                $cash = 0;
-                             }
-
-                        ?>
-                    <th style="text-align: right;"><?=$cash;?></th>
+                           ";
+
+                      $ptampil = mysql_query($pSQL);
+
+                      $p = mysql_fetch_array($ptampil);
+
+                      if ($p[jumlah]) {
+                          $cash = number_format($p['jumlah'], 0, '.', ',');
+                      } else {
+                          $cash = 0;
+                      } ?>
+                    <th style="text-align: right;"><?=$cash; ?></th>
                     <th style="text-align: left;">Credit</th>
 
-                    <?
-                            
-
+                    <?php
+
+
                     $pSQL = "SELECT  sum(a.jumlah) as jumlah 
 
                            FROM kasir_detail a LEFT JOIN jenis_transaksi b
@@ -544,44 +478,38 @@ $k_ID  = $_GET['k_ID'];
                                            
                            AND a.status <> '4'
 
-                           ";
-
-
-
-                        $ptampil=mysql_query($pSQL);
-
-                                       
-                        $p=mysql_fetch_array($ptampil);
-
-                             if ($p[jumlah]) {
-                                $credit = number_format($p['jumlah'], 0, ".", ",");
-                             } else {
-                                $credit= 0;
-                             }
-
-                        ?>
-
-                    <th style="text-align: right;"><?=$credit;?></th>
+                           ";
+
+                      $ptampil = mysql_query($pSQL);
+
+                      $p = mysql_fetch_array($ptampil);
+
+                      if ($p[jumlah]) {
+                          $credit = number_format($p['jumlah'], 0, '.', ',');
+                      } else {
+                          $credit = 0;
+                      } ?>
+
+                    <th style="text-align: right;"><?=$credit; ?></th>
                     <th colspan="4"></th>
                     </tr> 
 
 
-               <?     
-                  
-
-               }    
-               
+               <?php
+                  }
+
                ?> 
 
-               <? if ($id_shift == '%') { ?>
+               <?php if ($id_shift == '%') {
+                   ?>
                <tr>
                     <th></th>
                     <th></th>
-                    <th colspan="3" style="text-align: left;">Total Omzet Tgl. <?=$tanggal;?>  </th>
+                    <th colspan="3" style="text-align: left;">Total Omzet Tgl. <?=$tanggal; ?>  </th>
                     <th style="text-align: left;">Cash</th>
-                    <?
-                            
-
+                    <?php
+
+
                     $pSQL = "SELECT  sum(a.jumlah) as jumlah 
 
                            FROM kasir_detail a LEFT JOIN jenis_transaksi b
@@ -607,28 +535,23 @@ $k_ID  = $_GET['k_ID'];
                                            
                            AND a.status <> '4'
 
-                           ";
-
-
-
-                        $ptampil=mysql_query($pSQL);
-
-                                       
-                        $p=mysql_fetch_array($ptampil);
-
-                             if ($p[jumlah]) {
-                                $cash = number_format($p['jumlah'], 0, ".", ",");
-                             } else {
-                                $cash = 0;
-                             }
-
-                        ?>
-                    <th style="text-align: right;"><?=$cash;?></th>
+                           ";
+
+                   $ptampil = mysql_query($pSQL);
+
+                   $p = mysql_fetch_array($ptampil);
+
+                   if ($p[jumlah]) {
+                       $cash = number_format($p['jumlah'], 0, '.', ',');
+                   } else {
+                       $cash = 0;
+                   } ?>
+                    <th style="text-align: right;"><?=$cash; ?></th>
                     <th style="text-align: left;">Credit</th>
 
-                    <?
-                            
-
+                    <?php
+
+
                     $pSQL = "SELECT  sum(a.jumlah) as jumlah 
 
                            FROM kasir_detail a LEFT JOIN jenis_transaksi b
@@ -653,28 +576,24 @@ $k_ID  = $_GET['k_ID'];
                                            
                            AND a.status <> '4'
 
-                           ";
-
-
-
-                        $ptampil=mysql_query($pSQL);
-
-                                       
-                        $p=mysql_fetch_array($ptampil);
-
-                             if ($p[jumlah]) {
-                                $credit = number_format($p['jumlah'], 0, ".", ",");
-                             } else {
-                                $credit= 0;
-                             }
-
-                        ?>
-
-                    <th style="text-align: right;"><?=$credit;?></th>
+                           ";
+
+                   $ptampil = mysql_query($pSQL);
+
+                   $p = mysql_fetch_array($ptampil);
+
+                   if ($p[jumlah]) {
+                       $credit = number_format($p['jumlah'], 0, '.', ',');
+                   } else {
+                       $credit = 0;
+                   } ?>
+
+                    <th style="text-align: right;"><?=$credit; ?></th>
                     <th colspan="4"></th>
                     </tr> 
 
-                <? } ?>
+                <?php
+               } ?>
 
                  <tr><td colspan="12">&nbsp</td></tr>  
 
@@ -692,9 +611,9 @@ $k_ID  = $_GET['k_ID'];
                      <th style="" colspan="6">&nbsp</th>  
                 </tr>   
 
-                <?
-                            
-
+                <?php
+
+
                     $pSQL = "SELECT  sum(a.jumlah) as jumlah 
 
                            FROM kasir_detail a LEFT JOIN jenis_transaksi b
@@ -719,21 +638,18 @@ $k_ID  = $_GET['k_ID'];
                                            
                            AND a.status <> '4'
 
-                           ";
-
-
-
-                        $ptampil=mysql_query($pSQL);
-
-                                       
-                        $p=mysql_fetch_array($ptampil);
-
-                             if ($p[jumlah]) {
-                                $total = number_format($p['jumlah'], 0, ".", ",");
-                             } else {
-                                $total = 0;
-                             }
-
+                           ";
+
+                        $ptampil = mysql_query($pSQL);
+
+                        $p = mysql_fetch_array($ptampil);
+
+                             if ($p[jumlah]) {
+                                 $total = number_format($p['jumlah'], 0, '.', ',');
+                             } else {
+                                 $total = 0;
+                             }
+
               ?>
 
 
diff --git a/modul/mod_kasir/form_list_pemesanan.php b/modul/mod_kasir/form_list_pemesanan.php
index 660b61abc4e83817b6d6a48e53da9ae69d2c36b3..2f1d14d3c74704efc05b6fcb7f5bfe23f8e120fc 100755
--- a/modul/mod_kasir/form_list_pemesanan.php
+++ b/modul/mod_kasir/form_list_pemesanan.php
@@ -1,20 +1,15 @@
-<?
-
-session_start();
-
-if (empty($_SESSION['username']) AND empty($_SESSION['password'])){
-
-  echo "<script>window.alert('Please login first.'); window.location=('../../index.php.php')</script>";
-
-} else{
-
-include "./../../config/koneksi.php";
-
-include "./../../config/fungsi_thumb.php";
-
-$idate    = date("Y-m-d");
-
-?>
+<?php
+
+session_start();
+
+if (empty($_SESSION['username']) and empty($_SESSION['password'])) {
+    echo "<script>window.alert('Please login first.'); window.location=('../../index.php.php')</script>";
+} else {
+    include './../../config/koneksi.php';
+
+    include './../../config/fungsi_thumb.php';
+
+    $idate = date('Y-m-d'); ?>
 
 <!doctype html>
 
@@ -156,35 +151,25 @@ $idate    = date("Y-m-d");
 
 <body style='background-color:#fff;'>
 
-<?
-
-$imodule = $_GET['imodule'];
-
-$modul = $_GET['module'];
-
-$title = $_GET['title'];
-
-
-
-$role   = $_SESSION['role'];
-
-
-
-$id_module = $_GET['id_module']; 
-
-
-
-$prd = $_GET['prd']; 
-
-$tanggal = $_GET['tanggal'];
-
-$outlet = $_GET['outlet'];
-
-$notrans = $_GET['notrans'];
-
-  
-
-?>
+<?php
+
+$imodule = $_GET['imodule'];
+
+    $modul = $_GET['module'];
+
+    $title = $_GET['title'];
+
+    $role = $_SESSION['role'];
+
+    $id_module = $_GET['id_module'];
+
+    $prd = $_GET['prd'];
+
+    $tanggal = $_GET['tanggal'];
+
+    $outlet = $_GET['outlet'];
+
+    $notrans = $_GET['notrans']; ?>
 
 
 
@@ -268,11 +253,10 @@ $notrans = $_GET['notrans'];
 
            
 
-        <?
-
-       
-
-      $SQL= "SELECT p.tanggal,a.*,c.id_unit_barang,c.unit_barang,b.kode as kode_bar,b.barang
+        <?php
+
+
+      $SQL = "SELECT p.tanggal,a.*,c.id_unit_barang,c.unit_barang,b.kode as kode_bar,b.barang
 
                   ,a.qty-a.qty_ps as iqty, b.id_merk, b.id_barang
                   ,ifnull((SELECT sum(saldo_akhir)
@@ -322,24 +306,17 @@ $notrans = $_GET['notrans'];
 
                  AND ifnull(d.id_pemesanan_barang_detail,0) = '0'
 
-                 ORDER BY a.notrans,a.seqno";   
-
-
-
-        $tampil=mysql_query($SQL);
-
-         
-
-         $no = 1;
-
-         
-
-         while ($r=mysql_fetch_array($tampil)){  
-
-          //selectPR(no_pr,id_permintaan_barang_detail,ibarang,id_barang,unit_barang,iqty,qty)
-
-
-          $hsql  = mysql_query("SELECT harga as last_price 
+                 ORDER BY a.notrans,a.seqno";
+
+    $tampil = mysql_query($SQL);
+
+    $no = 1;
+
+    while ($r = mysql_fetch_array($tampil)) {
+
+          //selectPR(no_pr,id_permintaan_barang_detail,ibarang,id_barang,unit_barang,iqty,qty)
+
+        $hsql = mysql_query("SELECT harga as last_price 
                                 FROM pemesanan_barang_detail
                                 WHERE id_outlet = '$outlet'
                                 and id_barang = '$r[id_barang]'
@@ -347,38 +324,27 @@ $notrans = $_GET['notrans'];
                                 ORDER BY id_pemesanan_barang_detail 
                                 DESC limit 0,1
 
-                              ");
-
-
-
-             $h         = mysql_fetch_array($hsql);
-
-              
-
-             if ($h['last_price']) {
-              $last_price  = $h['last_price'];
-             } else {
-              $last_price  = 0;  
-             }
-
-
-
-          $tgl = date("d/m/Y", strtotime($r['tanggal']));
-
-          $barang = $r['kode_bar'].' - '.$r['barang'];
-
-          $no_pr = $r['kode'].''.$r['notrans'];
-
-
-
-
-         echo"<tr>";
-
-        ?>
+                              ");
+
+        $h = mysql_fetch_array($hsql);
+
+        if ($h['last_price']) {
+            $last_price = $h['last_price'];
+        } else {
+            $last_price = 0;
+        }
+
+        $tgl = date('d/m/Y', strtotime($r['tanggal']));
+
+        $barang = $r['kode_bar'].' - '.$r['barang'];
+
+        $no_pr = $r['kode'].''.$r['notrans'];
+
+        echo'<tr>'; ?>
 
         <td style='text-align:center;'> 
 
-            <a href="javascript:selectPR('<?php echo trim($no_pr)."','".trim($r['id_permintaan_barang_detail'])."','".trim($barang)."','".trim($r['id_barang'])."','".trim($r['id_merk'])."','".trim($r['id_unit_barang'])."','".number_format($r['iqty'], 2, ".", ",")."','".$r['iqty']."','".$last_price ?>')">
+            <a href="javascript:selectPR('<?php echo trim($no_pr)."','".trim($r['id_permintaan_barang_detail'])."','".trim($barang)."','".trim($r['id_barang'])."','".trim($r['id_merk'])."','".trim($r['id_unit_barang'])."','".number_format($r['iqty'], 2, '.', ',')."','".$r['iqty']."','".$last_price ?>')">
 
             <span class='icon'><i class='fa fa-check'></i></span>
 
@@ -388,35 +354,30 @@ $notrans = $_GET['notrans'];
 
 
 
-        <?
-
-        echo"<td>".$tgl."</td>";
-
-        echo"<td>".$r['kode']."".$r['notrans']."</td>";
-
-        echo"<td>".$r['kode_bar']."</td>";
-
-        echo"<td>".$r['barang']."</td>";
-
-        echo"<td style='text-align:right;'>".number_format($r['qty'], 2, ".", ",")."</td>";  
-
-        echo"<td style='text-align:right;'>".number_format($r['qty_ps'], 2, ".", ",")."</td>";  
-
-        echo"<td style='text-align:right;'>".number_format($r['iqty'], 2, ".", ",")."</td>";  
-
-         echo"<td style='text-align:right;'>".number_format($r['stok'], 2, ".", ",")."</td>";  
-
-        echo"<td>".$r['unit_barang']."</td>";              
-
-         echo"</tr>";
-
-         $no++;
-
-            
-
-         }
-
-         ?>
+        <?php
+
+        echo'<td>'.$tgl.'</td>';
+
+        echo'<td>'.$r['kode'].''.$r['notrans'].'</td>';
+
+        echo'<td>'.$r['kode_bar'].'</td>';
+
+        echo'<td>'.$r['barang'].'</td>';
+
+        echo"<td style='text-align:right;'>".number_format($r['qty'], 2, '.', ',').'</td>';
+
+        echo"<td style='text-align:right;'>".number_format($r['qty_ps'], 2, '.', ',').'</td>';
+
+        echo"<td style='text-align:right;'>".number_format($r['iqty'], 2, '.', ',').'</td>';
+
+        echo"<td style='text-align:right;'>".number_format($r['stok'], 2, '.', ',').'</td>';
+
+        echo'<td>'.$r['unit_barang'].'</td>';
+
+        echo'</tr>';
+
+        $no++;
+    } ?>
 
         </tbody>
 
@@ -466,63 +427,83 @@ $notrans = $_GET['notrans'];
 
               
 
-    <?php if ($size == '10') { ?>
+    <?php if ($size == '10') {
+        ?>
 
     <option value="10" selected="selected">10</option>
 
-    <?php } else { ?>
+    <?php
+    } else {
+        ?>
 
     <option value="10">10</option>
 
-    <?php  } ?>
+    <?php
+    } ?>
 
 
 
-     <?php if ($size == '15') { ?>
+     <?php if ($size == '15') {
+        ?>
 
     <option value="15" selected="selected">15</option>
 
-    <?php } else { ?>
+    <?php
+    } else {
+        ?>
 
     <option value="15">15</option>
 
-    <?php  } ?>
+    <?php
+    } ?>
 
 
 
-    <?php if ($size == '20') { ?>
+    <?php if ($size == '20') {
+        ?>
 
     <option value="20" selected="selected">20</option>
 
-    <?php } else { ?>
+    <?php
+    } else {
+        ?>
 
     <option value="20">20</option>
 
-    <?php  } ?>
+    <?php
+    } ?>
 
 
 
-    <?php if ($size == '50') { ?>
+    <?php if ($size == '50') {
+        ?>
 
     <option value="50" selected="selected">20</option>
 
-    <?php } else { ?>
+    <?php
+    } else {
+        ?>
 
     <option value="50">50</option>
 
-               <?php  } ?>
+               <?php
+    } ?>
 
 
 
-    <?php if ($size == '100') { ?>
+    <?php if ($size == '100') {
+        ?>
 
     <option value="100" selected="selected">100</option>
 
-    <?php } else { ?>
+    <?php
+    } else {
+        ?>
 
     <option value="100">100</option>
 
-     <?php  } ?>
+     <?php
+    } ?>
 
               
 
@@ -616,8 +597,7 @@ $notrans = $_GET['notrans'];
 
 </html>
 
-<?
-
-}
-
+<?php
+}
+
 ?>
\ No newline at end of file
diff --git a/modul/mod_kasir/get_top.php b/modul/mod_kasir/get_top.php
index 2986307e02b51c6308bee692d2dda49dabbd1f0e..7cf15cd130800631e1afacd275984745b41f6b1e 100755
--- a/modul/mod_kasir/get_top.php
+++ b/modul/mod_kasir/get_top.php
@@ -1,6 +1,5 @@
-<?php
-
-$q = intval($_GET['q']);
-
-echo $q;
-?>
+<?php
+
+$q = intval($_GET['q']);
+
+echo $q;
diff --git a/modul/mod_kasir/getbarang.php b/modul/mod_kasir/getbarang.php
index 8ca549938377ed6235ab90e4ac9d26a037a343b4..d93b81a0aae9e05f4c0d316f01a03a0f88cf5d4a 100755
--- a/modul/mod_kasir/getbarang.php
+++ b/modul/mod_kasir/getbarang.php
@@ -1,30 +1,18 @@
-<?php
-
-session_start();
-
-include "../../config/koneksi.php";
-
-
-
-$prd    = $_GET['prd']; 
-
-$notrans = $_GET['notrans'];
-
-$kode    = $_GET['kode']; 
-
-
-
-
-
-$q =  '%' . trim($_REQUEST['term']) . '%';
-
-    
-
- 
-
-
-
-    $sql="select   concat(a.kode,' - ',a.barang) as barang
+<?php
+
+session_start();
+
+include '../../config/koneksi.php';
+
+$prd = $_GET['prd'];
+
+$notrans = $_GET['notrans'];
+
+$kode = $_GET['kode'];
+
+$q = '%'.trim($_REQUEST['term']).'%';
+
+    $sql = "select   concat(a.kode,' - ',a.barang) as barang
 
                 ,   a.id_barang
 
@@ -56,52 +44,28 @@ $q =  '%' . trim($_REQUEST['term']) . '%';
 
             limit 0,10
 
-            "; 
-
-
-
- 
-
-    
-
-
-
-    $tampil=mysql_query($sql);
-
-    $data = array();
-
-    while($r=mysql_fetch_array($tampil)) {
-
-
-
-
-
-        $data[] = array(
-
-                'value' => $r['barang'] ,
-
-                'id_barang' => $r['id_barang'] ,
-
-                'merk' => $r['id_merk'] ,
-
-                'jenis_barang' => $r['jenis_barang'] ,
-
-                'unit_barang' => $r['unit_barang'] ,
-
-            );
-
-
-
-    }
-
-
-
- 
-
-
-
-
-
-echo json_encode($data);
-
-flush();
\ No newline at end of file
+            ";
+
+    $tampil = mysql_query($sql);
+
+    $data = [];
+
+    while ($r = mysql_fetch_array($tampil)) {
+        $data[] = [
+
+                'value' => $r['barang'],
+
+                'id_barang' => $r['id_barang'],
+
+                'merk' => $r['id_merk'],
+
+                'jenis_barang' => $r['jenis_barang'],
+
+                'unit_barang' => $r['unit_barang'],
+
+            ];
+    }
+
+echo json_encode($data);
+
+flush();
diff --git a/modul/mod_kasir/getterm.php b/modul/mod_kasir/getterm.php
index 100dc670b07586875f7322d21dcbb8f304ba3273..4626ce2d20f76f108a2234992662d32b31bf6cee 100755
--- a/modul/mod_kasir/getterm.php
+++ b/modul/mod_kasir/getterm.php
@@ -1,20 +1,19 @@
-<?php
-
-include "../../config/koneksi.php";
-
-$q = intval($_GET['q']);
-
-
-$tampil=mysql_query("SELECT term FROM supplier WHERE id_supplier = '".$q."'");
-
-$r=mysql_fetch_array($tampil);
-
-$term = $r['term'];
-
+<?php
+
+include '../../config/koneksi.php';
+
+$q = intval($_GET['q']);
+
+$tampil = mysql_query("SELECT term FROM supplier WHERE id_supplier = '".$q."'");
+
+$r = mysql_fetch_array($tampil);
+
+$term = $r['term'];
+
 ?>
 
-<input type="text" name="term" id="term" value="<?php echo $term;?>" class="form-control"  readonly>  
+<input type="text" name="term" id="term" value="<?php echo $term; ?>" class="form-control"  readonly>  
 
-<?
-//mysqli_close($con);
+<?php
+//mysqli_close($con);
 ?>
\ No newline at end of file
diff --git a/modul/mod_kategori/aksi_kategori.php b/modul/mod_kategori/aksi_kategori.php
index 10ef03a13df055d4be730c2df1963c4caa0cd3c9..d6e2cf23b444954b99c84bdb769c4622abe69101 100755
--- a/modul/mod_kategori/aksi_kategori.php
+++ b/modul/mod_kategori/aksi_kategori.php
@@ -1,59 +1,49 @@
-<?php
-session_start();
-if (empty($_SESSION['username']) AND empty($_SESSION['password'])){
-  echo "<script>window.alert('Please login first.'); window.location=('../../index.php.php')</script>";
-} else{
-include "./../../config/koneksi.php";
-include "./../../config/fungsi_thumb.php";
-
-$module=$_GET[module];
-$act=$_GET[act];
-
-$date     = date("d/m/Y");  
-$idate    = date("Y-m-d");
-$hour = time() - (1 * 1 * 60 * 60);
-$datetime   = date("Y-m-d G:i:s", $hour);
-$userid   = $_SESSION['userid'];
-
-
-// Hapus modul
-if ($module=='kategori' AND $act=='hapus'){
-  $id = $_GET['id'];
-  $id_module = $_GET['id_module'];
-   
-  mysql_query("DELETE FROM ".$module." WHERE id_".$module." = $id");
-
-   //header('location:../../main.php?module='.$module.'&id_module='.$id_module);          
-
-  ?>
+<?php
+session_start();
+if (empty($_SESSION['username']) and empty($_SESSION['password'])) {
+    echo "<script>window.alert('Please login first.'); window.location=('../../index.php.php')</script>";
+} else {
+    include './../../config/koneksi.php';
+    include './../../config/fungsi_thumb.php';
+
+    $module = $_GET[module];
+    $act = $_GET[act];
+
+    $date = date('d/m/Y');
+    $idate = date('Y-m-d');
+    $hour = time() - (1 * 1 * 60 * 60);
+    $datetime = date('Y-m-d G:i:s', $hour);
+    $userid = $_SESSION['userid'];
+
+    // Hapus modul
+    if ($module == 'kategori' and $act == 'hapus') {
+        $id = $_GET['id'];
+        $id_module = $_GET['id_module'];
+
+        mysql_query('DELETE FROM '.$module.' WHERE id_'.$module." = $id");
+
+        //header('location:../../main.php?module='.$module.'&id_module='.$id_module); ?>
    
   <script language="javascript">
-     window.parent.location.href = "<?php echo"./../../main.php?module=$module&id_module=$id_module";?>";  
+     window.parent.location.href = "<?php echo"./../../main.php?module=$module&id_module=$id_module"; ?>";  
      window.parent.tb_remove();
    </script>
   
-  <?php                 
-   
- }
-
-  // Input group
-elseif ($module=='kategori' AND $act=='input'){
-
-  $id_module = $_POST['id_module'];
-
-
-   if($_POST['ID']){
-   mysql_query("UPDATE kategori SET kategori   = '$_POST[kategori]'
+  <?php
+    }
+
+    // Input group
+    elseif ($module == 'kategori' and $act == 'input') {
+        $id_module = $_POST['id_module'];
+
+        if ($_POST['ID']) {
+            mysql_query("UPDATE kategori SET kategori   = '$_POST[kategori]'
                     ,upddt   = '$datetime' 
                   ,updby   = '$userid' 
                   ,aktif     = '$_POST[aktif]'  
-                          WHERE id_kategori    = '$_POST[ID]'");
-
-                           
-
-      
-   } else {
-   mysql_query("INSERT INTO kategori(kategori
+                          WHERE id_kategori    = '$_POST[ID]'");
+        } else {
+            mysql_query("INSERT INTO kategori(kategori
                    ,crtdt
                    ,crtby
                    ,upddt
@@ -64,25 +54,17 @@ elseif ($module=='kategori' AND $act=='input'){
                   ,'$userid'
                   ,'$datetime'
                   ,'$userid'
-                    ,'$_POST[aktif]')");
-  
-                
-   }
-   
-
-   //header('location:../../main.php?module='.$module.'&id_module='.$id_module);          
-
-  ?>
+                    ,'$_POST[aktif]')");
+        }
+
+        //header('location:../../main.php?module='.$module.'&id_module='.$id_module); ?>
    
   <script language="javascript">
-     window.parent.location.href = "<?php echo"./../../main.php?module=$module&id_module=$id_module";?>";  
+     window.parent.location.href = "<?php echo"./../../main.php?module=$module&id_module=$id_module"; ?>";  
      window.parent.tb_remove();
    </script>
   
-  <?php                               
- 
-
-}
-
-}
+  <?php
+    }
+}
 ?>
diff --git a/modul/mod_kategori/form_kategori.php b/modul/mod_kategori/form_kategori.php
index f60532786f985c486ea60a22334ef5713f09fce5..2ff92c210ea14f3e7d3fabf4a14385a76c71811e 100755
--- a/modul/mod_kategori/form_kategori.php
+++ b/modul/mod_kategori/form_kategori.php
@@ -1,10 +1,9 @@
-<?
-session_start();
-if (empty($_SESSION['username']) AND empty($_SESSION['password'])){
-  echo "<script>window.alert('Please login first.'); window.location=('../../index.php.php')</script>";
-} else{
-include "./../../config/koneksi.php";
-?>
+<?php
+session_start();
+if (empty($_SESSION['username']) and empty($_SESSION['password'])) {
+    echo "<script>window.alert('Please login first.'); window.location=('../../index.php.php')</script>";
+} else {
+    include './../../config/koneksi.php'; ?>
 <!doctype html>
 <html>
 <head>
@@ -32,41 +31,37 @@ include "./../../config/koneksi.php";
 </head>
 
 <body style='background-color:#fff;'>
-<?
-
-$modul = $_GET['module'];
-$title = $_GET['title'];
-
-$role   = $_SESSION['role'];
-
-$id_module = $_GET['id_module']; 
-
-  $id = isset($_GET['id_kategori']) ? intval($_GET['id_kategori']) : false;
-  
-  if($id){
-     $query = mysql_query('SELECT * FROM kategori WHERE id_kategori = "'.$id.'"');
-     if($query && mysql_num_rows($query) == 1){
-        $data = mysql_fetch_object($query);
-     }else 
-        die('Data modul tidak ditemukan');
-  }
-  
-if ($_GET['igroup']) {
-  $group  = $_GET['igroup'];
-} else {
-  $group  = $data->id_kategori;
-  
-}
-
-if ($_GET['imenu']) {
-  $imenu  = $_GET['imenu'];
-} else {
-  $imenu  = $data->id_modul;  
-  
-}
-
-  
-?>
+<?php
+
+$modul = $_GET['module'];
+    $title = $_GET['title'];
+
+    $role = $_SESSION['role'];
+
+    $id_module = $_GET['id_module'];
+
+    $id = isset($_GET['id_kategori']) ? intval($_GET['id_kategori']) : false;
+
+    if ($id) {
+        $query = mysql_query('SELECT * FROM kategori WHERE id_kategori = "'.$id.'"');
+        if ($query && mysql_num_rows($query) == 1) {
+            $data = mysql_fetch_object($query);
+        } else {
+            die('Data modul tidak ditemukan');
+        }
+    }
+
+    if ($_GET['igroup']) {
+        $group = $_GET['igroup'];
+    } else {
+        $group = $data->id_kategori;
+    }
+
+    if ($_GET['imenu']) {
+        $imenu = $_GET['imenu'];
+    } else {
+        $imenu = $data->id_modul;
+    } ?>
 
 
 <div class="ix_panel">
@@ -85,9 +80,11 @@ if ($_GET['imenu']) {
          
 
         
-          <?php if ($id){ ?>  
+          <?php if ($id) {
+        ?>  
     
-            <?php if (@$data->aktif=='Y'){ ?>
+            <?php if (@$data->aktif == 'Y') {
+            ?>
               
                 <div class="form-group">
 	               <label class="control-label col-md-3 col-sm-3 col-xs-12" style='padding-top:10px;'>Aktif :</label>
@@ -96,7 +93,9 @@ if ($_GET['imenu']) {
                     <input type=radio name='aktif' value='N' class="flat"> T                
                   </div>
               </div>  
-            <?php   }else{ ?>  
+            <?php
+        } else {
+            ?>  
               
                 <div class="form-group">
 	               <label class="control-label col-md-3 col-sm-3 col-xs-12" style='padding-top:10px;'>Aktif :</label>
@@ -105,9 +104,12 @@ if ($_GET['imenu']) {
                     <input type=radio name='aktif' value='N' class="flat" checked> T          
                   </div>
               </div>  
-             <?php } ?>
+             <?php
+        } ?>
 
-        <?php   }else{ ?>  
+        <?php
+    } else {
+        ?>  
 
            
                 <div class="form-group">
@@ -118,7 +120,8 @@ if ($_GET['imenu']) {
                   </div>
               </div>  
 
-        <?php } ?>
+        <?php
+    } ?>
 
 
 
@@ -337,6 +340,6 @@ if ($_GET['imenu']) {
 
 </body>
 </html>
-<?
-}
+<?php
+}
 ?>
\ No newline at end of file
diff --git a/modul/mod_kunjungan_berobat/aksi_kunjungan_berobat.php b/modul/mod_kunjungan_berobat/aksi_kunjungan_berobat.php
index c317f20ae806ab350921167a218a7de7fdb9d547..b44a5c6745b9dd93d240865a4bb4138f593c5589 100755
--- a/modul/mod_kunjungan_berobat/aksi_kunjungan_berobat.php
+++ b/modul/mod_kunjungan_berobat/aksi_kunjungan_berobat.php
@@ -1,73 +1,64 @@
-<?php
-session_start();
-if (empty($_SESSION['username']) AND empty($_SESSION['password'])){
-  echo "<script>window.alert('Please login first.'); window.location=('../../index.php.php')</script>";
-} else{
-include "./../../config/koneksi.php";
-include "./../../config/fungsi_thumb.php";
-
-$module=$_GET[module];
-$act=$_GET[act];
-
-$date     = date("d/m/Y");  
-$idate    = date("Y-m-d");
-$hour = time() - (1 * 1 * 60 * 60);
-$datetime   = date("Y-m-d G:i:s", $hour);
-$userid   = $_SESSION['userid'];
-$business_type = $_SESSION['business_type']; 
-
-// Hapus modul
-if ($module=='kunjungan_berobat' AND $act=='hapus'){
-  $id = $_GET['id'];
-  $id_module = $_GET['id_module'];
-   
-  mysql_query("DELETE FROM ".$module." WHERE id_".$module." = $id");
-
-   //header('location:../../main.php?module='.$module.'&id_module='.$id_module);          
-
-  ?>
+<?php
+session_start();
+if (empty($_SESSION['username']) and empty($_SESSION['password'])) {
+    echo "<script>window.alert('Please login first.'); window.location=('../../index.php.php')</script>";
+} else {
+    include './../../config/koneksi.php';
+    include './../../config/fungsi_thumb.php';
+
+    $module = $_GET[module];
+    $act = $_GET[act];
+
+    $date = date('d/m/Y');
+    $idate = date('Y-m-d');
+    $hour = time() - (1 * 1 * 60 * 60);
+    $datetime = date('Y-m-d G:i:s', $hour);
+    $userid = $_SESSION['userid'];
+    $business_type = $_SESSION['business_type'];
+
+    // Hapus modul
+    if ($module == 'kunjungan_berobat' and $act == 'hapus') {
+        $id = $_GET['id'];
+        $id_module = $_GET['id_module'];
+
+        mysql_query('DELETE FROM '.$module.' WHERE id_'.$module." = $id");
+
+        //header('location:../../main.php?module='.$module.'&id_module='.$id_module); ?>
    
   <script language="javascript">
-     window.parent.location.href = "<?php echo"./../../main.php?module=$module&id_module=$id_module";?>";  
+     window.parent.location.href = "<?php echo"./../../main.php?module=$module&id_module=$id_module"; ?>";  
      window.parent.tb_remove();
    </script>
   
-  <?php                 
-   
- }
-
-  // Input group
-elseif ($module=='kunjungan_berobat' AND $act=='input'){
-
-  $id_module = $_POST['id_module'];
-
-
-   if($_POST['ID']){
-   mysql_query("UPDATE kunjungan_berobat SET tanggal   = '$_POST[tanggal]'
+  <?php
+    }
+
+    // Input group
+    elseif ($module == 'kunjungan_berobat' and $act == 'input') {
+        $id_module = $_POST['id_module'];
+
+        if ($_POST['ID']) {
+            mysql_query("UPDATE kunjungan_berobat SET tanggal   = '$_POST[tanggal]'
                     ,id_pasien   = '$_POST[pasien]'
                     ,id_poli   = '$_POST[poli]'    
                     ,upddt   = '$datetime' 
                     ,updby   = '$userid' 
                     ,aktif     = '$_POST[aktif]'  
-                 WHERE id_kunjungan_berobat    = '$_POST[ID]'");
-                          
-
-      
-   } else {
-
-   $sql=mysql_query("select no_urut from kunjungan_berobat 
+                 WHERE id_kunjungan_berobat    = '$_POST[ID]'");
+        } else {
+            $sql = mysql_query("select no_urut from kunjungan_berobat 
                      where tanggal='$_POST[tanggal]' 
-                     and id_poli   = '$_POST[poli]'   ");
-
-   $r=mysql_fetch_array($sql);
-
-   if ($r['no_urut']) {
-    $no_urut = $r['no_urut']+1;
-   } else {
-    $no_urut = 1;
-   }
-
-   mysql_query("INSERT INTO kunjungan_berobat(tanggal
+                     and id_poli   = '$_POST[poli]'   ");
+
+            $r = mysql_fetch_array($sql);
+
+            if ($r['no_urut']) {
+                $no_urut = $r['no_urut'] + 1;
+            } else {
+                $no_urut = 1;
+            }
+
+            mysql_query("INSERT INTO kunjungan_berobat(tanggal
                     ,no_urut
                    ,id_pasien
                    ,id_poli
@@ -82,25 +73,17 @@ elseif ($module=='kunjungan_berobat' AND $act=='input'){
                    ,'$datetime'
                   ,'$userid'
                   ,'$datetime'
-                  ,'$userid')");
-  
-                
-   }
-   
-
-   //header('location:../../main.php?module='.$module.'&id_module='.$id_module);          
-
-  ?>
+                  ,'$userid')");
+        }
+
+        //header('location:../../main.php?module='.$module.'&id_module='.$id_module); ?>
    
   <script language="javascript">
-     window.parent.location.href = "<?php echo"./../../main.php?module=$module&id_module=$id_module";?>";  
+     window.parent.location.href = "<?php echo"./../../main.php?module=$module&id_module=$id_module"; ?>";  
      window.parent.tb_remove();
    </script>
   
-  <?php                               
- 
-
-}
-
-}
+  <?php
+    }
+}
 ?>
diff --git a/modul/mod_kunjungan_berobat/form_kunjungan_berobat.php b/modul/mod_kunjungan_berobat/form_kunjungan_berobat.php
index 1e58b74c84d12929d3fac09e05ddc52c098b2a1d..62fbececc07e4c995e8d9ce0208e17d863bc84b9 100755
--- a/modul/mod_kunjungan_berobat/form_kunjungan_berobat.php
+++ b/modul/mod_kunjungan_berobat/form_kunjungan_berobat.php
@@ -1,10 +1,9 @@
-<?
-session_start();
-if (empty($_SESSION['username']) AND empty($_SESSION['password'])){
-  echo "<script>window.alert('Please login first.'); window.location=('../../index.php.php')</script>";
-} else{
-include "./../../config/koneksi.php";
-?>
+<?php
+session_start();
+if (empty($_SESSION['username']) and empty($_SESSION['password'])) {
+    echo "<script>window.alert('Please login first.'); window.location=('../../index.php.php')</script>";
+} else {
+    include './../../config/koneksi.php'; ?>
 <!doctype html>
 <html>
 <head>
@@ -32,47 +31,43 @@ include "./../../config/koneksi.php";
 </head>
 
 <body style='background-color:#fff;'>
-<?
-
-$modul = $_GET['module'];
-$title = $_GET['title'];
-$business_type = $_SESSION['business_type']; 
-$role   = $_SESSION['role'];
-
-$id_module = $_GET['id_module']; 
-
-  $id = isset($_GET['id_kunjungan_berobat']) ? intval($_GET['id_kunjungan_berobat']) : false;
-  
-  if($id){
-     $query = mysql_query('SELECT * FROM kunjungan_berobat WHERE id_kunjungan_berobat = "'.$id.'"');
-     if($query && mysql_num_rows($query) == 1){
-        $data = mysql_fetch_object($query);
-     }else 
-        die('Data modul tidak ditemukan');
-  }
-  
-if ($_GET['igroup']) {
-  $group  = $_GET['igroup'];
-} else {
-  $group  = $data->id_kunjungan_berobat;
-  
-}
-
-if ($_GET['imenu']) {
-  $imenu  = $_GET['imenu'];
-} else {
-  $imenu  = $data->id_modul;  
-  
-}
-
-if ($data->tanggal) {
-  $tanggal = $data->tanggal;
-} else {
-  $tanggal = DATE('Y-m-d');
-}
-
-  
-?>
+<?php
+
+$modul = $_GET['module'];
+    $title = $_GET['title'];
+    $business_type = $_SESSION['business_type'];
+    $role = $_SESSION['role'];
+
+    $id_module = $_GET['id_module'];
+
+    $id = isset($_GET['id_kunjungan_berobat']) ? intval($_GET['id_kunjungan_berobat']) : false;
+
+    if ($id) {
+        $query = mysql_query('SELECT * FROM kunjungan_berobat WHERE id_kunjungan_berobat = "'.$id.'"');
+        if ($query && mysql_num_rows($query) == 1) {
+            $data = mysql_fetch_object($query);
+        } else {
+            die('Data modul tidak ditemukan');
+        }
+    }
+
+    if ($_GET['igroup']) {
+        $group = $_GET['igroup'];
+    } else {
+        $group = $data->id_kunjungan_berobat;
+    }
+
+    if ($_GET['imenu']) {
+        $imenu = $_GET['imenu'];
+    } else {
+        $imenu = $data->id_modul;
+    }
+
+    if ($data->tanggal) {
+        $tanggal = $data->tanggal;
+    } else {
+        $tanggal = date('Y-m-d');
+    } ?>
 
 
 <div class="ix_panel">
@@ -95,19 +90,19 @@ if ($data->tanggal) {
               <div class="col-md-6 col-sm-6 col-xs-12" >
                  <select required name="pasien" class="form-control">
                  <option>--Pilih Pasien--</option>                
-                    <?
-                      $query = mysql_query('SELECT * FROM pasien ORDER BY nama');
-                       if($query && mysql_num_rows($query) > 0){
-                          while($row = mysql_fetch_object($query)){
-
-                            $pasien = $row->ktp.'-'.$row->nama;
-
-                             echo '<option value="'.$row->id_pasien.'"';
-                             if($row->id_pasien == @$data->id_pasien) echo ' selected';
-                             echo '>'.$pasien.'</option>';
-                          }
-                       }        
-                    ?>
+                    <?php
+                      $query = mysql_query('SELECT * FROM pasien ORDER BY nama');
+    if ($query && mysql_num_rows($query) > 0) {
+        while ($row = mysql_fetch_object($query)) {
+            $pasien = $row->ktp.'-'.$row->nama;
+
+            echo '<option value="'.$row->id_pasien.'"';
+            if ($row->id_pasien == @$data->id_pasien) {
+                echo ' selected';
+            }
+            echo '>'.$pasien.'</option>';
+        }
+    } ?>
                     </select>
               </div>
 
@@ -116,16 +111,17 @@ if ($data->tanggal) {
               <div class="col-md-6 col-sm-6 col-xs-12" >
                  <select name="poli" class="form-control">     
                  <option>--Pilih Poliklinik --</option>                          
-                    <?
-                      $query = mysql_query('SELECT * FROM poli ORDER BY poli');
-                       if($query && mysql_num_rows($query) > 0){
-                          while($row = mysql_fetch_object($query)){
-                             echo '<option value="'.$row->id_poli.'"';
-                             if($row->id_poli == @$data->id_poli) echo ' selected';
-                             echo '>'.$row->poli.'</option>';
-                          }
-                       }        
-                    ?>
+                    <?php
+                      $query = mysql_query('SELECT * FROM poli ORDER BY poli');
+    if ($query && mysql_num_rows($query) > 0) {
+        while ($row = mysql_fetch_object($query)) {
+            echo '<option value="'.$row->id_poli.'"';
+            if ($row->id_poli == @$data->id_poli) {
+                echo ' selected';
+            }
+            echo '>'.$row->poli.'</option>';
+        }
+    } ?>
                     </select>
               </div>
 
@@ -343,6 +339,6 @@ if ($data->tanggal) {
 
 </body>
 </html>
-<?
-}
+<?php
+}
 ?>
\ No newline at end of file
diff --git a/modul/mod_modul/aksi_modul.php b/modul/mod_modul/aksi_modul.php
index e7da34eecc673769fe9364ae6d9df6ec3d36db0f..b19145b1b7410cc3265955dba5945be9c9a770a8 100755
--- a/modul/mod_modul/aksi_modul.php
+++ b/modul/mod_modul/aksi_modul.php
@@ -1,66 +1,56 @@
-<?php
-session_start();
-if (empty($_SESSION['username']) AND empty($_SESSION['password'])){
-  echo "<script>window.alert('Please login first.'); window.location=('../../index.php.php')</script>";
-} else{
-include "./../../config/koneksi.php";
-include "./../../config/fungsi_thumb.php";
-
-$module=$_GET[module];
-$act=$_GET[act];
-
-$date     = date("d/m/Y");  
-$idate    = date("Y-m-d");
-$hour = time() - (1 * 1 * 60 * 60);
-$datetime   = date("Y-m-d G:i:s", $hour);
-$userid   = $_SESSION['userid'];
-
-
-// Hapus modul
-if ($module=='modul' AND $act=='hapus'){
-  $id_module = $_GET['id_module'];
-  $id = $_GET['id'];
-  
-  mysql_query("DELETE FROM ".$module." WHERE id_".$module." = $id");
-  
-
-  header('location:../../main.php?module='.$module.'&id_module='.$id_module);     
-   
- }
-
-// Input modul
-elseif ($module=='modul' AND $act=='input'){
-
-  if ($_POST['is_form'] == 'Y') {
-    $link =  $_POST['link'];
-  } else {
-    if ($_POST['link']) {
-      $link = '?module='.$_POST['link'];  
-    } else {
-      $link = '';  
-    }
-    
-  }
-
-  $icon = $_POST['icon'];  
-
-  $id_module = $_POST['id_module'];
-  
-
-   if($_POST['ID']){
-   mysql_query("UPDATE modul SET nama_modul = '$_POST[nama_modul]',
+<?php
+session_start();
+if (empty($_SESSION['username']) and empty($_SESSION['password'])) {
+    echo "<script>window.alert('Please login first.'); window.location=('../../index.php.php')</script>";
+} else {
+    include './../../config/koneksi.php';
+    include './../../config/fungsi_thumb.php';
+
+    $module = $_GET[module];
+    $act = $_GET[act];
+
+    $date = date('d/m/Y');
+    $idate = date('Y-m-d');
+    $hour = time() - (1 * 1 * 60 * 60);
+    $datetime = date('Y-m-d G:i:s', $hour);
+    $userid = $_SESSION['userid'];
+
+    // Hapus modul
+    if ($module == 'modul' and $act == 'hapus') {
+        $id_module = $_GET['id_module'];
+        $id = $_GET['id'];
+
+        mysql_query('DELETE FROM '.$module.' WHERE id_'.$module." = $id");
+
+        header('location:../../main.php?module='.$module.'&id_module='.$id_module);
+    }
+
+    // Input modul
+    elseif ($module == 'modul' and $act == 'input') {
+        if ($_POST['is_form'] == 'Y') {
+            $link = $_POST['link'];
+        } else {
+            if ($_POST['link']) {
+                $link = '?module='.$_POST['link'];
+            } else {
+                $link = '';
+            }
+        }
+
+        $icon = $_POST['icon'];
+
+        $id_module = $_POST['id_module'];
+
+        if ($_POST['ID']) {
+            mysql_query("UPDATE modul SET nama_modul = '$_POST[nama_modul]',
                                  is_form    = '$_POST[is_form]',
                                 link        = '$_POST[link]',
                                 icon        = '$_POST[icon]',
                                 aktif       = '$_POST[aktif]',          
                                 urutan      = '$_POST[urutan]'  
-                          WHERE id_modul    = '$_POST[ID]'");  
-
-  
-     
-   } else {
-
-       mysql_query("INSERT INTO modul(nama_modul,
+                          WHERE id_modul    = '$_POST[ID]'");
+        } else {
+            mysql_query("INSERT INTO modul(nama_modul,
                                      link,
                                      status_menu,
                                      parentid,  
@@ -79,74 +69,57 @@ elseif ($module=='modul' AND $act=='input'){
                                         'P',
                                         '$_POST[icon]',
                                           '$_POST[aktif]',
-                                        '$_POST[urutan]')");
-
-    
-    }
-  
-  //header('location:../../main.php?module='.$module.'&id_module='.$id_module);               
-  
-  ?>
+                                        '$_POST[urutan]')");
+        }
+
+        //header('location:../../main.php?module='.$module.'&id_module='.$id_module); ?>
    
   <script language="javascript">
-     window.parent.location.href = "<?php echo"./../../main.php?module=$module&id_module=$id_module";?>";  
+     window.parent.location.href = "<?php echo"./../../main.php?module=$module&id_module=$id_module"; ?>";  
      window.parent.tb_remove();
    </script>
   
-  <?php        
-
-}
-
-
-elseif ($module=='modul' AND $act=='hapusmod'){
-  // membaca ID dari data yang akan dihapus
-  $id = $_GET['id'];
-  $id_module = $_GET['id_module'];
-
-  mysql_query("DELETE a
+  <?php
+    } elseif ($module == 'modul' and $act == 'hapusmod') {
+        // membaca ID dari data yang akan dihapus
+  $id = $_GET['id'];
+        $id_module = $_GET['id_module'];
+
+        mysql_query("DELETE a
                 FROM business_group a LEFT JOIN modul b
                 ON a.id_source = b.id_modul
                 WHERE a.id_modul = '$id_module'
-                AND b.parentid = '$id'");
-  mysql_query("DELETE FROM business_group WHERE id_modul = '$id_module' AND id_source = '$id'");
-   
-  mysql_query("DELETE FROM modul WHERE id_modul = '$id'");
-  mysql_query("DELETE FROM modul WHERE parentid = $id");
-  
-
-  //header('location:../../main.php?module='.$module.'&id_module='.$id_module); 
-
-  ?>
+                AND b.parentid = '$id'");
+        mysql_query("DELETE FROM business_group WHERE id_modul = '$id_module' AND id_source = '$id'");
+
+        mysql_query("DELETE FROM modul WHERE id_modul = '$id'");
+        mysql_query("DELETE FROM modul WHERE parentid = $id");
+
+        //header('location:../../main.php?module='.$module.'&id_module='.$id_module); ?>
    
   <script language="javascript">
-     window.parent.location.href = "<?php echo"./../../main.php?module=$module&id_module=$id_module";?>";  
+     window.parent.location.href = "<?php echo"./../../main.php?module=$module&id_module=$id_module"; ?>";  
      window.parent.tb_remove();
    </script>
   
-  <?php        
-   
-}
-  
-elseif ($module=='modul' AND $act=='subinput'){
-
- if ($_POST['is_form'] == 'Y') {
-    $link =  $_POST['link'];
-  } else {
-    if ($_POST['link']) {
-      $link = '?module='.$_POST['link'];  
-    } else {
-      $link = '';  
-    }
-    
-  }
-
-  $icon = $_POST['icon'];  
-
-  $id_module = $_POST['id_module'];
-  
-
-   if($_POST['ID']){
-   mysql_query("UPDATE modul SET nama_modul = '$_POST[nama_modul]',
+  <?php
+    } elseif ($module == 'modul' and $act == 'subinput') {
+        if ($_POST['is_form'] == 'Y') {
+            $link = $_POST['link'];
+        } else {
+            if ($_POST['link']) {
+                $link = '?module='.$_POST['link'];
+            } else {
+                $link = '';
+            }
+        }
+
+        $icon = $_POST['icon'];
+
+        $id_module = $_POST['id_module'];
+
+        if ($_POST['ID']) {
+            mysql_query("UPDATE modul SET nama_modul = '$_POST[nama_modul]',
                                  link        = '$_POST[link]',
                                 is_form   = '$_POST[is_form]',
                                 is_report   = '$_POST[is_report]',  
@@ -154,13 +127,9 @@ elseif ($module=='modul' AND $act=='subinput'){
                                 icon        = '$_POST[icon]',
                                 aktif       = '$_POST[aktif]',            
                                 urutan      = '$_POST[urutan]'  
-                          WHERE id_modul    = '$_POST[ID]'");   
-
-     
-     
-   } else {
-     
-   mysql_query("INSERT INTO modul(nama_modul,
+                          WHERE id_modul    = '$_POST[ID]'");
+        } else {
+            mysql_query("INSERT INTO modul(nama_modul,
                                  link,
                                  status_menu,
                                  parentid,
@@ -179,23 +148,17 @@ elseif ($module=='modul' AND $act=='subinput'){
                                 '$_POST[orientation]',  
                                 '$icon',
                                 '$_POST[aktif]',
-                                '$_POST[urutan]')");
-
-                    
-   }
-   
-  //header('location:../../main.php?module='.$module.'&id_module='.$id_module);          
-
-  ?>
+                                '$_POST[urutan]')");
+        }
+
+        //header('location:../../main.php?module='.$module.'&id_module='.$id_module); ?>
    
   <script language="javascript">
-     window.parent.location.href = "<?php echo"./../../main.php?module=$module&id_module=$id_module";?>";  
+     window.parent.location.href = "<?php echo"./../../main.php?module=$module&id_module=$id_module"; ?>";  
      window.parent.tb_remove();
    </script>
   
-  <?php               
- 
-
-}
-}
+  <?php
+    }
+}
 ?>
diff --git a/modul/mod_modul/form_modul.php b/modul/mod_modul/form_modul.php
index d91dd496a3267f0b454659c3fd8e238805e2cdae..4a8a751df0fa01172c0d8dea41328f14fb8a5f4d 100755
--- a/modul/mod_modul/form_modul.php
+++ b/modul/mod_modul/form_modul.php
@@ -1,10 +1,9 @@
-<?
-session_start();
-if (empty($_SESSION['username']) AND empty($_SESSION['password'])){
-  echo "<script>window.alert('Please login first.'); window.location=('../../index.php.php')</script>";
-} else{
-include "./../../config/koneksi.php";
-?>
+<?php
+session_start();
+if (empty($_SESSION['username']) and empty($_SESSION['password'])) {
+    echo "<script>window.alert('Please login first.'); window.location=('../../index.php.php')</script>";
+} else {
+    include './../../config/koneksi.php'; ?>
 <!doctype html>
 <html>
 <head>
@@ -32,41 +31,37 @@ include "./../../config/koneksi.php";
 </head>
 
 <body style='background-color:#fff;'>
-<?
-
-$modul = $_GET['module'];
-$title = $_GET['title'];
-
-$role   = $_SESSION['role'];
-
-$id_module = $_GET['id_module']; 
-
-  $id = isset($_GET['id_modul']) ? intval($_GET['id_modul']) : false;
-  
-  if($id){
-     $query = mysql_query('SELECT * FROM modul WHERE id_modul = "'.$id.'"');
-     if($query && mysql_num_rows($query) == 1){
-        $data = mysql_fetch_object($query);
-     }else 
-        die('Data modul tidak ditemukan');
-  }
-  
-if ($_GET['igroup']) {
-  $group  = $_GET['igroup'];
-} else {
-  $group  = $data->id_groups;
-  
-}
-
-if ($_GET['imenu']) {
-  $imenu  = $_GET['imenu'];
-} else {
-  $imenu  = $data->id_modul;  
-  
-}
-
-  
-?>
+<?php
+
+$modul = $_GET['module'];
+    $title = $_GET['title'];
+
+    $role = $_SESSION['role'];
+
+    $id_module = $_GET['id_module'];
+
+    $id = isset($_GET['id_modul']) ? intval($_GET['id_modul']) : false;
+
+    if ($id) {
+        $query = mysql_query('SELECT * FROM modul WHERE id_modul = "'.$id.'"');
+        if ($query && mysql_num_rows($query) == 1) {
+            $data = mysql_fetch_object($query);
+        } else {
+            die('Data modul tidak ditemukan');
+        }
+    }
+
+    if ($_GET['igroup']) {
+        $group = $_GET['igroup'];
+    } else {
+        $group = $data->id_groups;
+    }
+
+    if ($_GET['imenu']) {
+        $imenu = $_GET['imenu'];
+    } else {
+        $imenu = $data->id_modul;
+    } ?>
 
 
 <div class="ix_panel">
@@ -95,9 +90,11 @@ if ($_GET['imenu']) {
               </div>
           </div>  
 
-          <?php if ($id){ ?>  
+          <?php if ($id) {
+        ?>  
     
-            <?php if (@$data->is_form=='Y'){ ?>
+            <?php if (@$data->is_form == 'Y') {
+            ?>
               <div class="form-group">
                 <label class="control-label col-md-3 col-sm-3 col-xs-12" style='padding-top:10px;'>Is Form :</label>
                   <div class="col-md-6 col-sm-6 col-xs-12">
@@ -105,7 +102,9 @@ if ($_GET['imenu']) {
                     <input type=radio name='is_form' value='N' class="flat"> T                
                   </div>
               </div>  
-            <?php   }else{ ?>  
+            <?php
+        } else {
+            ?>  
               <div class="form-group">
                 <label class="control-label col-md-3 col-sm-3 col-xs-12" style='padding-top:10px;'>Is Form :</label>
                   <div class="col-md-6 col-sm-6 col-xs-12">
@@ -113,9 +112,12 @@ if ($_GET['imenu']) {
                     <input type=radio name='is_form' value='N' class="flat" checked> T          
                   </div>
               </div>  
-             <?php } ?>
+             <?php
+        } ?>
 
-        <?php   }else{ ?>  
+        <?php
+    } else {
+        ?>  
 
              <div class="form-group">
                 <label class="control-label col-md-3 col-sm-3 col-xs-12" style='padding-top:10px;'>Is Form :</label>
@@ -125,7 +127,8 @@ if ($_GET['imenu']) {
                   </div>
               </div>  
 
-        <?php } ?>
+        <?php
+    } ?>
 
 
 
@@ -136,9 +139,11 @@ if ($_GET['imenu']) {
               </div>
           </div>  
 
-          <?php if ($id){ ?>  
+          <?php if ($id) {
+        ?>  
     
-            <?php if (@$data->aktif=='Y'){ ?>
+            <?php if (@$data->aktif == 'Y') {
+            ?>
               <div class="form-group">
                 <label class="control-label col-md-3 col-sm-3 col-xs-12" style='padding-top:10px;'>Aktif :</label>
                   <div class="col-md-6 col-sm-6 col-xs-12">
@@ -146,7 +151,9 @@ if ($_GET['imenu']) {
                     <input type=radio name='aktif' value='N' class="flat"> T                
                   </div>
               </div>  
-            <?php   }else{ ?>  
+            <?php
+        } else {
+            ?>  
               <div class="form-group">
                 <label class="control-label col-md-3 col-sm-3 col-xs-12" style='padding-top:10px;'>Aktif :</label>
                   <div class="col-md-6 col-sm-6 col-xs-12">
@@ -154,9 +161,12 @@ if ($_GET['imenu']) {
                     <input type=radio name='aktif' value='N' class="flat" checked> T          
                   </div>
               </div>  
-             <?php } ?>
+             <?php
+        } ?>
 
-        <?php   }else{ ?>  
+        <?php
+    } else {
+        ?>  
 
                 <div class="form-group">
                 <label class="control-label col-md-3 col-sm-3 col-xs-12" style='padding-top:10px;'>Aktif :</label>
@@ -166,7 +176,8 @@ if ($_GET['imenu']) {
                   </div>
               </div>  
 
-        <?php } ?>
+        <?php
+    } ?>
 
 
 
@@ -385,6 +396,6 @@ if ($_GET['imenu']) {
 
 </body>
 </html>
-<?
-}
+<?php
+}
 ?>
\ No newline at end of file
diff --git a/modul/mod_modul/form_submodul.php b/modul/mod_modul/form_submodul.php
index cc57ec34e6044f8daabe78db095dcb1cc7a2a804..0880ea7e205fb35ad08eb4f5023051a1f48a7b0d 100755
--- a/modul/mod_modul/form_submodul.php
+++ b/modul/mod_modul/form_submodul.php
@@ -1,10 +1,9 @@
-<?
-session_start();
-if (empty($_SESSION['username']) AND empty($_SESSION['password'])){
-  echo "<script>window.alert('Please login first.'); window.location=('../../index.php.php')</script>";
-} else{
-include "./../../config/koneksi.php";
-?>
+<?php
+session_start();
+if (empty($_SESSION['username']) and empty($_SESSION['password'])) {
+    echo "<script>window.alert('Please login first.'); window.location=('../../index.php.php')</script>";
+} else {
+    include './../../config/koneksi.php'; ?>
 <!doctype html>
 <html>
 <head>
@@ -32,41 +31,37 @@ include "./../../config/koneksi.php";
 </head>
 
 <body style='background-color:#fff;'>
-<?
-$modul = $_GET['module'];
-$title = $_GET['title'];
-
-$role   = $_SESSION['role'];
-
-$id_module = $_GET['id_module']; 
-$parentid = $_GET['parentid']; 
-
-    $id = isset($_GET['id_modul']) ? intval($_GET['id_modul'])  : false;
-    
-    if($id){
-       $query = mysql_query('SELECT * FROM modul WHERE id_modul = "'.$id.'"');
-       if($query && mysql_num_rows($query) == 1){
-          $data = mysql_fetch_object($query);
-       }else 
-          die('Data modul tidak ditemukan');
-    }
-  
-if ($_GET['igroup']) {
-  $group  = $_GET['igroup'];
-} else {
-  $group  = $data->id_groups;
-  
-}
-
-if ($_GET['imenu']) {
-  $imenu  = $_GET['imenu'];
-} else {
-  $imenu  = $data->id_modul;  
-  
-}
-
-  
-?>
+<?php
+$modul = $_GET['module'];
+    $title = $_GET['title'];
+
+    $role = $_SESSION['role'];
+
+    $id_module = $_GET['id_module'];
+    $parentid = $_GET['parentid'];
+
+    $id = isset($_GET['id_modul']) ? intval($_GET['id_modul']) : false;
+
+    if ($id) {
+        $query = mysql_query('SELECT * FROM modul WHERE id_modul = "'.$id.'"');
+        if ($query && mysql_num_rows($query) == 1) {
+            $data = mysql_fetch_object($query);
+        } else {
+            die('Data modul tidak ditemukan');
+        }
+    }
+
+    if ($_GET['igroup']) {
+        $group = $_GET['igroup'];
+    } else {
+        $group = $data->id_groups;
+    }
+
+    if ($_GET['imenu']) {
+        $imenu = $_GET['imenu'];
+    } else {
+        $imenu = $data->id_modul;
+    } ?>
 
 
 <div class="ix_panel">
@@ -98,9 +93,11 @@ if ($_GET['imenu']) {
               </div>
           </div>  
 
-          <?php if ($id){ ?>  
+          <?php if ($id) {
+        ?>  
     
-            <?php if (@$data->is_form=='Y'){ ?>
+            <?php if (@$data->is_form == 'Y') {
+            ?>
               
                 <div class="form-group">
 	               <label class="control-label col-md-3 col-sm-3 col-xs-12" style='padding-top:10px;'>Is Form :</label>
@@ -109,7 +106,9 @@ if ($_GET['imenu']) {
                     <input type=radio name='is_form' value='N' class="flat"> T                
                   </div>
               </div>  
-            <?php   }else{ ?>  
+            <?php
+        } else {
+            ?>  
               
                 <div class="form-group">
 	               <label class="control-label col-md-3 col-sm-3 col-xs-12" style='padding-top:10px;'>Is Form :</label>
@@ -118,9 +117,12 @@ if ($_GET['imenu']) {
                     <input type=radio name='is_form' value='N' class="flat" checked> T          
                   </div>
               </div>  
-             <?php } ?>
+             <?php
+        } ?>
 
-        <?php   }else{ ?>  
+        <?php
+    } else {
+        ?>  
 
            
                 <div class="form-group">
@@ -131,11 +133,14 @@ if ($_GET['imenu']) {
                   </div>
               </div>  
 
-        <?php } ?>
+        <?php
+    } ?>
 
-        <?php if ($id){ ?>  
+        <?php if ($id) {
+        ?>  
     
-            <?php if (@$data->is_report=='Y'){ ?>
+            <?php if (@$data->is_report == 'Y') {
+            ?>
               
                 <div class="form-group">
 	                 <label class="control-label col-md-3 col-sm-3 col-xs-12" style='padding-top:10px;'>Is Report :</label>
@@ -144,7 +149,9 @@ if ($_GET['imenu']) {
                     <input type=radio name='is_report' value='N' class="flat"> T                
                   </div>
               </div>  
-            <?php   }else{ ?>  
+            <?php
+        } else {
+            ?>  
               
                 <div class="form-group">
 	                 <label class="control-label col-md-3 col-sm-3 col-xs-12" style='padding-top:10px;'>Is Report :</label>
@@ -153,9 +160,12 @@ if ($_GET['imenu']) {
                     <input type=radio name='is_report' value='N' class="flat" checked> T          
                   </div>
               </div>  
-             <?php } ?>
+             <?php
+        } ?>
 
-        <?php   }else{ ?>  
+        <?php
+    } else {
+        ?>  
 
            
                 <div class="form-group">
@@ -166,7 +176,8 @@ if ($_GET['imenu']) {
                   </div>
               </div>  
 
-        <?php } ?>
+        <?php
+    } ?>
 
 
 
@@ -178,9 +189,11 @@ if ($_GET['imenu']) {
               </div>
           </div>  
 
-          <?php if ($id){ ?>  
+          <?php if ($id) {
+        ?>  
     
-            <?php if (@$data->aktif=='Y'){ ?>
+            <?php if (@$data->aktif == 'Y') {
+            ?>
               
                 <div class="form-group">
 	               <label class="control-label col-md-3 col-sm-3 col-xs-12" style='padding-top:10px;'>Aktif :</label>
@@ -189,7 +202,9 @@ if ($_GET['imenu']) {
                     <input type=radio name='aktif' value='N' class="flat"> T                
                   </div>
               </div>  
-            <?php   }else{ ?>  
+            <?php
+        } else {
+            ?>  
               
                 <div class="form-group">
 	               <label class="control-label col-md-3 col-sm-3 col-xs-12" style='padding-top:10px;'>Aktif :</label>
@@ -198,9 +213,12 @@ if ($_GET['imenu']) {
                     <input type=radio name='aktif' value='N' class="flat" checked> T          
                   </div>
               </div>  
-             <?php } ?>
+             <?php
+        } ?>
 
-        <?php   }else{ ?>  
+        <?php
+    } else {
+        ?>  
 
            
                 <div class="form-group">
@@ -211,7 +229,8 @@ if ($_GET['imenu']) {
                   </div>
               </div>  
 
-        <?php } ?>
+        <?php
+    } ?>
 
 
 
@@ -219,7 +238,7 @@ if ($_GET['imenu']) {
              <div class="form-group">
                <div class="col-md-6 col-sm-6 col-xs-12 col-md-offset-3" style='margin-top:20px;'>
                  <input type="hidden" name="ID" value="<?php echo @$data->id_modul?>" />
-                 <input type='hidden' name='jum' value="<?php echo $no-1?>" /> 
+                 <input type='hidden' name='jum' value="<?php echo $no - 1?>" /> 
                  <input type="hidden" name="id_module" value="<?php echo $id_module?>" />
                  <input type="hidden" name="parentid" value="<?php echo $parentid?>" /> 
                   <button type="button" onClick="parent.tb_remove()" class="btn btn-danger">Batal</button>
@@ -432,6 +451,6 @@ if ($_GET['imenu']) {
 
 </body>
 </html>
-<?
-}
+<?php
+}
 ?>
\ No newline at end of file
diff --git a/modul/mod_obat/aksi_obat.php b/modul/mod_obat/aksi_obat.php
index 53d49ebb41d674102fabd314e9cc0992cf95997d..797ad08735ef7f89d46acd83cf71521d62dea679 100755
--- a/modul/mod_obat/aksi_obat.php
+++ b/modul/mod_obat/aksi_obat.php
@@ -1,60 +1,52 @@
-<?php
-session_start();
-if (empty($_SESSION['username']) AND empty($_SESSION['password'])){
-  echo "<script>window.alert('Please login first.'); window.location=('../../index.php.php')</script>";
-} else{
-include "./../../config/koneksi.php";
-include "./../../config/fungsi_thumb.php";
-
-$module=$_GET[module];
-$act=$_GET[act];
-
-$date     = date("d/m/Y");  
-$idate    = date("Y-m-d");
-$hour = time() - (1 * 1 * 60 * 60);
-$datetime   = date("Y-m-d G:i:s", $hour);
-$userid   = $_SESSION['userid'];
-$business_type = $_SESSION['business_type']; 
-
-// Hapus modul
-if ($module=='obat' AND $act=='hapus'){
-  $id = $_GET['id'];
-  $id_module = $_GET['id_module'];
-   
-  mysql_query("DELETE FROM ".$module." WHERE id_".$module." = $id");
-
-   //header('location:../../main.php?module='.$module.'&id_module='.$id_module);          
-
-  ?>
+<?php
+session_start();
+if (empty($_SESSION['username']) and empty($_SESSION['password'])) {
+    echo "<script>window.alert('Please login first.'); window.location=('../../index.php.php')</script>";
+} else {
+    include './../../config/koneksi.php';
+    include './../../config/fungsi_thumb.php';
+
+    $module = $_GET[module];
+    $act = $_GET[act];
+
+    $date = date('d/m/Y');
+    $idate = date('Y-m-d');
+    $hour = time() - (1 * 1 * 60 * 60);
+    $datetime = date('Y-m-d G:i:s', $hour);
+    $userid = $_SESSION['userid'];
+    $business_type = $_SESSION['business_type'];
+
+    // Hapus modul
+    if ($module == 'obat' and $act == 'hapus') {
+        $id = $_GET['id'];
+        $id_module = $_GET['id_module'];
+
+        mysql_query('DELETE FROM '.$module.' WHERE id_'.$module." = $id");
+
+        //header('location:../../main.php?module='.$module.'&id_module='.$id_module); ?>
    
   <script language="javascript">
-     window.parent.location.href = "<?php echo"./../../main.php?module=$module&id_module=$id_module";?>";  
+     window.parent.location.href = "<?php echo"./../../main.php?module=$module&id_module=$id_module"; ?>";  
      window.parent.tb_remove();
    </script>
   
-  <?php                 
-   
- }
-
-  // Input group
-elseif ($module=='obat' AND $act=='input'){
-
-  $id_module = $_POST['id_module'];
-
-
-   if($_POST['ID']){
-   mysql_query("UPDATE obat SET obat   = '$_POST[obat]'
+  <?php
+    }
+
+    // Input group
+    elseif ($module == 'obat' and $act == 'input') {
+        $id_module = $_POST['id_module'];
+
+        if ($_POST['ID']) {
+            mysql_query("UPDATE obat SET obat   = '$_POST[obat]'
                     ,id_satuan   = '$_POST[satuan]'
                     ,jumlah   = '$_POST[jumlah]'    
                     ,upddt   = '$datetime' 
                     ,updby   = '$userid' 
                     ,aktif     = '$_POST[aktif]'  
-                 WHERE id_obat    = '$_POST[ID]'");
-                          
-
-      
-   } else {
-   mysql_query("INSERT INTO obat(obat
+                 WHERE id_obat    = '$_POST[ID]'");
+        } else {
+            mysql_query("INSERT INTO obat(obat
                    ,id_satuan
                    ,jumlah
                    ,crtdt
@@ -69,25 +61,17 @@ elseif ($module=='obat' AND $act=='input'){
                   ,'$userid'
                   ,'$datetime'
                   ,'$userid'
-                    ,'$_POST[aktif]')");
-  
-                
-   }
-   
-
-   //header('location:../../main.php?module='.$module.'&id_module='.$id_module);          
-
-  ?>
+                    ,'$_POST[aktif]')");
+        }
+
+        //header('location:../../main.php?module='.$module.'&id_module='.$id_module); ?>
    
   <script language="javascript">
-     window.parent.location.href = "<?php echo"./../../main.php?module=$module&id_module=$id_module";?>";  
+     window.parent.location.href = "<?php echo"./../../main.php?module=$module&id_module=$id_module"; ?>";  
      window.parent.tb_remove();
    </script>
   
-  <?php                               
- 
-
-}
-
-}
+  <?php
+    }
+}
 ?>
diff --git a/modul/mod_obat/form_obat.php b/modul/mod_obat/form_obat.php
index e890a520a59b2da3fcea120d688a9ce4190b65f7..4586b261aadf572ba44e2b2c39ec4b7959b61bb6 100755
--- a/modul/mod_obat/form_obat.php
+++ b/modul/mod_obat/form_obat.php
@@ -1,10 +1,9 @@
-<?
-session_start();
-if (empty($_SESSION['username']) AND empty($_SESSION['password'])){
-  echo "<script>window.alert('Please login first.'); window.location=('../../index.php.php')</script>";
-} else{
-include "./../../config/koneksi.php";
-?>
+<?php
+session_start();
+if (empty($_SESSION['username']) and empty($_SESSION['password'])) {
+    echo "<script>window.alert('Please login first.'); window.location=('../../index.php.php')</script>";
+} else {
+    include './../../config/koneksi.php'; ?>
 <!doctype html>
 <html>
 <head>
@@ -32,41 +31,37 @@ include "./../../config/koneksi.php";
 </head>
 
 <body style='background-color:#fff;'>
-<?
-
-$modul = $_GET['module'];
-$title = $_GET['title'];
-$business_type = $_SESSION['business_type']; 
-$role   = $_SESSION['role'];
-
-$id_module = $_GET['id_module']; 
-
-  $id = isset($_GET['id_obat']) ? intval($_GET['id_obat']) : false;
-  
-  if($id){
-     $query = mysql_query('SELECT * FROM obat WHERE id_obat = "'.$id.'"');
-     if($query && mysql_num_rows($query) == 1){
-        $data = mysql_fetch_object($query);
-     }else 
-        die('Data modul tidak ditemukan');
-  }
-  
-if ($_GET['igroup']) {
-  $group  = $_GET['igroup'];
-} else {
-  $group  = $data->id_obat;
-  
-}
-
-if ($_GET['imenu']) {
-  $imenu  = $_GET['imenu'];
-} else {
-  $imenu  = $data->id_modul;  
-  
-}
-
-  
-?>
+<?php
+
+$modul = $_GET['module'];
+    $title = $_GET['title'];
+    $business_type = $_SESSION['business_type'];
+    $role = $_SESSION['role'];
+
+    $id_module = $_GET['id_module'];
+
+    $id = isset($_GET['id_obat']) ? intval($_GET['id_obat']) : false;
+
+    if ($id) {
+        $query = mysql_query('SELECT * FROM obat WHERE id_obat = "'.$id.'"');
+        if ($query && mysql_num_rows($query) == 1) {
+            $data = mysql_fetch_object($query);
+        } else {
+            die('Data modul tidak ditemukan');
+        }
+    }
+
+    if ($_GET['igroup']) {
+        $group = $_GET['igroup'];
+    } else {
+        $group = $data->id_obat;
+    }
+
+    if ($_GET['imenu']) {
+        $imenu = $_GET['imenu'];
+    } else {
+        $imenu = $data->id_modul;
+    } ?>
 
 
 <div class="ix_panel">
@@ -88,16 +83,17 @@ if ($_GET['imenu']) {
             <label class="control-label col-md-3 col-sm-3 col-xs-12" style='padding-top:10px;'>Satuan :</label>
               <div class="col-md-6 col-sm-6 col-xs-12" >
                  <select name="satuan" class="form-control">                
-                    <?
-                      $query = mysql_query('SELECT * FROM satuan ORDER BY satuan');
-                       if($query && mysql_num_rows($query) > 0){
-                          while($row = mysql_fetch_object($query)){
-                             echo '<option value="'.$row->id_satuan.'"';
-                             if($row->id_satuan == @$data->id_satuan) echo ' selected';
-                             echo '>'.$row->satuan.'</option>';
-                          }
-                       }        
-                    ?>
+                    <?php
+                      $query = mysql_query('SELECT * FROM satuan ORDER BY satuan');
+    if ($query && mysql_num_rows($query) > 0) {
+        while ($row = mysql_fetch_object($query)) {
+            echo '<option value="'.$row->id_satuan.'"';
+            if ($row->id_satuan == @$data->id_satuan) {
+                echo ' selected';
+            }
+            echo '>'.$row->satuan.'</option>';
+        }
+    } ?>
                     </select>
               </div>
 
@@ -109,9 +105,11 @@ if ($_GET['imenu']) {
           </div>    
 
         
-          <?php if ($id){ ?>  
+          <?php if ($id) {
+        ?>  
     
-            <?php if (@$data->aktif=='Y'){ ?>
+            <?php if (@$data->aktif == 'Y') {
+            ?>
               
                 <div class="form-group">
 	               <label class="control-label col-md-3 col-sm-3 col-xs-12" style='padding-top:10px;'>Aktif:</label>
@@ -120,7 +118,9 @@ if ($_GET['imenu']) {
                     <input type=radio name='aktif' value='N' class="flat"> T                
                   </div>
               </div>  
-            <?php   }else{ ?>  
+            <?php
+        } else {
+            ?>  
               
                 <div class="form-group">
 	               <label class="control-label col-md-3 col-sm-3 col-xs-12" style='padding-top:10px;'>Aktif:</label>
@@ -129,9 +129,12 @@ if ($_GET['imenu']) {
                     <input type=radio name='aktif' value='N' class="flat" checked> T          
                   </div>
               </div>  
-             <?php } ?>
+             <?php
+        } ?>
 
-        <?php   }else{ ?>  
+        <?php
+    } else {
+        ?>  
 
            
                 <div class="form-group">
@@ -142,7 +145,8 @@ if ($_GET['imenu']) {
                   </div>
               </div>  
 
-        <?php } ?>
+        <?php
+    } ?>
 
 
 
@@ -361,6 +365,6 @@ if ($_GET['imenu']) {
 
 </body>
 </html>
-<?
-}
+<?php
+}
 ?>
\ No newline at end of file
diff --git a/modul/mod_pasien/aksi_pasien.php b/modul/mod_pasien/aksi_pasien.php
index 1f421c8b10cd46fdfb478cbd2205672ab7b2ccf3..b40852e01ce8e77cce2206a33e5d3c971904e2d7 100755
--- a/modul/mod_pasien/aksi_pasien.php
+++ b/modul/mod_pasien/aksi_pasien.php
@@ -1,49 +1,44 @@
-<?php
-session_start();
-if (empty($_SESSION['username']) AND empty($_SESSION['password'])){
-  echo "<script>window.alert('Please login first.'); window.location=('../../index.php.php')</script>";
-} else{
-include "./../../config/koneksi.php";
-include "./../../config/fungsi_thumb.php";
-
-$module=$_GET[module];
-$act=$_GET[act];
-
-$date     = date("d/m/Y");  
-$idate    = date("Y-m-d");
-$hour = time() - (1 * 1 * 60 * 60);
-$datetime   = date("Y-m-d G:i:s", $hour);
-$userid   = $_SESSION['userid'];
-$business_type = $_SESSION['business_type']; 
-
-// Hapus modul
-if ($module=='pasien' AND $act=='hapus'){
-  $id = $_GET['id'];
-  $id_module = $_GET['id_module'];
-   
-  mysql_query("DELETE FROM ".$module." WHERE id_".$module." = $id");
-
-   //header('location:../../main.php?module='.$module.'&id_module='.$id_module);          
-
-  ?>
+<?php
+session_start();
+if (empty($_SESSION['username']) and empty($_SESSION['password'])) {
+    echo "<script>window.alert('Please login first.'); window.location=('../../index.php.php')</script>";
+} else {
+    include './../../config/koneksi.php';
+    include './../../config/fungsi_thumb.php';
+
+    $module = $_GET[module];
+    $act = $_GET[act];
+
+    $date = date('d/m/Y');
+    $idate = date('Y-m-d');
+    $hour = time() - (1 * 1 * 60 * 60);
+    $datetime = date('Y-m-d G:i:s', $hour);
+    $userid = $_SESSION['userid'];
+    $business_type = $_SESSION['business_type'];
+
+    // Hapus modul
+    if ($module == 'pasien' and $act == 'hapus') {
+        $id = $_GET['id'];
+        $id_module = $_GET['id_module'];
+
+        mysql_query('DELETE FROM '.$module.' WHERE id_'.$module." = $id");
+
+        //header('location:../../main.php?module='.$module.'&id_module='.$id_module); ?>
    
   <script language="javascript">
-     window.parent.location.href = "<?php echo"./../../main.php?module=$module&id_module=$id_module";?>";  
+     window.parent.location.href = "<?php echo"./../../main.php?module=$module&id_module=$id_module"; ?>";  
      window.parent.tb_remove();
    </script>
   
-  <?php                 
-   
- }
-
-  // Input group
-elseif ($module=='pasien' AND $act=='input'){
-
-  $id_module = $_POST['id_module'];
-
-
-   if($_POST['ID']){
-   mysql_query("UPDATE pasien SET ktp   = '$_POST[ktp]'
+  <?php
+    }
+
+    // Input group
+    elseif ($module == 'pasien' and $act == 'input') {
+        $id_module = $_POST['id_module'];
+
+        if ($_POST['ID']) {
+            mysql_query("UPDATE pasien SET ktp   = '$_POST[ktp]'
                     ,nama   = '$_POST[nama]'
                     ,gender   = '$_POST[gender]'    
                     ,tgl_lahir   = '$_POST[tgl_lahir]'    
@@ -54,12 +49,9 @@ elseif ($module=='pasien' AND $act=='input'){
                     ,upddt   = '$datetime' 
                     ,updby   = '$userid' 
                     ,aktif     = '$_POST[aktif]'  
-                 WHERE id_pasien    = '$_POST[ID]'");
-                          
-
-      
-   } else {
-   mysql_query("INSERT INTO pasien(ktp
+                 WHERE id_pasien    = '$_POST[ID]'");
+        } else {
+            mysql_query("INSERT INTO pasien(ktp
                    ,nama
                    ,gender
                    ,tgl_lahir
@@ -84,25 +76,17 @@ elseif ($module=='pasien' AND $act=='input'){
                   ,'$userid'
                   ,'$datetime'
                   ,'$userid'
-                    ,'$_POST[aktif]')");
-  
-                
-   }
-   
-
-   //header('location:../../main.php?module='.$module.'&id_module='.$id_module);          
-
-  ?>
+                    ,'$_POST[aktif]')");
+        }
+
+        //header('location:../../main.php?module='.$module.'&id_module='.$id_module); ?>
    
   <script language="javascript">
-     window.parent.location.href = "<?php echo"./../../main.php?module=$module&id_module=$id_module";?>";  
+     window.parent.location.href = "<?php echo"./../../main.php?module=$module&id_module=$id_module"; ?>";  
      window.parent.tb_remove();
    </script>
   
-  <?php                               
- 
-
-}
-
-}
+  <?php
+    }
+}
 ?>
diff --git a/modul/mod_pasien/cetak_pasien.php b/modul/mod_pasien/cetak_pasien.php
index c545569d5253490ffbc3c1a53ad31eab10a10aa2..e221320c33a07f638e4de2cc670c3392a55d3095 100755
--- a/modul/mod_pasien/cetak_pasien.php
+++ b/modul/mod_pasien/cetak_pasien.php
@@ -1,59 +1,40 @@
-<?php
-
-session_start();
-
-include "./../../config/koneksi.php";
-include "./../../config/fungsi_indobulan.php";
-include"./../../config/barcode_gen.php";
-include "./../../config/qrcode/qrlib.php";
-
-
-$tampil=mysql_query("SELECT * FROM modul WHERE id_modul ='".$_GET[report_id]."'");
-
-                        
-
-$r=mysql_fetch_array($tampil);
-
-
-
-$module     = $_GET['module'];
-
-$imodule    = ucwords($r['nama_modul']);
-
-$nmmodule   = ucwords($r['nama_modul']);
-
-$id         = $r['id_modul'];
-
-$fa_icon    = $r['fa_icon'];
-
-
-
-// if($r[orientation] == 'P') {
-
-//  $orientation = 'portrait';
-
-// } else {
-
-//  $orientation = 'landscape';
-
-// }
-
-
-
-
-
-$orientation = 'portrait';
-
-
-
-$status     = $_GET['status'];
-
-
-
-
-
-
-
+<?php
+
+session_start();
+
+include './../../config/koneksi.php';
+include './../../config/fungsi_indobulan.php';
+include './../../config/barcode_gen.php';
+include './../../config/qrcode/qrlib.php';
+
+$tampil = mysql_query("SELECT * FROM modul WHERE id_modul ='".$_GET[report_id]."'");
+
+$r = mysql_fetch_array($tampil);
+
+$module = $_GET['module'];
+
+$imodule = ucwords($r['nama_modul']);
+
+$nmmodule = ucwords($r['nama_modul']);
+
+$id = $r['id_modul'];
+
+$fa_icon = $r['fa_icon'];
+
+// if($r[orientation] == 'P') {
+
+//  $orientation = 'portrait';
+
+// } else {
+
+//  $orientation = 'landscape';
+
+// }
+
+$orientation = 'portrait';
+
+$status = $_GET['status'];
+
 ?>
 
 
@@ -354,44 +335,28 @@ function icetak(){
 
     
 
-<?
-
-$time = time() - (1 * 1 * 60 * 60);
-
-$datetime = date("d/m/Y G:i:s", $time); 
-
-$tgl = tgl_indo(date("Y-m-d", $time));  
-
-
-
-$id_pasien    = $_GET['id_pasien']; 
-
-
-
- $gtampil=mysql_query("SELECT * FROM informasi_perusahaan where id_informasi_perusahaan = '1'");
-
- $g=mysql_fetch_array($gtampil);
-
-
-
-if ($g['pict']) {
-
-    $pict = $g['pict'];
-
-} else {
-
-    $pict = '';
-
-}
-
-
-
-
-
-$company = ucwords($g['company']);
-
-
-
+<?php
+
+$time = time() - (1 * 1 * 60 * 60);
+
+$datetime = date('d/m/Y G:i:s', $time);
+
+$tgl = tgl_indo(date('Y-m-d', $time));
+
+$id_pasien = $_GET['id_pasien'];
+
+ $gtampil = mysql_query("SELECT * FROM informasi_perusahaan where id_informasi_perusahaan = '1'");
+
+ $g = mysql_fetch_array($gtampil);
+
+if ($g['pict']) {
+    $pict = $g['pict'];
+} else {
+    $pict = '';
+}
+
+$company = ucwords($g['company']);
+
  ?>
 
 <div style='border:1px solid black;'>
@@ -404,29 +369,29 @@ $company = ucwords($g['company']);
 <td width='100%' valign="top" style='text-align:center;border-bottom:1px solid black;'>
  <span style="font-weight: bold;">KARTU KUNJUNGAN PASIEN</span><br>    
  <span style="font-weight: bold;"><?=$g['company']?></span><br>
- <span><? echo $g['address'].' '.$g['city']." ".$g['state'].", ".$g['prov']." ".$g['zip']?></span>
+ <span><?php echo $g['address'].' '.$g['city'].' '.$g['state'].', '.$g['prov'].' '.$g['zip']?></span>
 
 </td>
 </tr>
 
 
-<?
- $tampil=mysql_query("SELECT a.*,b.agama,c.kategori
+<?php
+ $tampil = mysql_query("SELECT a.*,b.agama,c.kategori
                 FROM pasien a left join agama b 
                  ON a.id_agama = b.id_agama
                  left join kategori c
                  ON a.id_kategori = c.id_kategori
-                WHERE a.id_pasien = '$id_pasien' ");
-                            
-$r=mysql_fetch_array($tampil);
-
-$tgl_lahir = DATE('d/m/Y',strtotime($r[tgl_lahir]));
-
-if ($r['gender'] == 'L') {
-    $gender    = 'Laki-laki';
-} else {
-    $gender    = 'Perempuan';
-}
+                WHERE a.id_pasien = '$id_pasien' ");
+
+$r = mysql_fetch_array($tampil);
+
+$tgl_lahir = date('d/m/Y', strtotime($r[tgl_lahir]));
+
+if ($r['gender'] == 'L') {
+    $gender = 'Laki-laki';
+} else {
+    $gender = 'Perempuan';
+}
 ?>
 <table>
 
@@ -434,17 +399,17 @@ if ($r['gender'] == 'L') {
 <tr>
     <td width='30%'>NIP</td>
     <td width='1%'>:</td>
-    <td><?=$r['ktp'];?></td>
+    <td><?=$r['ktp']; ?></td>
 </tr>
 <tr>
     <td width='30%'>Nama</td>
     <td width='1%'>:</td>
-    <td><?=$r['nama'];?></td>
+    <td><?=$r['nama']; ?></td>
 </tr>    
 <tr>
     <td width='30%'>Jenis Kelamin</td>
     <td width='1%'>:</td>
-    <td><?=$gender;?></td>
+    <td><?=$gender; ?></td>
 </tr>
 <tr>
     <td width='30%'>Kategori Pasien</td>
diff --git a/modul/mod_pasien/form_pasien.php b/modul/mod_pasien/form_pasien.php
index 56bd55f35e840c216d660fdf54adc32db65802d1..639154b608510a4e342dec9d7e437aacc34f6922 100755
--- a/modul/mod_pasien/form_pasien.php
+++ b/modul/mod_pasien/form_pasien.php
@@ -1,10 +1,9 @@
-<?
-session_start();
-if (empty($_SESSION['username']) AND empty($_SESSION['password'])){
-  echo "<script>window.alert('Please login first.'); window.location=('../../index.php.php')</script>";
-} else{
-include "./../../config/koneksi.php";
-?>
+<?php
+session_start();
+if (empty($_SESSION['username']) and empty($_SESSION['password'])) {
+    echo "<script>window.alert('Please login first.'); window.location=('../../index.php.php')</script>";
+} else {
+    include './../../config/koneksi.php'; ?>
 <!doctype html>
 <html>
 <head>
@@ -32,41 +31,37 @@ include "./../../config/koneksi.php";
 </head>
 
 <body style='background-color:#fff;'>
-<?
-
-$modul = $_GET['module'];
-$title = $_GET['title'];
-$business_type = $_SESSION['business_type']; 
-$role   = $_SESSION['role'];
-
-$id_module = $_GET['id_module']; 
-
-  $id = isset($_GET['id_pasien']) ? intval($_GET['id_pasien']) : false;
-  
-  if($id){
-     $query = mysql_query('SELECT * FROM pasien WHERE id_pasien = "'.$id.'"');
-     if($query && mysql_num_rows($query) == 1){
-        $data = mysql_fetch_object($query);
-     }else 
-        die('Data modul tidak ditemukan');
-  }
-  
-if ($_GET['igroup']) {
-  $group  = $_GET['igroup'];
-} else {
-  $group  = $data->id_pasien;
-  
-}
-
-if ($_GET['imenu']) {
-  $imenu  = $_GET['imenu'];
-} else {
-  $imenu  = $data->id_modul;  
-  
-}
-
-  
-?>
+<?php
+
+$modul = $_GET['module'];
+    $title = $_GET['title'];
+    $business_type = $_SESSION['business_type'];
+    $role = $_SESSION['role'];
+
+    $id_module = $_GET['id_module'];
+
+    $id = isset($_GET['id_pasien']) ? intval($_GET['id_pasien']) : false;
+
+    if ($id) {
+        $query = mysql_query('SELECT * FROM pasien WHERE id_pasien = "'.$id.'"');
+        if ($query && mysql_num_rows($query) == 1) {
+            $data = mysql_fetch_object($query);
+        } else {
+            die('Data modul tidak ditemukan');
+        }
+    }
+
+    if ($_GET['igroup']) {
+        $group = $_GET['igroup'];
+    } else {
+        $group = $data->id_pasien;
+    }
+
+    if ($_GET['imenu']) {
+        $imenu = $_GET['imenu'];
+    } else {
+        $imenu = $data->id_modul;
+    } ?>
 
 
 <div class="ix_panel">
@@ -96,9 +91,11 @@ if ($_GET['imenu']) {
               </div>
           </div>
 
-          <?php if ($id){ ?>  
+          <?php if ($id) {
+        ?>  
 
-            <?php if (@$data->gender=='L'){ ?>
+            <?php if (@$data->gender == 'L') {
+            ?>
               
                 <div class="form-group">
                  <label class="control-label col-md-3 col-sm-3 col-xs-12" style='padding-top:10px;'>Jenis Kelamin</label>
@@ -107,7 +104,9 @@ if ($_GET['imenu']) {
                     <input type=radio name='gender' value='P' class="flat"> Perempuan                
                   </div>
               </div>  
-            <?php   }else{ ?>  
+            <?php
+        } else {
+            ?>  
               
                 <div class="form-group">
                  <label class="control-label col-md-3 col-sm-3 col-xs-12" style='padding-top:10px;'>Jenis Kelamin</label>
@@ -116,9 +115,12 @@ if ($_GET['imenu']) {
                     <input type=radio name='gender' value='P' class="flat" checked> Perempuan          
                   </div>
               </div>  
-             <?php } ?>
+             <?php
+        } ?>
 
-        <?php   }else{ ?>  
+        <?php
+    } else {
+        ?>  
 
            
                 <div class="form-group">
@@ -129,7 +131,8 @@ if ($_GET['imenu']) {
                   </div>
               </div>  
 
-        <?php } ?>
+        <?php
+    } ?>
 
 
        
@@ -138,16 +141,17 @@ if ($_GET['imenu']) {
             <label class="control-label col-md-3 col-sm-3 col-xs-12" style='padding-top:10px;'>Agama :</label>
               <div class="col-md-6 col-sm-6 col-xs-12" >
                  <select name="agama" class="form-control">                
-                    <?
-                      $query = mysql_query('SELECT * FROM agama ORDER BY agama');
-                       if($query && mysql_num_rows($query) > 0){
-                          while($row = mysql_fetch_object($query)){
-                             echo '<option value="'.$row->id_agama.'"';
-                             if($row->id_agama == @$data->id_agama) echo ' selected';
-                             echo '>'.$row->agama.'</option>';
-                          }
-                       }        
-                    ?>
+                    <?php
+                      $query = mysql_query('SELECT * FROM agama ORDER BY agama');
+    if ($query && mysql_num_rows($query) > 0) {
+        while ($row = mysql_fetch_object($query)) {
+            echo '<option value="'.$row->id_agama.'"';
+            if ($row->id_agama == @$data->id_agama) {
+                echo ' selected';
+            }
+            echo '>'.$row->agama.'</option>';
+        }
+    } ?>
                     </select>
               </div>
 
@@ -155,16 +159,17 @@ if ($_GET['imenu']) {
             <label class="control-label col-md-3 col-sm-3 col-xs-12" style='padding-top:10px;'>Kategori Pasien :</label>
               <div class="col-md-6 col-sm-6 col-xs-12" >
                  <select name="kategori" class="form-control">                
-                    <?
-                      $query = mysql_query('SELECT * FROM kategori ORDER BY kategori');
-                       if($query && mysql_num_rows($query) > 0){
-                          while($row = mysql_fetch_object($query)){
-                             echo '<option value="'.$row->id_kategori.'"';
-                             if($row->id_kategori == @$data->id_kategori) echo ' selected';
-                             echo '>'.$row->kategori.'</option>';
-                          }
-                       }        
-                    ?>
+                    <?php
+                      $query = mysql_query('SELECT * FROM kategori ORDER BY kategori');
+    if ($query && mysql_num_rows($query) > 0) {
+        while ($row = mysql_fetch_object($query)) {
+            echo '<option value="'.$row->id_kategori.'"';
+            if ($row->id_kategori == @$data->id_kategori) {
+                echo ' selected';
+            }
+            echo '>'.$row->kategori.'</option>';
+        }
+    } ?>
                     </select>
               </div>
 
@@ -183,9 +188,11 @@ if ($_GET['imenu']) {
           </div>    
 
         
-          <?php if ($id){ ?>  
+          <?php if ($id) {
+        ?>  
     
-            <?php if (@$data->aktif=='Y'){ ?>
+            <?php if (@$data->aktif == 'Y') {
+            ?>
               
                 <div class="form-group">
 	               <label class="control-label col-md-3 col-sm-3 col-xs-12" style='padding-top:10px;'>Aktif:</label>
@@ -194,7 +201,9 @@ if ($_GET['imenu']) {
                     <input type=radio name='aktif' value='N' class="flat"> T                
                   </div>
               </div>  
-            <?php   }else{ ?>  
+            <?php
+        } else {
+            ?>  
               
                 <div class="form-group">
 	               <label class="control-label col-md-3 col-sm-3 col-xs-12" style='padding-top:10px;'>Aktif:</label>
@@ -203,9 +212,12 @@ if ($_GET['imenu']) {
                     <input type=radio name='aktif' value='N' class="flat" checked> T          
                   </div>
               </div>  
-             <?php } ?>
+             <?php
+        } ?>
 
-        <?php   }else{ ?>  
+        <?php
+    } else {
+        ?>  
 
            
                 <div class="form-group">
@@ -216,7 +228,8 @@ if ($_GET['imenu']) {
                   </div>
               </div>  
 
-        <?php } ?>
+        <?php
+    } ?>
 
 
 
@@ -435,6 +448,6 @@ if ($_GET['imenu']) {
 
 </body>
 </html>
-<?
-}
+<?php
+}
 ?>
\ No newline at end of file
diff --git a/modul/mod_pengaturan_sistem/aksi_pengaturan_sistem.php b/modul/mod_pengaturan_sistem/aksi_pengaturan_sistem.php
index 37da16f2e935d50960fa0dd804296105479b4e06..f6037dde8d2bb749ad71437ae4133c246ad8113b 100755
--- a/modul/mod_pengaturan_sistem/aksi_pengaturan_sistem.php
+++ b/modul/mod_pengaturan_sistem/aksi_pengaturan_sistem.php
@@ -1,41 +1,39 @@
-<?php
-session_start();
-if (empty($_SESSION['username']) AND empty($_SESSION['password'])){
-  echo "<script>window.alert('Please login first.'); window.location=('../../index.php.php')</script>";
-} else{
-include "./../../config/koneksi.php";
-include "./../../config/fungsi_thumb.php";
-
-$imodule=$_POST[imodule];
-$module=$_GET[module];
-$act=$_GET[act];
-
-$date     = date("d/m/Y");  
-$idate    = date("Y-m-d");
-$hour = time() - (1 * 1 * 60 * 60);
-$datetime   = date("Y-m-d G:i:s", $hour);
-$userid   = $_SESSION['userid'];
-
-$SQL = "SELECT* FROM periode ";
-$tampil=mysql_query($SQL);
-$p=mysql_fetch_array($tampil);
-
-$prd = $p['periode'];
-
-
-if ($module=='pengaturan_sistem' AND $act=='ip'){
-
-  $id_module = $_POST['id_module'];
-
-  $lokasi_file    = $_FILES['fupload']['tmp_name'];
-  $tipe_file      = $_FILES['fupload']['type'];
-  $nama_file      = $_FILES['fupload']['name'];
-  $acak           = rand(1,99);
-  $nama_file_unik = $acak.$nama_file; 
-
-    
-      if (empty($lokasi_file)){
-          mysql_query("UPDATE informasi_perusahaan SET company    = '$_POST[company]'
+<?php
+
+session_start();
+if (empty($_SESSION['username']) and empty($_SESSION['password'])) {
+    echo "<script>window.alert('Please login first.'); window.location=('../../index.php.php')</script>";
+} else {
+    include './../../config/koneksi.php';
+    include './../../config/fungsi_thumb.php';
+
+    $imodule = $_POST[imodule];
+    $module = $_GET[module];
+    $act = $_GET[act];
+
+    $date = date('d/m/Y');
+    $idate = date('Y-m-d');
+    $hour = time() - (1 * 1 * 60 * 60);
+    $datetime = date('Y-m-d G:i:s', $hour);
+    $userid = $_SESSION['userid'];
+
+    $SQL = 'SELECT* FROM periode ';
+    $tampil = mysql_query($SQL);
+    $p = mysql_fetch_array($tampil);
+
+    $prd = $p['periode'];
+
+    if ($module == 'pengaturan_sistem' and $act == 'ip') {
+        $id_module = $_POST['id_module'];
+
+        $lokasi_file = $_FILES['fupload']['tmp_name'];
+        $tipe_file = $_FILES['fupload']['type'];
+        $nama_file = $_FILES['fupload']['name'];
+        $acak = rand(1, 99);
+        $nama_file_unik = $acak.$nama_file;
+
+        if (empty($lokasi_file)) {
+            mysql_query("UPDATE informasi_perusahaan SET company    = '$_POST[company]'
                           ,address   = '$_POST[address]'
                           ,city      = '$_POST[city]'
                           ,zip       = '$_POST[zip]'      
@@ -44,11 +42,10 @@ if ($module=='pengaturan_sistem' AND $act=='ip'){
                           ,email   = '$_POST[email]' 
                          ,upddt     = '$datetime' 
                          ,updby     = '$userid'    
-                       WHERE id_informasi_perusahaan     = '$_POST[ID]'");
-       } else {
-
-           LogoImage($nama_file_unik);
-           mysql_query("UPDATE informasi_perusahaan SET company    = '$_POST[company]'
+                       WHERE id_informasi_perusahaan     = '$_POST[ID]'");
+        } else {
+            LogoImage($nama_file_unik);
+            mysql_query("UPDATE informasi_perusahaan SET company    = '$_POST[company]'
                           ,address   = '$_POST[address]'
                           ,city      = '$_POST[city]'
                           ,zip       = '$_POST[zip]'      
@@ -59,21 +56,14 @@ if ($module=='pengaturan_sistem' AND $act=='ip'){
                          ,pict        = '$nama_file_unik'
                          ,upddt     = '$datetime' 
                          ,updby     = '$userid'   
-                       WHERE id_informasi_perusahaan      = '$_POST[ID]'");
-
-
-       }   
-
-  $id = $_POST['ID'];       
-                       
-   header('location:form_'.$module.'.php?id='.$id.'&module='.$module.'&id_module='.$id_module.'&tab='.$act.'&imodule='.$imodule);          
-
-}
-
-elseif ($module=='pengaturan_sistem' AND $act=='sa'){
-
-
-   mysql_query("UPDATE pg_setoran_awal SET jenis    = '$_POST[jenis]'
+                       WHERE id_informasi_perusahaan      = '$_POST[ID]'");
+        }
+
+        $id = $_POST['ID'];
+
+        header('location:form_'.$module.'.php?id='.$id.'&module='.$module.'&id_module='.$id_module.'&tab='.$act.'&imodule='.$imodule);
+    } elseif ($module == 'pengaturan_sistem' and $act == 'sa') {
+        mysql_query("UPDATE pg_setoran_awal SET jenis    = '$_POST[jenis]'
                           ,nilai   = '$_POST[nilai]'
                           ,id_jenis_posting      = '$_POST[jenis_posting]'
                           ,rek_debet       = '$_POST[rek_debet]'      
@@ -82,24 +72,23 @@ elseif ($module=='pengaturan_sistem' AND $act=='sa'){
                          ,updby     = '$userid'    
                        WHERE id_pg_setoran_awal     = '$_POST[ID]'
                        AND prd = '$prd'
-                       ");
-
-   if ($_POST['u_tab'] == '1') {
-
-        mysql_query("DELETE FROM pembukaan_tabungan 
+                       ");
+
+        if ($_POST['u_tab'] == '1') {
+            mysql_query("DELETE FROM pembukaan_tabungan 
                        WHERE id_pg_setoran_awal     = '$_POST[ID]'
                        AND status    = '2' 
-                       ");  
-
-       mysql_query("UPDATE pembukaan_tabungan SET status    = '2' 
+                       ");
+
+            mysql_query("UPDATE pembukaan_tabungan SET status    = '2' 
                          ,upddt     = '$datetime' 
                          ,updby     = '$userid'    
                        WHERE id_pg_setoran_awal     = '$_POST[ID]'
                        AND status = '0'
                        AND posting = '0'
-                       ");  
-
-       mysql_query("INSERT INTO pembukaan_tabungan (
+                       ");
+
+            mysql_query("INSERT INTO pembukaan_tabungan (
                           nik
                         , tanggal
                         , id_pg_setoran_awal
@@ -124,24 +113,23 @@ elseif ($module=='pengaturan_sistem' AND $act=='sa'){
                           from anggota
                           where tipe = 'A'
                           AND tab = '1'
-                          ");                    
-   }
-
-   if ($_POST['u_tab'] == '2') {
-
-        mysql_query("DELETE FROM pembukaan_tabungan 
+                          ");
+        }
+
+        if ($_POST['u_tab'] == '2') {
+            mysql_query("DELETE FROM pembukaan_tabungan 
                        WHERE id_pg_setoran_awal     = '$_POST[ID]'
                        AND status    = '2' 
-                       ");  
-
-       mysql_query("UPDATE pembukaan_tabungan SET status    = '2' 
+                       ");
+
+            mysql_query("UPDATE pembukaan_tabungan SET status    = '2' 
                          ,upddt     = '$datetime' 
                          ,updby     = '$userid'    
                        WHERE id_pg_setoran_awal     = '$_POST[ID]'
                        AND status = '0'
-                       ");  
-
-       mysql_query("INSERT INTO pembukaan_tabungan (
+                       ");
+
+            mysql_query("INSERT INTO pembukaan_tabungan (
                           nik
                         , tanggal
                         , id_pg_setoran_awal
@@ -166,20 +154,13 @@ elseif ($module=='pengaturan_sistem' AND $act=='sa'){
                           from anggota
                           where tipe = 'A'
                           AND tab = '1'
-                          ");                    
-   }
-
-
-
-$id = $_POST['ID'];     
-header('location:form_'.$module.'.php?id='.$id.'&module='.$module.'&id_module='.$id_module.'&tab='.$act.'&imodule='.$imodule);    
-
-}
-
-elseif ($module=='pengaturan_sistem' AND $act=='pd'){
-
-
-   mysql_query("UPDATE pg_penarikan_dana SET max_pencairan   = '$_POST[max_pencairan]'
+                          ");
+        }
+
+        $id = $_POST['ID'];
+        header('location:form_'.$module.'.php?id='.$id.'&module='.$module.'&id_module='.$id_module.'&tab='.$act.'&imodule='.$imodule);
+    } elseif ($module == 'pengaturan_sistem' and $act == 'pd') {
+        mysql_query("UPDATE pg_penarikan_dana SET max_pencairan   = '$_POST[max_pencairan]'
                                       ,max_penarikan         = '$_POST[max_penarikan]'
                                       ,jeda_waktu      = '$_POST[jeda_waktu]'
                                       ,rek_debet       = '$_POST[rek_debet]'      
@@ -189,21 +170,13 @@ elseif ($module=='pengaturan_sistem' AND $act=='pd'){
                                    ,updby     = '$userid'    
                        WHERE id_pg_penarikan_dana     = '$_POST[ID]'
                        AND prd = '$prd'
-                       ");
-
-
-$id = $_POST['ID'];     
-header('location:form_'.$module.'.php?id='.$id.'&module='.$module.'&id_module='.$id_module.'&tab='.$act.'&imodule='.$imodule);    
-
-}  
-
-elseif ($module=='pengaturan_sistem' AND $act=='pm'){
-
-
-   if ($_POST[stab] == 'tunai') {
-
-
-       mysql_query("UPDATE pg_peminjaman_tunai SET min_tenor     = '$_POST[min_tenor_k]'
+                       ");
+
+        $id = $_POST['ID'];
+        header('location:form_'.$module.'.php?id='.$id.'&module='.$module.'&id_module='.$id_module.'&tab='.$act.'&imodule='.$imodule);
+    } elseif ($module == 'pengaturan_sistem' and $act == 'pm') {
+        if ($_POST[stab] == 'tunai') {
+            mysql_query("UPDATE pg_peminjaman_tunai SET min_tenor     = '$_POST[min_tenor_k]'
                                                 ,max_tenor     = '$_POST[max_tenor_k]'
                                                 ,max_pinjaman  = '$_POST[max_pinjaman_k]'      
                                                 ,max_angsuran  = '$_POST[max_angsuran_k]'  
@@ -224,9 +197,9 @@ elseif ($module=='pengaturan_sistem' AND $act=='pm'){
                                                 ,updby           = '$userid'     
                                                   WHERE tipe     = 'K'
                                                   AND prd = '$prd'
-                                                  ");
-
-       mysql_query("UPDATE pg_peminjaman_tunai SET min_tenor     = '$_POST[min_tenor_s]'
+                                                  ");
+
+            mysql_query("UPDATE pg_peminjaman_tunai SET min_tenor     = '$_POST[min_tenor_s]'
                                                 ,max_tenor     = '$_POST[max_tenor_s]'
                                                 ,max_pinjaman  = '$_POST[max_pinjaman_s]'      
                                                 ,max_angsuran  = '$_POST[max_angsuran_s]'  
@@ -247,13 +220,9 @@ elseif ($module=='pengaturan_sistem' AND $act=='pm'){
                                                 ,updby           = '$userid'     
                                                   WHERE tipe     = 'S'
                                                   AND prd = '$prd'
-                                                  ");
-
-   }    else {
-
-
-
-       mysql_query("UPDATE pg_peminjaman_barang SET min_tenor     = '$_POST[min_tenor_k]'
+                                                  ");
+        } else {
+            mysql_query("UPDATE pg_peminjaman_barang SET min_tenor     = '$_POST[min_tenor_k]'
                                                 ,max_tenor     = '$_POST[max_tenor_k]'
                                                 ,max_pinjaman  = '$_POST[max_pinjaman_k]'      
                                                 ,max_angsuran  = '$_POST[max_angsuran_k]'  
@@ -274,9 +243,9 @@ elseif ($module=='pengaturan_sistem' AND $act=='pm'){
                                                 ,updby           = '$userid'     
                                                   WHERE tipe     = 'K'
                                                   AND prd = '$prd'
-                                                  ");
-
-       mysql_query("UPDATE pg_peminjaman_barang SET min_tenor     = '$_POST[min_tenor_s]'
+                                                  ");
+
+            mysql_query("UPDATE pg_peminjaman_barang SET min_tenor     = '$_POST[min_tenor_s]'
                                                 ,max_tenor     = '$_POST[max_tenor_s]'
                                                 ,max_pinjaman  = '$_POST[max_pinjaman_s]'      
                                                 ,max_angsuran  = '$_POST[max_angsuran_s]'  
@@ -297,22 +266,14 @@ elseif ($module=='pengaturan_sistem' AND $act=='pm'){
                                                 ,updby           = '$userid'     
                                                   WHERE tipe     = 'S'
                                                   AND prd = '$prd'
-                                                  ");
-
-
-
-   }
-
-   $stab = $_POST['stab'];
-
-    header('location:form_'.$module.'.php?id='.$id.'&module='.$module.'&id_module='.$id_module.'&tab='.$act.'&imodule='.$imodule.'&stab='.$stab);    
-
-}  
-
-elseif ($module=='pengaturan_sistem' AND $act=='ln'){
-
-
-   mysql_query("UPDATE pg_lainnya SET harga_saham    = '$_POST[harga_saham]'
+                                                  ");
+        }
+
+        $stab = $_POST['stab'];
+
+        header('location:form_'.$module.'.php?id='.$id.'&module='.$module.'&id_module='.$id_module.'&tab='.$act.'&imodule='.$imodule.'&stab='.$stab);
+    } elseif ($module == 'pengaturan_sistem' and $act == 'ln') {
+        mysql_query("UPDATE pg_lainnya SET harga_saham    = '$_POST[harga_saham]'
                                      ,rek_shu        = '$_POST[rek_shu]'
                                      ,ftgl           = '$_POST[ftgl]'
                                      ,fbln           = '$_POST[fbln]'
@@ -322,46 +283,30 @@ elseif ($module=='pengaturan_sistem' AND $act=='ln'){
                                      ,updby     = '$userid'    
                                    WHERE id_pg_lainnya     = '$_POST[ID]'
                                    AND prd = '$prd'
-                       ");
-
-
-$id = $_POST['ID'];     
-header('location:form_'.$module.'.php?id='.$id.'&module='.$module.'&id_module='.$id_module.'&tab='.$act.'&imodule='.$imodule);    
-
-}
-
-elseif ($module=='pengaturan_sistem' AND $act=='jr'){
-
-
-   mysql_query("UPDATE pg_jurnal SET id_jenis_transaksi    = '$_POST[jenis_transaksi]'
+                       ");
+
+        $id = $_POST['ID'];
+        header('location:form_'.$module.'.php?id='.$id.'&module='.$module.'&id_module='.$id_module.'&tab='.$act.'&imodule='.$imodule);
+    } elseif ($module == 'pengaturan_sistem' and $act == 'jr') {
+        mysql_query("UPDATE pg_jurnal SET id_jenis_transaksi    = '$_POST[jenis_transaksi]'
                           ,id_modul      = '$_POST[modul]'
                          ,upddt     = '$datetime' 
                          ,updby     = '$userid'    
                        WHERE id_pg_jurnal     = '$_POST[ID]'
                        AND prd = '$prd'
-                       ");
-
-
-$id = $_POST['ID'];     
-header('location:form_'.$module.'.php?id='.$id.'&module='.$module.'&id_module='.$id_module.'&tab='.$act.'&imodule='.$imodule);    
-
-}
-
-elseif ($module=='pengaturan_sistem' AND $act=='pl'){
-
-
-   mysql_query("UPDATE pg_plafon SET plafon    = '$_POST[plafon]'
+                       ");
+
+        $id = $_POST['ID'];
+        header('location:form_'.$module.'.php?id='.$id.'&module='.$module.'&id_module='.$id_module.'&tab='.$act.'&imodule='.$imodule);
+    } elseif ($module == 'pengaturan_sistem' and $act == 'pl') {
+        mysql_query("UPDATE pg_plafon SET plafon    = '$_POST[plafon]'
                                      ,upddt     = '$datetime' 
                                      ,updby     = '$userid'    
                                    WHERE id_pg_plafon     = '$_POST[ID]'
                                    AND prd = '$prd'
-                       ");
-
-
-$id = $_POST['ID'];     
-header('location:form_'.$module.'.php?id='.$id.'&module='.$module.'&id_module='.$id_module.'&tab='.$act.'&imodule='.$imodule);    
-
-}
-
-}
-?>
+                       ");
+
+        $id = $_POST['ID'];
+        header('location:form_'.$module.'.php?id='.$id.'&module='.$module.'&id_module='.$id_module.'&tab='.$act.'&imodule='.$imodule);
+    }
+}
diff --git a/modul/mod_pengaturan_sistem/form_pengaturan_sistem.php b/modul/mod_pengaturan_sistem/form_pengaturan_sistem.php
index d9fdd3542d7341afaac9918d6961325737136179..e9d10daebaf8f1c44c061a95bd6301ec9a02eb29 100755
--- a/modul/mod_pengaturan_sistem/form_pengaturan_sistem.php
+++ b/modul/mod_pengaturan_sistem/form_pengaturan_sistem.php
@@ -1,38 +1,32 @@
-<?
-session_start();
-if (empty($_SESSION['username']) AND empty($_SESSION['password'])){
-  echo "<script>window.alert('Please login first.'); window.location=('../../index.php.php')</script>";
-} else{
-include "./../../config/koneksi.php";
-include "./../../config/fungsi_thumb.php";
-?>
-<?
-
-
-
-
-$modul = $_GET['module'];
-$imodule = $_GET['imodule'];
-$title = $_GET['title'];
-
-$role   = $_SESSION['role'];
-
-$id_module = $_GET['id_module']; 
-
-
- if ($_GET['tab']) {
-   $tab = $_GET['tab'];
- } else {
-   $tab = 'ip';
- }
-
- if ($_GET['stab']) {
-   $stab = $_GET['stab'];
- } else {
-   $stab = 'tunai';
- }
-
-?>
+<?php
+session_start();
+if (empty($_SESSION['username']) and empty($_SESSION['password'])) {
+    echo "<script>window.alert('Please login first.'); window.location=('../../index.php.php')</script>";
+} else {
+    include './../../config/koneksi.php';
+    include './../../config/fungsi_thumb.php'; ?>
+<?php
+
+
+$modul = $_GET['module'];
+    $imodule = $_GET['imodule'];
+    $title = $_GET['title'];
+
+    $role = $_SESSION['role'];
+
+    $id_module = $_GET['id_module'];
+
+    if ($_GET['tab']) {
+        $tab = $_GET['tab'];
+    } else {
+        $tab = 'ip';
+    }
+
+    if ($_GET['stab']) {
+        $stab = $_GET['stab'];
+    } else {
+        $stab = 'tunai';
+    } ?>
 <!doctype html>
 <html>
 <head>
@@ -68,7 +62,7 @@ $id_module = $_GET['id_module'];
 
 <script language="javascript">
   function closeform() {
-     window.parent.location.href = "<?php echo"./../../main.php?module=$imodule&id_module=$id_module";?>";  
+     window.parent.location.href = "<?php echo"./../../main.php?module=$imodule&id_module=$id_module"; ?>";  
      window.parent.tb_remove();
   }
    </script>
@@ -116,7 +110,9 @@ $id_module = $_GET['id_module'];
 
       <ul class="nav nav-tabs">
 
-       <li <?php if ($tab == 'ip') { echo 'class="active"'; } ?> ><a data-toggle="tab" href="#home">Informasi Perusahaan</a>
+       <li <?php if ($tab == 'ip') {
+        echo 'class="active"';
+    } ?> ><a data-toggle="tab" href="#home">Informasi Perusahaan</a>
         </li>
        
         <li class="pull-right">
@@ -128,30 +124,28 @@ $id_module = $_GET['id_module'];
 
       <div class="tab-content">
 
-          <div id="home" class="tab-pane fade <?php if ($tab == 'ip') { echo 'in active primary'; } ?>">
+          <div id="home" class="tab-pane fade <?php if ($tab == 'ip') {
+        echo 'in active primary';
+    } ?>">
           <br>
 
            <div class="col-md-12 col-sm-12 col-xs-12 form-group">
               <div class="x_content">
 
-                <?
-
-                 $id = 1; // isset($_GET['id_general_setting']) ? intval($_GET['id_general_setting']) : false;
-    
-                    if($id){
-                       $query = mysql_query('SELECT * FROM informasi_perusahaan WHERE id_informasi_perusahaan = "'.$id.'"');
-                       if($query && mysql_num_rows($query) == 1){
-                          $data = mysql_fetch_object($query);
-                       }else 
-                          die('Data general_setting tidak ditemukan');
-                    }
-                  
-                    $pict  = $data->pict;
-
-              
-
-
-                ?>
+                <?php
+
+                 $id = 1; // isset($_GET['id_general_setting']) ? intval($_GET['id_general_setting']) : false;
+
+    if ($id) {
+        $query = mysql_query('SELECT * FROM informasi_perusahaan WHERE id_informasi_perusahaan = "'.$id.'"');
+        if ($query && mysql_num_rows($query) == 1) {
+            $data = mysql_fetch_object($query);
+        } else {
+            die('Data general_setting tidak ditemukan');
+        }
+    }
+
+    $pict = $data->pict; ?>
                    <!-- start form for validation -->
                      <form action="<?php echo"../../modul/mod_$modul/aksi_$modul.php?module=$modul&act=ip"; ?>" method="post" name="formData" enctype="multipart/form-data"  > 
                      
@@ -229,7 +223,9 @@ $id_module = $_GET['id_module'];
 
           </div>
 
-          <div id="menu1" class="tab-pane fade <?php if ($tab == 'sa') { echo 'in active primary'; } ?>">
+          <div id="menu1" class="tab-pane fade <?php if ($tab == 'sa') {
+        echo 'in active primary';
+    } ?>">
               <br>
                   <div class="col-md-12 col-sm-12 col-xs-12 form-group">
                   <div class="x_content">
@@ -255,56 +251,51 @@ $id_module = $_GET['id_module'];
                                       </tr>
                                       </thead>
                                   <tbody>
-                                  <?
-
+                                  <?php
+
                                    $SQL = "SELECT* FROM pg_setoran_awal 
-                                            WHERE prd = '$prd' order by id_pg_setoran_awal";
-
-
-                                  $tampil=mysql_query($SQL);
-                                    
-                                 $no = 1;
-            
-                                    while ($r=mysql_fetch_array($tampil)){  
-
-                                    if ($r['nilai'] == '0') {
-                                      $disabled = 'readonly';
-                                    } else {  
-                                      $disabled = '';
-                                    }
-
-                                                                          
-                                    
-                                    echo"<tr>";
-
-                                    ?>
+                                            WHERE prd = '$prd' order by id_pg_setoran_awal";
+
+    $tampil = mysql_query($SQL);
+
+    $no = 1;
+
+    while ($r = mysql_fetch_array($tampil)) {
+        if ($r['nilai'] == '0') {
+            $disabled = 'readonly';
+        } else {
+            $disabled = '';
+        }
+
+        echo'<tr>'; ?>
 
                                      <form action="<?php echo"../../modul/mod_$modul/aksi_$modul.php?module=$modul&act=sa"; ?>" method="post" name="formData" enctype="multipart/form-data"  > 
                      
                                      <td>                                         
                                          <input type="text" style='padding:6px;' name="jenis" 
-                                         class="form-control" value="<?php echo $r['jenis'];?>" /> 
+                                         class="form-control" value="<?php echo $r['jenis']; ?>" /> 
                             
                                      </td>
 
                                      <td>                                         
                                          <input type="text" style='padding:6px;text-align: right;' name="nilai" 
-                                         class="form-control" <?php echo $disabled;?>  value="<?php echo $r['nilai'];?>" /> 
+                                         class="form-control" <?php echo $disabled; ?>  value="<?php echo $r['nilai']; ?>" /> 
                             
                                      </td>
 
                                       <td>
                                          <select name="jenis_posting" class="form-control" required >
-                                          <?
-                                            $query = mysql_query('SELECT * FROM jenis_posting ORDER BY jenis_posting');
-                                             if($query && mysql_num_rows($query) > 0){
-                                                while($row = mysql_fetch_object($query)){
-                                                   echo '<option value="'.$row->id_jenis_posting.'"';
-                                                   if($row->id_jenis_posting == $r['id_jenis_posting']) echo ' selected';
-                                                   echo '>'.$row->jenis_posting.'</option>';
-                                                }
-                                             }        
-                                          ?>  
+                                          <?php
+                                            $query = mysql_query('SELECT * FROM jenis_posting ORDER BY jenis_posting');
+        if ($query && mysql_num_rows($query) > 0) {
+            while ($row = mysql_fetch_object($query)) {
+                echo '<option value="'.$row->id_jenis_posting.'"';
+                if ($row->id_jenis_posting == $r['id_jenis_posting']) {
+                    echo ' selected';
+                }
+                echo '>'.$row->jenis_posting.'</option>';
+            }
+        } ?>  
                                           </select>       
 
                                        </td>
@@ -312,19 +303,20 @@ $id_module = $_GET['id_module'];
                                         <td>
                                          <select name="rek_debet" class="form-control" required >
                                          <option value='0'></option>
-                                          <?
+                                          <?php
                                             $query = mysql_query('SELECT * FROM rekening 
                                                                   WHERE parentid != "0" 
                                                                   
-                                                                  ORDER BY norek');
-                                             if($query && mysql_num_rows($query) > 0){
-                                                while($row = mysql_fetch_object($query)){
-                                                   echo '<option value="'.$row->id_rekening.'"';
-                                                   if($row->id_rekening == $r['rek_debet']) echo ' selected';
-                                                   echo '>'.$row->norek.' - '.$row->rekening.'</option>';
-                                                }
-                                             }        
-                                          ?>  
+                                                                  ORDER BY norek');
+        if ($query && mysql_num_rows($query) > 0) {
+            while ($row = mysql_fetch_object($query)) {
+                echo '<option value="'.$row->id_rekening.'"';
+                if ($row->id_rekening == $r['rek_debet']) {
+                    echo ' selected';
+                }
+                echo '>'.$row->norek.' - '.$row->rekening.'</option>';
+            }
+        } ?>  
                                           </select>       
 
                                        </td>
@@ -332,48 +324,44 @@ $id_module = $_GET['id_module'];
                                         <td>
                                           <select name="rek_kredit" class="form-control" required >
                                          <option value='0'></option>
-                                         <?
+                                         <?php
                                             $query = mysql_query('SELECT * FROM rekening 
                                                                   WHERE parentid !=  "0"  
                                                                   
-                                                                  ORDER BY norek');
-                                             if($query && mysql_num_rows($query) > 0){
-                                                while($row = mysql_fetch_object($query)){
-                                                   echo '<option value="'.$row->id_rekening.'"';
-                                                   if($row->id_rekening == $r['rek_kredit']) echo ' selected';
-                                                   echo '>'.$row->norek.' - '.$row->rekening.'</option>';
-                                                }
-                                             }        
-                                          ?>  
+                                                                  ORDER BY norek');
+        if ($query && mysql_num_rows($query) > 0) {
+            while ($row = mysql_fetch_object($query)) {
+                echo '<option value="'.$row->id_rekening.'"';
+                if ($row->id_rekening == $r['rek_kredit']) {
+                    echo ' selected';
+                }
+                echo '>'.$row->norek.' - '.$row->rekening.'</option>';
+            }
+        } ?>  
                                           </select>       
 
                                        </td>
 
 
 
-                                    <?php   
-                                    echo" <td  style='text-align:center;'>";     
-                                    ?>                               
+                                    <?php 
+                                    echo" <td  style='text-align:center;'>"; ?>                               
                                     <button type="submit"   class="btn btn-primary btn-sm">
                                                   <span class="glyphicon glyphicon-floppy-disk" aria-hidden="true"></span>
                                     </button>
-                                    <?php            
-                                    echo"</td>";              
-                                    echo"</tr>";
-                                $no++;
-                                ?>
+                                    <?php 
+                                    echo'</td>';
+        echo'</tr>';
+        $no++; ?>
 
                                 <input type="hidden" name="ID" value="<?php echo $r['id_pg_setoran_awal']?>" />
                                 <input type="hidden" name="u_tab" value="<?php echo $r['u_tab']?>" />
                                   <input type="hidden" name="id_module" value="<?php echo $id_module?>" /> 
                                   <input type="hidden" name="imodule" value="<?php echo $imodule?>" /> 
 
-                                <?
-                               echo"</form>";
-                                
-                                }
-
-                                  ?>  
+                                <?php
+                               echo'</form>';
+    } ?>  
 
 
 
@@ -387,26 +375,25 @@ $id_module = $_GET['id_module'];
 
           </div>    
 
-          <div id="menu2" class="tab-pane fade <?php if ($tab == 'pd') { echo 'in active primary'; } ?>">
+          <div id="menu2" class="tab-pane fade <?php if ($tab == 'pd') {
+        echo 'in active primary';
+    } ?>">
               <br>
                  <div class="row">
 
-                  <?
-
-                 $id = 1; // isset($_GET['id_general_setting']) ? intval($_GET['id_general_setting']) : false;
-    
-                    if($id){
-                       $query = mysql_query('SELECT * FROM pg_penarikan_dana
-                                             WHERE  prd = "'.$prd.'" ');
-                       if($query && mysql_num_rows($query) == 1){
-                          $data = mysql_fetch_object($query);
-                       }else 
-                          die('Data pg_penarikan_dana tidak ditemukan');
-                    }
-                  
-         
-
-                ?>
+                  <?php
+
+                 $id = 1; // isset($_GET['id_general_setting']) ? intval($_GET['id_general_setting']) : false;
+
+    if ($id) {
+        $query = mysql_query('SELECT * FROM pg_penarikan_dana
+                                             WHERE  prd = "'.$prd.'" ');
+        if ($query && mysql_num_rows($query) == 1) {
+            $data = mysql_fetch_object($query);
+        } else {
+            die('Data pg_penarikan_dana tidak ditemukan');
+        }
+    } ?>
                    <!-- start form for validation -->
                      <form action="<?php echo"../../modul/mod_$modul/aksi_$modul.php?module=$modul&act=pd"; ?>"   method="post" name="formData" enctype="multipart/form-data"  > 
                      
@@ -463,19 +450,20 @@ $id_module = $_GET['id_module'];
                       <div class="col-md-4  col-sm-4 col-xs-4 form-group">
                                <select name="rek_debet" class="form-control" required >
                                 <option value='0'></option>
-                                 <?
+                                 <?php
                                    $query = mysql_query('SELECT * FROM rekening 
                                WHERE parentid != "0" 
                                
-                               ORDER BY norek');
-                                    if($query && mysql_num_rows($query) > 0){
-                                       while($row = mysql_fetch_object($query)){
-                                          echo '<option value="'.$row->id_rekening.'"';
-                                          if($row->id_rekening == $data->rek_debet) echo ' selected';
-                                          echo '>'.$row->norek.' - '.$row->rekening.'</option>';
-                                       }
-                                    }        
-                                 ?>  
+                               ORDER BY norek');
+    if ($query && mysql_num_rows($query) > 0) {
+        while ($row = mysql_fetch_object($query)) {
+            echo '<option value="'.$row->id_rekening.'"';
+            if ($row->id_rekening == $data->rek_debet) {
+                echo ' selected';
+            }
+            echo '>'.$row->norek.' - '.$row->rekening.'</option>';
+        }
+    } ?>  
                                  </select>      
                              </div>
                        <div class="col-md-1 col-sm-1 col-xs-1 form-group">
@@ -484,19 +472,20 @@ $id_module = $_GET['id_module'];
                       <div class="col-md-4  col-sm-4 col-xs-4 form-group">
                                <select name="rek_kredit" class="form-control" required >
                                 <option value='0'></option>
-                                 <?
+                                 <?php
                                    $query = mysql_query('SELECT * FROM rekening 
                                WHERE parentid != "0" 
                                
-                               ORDER BY norek');
-                                    if($query && mysql_num_rows($query) > 0){
-                                       while($row = mysql_fetch_object($query)){
-                                          echo '<option value="'.$row->id_rekening.'"';
-                                          if($row->id_rekening == $data->rek_kredit) echo ' selected';
-                                          echo '>'.$row->norek.' - '.$row->rekening.'</option>';
-                                       }
-                                    }        
-                                 ?>  
+                               ORDER BY norek');
+    if ($query && mysql_num_rows($query) > 0) {
+        while ($row = mysql_fetch_object($query)) {
+            echo '<option value="'.$row->id_rekening.'"';
+            if ($row->id_rekening == $data->rek_kredit) {
+                echo ' selected';
+            }
+            echo '>'.$row->norek.' - '.$row->rekening.'</option>';
+        }
+    } ?>  
                                  </select>      
                              </div>
                        <div class="col-md-1 col-sm-1 col-xs-1 form-group">
@@ -522,21 +511,29 @@ $id_module = $_GET['id_module'];
 
           </div>    
 
-          <div id="menu3" class="tab-pane fade <?php if ($tab == 'pm') { echo 'in active primary'; } ?>">
+          <div id="menu3" class="tab-pane fade <?php if ($tab == 'pm') {
+        echo 'in active primary';
+    } ?>">
               <br>
                  <div class="row" style="padding: 0px 10px 0px 10px;">
 
                   <ul class="nav nav-tabs" >
 
-                   <li <?php if ($stab == 'tunai') { echo 'class="active"'; } ?> ><a data-toggle="tab" href="#tunai">Dana Tunai</a>
+                   <li <?php if ($stab == 'tunai') {
+        echo 'class="active"';
+    } ?> ><a data-toggle="tab" href="#tunai">Dana Tunai</a>
                     </li>
-                    <li <?php if ($stab == 'barang') { echo 'class="active"'; } ?> ><a data-toggle="tab" href="#barang">Barang</a>
+                    <li <?php if ($stab == 'barang') {
+        echo 'class="active"';
+    } ?> ><a data-toggle="tab" href="#barang">Barang</a>
                     </li>
                   </ul>
 
                   <div class="tab-content">
 
-                      <div id="tunai" class="tab-pane fade <?php if ($stab == 'tunai') { echo 'in active primary'; } ?>">
+                      <div id="tunai" class="tab-pane fade <?php if ($stab == 'tunai') {
+        echo 'in active primary';
+    } ?>">
                       <br>
 
                      
@@ -578,27 +575,19 @@ $id_module = $_GET['id_module'];
                                       </thead>
                                   <tbody>
 
-                                   <?
-
-                                  $kSQL = "SELECT* FROM pg_peminjaman_tunai WHERE tipe = 'K'  AND  prd = '$prd'";
-
-
-                                  $ktampil=mysql_query($kSQL);
-                                    
-                                        
-                                  $k=mysql_fetch_array($ktampil);
-
-
-                                  $sSQL = "SELECT* FROM pg_peminjaman_tunai WHERE tipe = 'S'  AND  prd = '$prd'";
-
-
-                                  $stampil=mysql_query($sSQL);
-                                    
-                                        
-                                  $s=mysql_fetch_array($stampil);
-
-
-                                  ?>    
+                                   <?php
+
+                                  $kSQL = "SELECT* FROM pg_peminjaman_tunai WHERE tipe = 'K'  AND  prd = '$prd'";
+
+    $ktampil = mysql_query($kSQL);
+
+    $k = mysql_fetch_array($ktampil);
+
+    $sSQL = "SELECT* FROM pg_peminjaman_tunai WHERE tipe = 'S'  AND  prd = '$prd'";
+
+    $stampil = mysql_query($sSQL);
+
+    $s = mysql_fetch_array($stampil); ?>    
 
                                   <tr>
                                    <td><label class="control-label"  style="padding-top:8px;">Rekening</label></td>
@@ -611,36 +600,38 @@ $id_module = $_GET['id_module'];
                                    <td>
                                      <select name="rek_debet_k" class="form-control" required >
                                          <option value='0'></option>
-                                          <?
+                                          <?php
                                             $query = mysql_query('SELECT * FROM rekening 
                                                                   WHERE parentid != "0"         
-                                                                  ORDER BY norek');
-                                             if($query && mysql_num_rows($query) > 0){
-                                                while($row = mysql_fetch_object($query)){
-                                                   echo '<option value="'.$row->id_rekening.'"';
-                                                   if($row->id_rekening == $k['rek_debet']) echo ' selected';
-                                                   echo '>'.$row->norek.' - '.$row->rekening.'</option>';
-                                                }
-                                             }        
-                                          ?>  
+                                                                  ORDER BY norek');
+    if ($query && mysql_num_rows($query) > 0) {
+        while ($row = mysql_fetch_object($query)) {
+            echo '<option value="'.$row->id_rekening.'"';
+            if ($row->id_rekening == $k['rek_debet']) {
+                echo ' selected';
+            }
+            echo '>'.$row->norek.' - '.$row->rekening.'</option>';
+        }
+    } ?>  
                                           </select>       
 
                                    </td>                                   
                                    <td> 
                                     <select name="rek_kredit_k" class="form-control" required >
                                          <option value='0'></option>
-                                          <?
+                                          <?php
                                             $query = mysql_query('SELECT * FROM rekening 
                                                                   WHERE parentid != "0" 
-                                                                  ORDER BY norek');
-                                             if($query && mysql_num_rows($query) > 0){
-                                                while($row = mysql_fetch_object($query)){
-                                                   echo '<option value="'.$row->id_rekening.'"';
-                                                   if($row->id_rekening == $k['rek_kredit']) echo ' selected';
-                                                   echo '>'.$row->norek.' - '.$row->rekening.'</option>';
-                                                }
-                                             }        
-                                          ?>  
+                                                                  ORDER BY norek');
+    if ($query && mysql_num_rows($query) > 0) {
+        while ($row = mysql_fetch_object($query)) {
+            echo '<option value="'.$row->id_rekening.'"';
+            if ($row->id_rekening == $k['rek_kredit']) {
+                echo ' selected';
+            }
+            echo '>'.$row->norek.' - '.$row->rekening.'</option>';
+        }
+    } ?>  
                                           </select>       
 
 
@@ -659,36 +650,38 @@ $id_module = $_GET['id_module'];
                                    <td>
                                      <select name="rek_debet_pelunasan_k" class="form-control" required >
                                          <option value='0'></option>
-                                          <?
+                                          <?php
                                             $query = mysql_query('SELECT * FROM rekening 
                                                                   WHERE parentid != "0"         
-                                                                  ORDER BY norek');
-                                             if($query && mysql_num_rows($query) > 0){
-                                                while($row = mysql_fetch_object($query)){
-                                                   echo '<option value="'.$row->id_rekening.'"';
-                                                   if($row->id_rekening == $k['rek_debet_pelunasan']) echo ' selected';
-                                                   echo '>'.$row->norek.' - '.$row->rekening.'</option>';
-                                                }
-                                             }        
-                                          ?>  
+                                                                  ORDER BY norek');
+    if ($query && mysql_num_rows($query) > 0) {
+        while ($row = mysql_fetch_object($query)) {
+            echo '<option value="'.$row->id_rekening.'"';
+            if ($row->id_rekening == $k['rek_debet_pelunasan']) {
+                echo ' selected';
+            }
+            echo '>'.$row->norek.' - '.$row->rekening.'</option>';
+        }
+    } ?>  
                                           </select>       
 
                                    </td>                                   
                                    <td> 
                                     <select name="rek_kredit_pelunasan_k" class="form-control" required >
                                          <option value='0'></option>
-                                          <?
+                                          <?php
                                             $query = mysql_query('SELECT * FROM rekening 
                                                                   WHERE parentid != "0" 
-                                                                  ORDER BY norek');
-                                             if($query && mysql_num_rows($query) > 0){
-                                                while($row = mysql_fetch_object($query)){
-                                                   echo '<option value="'.$row->id_rekening.'"';
-                                                   if($row->id_rekening == $k['rek_kredit_pelunasan']) echo ' selected';
-                                                   echo '>'.$row->norek.' - '.$row->rekening.'</option>';
-                                                }
-                                             }        
-                                          ?>  
+                                                                  ORDER BY norek');
+    if ($query && mysql_num_rows($query) > 0) {
+        while ($row = mysql_fetch_object($query)) {
+            echo '<option value="'.$row->id_rekening.'"';
+            if ($row->id_rekening == $k['rek_kredit_pelunasan']) {
+                echo ' selected';
+            }
+            echo '>'.$row->norek.' - '.$row->rekening.'</option>';
+        }
+    } ?>  
                                           </select>       
 
 
@@ -703,7 +696,7 @@ $id_module = $_GET['id_module'];
                                    <td>
                                          <div class="col-md-6 col-sm-6 col-xs-6 form-group">  
                                          <input type="number" style='padding:6px;' name="min_tenor_k" 
-                                         class="form-control" value="<?php echo $k['min_tenor'];?>" /> 
+                                         class="form-control" value="<?php echo $k['min_tenor']; ?>" /> 
                                          </div>
                                           <div class="col-md-6 col-sm-6 col-xs-6 form-group">  
                                               <label class="control-label"  style="padding-top:8px;">X</label>                                           
@@ -713,7 +706,7 @@ $id_module = $_GET['id_module'];
                                     <td>
                                       <div class="col-md-6 col-sm-6 col-xs-6 form-group">  
                                          <input type="number" style='padding:6px;' name="min_tenor_s" 
-                                         class="form-control" value="<?php echo $s['min_tenor'];?>" /> 
+                                         class="form-control" value="<?php echo $s['min_tenor']; ?>" /> 
                                          </div>
                                          <div class="col-md-6 col-sm-6 col-xs-6 form-group">  
                                               <label class="control-label"  style="padding-top:8px;">X</label>                                           
@@ -732,7 +725,7 @@ $id_module = $_GET['id_module'];
                                    <td>
                                         <div class="col-md-6 col-sm-6 col-xs-6 form-group">  
                                          <input type="number" style='padding:6px;' name="max_tenor_k" 
-                                         class="form-control" value="<?php echo $k['max_tenor'];?>" /> 
+                                         class="form-control" value="<?php echo $k['max_tenor']; ?>" /> 
                                          </div>
                                           <div class="col-md-6 col-sm-6 col-xs-6 form-group">  
                                               <label class="control-label"  style="padding-top:8px;">X</label>                                           
@@ -742,7 +735,7 @@ $id_module = $_GET['id_module'];
                                     <td>
                                         <div class="col-md-6 col-sm-6 col-xs-6 form-group">  
                                          <input type="number" style='padding:6px;' name="max_tenor_s" 
-                                         class="form-control" value="<?php echo $s['max_tenor'];?>" /> 
+                                         class="form-control" value="<?php echo $s['max_tenor']; ?>" /> 
                                          </div>
                                          <div class="col-md-6 col-sm-6 col-xs-6 form-group">  
                                               <label class="control-label"  style="padding-top:8px;">X</label>                                           
@@ -761,7 +754,7 @@ $id_module = $_GET['id_module'];
                                    <td>
                                          <div class="col-md-6 col-sm-6 col-xs-6 form-group">  
                                          <input type="number" style='padding:6px;' name="max_pinjaman_k" 
-                                         class="form-control" value="<?php echo $k['max_pinjaman'];?>" /> 
+                                         class="form-control" value="<?php echo $k['max_pinjaman']; ?>" /> 
                                          </div>
                                           <div class="col-md-6 col-sm-6 col-xs-6 form-group">  
                                               <label class="control-label"  style="padding-top:8px;">X Saldo</label>                                           
@@ -771,7 +764,7 @@ $id_module = $_GET['id_module'];
                                     <td>
                                         <div class="col-md-6 col-sm-6 col-xs-6 form-group">  
                                          <input type="number" style='padding:6px;' name="max_pinjaman_s" 
-                                         class="form-control" value="<?php echo $s['max_pinjaman'];?>" /> 
+                                         class="form-control" value="<?php echo $s['max_pinjaman']; ?>" /> 
                                          </div>
                                          <div class="col-md-6 col-sm-6 col-xs-6 form-group">  
                                               <label class="control-label"  style="padding-top:8px;">X Saldo</label>                                           
@@ -790,7 +783,7 @@ $id_module = $_GET['id_module'];
                                    <td>
                                          <div class="col-md-6 col-sm-6 col-xs-6 form-group">  
                                          <input type="number" style='padding:6px;' name="max_angsuran_k" 
-                                         class="form-control" value="<?php echo $k['max_angsuran'];?>" /> 
+                                         class="form-control" value="<?php echo $k['max_angsuran']; ?>" /> 
                                          </div>
                                           <div class="col-md-6 col-sm-6 col-xs-6 form-group">
                                               <label class="control-label"  style="padding-top:8px;">Gaji</label>                                           
@@ -800,7 +793,7 @@ $id_module = $_GET['id_module'];
                                     <td>
                                          <div class="col-md-6 col-sm-6 col-xs-6 form-group">    
                                          <input type="number" style='padding:6px;' name="max_angsuran_s" 
-                                         class="form-control" value="<?php echo $s['max_angsuran'];?>" /> 
+                                         class="form-control" value="<?php echo $s['max_angsuran']; ?>" /> 
                                          </div>
                                            <div class="col-md-6 col-sm-6 col-xs-6 form-group">  
                                               <label class="control-label"  style="padding-top:8px;">Gaji</label>                                           
@@ -813,7 +806,7 @@ $id_module = $_GET['id_module'];
                                    <td>
                                          <div class="col-md-6 col-sm-6 col-xs-6 form-group">  
                                          <input type="number" style='padding:6px;' name="bunga_k" 
-                                         class="form-control" value="<?php echo $k['bunga'];?>" /> 
+                                         class="form-control" value="<?php echo $k['bunga']; ?>" /> 
                                          </div>
                                           <div class="col-md-6 col-sm-6 col-xs-6 form-group">  
                                               <label class="control-label"  style="padding-top:8px;">% / Bulan</label>                                           
@@ -823,7 +816,7 @@ $id_module = $_GET['id_module'];
                                     <td>
                                         <div class="col-md-6 col-sm-6 col-xs-6 form-group">  
                                          <input type="number" style='padding:6px;' name="bunga_s" 
-                                         class="form-control" value="<?php echo $s['bunga'];?>" /> 
+                                         class="form-control" value="<?php echo $s['bunga']; ?>" /> 
                                          </div>
                                         <div class="col-md-6 col-sm-6 col-xs-6 form-group">  
                                               <label class="control-label"  style="padding-top:8px;">% / Bulan</label>                                           
@@ -834,37 +827,39 @@ $id_module = $_GET['id_module'];
                                    <td>
                                      <select name="rek_debet_bunga_k" class="form-control" required >
                                          <option value='0'></option>
-                                          <?
+                                          <?php
                                             $query = mysql_query('SELECT * FROM rekening 
                                                                   WHERE parentid != "0" 
                                                                   
-                                                                  ORDER BY norek');
-                                             if($query && mysql_num_rows($query) > 0){
-                                                while($row = mysql_fetch_object($query)){
-                                                   echo '<option value="'.$row->id_rekening.'"';
-                                                   if($row->id_rekening == $k['rek_debet_bunga']) echo ' selected';
-                                                   echo '>'.$row->norek.' - '.$row->rekening.'</option>';
-                                                }
-                                             }        
-                                          ?>  
+                                                                  ORDER BY norek');
+    if ($query && mysql_num_rows($query) > 0) {
+        while ($row = mysql_fetch_object($query)) {
+            echo '<option value="'.$row->id_rekening.'"';
+            if ($row->id_rekening == $k['rek_debet_bunga']) {
+                echo ' selected';
+            }
+            echo '>'.$row->norek.' - '.$row->rekening.'</option>';
+        }
+    } ?>  
                                           </select>       
 
                                    </td>                                   
                                    <td> 
                                     <select name="rek_kredit_bunga_k" class="form-control" required >
                                          <option value='0'></option>
-                                          <?
+                                          <?php
                                             $query = mysql_query('SELECT * FROM rekening 
                                                                   WHERE parentid != "0"                                                                   
-                                                                  ORDER BY norek');
-                                             if($query && mysql_num_rows($query) > 0){
-                                                while($row = mysql_fetch_object($query)){
-                                                   echo '<option value="'.$row->id_rekening.'"';
-                                                   if($row->id_rekening == $k['rek_kredit_bunga']) echo ' selected';
-                                                   echo '>'.$row->norek.' - '.$row->rekening.'</option>';
-                                                }
-                                             }        
-                                          ?>  
+                                                                  ORDER BY norek');
+    if ($query && mysql_num_rows($query) > 0) {
+        while ($row = mysql_fetch_object($query)) {
+            echo '<option value="'.$row->id_rekening.'"';
+            if ($row->id_rekening == $k['rek_kredit_bunga']) {
+                echo ' selected';
+            }
+            echo '>'.$row->norek.' - '.$row->rekening.'</option>';
+        }
+    } ?>  
                                           </select>       
 
 
@@ -878,7 +873,7 @@ $id_module = $_GET['id_module'];
                                    <td>
                                          <div class="col-md-6 col-sm-6 col-xs-6 form-group">  
                                          <input type="text" style='padding:6px;' name="ipoint_k" 
-                                         class="form-control" value="<?php echo $k['ipoint'];?>" /> 
+                                         class="form-control" value="<?php echo $k['ipoint']; ?>" /> 
                                          </div>
                                           <div class="col-md-6 col-sm-6 col-xs-6 form-group">  
                                               <label class="control-label"  style="padding-top:8px;">% / Bulan</label>                                           
@@ -888,7 +883,7 @@ $id_module = $_GET['id_module'];
                                     <td>
                                         <div class="col-md-6 col-sm-6 col-xs-6 form-group">  
                                          <input type="text" style='padding:6px;' name="ipoint_s" 
-                                         class="form-control" value="<?php echo $s['ipoint'];?>" /> 
+                                         class="form-control" value="<?php echo $s['ipoint']; ?>" /> 
                                          </div>
                                         <div class="col-md-6 col-sm-6 col-xs-6 form-group">  
                                               <label class="control-label"  style="padding-top:8px;">% / Bulan</label>                                           
@@ -899,36 +894,38 @@ $id_module = $_GET['id_module'];
                                    <td>
                                      <select name="rek_debet_ipoint_k" class="form-control" required >
                                          <option value='0'></option>
-                                          <?
+                                          <?php
                                             $query = mysql_query('SELECT * FROM rekening 
                                                                   WHERE parentid != "0" 
-                                                                  ORDER BY norek');
-                                             if($query && mysql_num_rows($query) > 0){
-                                                while($row = mysql_fetch_object($query)){
-                                                   echo '<option value="'.$row->id_rekening.'"';
-                                                   if($row->id_rekening == $k['rek_debet_ipoint']) echo ' selected';
-                                                   echo '>'.$row->norek.' - '.$row->rekening.'</option>';
-                                                }
-                                             }        
-                                          ?>  
+                                                                  ORDER BY norek');
+    if ($query && mysql_num_rows($query) > 0) {
+        while ($row = mysql_fetch_object($query)) {
+            echo '<option value="'.$row->id_rekening.'"';
+            if ($row->id_rekening == $k['rek_debet_ipoint']) {
+                echo ' selected';
+            }
+            echo '>'.$row->norek.' - '.$row->rekening.'</option>';
+        }
+    } ?>  
                                           </select>       
 
                                    </td>                                   
                                    <td> 
                                     <select name="rek_kredit_ipoint_k" class="form-control" required >
                                          <option value='0'></option>
-                                          <?
+                                          <?php
                                             $query = mysql_query('SELECT * FROM rekening 
                                                                   WHERE parentid != "0" 
-                                                                  ORDER BY norek');
-                                             if($query && mysql_num_rows($query) > 0){
-                                                while($row = mysql_fetch_object($query)){
-                                                   echo '<option value="'.$row->id_rekening.'"';
-                                                   if($row->id_rekening == $k['rek_kredit_ipoint']) echo ' selected';
-                                                   echo '>'.$row->norek.' - '.$row->rekening.'</option>';
-                                                }
-                                             }        
-                                          ?>  
+                                                                  ORDER BY norek');
+    if ($query && mysql_num_rows($query) > 0) {
+        while ($row = mysql_fetch_object($query)) {
+            echo '<option value="'.$row->id_rekening.'"';
+            if ($row->id_rekening == $k['rek_kredit_ipoint']) {
+                echo ' selected';
+            }
+            echo '>'.$row->norek.' - '.$row->rekening.'</option>';
+        }
+    } ?>  
                                           </select>       
 
 
@@ -942,7 +939,7 @@ $id_module = $_GET['id_module'];
                                    <td>
                                          <div class="col-md-6 col-sm-6 col-xs-6 form-group">  
                                          <input type="number" style='padding:6px;' name="batas_sisa_angsuran_k" 
-                                         class="form-control" value="<?php echo $k['batas_sisa_angsuran'];?>" /> 
+                                         class="form-control" value="<?php echo $k['batas_sisa_angsuran']; ?>" /> 
                                          </div>
                                           <div class="col-md-6 col-sm-6 col-xs-6 form-group">  
                                               <label class="control-label"  style="padding-top:8px;">X</label>                                           
@@ -952,7 +949,7 @@ $id_module = $_GET['id_module'];
                                     <td>
                                       <div class="col-md-6 col-sm-6 col-xs-6 form-group">  
                                          <input type="number" style='padding:6px;' name="batas_sisa_angsuran_s" 
-                                         class="form-control" value="<?php echo $s['batas_sisa_angsuran'];?>" /> 
+                                         class="form-control" value="<?php echo $s['batas_sisa_angsuran']; ?>" /> 
                                          </div>
                                          <div class="col-md-6 col-sm-6 col-xs-6 form-group">  
                                               <label class="control-label"  style="padding-top:8px;">X</label>                                           
@@ -971,7 +968,7 @@ $id_module = $_GET['id_module'];
                                    <td>
                                          <div class="col-md-6 col-sm-6 col-xs-6 form-group">  
                                          <input type="number" style='padding:6px;' name="tgl_realisasi_k" 
-                                         class="form-control" value="<?php echo $k['tgl_realisasi'];?>" /> 
+                                         class="form-control" value="<?php echo $k['tgl_realisasi']; ?>" /> 
                                          </div>
                                           <div class="col-md-6 col-sm-6 col-xs-6 form-group">  
                                               <label class="control-label"  style="padding-top:8px;">Bulan Berikut</label>                                           
@@ -981,7 +978,7 @@ $id_module = $_GET['id_module'];
                                     <td>
                                       <div class="col-md-6 col-sm-6 col-xs-6 form-group">  
                                          <input type="number" style='padding:6px;' name="tgl_realisasi_s" 
-                                         class="form-control" value="<?php echo $s['tgl_realisasi'];?>" /> 
+                                         class="form-control" value="<?php echo $s['tgl_realisasi']; ?>" /> 
                                          </div>
                                          <div class="col-md-6 col-sm-6 col-xs-6 form-group">  
                                               <label class="control-label"  style="padding-top:8px;">Bulan Berikut</label>                                           
@@ -1000,7 +997,7 @@ $id_module = $_GET['id_module'];
                                    <td>
                                          <div class="col-md-6 col-sm-6 col-xs-6 form-group">  
                                          <input type="number" style='padding:6px;' name="min_keanggotaan_k" 
-                                         class="form-control" value="<?php echo $k['min_keanggotaan'];?>" /> 
+                                         class="form-control" value="<?php echo $k['min_keanggotaan']; ?>" /> 
                                          </div>
                                           <div class="col-md-6 col-sm-6 col-xs-6 form-group">  
                                               <label class="control-label"  style="padding-top:8px;">Bulan</label>                                           
@@ -1010,7 +1007,7 @@ $id_module = $_GET['id_module'];
                                     <td>
                                       <div class="col-md-6 col-sm-6 col-xs-6 form-group">  
                                          <input type="number" style='padding:6px;' name="min_keanggotaan_s" 
-                                         class="form-control" value="<?php echo $s['min_keanggotaan'];?>" /> 
+                                         class="form-control" value="<?php echo $s['min_keanggotaan']; ?>" /> 
                                          </div>
                                          <div class="col-md-6 col-sm-6 col-xs-6 form-group">  
                                               <label class="control-label"  style="padding-top:8px;">Bulan</label>                                           
@@ -1043,7 +1040,9 @@ $id_module = $_GET['id_module'];
                        
                        </div>
 
-                        <div id="barang" class="tab-pane fade <?php if ($stab == 'barang') { echo 'in active primary'; } ?>">
+                        <div id="barang" class="tab-pane fade <?php if ($stab == 'barang') {
+        echo 'in active primary';
+    } ?>">
                       <br>
 
                        <div class="col-md-12 col-sm-12 col-xs-12 form-group">
@@ -1081,27 +1080,19 @@ $id_module = $_GET['id_module'];
                                       </thead>
                                   <tbody>
 
-                                   <?
-
-                                  $kSQL = "SELECT* FROM pg_peminjaman_barang WHERE tipe = 'K' AND prd = '$prd' ";
-
-
-                                  $ktampil=mysql_query($kSQL);
-                                    
-                                        
-                                  $k=mysql_fetch_array($ktampil);
-
-
-                                  $sSQL = "SELECT* FROM pg_peminjaman_barang WHERE tipe = 'S' AND prd = '$prd' ";
-
-
-                                  $stampil=mysql_query($sSQL);
-                                    
-                                        
-                                  $s=mysql_fetch_array($stampil);
-
-
-                                  ?>    
+                                   <?php
+
+                                  $kSQL = "SELECT* FROM pg_peminjaman_barang WHERE tipe = 'K' AND prd = '$prd' ";
+
+    $ktampil = mysql_query($kSQL);
+
+    $k = mysql_fetch_array($ktampil);
+
+    $sSQL = "SELECT* FROM pg_peminjaman_barang WHERE tipe = 'S' AND prd = '$prd' ";
+
+    $stampil = mysql_query($sSQL);
+
+    $s = mysql_fetch_array($stampil); ?>    
 
                                   <tr>
                                    <td><label class="control-label"  style="padding-top:8px;">Rekening</label></td>
@@ -1114,36 +1105,38 @@ $id_module = $_GET['id_module'];
                                    <td>
                                      <select name="rek_debet_k" class="form-control" required >
                                          <option value='0'></option>
-                                          <?
+                                          <?php
                                             $query = mysql_query('SELECT * FROM rekening 
                                                                   WHERE parentid != "0"         
-                                                                  ORDER BY norek');
-                                             if($query && mysql_num_rows($query) > 0){
-                                                while($row = mysql_fetch_object($query)){
-                                                   echo '<option value="'.$row->id_rekening.'"';
-                                                   if($row->id_rekening == $k['rek_debet']) echo ' selected';
-                                                   echo '>'.$row->norek.' - '.$row->rekening.'</option>';
-                                                }
-                                             }        
-                                          ?>  
+                                                                  ORDER BY norek');
+    if ($query && mysql_num_rows($query) > 0) {
+        while ($row = mysql_fetch_object($query)) {
+            echo '<option value="'.$row->id_rekening.'"';
+            if ($row->id_rekening == $k['rek_debet']) {
+                echo ' selected';
+            }
+            echo '>'.$row->norek.' - '.$row->rekening.'</option>';
+        }
+    } ?>  
                                           </select>       
 
                                    </td>                                   
                                    <td> 
                                     <select name="rek_kredit_k" class="form-control" required >
                                          <option value='0'></option>
-                                          <?
+                                          <?php
                                             $query = mysql_query('SELECT * FROM rekening 
                                                                   WHERE parentid != "0" 
-                                                                  ORDER BY norek');
-                                             if($query && mysql_num_rows($query) > 0){
-                                                while($row = mysql_fetch_object($query)){
-                                                   echo '<option value="'.$row->id_rekening.'"';
-                                                   if($row->id_rekening == $k['rek_kredit']) echo ' selected';
-                                                   echo '>'.$row->norek.' - '.$row->rekening.'</option>';
-                                                }
-                                             }        
-                                          ?>  
+                                                                  ORDER BY norek');
+    if ($query && mysql_num_rows($query) > 0) {
+        while ($row = mysql_fetch_object($query)) {
+            echo '<option value="'.$row->id_rekening.'"';
+            if ($row->id_rekening == $k['rek_kredit']) {
+                echo ' selected';
+            }
+            echo '>'.$row->norek.' - '.$row->rekening.'</option>';
+        }
+    } ?>  
                                           </select>       
 
 
@@ -1163,36 +1156,38 @@ $id_module = $_GET['id_module'];
                                    <td>
                                      <select name="rek_debet_pelunasan_k" class="form-control" required >
                                          <option value='0'></option>
-                                          <?
+                                          <?php
                                             $query = mysql_query('SELECT * FROM rekening 
                                                                   WHERE parentid != "0"         
-                                                                  ORDER BY norek');
-                                             if($query && mysql_num_rows($query) > 0){
-                                                while($row = mysql_fetch_object($query)){
-                                                   echo '<option value="'.$row->id_rekening.'"';
-                                                   if($row->id_rekening == $k['rek_debet_pelunasan']) echo ' selected';
-                                                   echo '>'.$row->norek.' - '.$row->rekening.'</option>';
-                                                }
-                                             }        
-                                          ?>  
+                                                                  ORDER BY norek');
+    if ($query && mysql_num_rows($query) > 0) {
+        while ($row = mysql_fetch_object($query)) {
+            echo '<option value="'.$row->id_rekening.'"';
+            if ($row->id_rekening == $k['rek_debet_pelunasan']) {
+                echo ' selected';
+            }
+            echo '>'.$row->norek.' - '.$row->rekening.'</option>';
+        }
+    } ?>  
                                           </select>       
 
                                    </td>                                   
                                    <td> 
                                     <select name="rek_kredit_pelunasan_k" class="form-control" required >
                                          <option value='0'></option>
-                                          <?
+                                          <?php
                                             $query = mysql_query('SELECT * FROM rekening 
                                                                   WHERE parentid != "0" 
-                                                                  ORDER BY norek');
-                                             if($query && mysql_num_rows($query) > 0){
-                                                while($row = mysql_fetch_object($query)){
-                                                   echo '<option value="'.$row->id_rekening.'"';
-                                                   if($row->id_rekening == $k['rek_kredit_pelunasan']) echo ' selected';
-                                                   echo '>'.$row->norek.' - '.$row->rekening.'</option>';
-                                                }
-                                             }        
-                                          ?>  
+                                                                  ORDER BY norek');
+    if ($query && mysql_num_rows($query) > 0) {
+        while ($row = mysql_fetch_object($query)) {
+            echo '<option value="'.$row->id_rekening.'"';
+            if ($row->id_rekening == $k['rek_kredit_pelunasan']) {
+                echo ' selected';
+            }
+            echo '>'.$row->norek.' - '.$row->rekening.'</option>';
+        }
+    } ?>  
                                           </select>       
 
 
@@ -1207,7 +1202,7 @@ $id_module = $_GET['id_module'];
                                    <td>
                                          <div class="col-md-6 col-sm-6 col-xs-6 form-group">  
                                          <input type="number" style='padding:6px;' name="min_tenor_k" 
-                                         class="form-control" value="<?php echo $k['min_tenor'];?>" /> 
+                                         class="form-control" value="<?php echo $k['min_tenor']; ?>" /> 
                                          </div>
                                           <div class="col-md-6 col-sm-6 col-xs-6 form-group">  
                                               <label class="control-label"  style="padding-top:8px;">X</label>                                           
@@ -1217,7 +1212,7 @@ $id_module = $_GET['id_module'];
                                     <td>
                                       <div class="col-md-6 col-sm-6 col-xs-6 form-group">  
                                          <input type="number" style='padding:6px;' name="min_tenor_s" 
-                                         class="form-control" value="<?php echo $s['min_tenor'];?>" /> 
+                                         class="form-control" value="<?php echo $s['min_tenor']; ?>" /> 
                                          </div>
                                          <div class="col-md-6 col-sm-6 col-xs-6 form-group">  
                                               <label class="control-label"  style="padding-top:8px;">X</label>                                           
@@ -1236,7 +1231,7 @@ $id_module = $_GET['id_module'];
                                    <td>
                                         <div class="col-md-6 col-sm-6 col-xs-6 form-group">  
                                          <input type="number" style='padding:6px;' name="max_tenor_k" 
-                                         class="form-control" value="<?php echo $k['max_tenor'];?>" /> 
+                                         class="form-control" value="<?php echo $k['max_tenor']; ?>" /> 
                                          </div>
                                           <div class="col-md-6 col-sm-6 col-xs-6 form-group">  
                                               <label class="control-label"  style="padding-top:8px;">X</label>                                           
@@ -1246,7 +1241,7 @@ $id_module = $_GET['id_module'];
                                     <td>
                                         <div class="col-md-6 col-sm-6 col-xs-6 form-group">  
                                          <input type="number" style='padding:6px;' name="max_tenor_s" 
-                                         class="form-control" value="<?php echo $s['max_tenor'];?>" /> 
+                                         class="form-control" value="<?php echo $s['max_tenor']; ?>" /> 
                                          </div>
                                          <div class="col-md-6 col-sm-6 col-xs-6 form-group">  
                                               <label class="control-label"  style="padding-top:8px;">X</label>                                           
@@ -1265,7 +1260,7 @@ $id_module = $_GET['id_module'];
                                    <td>
                                          <div class="col-md-6 col-sm-6 col-xs-6 form-group">  
                                          <input type="number" style='padding:6px;' name="max_pinjaman_k" 
-                                         class="form-control" value="<?php echo $k['max_pinjaman'];?>" /> 
+                                         class="form-control" value="<?php echo $k['max_pinjaman']; ?>" /> 
                                          </div>
                                           <div class="col-md-6 col-sm-6 col-xs-6 form-group">  
                                               <label class="control-label"  style="padding-top:8px;">X Saldo</label>                                           
@@ -1275,7 +1270,7 @@ $id_module = $_GET['id_module'];
                                     <td>
                                         <div class="col-md-6 col-sm-6 col-xs-6 form-group">  
                                          <input type="number" style='padding:6px;' name="max_pinjaman_s" 
-                                         class="form-control" value="<?php echo $s['max_pinjaman'];?>" /> 
+                                         class="form-control" value="<?php echo $s['max_pinjaman']; ?>" /> 
                                          </div>
                                          <div class="col-md-6 col-sm-6 col-xs-6 form-group">  
                                               <label class="control-label"  style="padding-top:8px;">X Saldo</label>                                           
@@ -1294,7 +1289,7 @@ $id_module = $_GET['id_module'];
                                    <td>
                                          <div class="col-md-6 col-sm-6 col-xs-6 form-group">  
                                          <input type="number" style='padding:6px;' name="max_angsuran_k" 
-                                         class="form-control" value="<?php echo $k['max_angsuran'];?>" /> 
+                                         class="form-control" value="<?php echo $k['max_angsuran']; ?>" /> 
                                          </div>
                                           <div class="col-md-6 col-sm-6 col-xs-6 form-group">
                                               <label class="control-label"  style="padding-top:8px;">Gaji</label>                                           
@@ -1304,7 +1299,7 @@ $id_module = $_GET['id_module'];
                                     <td>
                                          <div class="col-md-6 col-sm-6 col-xs-6 form-group">    
                                          <input type="number" style='padding:6px;' name="max_angsuran_s" 
-                                         class="form-control" value="<?php echo $s['max_angsuran'];?>" /> 
+                                         class="form-control" value="<?php echo $s['max_angsuran']; ?>" /> 
                                          </div>
                                            <div class="col-md-6 col-sm-6 col-xs-6 form-group">  
                                               <label class="control-label"  style="padding-top:8px;">Gaji</label>                                           
@@ -1317,7 +1312,7 @@ $id_module = $_GET['id_module'];
                                    <td>
                                          <div class="col-md-6 col-sm-6 col-xs-6 form-group">  
                                          <input type="number" style='padding:6px;' name="bunga_k" 
-                                         class="form-control" value="<?php echo $k['bunga'];?>" /> 
+                                         class="form-control" value="<?php echo $k['bunga']; ?>" /> 
                                          </div>
                                           <div class="col-md-6 col-sm-6 col-xs-6 form-group">  
                                               <label class="control-label"  style="padding-top:8px;">% / Barang</label>                                           
@@ -1327,7 +1322,7 @@ $id_module = $_GET['id_module'];
                                     <td>
                                         <div class="col-md-6 col-sm-6 col-xs-6 form-group">  
                                          <input type="number" style='padding:6px;' name="bunga_s" 
-                                         class="form-control" value="<?php echo $s['bunga'];?>" /> 
+                                         class="form-control" value="<?php echo $s['bunga']; ?>" /> 
                                          </div>
                                         <div class="col-md-6 col-sm-6 col-xs-6 form-group">  
                                               <label class="control-label"  style="padding-top:8px;">% / Barang</label>                                           
@@ -1338,37 +1333,39 @@ $id_module = $_GET['id_module'];
                                    <td>
                                      <select name="rek_debet_bunga_k" class="form-control" required >
                                          <option value='0'></option>
-                                          <?
+                                          <?php
                                             $query = mysql_query('SELECT * FROM rekening 
                                                                   WHERE parentid != "0" 
                                                                   
-                                                                  ORDER BY norek');
-                                             if($query && mysql_num_rows($query) > 0){
-                                                while($row = mysql_fetch_object($query)){
-                                                   echo '<option value="'.$row->id_rekening.'"';
-                                                   if($row->id_rekening == $k['rek_debet_bunga']) echo ' selected';
-                                                   echo '>'.$row->norek.' - '.$row->rekening.'</option>';
-                                                }
-                                             }        
-                                          ?>  
+                                                                  ORDER BY norek');
+    if ($query && mysql_num_rows($query) > 0) {
+        while ($row = mysql_fetch_object($query)) {
+            echo '<option value="'.$row->id_rekening.'"';
+            if ($row->id_rekening == $k['rek_debet_bunga']) {
+                echo ' selected';
+            }
+            echo '>'.$row->norek.' - '.$row->rekening.'</option>';
+        }
+    } ?>  
                                           </select>       
 
                                    </td>                                   
                                    <td> 
                                     <select name="rek_kredit_bunga_k" class="form-control" required >
                                          <option value='0'></option>
-                                          <?
+                                          <?php
                                             $query = mysql_query('SELECT * FROM rekening 
                                                                   WHERE parentid != "0"                                                                   
-                                                                  ORDER BY norek');
-                                             if($query && mysql_num_rows($query) > 0){
-                                                while($row = mysql_fetch_object($query)){
-                                                   echo '<option value="'.$row->id_rekening.'"';
-                                                   if($row->id_rekening == $k['rek_kredit_bunga']) echo ' selected';
-                                                   echo '>'.$row->norek.' - '.$row->rekening.'</option>';
-                                                }
-                                             }        
-                                          ?>  
+                                                                  ORDER BY norek');
+    if ($query && mysql_num_rows($query) > 0) {
+        while ($row = mysql_fetch_object($query)) {
+            echo '<option value="'.$row->id_rekening.'"';
+            if ($row->id_rekening == $k['rek_kredit_bunga']) {
+                echo ' selected';
+            }
+            echo '>'.$row->norek.' - '.$row->rekening.'</option>';
+        }
+    } ?>  
                                           </select>       
 
 
@@ -1382,7 +1379,7 @@ $id_module = $_GET['id_module'];
                                    <td>
                                          <div class="col-md-6 col-sm-6 col-xs-6 form-group">  
                                          <input type="text" style='padding:6px;' name="ipoint_k" 
-                                         class="form-control" value="<?php echo $k['ipoint'];?>" /> 
+                                         class="form-control" value="<?php echo $k['ipoint']; ?>" /> 
                                          </div>
                                           <div class="col-md-6 col-sm-6 col-xs-6 form-group">  
                                               <label class="control-label"  style="padding-top:8px;">% / Barang</label>                                           
@@ -1392,7 +1389,7 @@ $id_module = $_GET['id_module'];
                                     <td>
                                         <div class="col-md-6 col-sm-6 col-xs-6 form-group">  
                                          <input type="text" style='padding:6px;' name="ipoint_s" 
-                                         class="form-control" value="<?php echo $s['ipoint'];?>" /> 
+                                         class="form-control" value="<?php echo $s['ipoint']; ?>" /> 
                                          </div>
                                         <div class="col-md-6 col-sm-6 col-xs-6 form-group">  
                                               <label class="control-label"  style="padding-top:8px;">% / Barang</label>                                           
@@ -1403,36 +1400,38 @@ $id_module = $_GET['id_module'];
                                    <td>
                                      <select name="rek_debet_ipoint_k" class="form-control" required >
                                          <option value='0'></option>
-                                          <?
+                                          <?php
                                             $query = mysql_query('SELECT * FROM rekening 
                                                                   WHERE parentid != "0" 
-                                                                  ORDER BY norek');
-                                             if($query && mysql_num_rows($query) > 0){
-                                                while($row = mysql_fetch_object($query)){
-                                                   echo '<option value="'.$row->id_rekening.'"';
-                                                   if($row->id_rekening == $k['rek_debet_ipoint']) echo ' selected';
-                                                   echo '>'.$row->norek.' - '.$row->rekening.'</option>';
-                                                }
-                                             }        
-                                          ?>  
+                                                                  ORDER BY norek');
+    if ($query && mysql_num_rows($query) > 0) {
+        while ($row = mysql_fetch_object($query)) {
+            echo '<option value="'.$row->id_rekening.'"';
+            if ($row->id_rekening == $k['rek_debet_ipoint']) {
+                echo ' selected';
+            }
+            echo '>'.$row->norek.' - '.$row->rekening.'</option>';
+        }
+    } ?>  
                                           </select>       
 
                                    </td>                                   
                                    <td> 
                                     <select name="rek_kredit_ipoint_k" class="form-control" required >
                                          <option value='0'></option>
-                                          <?
+                                          <?php
                                             $query = mysql_query('SELECT * FROM rekening 
                                                                   WHERE parentid != "0" 
-                                                                  ORDER BY norek');
-                                             if($query && mysql_num_rows($query) > 0){
-                                                while($row = mysql_fetch_object($query)){
-                                                   echo '<option value="'.$row->id_rekening.'"';
-                                                   if($row->id_rekening == $k['rek_kredit_ipoint']) echo ' selected';
-                                                   echo '>'.$row->norek.' - '.$row->rekening.'</option>';
-                                                }
-                                             }        
-                                          ?>  
+                                                                  ORDER BY norek');
+    if ($query && mysql_num_rows($query) > 0) {
+        while ($row = mysql_fetch_object($query)) {
+            echo '<option value="'.$row->id_rekening.'"';
+            if ($row->id_rekening == $k['rek_kredit_ipoint']) {
+                echo ' selected';
+            }
+            echo '>'.$row->norek.' - '.$row->rekening.'</option>';
+        }
+    } ?>  
                                           </select>       
 
 
@@ -1446,7 +1445,7 @@ $id_module = $_GET['id_module'];
                                    <td>
                                          <div class="col-md-6 col-sm-6 col-xs-6 form-group">  
                                          <input type="number" style='padding:6px;' name="batas_sisa_angsuran_k" 
-                                         class="form-control" value="<?php echo $k['batas_sisa_angsuran'];?>" /> 
+                                         class="form-control" value="<?php echo $k['batas_sisa_angsuran']; ?>" /> 
                                          </div>
                                           <div class="col-md-6 col-sm-6 col-xs-6 form-group">  
                                               <label class="control-label"  style="padding-top:8px;">X</label>                                           
@@ -1456,7 +1455,7 @@ $id_module = $_GET['id_module'];
                                     <td>
                                       <div class="col-md-6 col-sm-6 col-xs-6 form-group">  
                                          <input type="number" style='padding:6px;' name="batas_sisa_angsuran_s" 
-                                         class="form-control" value="<?php echo $s['batas_sisa_angsuran'];?>" /> 
+                                         class="form-control" value="<?php echo $s['batas_sisa_angsuran']; ?>" /> 
                                          </div>
                                          <div class="col-md-6 col-sm-6 col-xs-6 form-group">  
                                               <label class="control-label"  style="padding-top:8px;">X</label>                                           
@@ -1475,7 +1474,7 @@ $id_module = $_GET['id_module'];
                                    <td>
                                          <div class="col-md-6 col-sm-6 col-xs-6 form-group">  
                                          <input type="number" style='padding:6px;' name="tgl_realisasi_k" 
-                                         class="form-control" value="<?php echo $k['tgl_realisasi'];?>" /> 
+                                         class="form-control" value="<?php echo $k['tgl_realisasi']; ?>" /> 
                                          </div>
                                           <div class="col-md-6 col-sm-6 col-xs-6 form-group">  
                                               <label class="control-label"  style="padding-top:8px;">X</label>                                           
@@ -1485,7 +1484,7 @@ $id_module = $_GET['id_module'];
                                     <td>
                                       <div class="col-md-6 col-sm-6 col-xs-6 form-group">  
                                          <input type="number" style='padding:6px;' name="tgl_realisasi_s" 
-                                         class="form-control" value="<?php echo $s['tgl_realisasi'];?>" /> 
+                                         class="form-control" value="<?php echo $s['tgl_realisasi']; ?>" /> 
                                          </div>
                                          <div class="col-md-6 col-sm-6 col-xs-6 form-group">  
                                               <label class="control-label"  style="padding-top:8px;">X</label>                                           
@@ -1504,7 +1503,7 @@ $id_module = $_GET['id_module'];
                                    <td>
                                          <div class="col-md-6 col-sm-6 col-xs-6 form-group">  
                                          <input type="number" style='padding:6px;' name="min_keanggotaan_k" 
-                                         class="form-control" value="<?php echo $k['min_keanggotaan'];?>" /> 
+                                         class="form-control" value="<?php echo $k['min_keanggotaan']; ?>" /> 
                                          </div>
                                           <div class="col-md-6 col-sm-6 col-xs-6 form-group">  
                                               <label class="control-label"  style="padding-top:8px;">Bulan</label>                                           
@@ -1514,7 +1513,7 @@ $id_module = $_GET['id_module'];
                                     <td>
                                       <div class="col-md-6 col-sm-6 col-xs-6 form-group">  
                                          <input type="number" style='padding:6px;' name="min_keanggotaan_s" 
-                                         class="form-control" value="<?php echo $s['min_keanggotaan'];?>" /> 
+                                         class="form-control" value="<?php echo $s['min_keanggotaan']; ?>" /> 
                                          </div>
                                          <div class="col-md-6 col-sm-6 col-xs-6 form-group">  
                                               <label class="control-label"  style="padding-top:8px;">Bulan</label>                                           
@@ -1553,7 +1552,9 @@ $id_module = $_GET['id_module'];
 
           </div>       
 
-          <div id="menu4" class="tab-pane fade <?php if ($tab == 'pl') { echo 'in active primary'; } ?>">
+          <div id="menu4" class="tab-pane fade <?php if ($tab == 'pl') {
+        echo 'in active primary';
+    } ?>">
              <br>
 
            <div class="col-md-12 col-sm-12 col-xs-12 form-group">
@@ -1572,70 +1573,62 @@ $id_module = $_GET['id_module'];
                                       </tr>
                                       </thead>
                                   <tbody>
-                                  <?
-
+                                  <?php
+
                                    $SQL = "SELECT* FROM pg_plafon a inner join jenis_pinjaman b
                                             ON a.id_jenis_pinjaman = b.id_jenis_pinjaman
-                                            WHERE a.prd = '$prd'";
-
-
-                                  $tampil=mysql_query($SQL);
-                                    
-                                 $no = 1;
-            
-                                    while ($r=mysql_fetch_array($tampil)){  
-                                    
-                                    echo"<tr>";
-
-                                    ?>
+                                            WHERE a.prd = '$prd'";
+
+    $tampil = mysql_query($SQL);
+
+    $no = 1;
+
+    while ($r = mysql_fetch_array($tampil)) {
+        echo'<tr>'; ?>
 
                                      <form action="<?php echo"../../modul/mod_$modul/aksi_$modul.php?module=$modul&act=pl"; ?>" method="post" name="formData" enctype="multipart/form-data"  > 
                      
                                     
                                       <td>
                                          <select name="jenis_pinjaman" class="form-control" disabled>
-                                          <?
-                                            $query = mysql_query('SELECT * FROM jenis_pinjaman ORDER BY jenis_pinjaman');
-                                             if($query && mysql_num_rows($query) > 0){
-                                                while($row = mysql_fetch_object($query)){
-                                                   echo '<option value="'.$row->id_jenis_pinjaman.'"';
-                                                   if($row->id_jenis_pinjaman == $r['id_jenis_pinjaman']) echo ' selected';
-                                                   echo '>'.$row->jenis_pinjaman.'</option>';
-                                                }
-                                             }        
-                                          ?>  
+                                          <?php
+                                            $query = mysql_query('SELECT * FROM jenis_pinjaman ORDER BY jenis_pinjaman');
+        if ($query && mysql_num_rows($query) > 0) {
+            while ($row = mysql_fetch_object($query)) {
+                echo '<option value="'.$row->id_jenis_pinjaman.'"';
+                if ($row->id_jenis_pinjaman == $r['id_jenis_pinjaman']) {
+                    echo ' selected';
+                }
+                echo '>'.$row->jenis_pinjaman.'</option>';
+            }
+        } ?>  
                                           </select>       
 
                                        </td>
 
                                     <td>                                         
                                          <input type="text" style='padding:6px;text-align: right;' name="plafon" 
-                                         class="form-control" value="<?php echo $r['plafon'];?>" /> 
+                                         class="form-control" value="<?php echo $r['plafon']; ?>" /> 
                             
                                      </td>
 
-                                    <?php   
-                                    echo" <td  style='text-align:center;'>";     
-                                    ?>                               
+                                    <?php 
+                                    echo" <td  style='text-align:center;'>"; ?>                               
                                     <button type="submit"   class="btn btn-primary btn-sm">
                                                   <span class="glyphicon glyphicon-floppy-disk" aria-hidden="true"></span>
                                     </button>
-                                    <?php            
-                                    echo"</td>";              
-                                    echo"</tr>";
-                                $no++;
-                                ?>
+                                    <?php 
+                                    echo'</td>';
+        echo'</tr>';
+        $no++; ?>
 
                                 <input type="hidden" name="ID" value="<?php echo $r['id_pg_plafon']?>" />
                                   <input type="hidden" name="id_module" value="<?php echo $id_module?>" /> 
                                   <input type="hidden" name="imodule" value="<?php echo $imodule?>" /> 
 
-                                <?
-                               echo"</form>";
-                                
-                                }
-
-                                  ?>  
+                                <?php
+                               echo'</form>';
+    } ?>  
 
 
 
@@ -1652,7 +1645,9 @@ $id_module = $_GET['id_module'];
 
           </div>   
 
-          <div id="menu5" class="tab-pane fade <?php if ($tab == 'jr') { echo 'in active primary'; } ?>">
+          <div id="menu5" class="tab-pane fade <?php if ($tab == 'jr') {
+        echo 'in active primary';
+    } ?>">
               <br>
                   <div class="col-md-12 col-sm-12 col-xs-12 form-group">
                   <div class="x_content">
@@ -1670,37 +1665,33 @@ $id_module = $_GET['id_module'];
                                         </tr>                                         
                                       </thead>
                                   <tbody>
-                                  <?
-
-                                   $SQL = "SELECT* FROM pg_jurnal WHERE prd = '$prd' ORDER BY id_pg_jurnal";
-
-
-                                  $tampil=mysql_query($SQL);
-                                    
-                                 $no = 1;
-            
-                                    while ($r=mysql_fetch_array($tampil)){  
-                                                                          
-                                    
-                                    echo"<tr>";
-
-                                    ?>
+                                  <?php
+
+                                   $SQL = "SELECT* FROM pg_jurnal WHERE prd = '$prd' ORDER BY id_pg_jurnal";
+
+    $tampil = mysql_query($SQL);
+
+    $no = 1;
+
+    while ($r = mysql_fetch_array($tampil)) {
+        echo'<tr>'; ?>
 
                                      <form action="<?php echo"../../modul/mod_$modul/aksi_$modul.php?module=$modul&act=jr"; ?>" method="post" name="formData" enctype="multipart/form-data"  > 
                      
                                          
                                           <td>
                                          <select name="modul" class="form-control" required >
-                                          <?
-                                            $query = mysql_query('SELECT * FROM modul WHERE jurnal = "Y" and aktif = "Y" ORDER BY nama_modul');
-                                             if($query && mysql_num_rows($query) > 0){
-                                                while($row = mysql_fetch_object($query)){
-                                                   echo '<option value="'.$row->id_modul.'"';
-                                                   if($row->id_modul == $r['id_modul']) echo ' selected';
-                                                   echo '>'.$row->nama_modul.'</option>';
-                                                }
-                                             }        
-                                          ?>  
+                                          <?php
+                                            $query = mysql_query('SELECT * FROM modul WHERE jurnal = "Y" and aktif = "Y" ORDER BY nama_modul');
+        if ($query && mysql_num_rows($query) > 0) {
+            while ($row = mysql_fetch_object($query)) {
+                echo '<option value="'.$row->id_modul.'"';
+                if ($row->id_modul == $r['id_modul']) {
+                    echo ' selected';
+                }
+                echo '>'.$row->nama_modul.'</option>';
+            }
+        } ?>  
                                           </select>       
 
                                        </td>
@@ -1708,47 +1699,43 @@ $id_module = $_GET['id_module'];
 
                                         <td>
                                          <select name="jenis_transaksi" class="form-control" required >
-                                          <?
+                                          <?php
                                             $query = mysql_query('SELECT a.*,b.kode,b.tipe_transaksi 
                                                                   FROM jenis_transaksi a inner join tipe_transaksi b
                                                                   ON a.id_tipe_transaksi = b.id_tipe_transaksi
-                                                                  ORDER BY a.id_tipe_transaksi,a.id_jenis_transaksi');
-                                             if($query && mysql_num_rows($query) > 0){
-                                                while($row = mysql_fetch_object($query)){
-                                                   echo '<option value="'.$row->id_jenis_transaksi.'"';
-                                                   if($row->id_jenis_transaksi == $r['id_jenis_transaksi']) echo ' selected';
-                                                   echo '>'.$row->kode.' - '.$row->tipe_transaksi.' - '.$row->jenis_transaksi.'</option>';
-                                                }
-                                             }        
-                                          ?>  
+                                                                  ORDER BY a.id_tipe_transaksi,a.id_jenis_transaksi');
+        if ($query && mysql_num_rows($query) > 0) {
+            while ($row = mysql_fetch_object($query)) {
+                echo '<option value="'.$row->id_jenis_transaksi.'"';
+                if ($row->id_jenis_transaksi == $r['id_jenis_transaksi']) {
+                    echo ' selected';
+                }
+                echo '>'.$row->kode.' - '.$row->tipe_transaksi.' - '.$row->jenis_transaksi.'</option>';
+            }
+        } ?>  
                                           </select>       
 
                                        </td>
 
                                          
 
-                                    <?php   
-                                    echo" <td  style='text-align:center;'>";     
-                                    ?>                               
+                                    <?php 
+                                    echo" <td  style='text-align:center;'>"; ?>                               
                                     <button type="submit"   class="btn btn-primary btn-sm">
                                                   <span class="glyphicon glyphicon-floppy-disk" aria-hidden="true"></span>
                                     </button>
-                                    <?php            
-                                    echo"</td>";              
-                                    echo"</tr>";
-                                $no++;
-                                ?>
+                                    <?php 
+                                    echo'</td>';
+        echo'</tr>';
+        $no++; ?>
 
                                 <input type="hidden" name="ID" value="<?php echo $r['id_pg_jurnal']?>" />
                                   <input type="hidden" name="id_module" value="<?php echo $id_module?>" /> 
                                   <input type="hidden" name="imodule" value="<?php echo $imodule?>" /> 
 
-                                <?
-                               echo"</form>";
-                                
-                                }
-
-                                  ?>  
+                                <?php
+                               echo'</form>';
+    } ?>  
 
 
 
@@ -1765,30 +1752,29 @@ $id_module = $_GET['id_module'];
 
 
 
-           <div id="menu6" class="tab-pane fade <?php if ($tab == 'ln') { echo 'in active primary'; } ?>">
+           <div id="menu6" class="tab-pane fade <?php if ($tab == 'ln') {
+        echo 'in active primary';
+    } ?>">
              <br>
 
            <div class="col-md-12 col-sm-12 col-xs-12 form-group">
               <div class="x_content">
 
-                <?
-
-                 $id = 1; // isset($_GET['id_general_setting']) ? intval($_GET['id_general_setting']) : false;
-    
-                    if($id){
-                       $query = mysql_query('SELECT * FROM pg_lainnya 
+                <?php
+
+                 $id = 1; // isset($_GET['id_general_setting']) ? intval($_GET['id_general_setting']) : false;
+
+    if ($id) {
+        $query = mysql_query('SELECT * FROM pg_lainnya 
                                                 WHERE prd =  "'.$prd.'"
-                                                ');
-
-                       if($query && mysql_num_rows($query) == 1){
-                          $data = mysql_fetch_object($query);
-                       }else 
-                          die('Data general_setting tidak ditemukan');
-                    }
-                  
-
-
-                ?>
+                                                ');
+
+        if ($query && mysql_num_rows($query) == 1) {
+            $data = mysql_fetch_object($query);
+        } else {
+            die('Data general_setting tidak ditemukan');
+        }
+    } ?>
                    <!-- start form for validation -->
                      <form action="<?php echo"../../modul/mod_$modul/aksi_$modul.php?module=$modul&act=ln"; ?>" method="post" name="formData" enctype="multipart/form-data"  > 
                      
@@ -1814,18 +1800,19 @@ $id_module = $_GET['id_module'];
                        <div class="col-md-9  col-sm-9 col-xs-9 form-group">
                             <select name="rek_shu" class="form-control" required >
                                          <option value='0'></option>
-                                          <?
+                                          <?php
                                             $query = mysql_query('SELECT * FROM rekening 
                                                                   WHERE parentid != "0" 
-                                                                  ORDER BY norek');
-                                             if($query && mysql_num_rows($query) > 0){
-                                                while($row = mysql_fetch_object($query)){
-                                                   echo '<option value="'.$row->id_rekening.'"';
-                                                   if($row->id_rekening == $data->rek_shu) echo ' selected';
-                                                   echo '>'.$row->norek.' - '.$row->rekening.'</option>';
-                                                }
-                                             }        
-                                          ?>  
+                                                                  ORDER BY norek');
+    if ($query && mysql_num_rows($query) > 0) {
+        while ($row = mysql_fetch_object($query)) {
+            echo '<option value="'.$row->id_rekening.'"';
+            if ($row->id_rekening == $data->rek_shu) {
+                echo ' selected';
+            }
+            echo '>'.$row->norek.' - '.$row->rekening.'</option>';
+        }
+    } ?>  
                                           </select>                                         
                       </div>
 
@@ -2090,27 +2077,26 @@ $id_module = $_GET['id_module'];
         </script>
         <!-- /editor -->
 
-         <?php 
-
-         $id = 1; // isset($_GET['id_general_setting']) ? intval($_GET['id_general_setting']) : false;
-    
-                    if($id){
-                       $query = mysql_query('SELECT * FROM informasi_perusahaan WHERE id_informasi_perusahaan = "'.$id.'"');
-                       if($query && mysql_num_rows($query) == 1){
-                          $data = mysql_fetch_object($query);
-                       }else 
-                          die('Data general_setting tidak ditemukan');
-                    }
-                  
-                    $pict  = $data->pict;
-
-
-         if(empty($pict)) { 
-            $ipict = 'logo.png';
-           } else { 
-            $ipict = $pict;
-           } 
-           ?>
+         <?php 
+
+         $id = 1; // isset($_GET['id_general_setting']) ? intval($_GET['id_general_setting']) : false;
+
+    if ($id) {
+        $query = mysql_query('SELECT * FROM informasi_perusahaan WHERE id_informasi_perusahaan = "'.$id.'"');
+        if ($query && mysql_num_rows($query) == 1) {
+            $data = mysql_fetch_object($query);
+        } else {
+            die('Data general_setting tidak ditemukan');
+        }
+    }
+
+    $pict = $data->pict;
+
+    if (empty($pict)) {
+        $ipict = 'logo.png';
+    } else {
+        $ipict = $pict;
+    } ?>
 
         <script>
           var btnCust = '<button type="button" class="btn btn-default" title="Add picture tags" ' + 
@@ -2129,20 +2115,18 @@ $id_module = $_GET['id_module'];
               removeTitle: 'Cancel or reset changes',
               elErrorContainer: '#kv-avatar-errors',
               msgErrorClass: 'alert alert-block alert-danger',
-              defaultPreviewContent: '<img src="../../images/logo/<?php echo $ipict;?>" alt="Your Avatar" style="width:180px;">',
+              defaultPreviewContent: '<img src="../../images/logo/<?php echo $ipict; ?>" alt="Your Avatar" style="width:180px;">',
               layoutTemplates: {main2: '{preview} ' + ' {remove} {browse}'},
               allowedFileExtensions: ["jpg"]
           });
           </script>
 
-          <?php 
-         if(empty($pict)) { 
-            $ipict = 'logo.png';
-           } else { 
-            $ipict = $pict;
-           } 
-
-           ?>
+          <?php 
+         if (empty($pict)) {
+             $ipict = 'logo.png';
+         } else {
+             $ipict = $pict;
+         } ?>
 
         <script>
           var btnCust = '<button type="button" class="btn btn-default" title="Add picture tags" ' + 
@@ -2161,7 +2145,7 @@ $id_module = $_GET['id_module'];
               removeTitle: 'Cancel or reset changes',
               elErrorContainer: '#kv-avatar-errors',
               msgErrorClass: 'alert alert-block alert-danger',
-              defaultPreviewContent: '<img src="../../images/logo/<?php echo $ipict;?>" alt="Your Avatar" style="width:180px;">',
+              defaultPreviewContent: '<img src="../../images/logo/<?php echo $ipict; ?>" alt="Your Avatar" style="width:180px;">',
               layoutTemplates: {main2: '{preview} ' + ' {remove} {browse}'},
               allowedFileExtensions: ["jpg"]
           });
@@ -2169,6 +2153,6 @@ $id_module = $_GET['id_module'];
 
 </body>
 </html>
-<?
-}
+<?php
+}
 ?>
\ No newline at end of file
diff --git a/modul/mod_poli/aksi_poli.php b/modul/mod_poli/aksi_poli.php
index 5efabbc3af7a2f37661eaa0ed37b3497e38cfc45..ad6565af961c0b714c63894eef1a51471cc32a85 100755
--- a/modul/mod_poli/aksi_poli.php
+++ b/modul/mod_poli/aksi_poli.php
@@ -1,59 +1,49 @@
-<?php
-session_start();
-if (empty($_SESSION['username']) AND empty($_SESSION['password'])){
-  echo "<script>window.alert('Please login first.'); window.location=('../../index.php.php')</script>";
-} else{
-include "./../../config/koneksi.php";
-include "./../../config/fungsi_thumb.php";
-
-$module=$_GET[module];
-$act=$_GET[act];
-
-$date     = date("d/m/Y");  
-$idate    = date("Y-m-d");
-$hour = time() - (1 * 1 * 60 * 60);
-$datetime   = date("Y-m-d G:i:s", $hour);
-$userid   = $_SESSION['userid'];
-
-
-// Hapus modul
-if ($module=='poli' AND $act=='hapus'){
-  $id = $_GET['id'];
-  $id_module = $_GET['id_module'];
-   
-  mysql_query("DELETE FROM ".$module." WHERE id_".$module." = $id");
-
-   //header('location:../../main.php?module='.$module.'&id_module='.$id_module);          
-
-  ?>
+<?php
+session_start();
+if (empty($_SESSION['username']) and empty($_SESSION['password'])) {
+    echo "<script>window.alert('Please login first.'); window.location=('../../index.php.php')</script>";
+} else {
+    include './../../config/koneksi.php';
+    include './../../config/fungsi_thumb.php';
+
+    $module = $_GET[module];
+    $act = $_GET[act];
+
+    $date = date('d/m/Y');
+    $idate = date('Y-m-d');
+    $hour = time() - (1 * 1 * 60 * 60);
+    $datetime = date('Y-m-d G:i:s', $hour);
+    $userid = $_SESSION['userid'];
+
+    // Hapus modul
+    if ($module == 'poli' and $act == 'hapus') {
+        $id = $_GET['id'];
+        $id_module = $_GET['id_module'];
+
+        mysql_query('DELETE FROM '.$module.' WHERE id_'.$module." = $id");
+
+        //header('location:../../main.php?module='.$module.'&id_module='.$id_module); ?>
    
   <script language="javascript">
-     window.parent.location.href = "<?php echo"./../../main.php?module=$module&id_module=$id_module";?>";  
+     window.parent.location.href = "<?php echo"./../../main.php?module=$module&id_module=$id_module"; ?>";  
      window.parent.tb_remove();
    </script>
   
-  <?php                 
-   
- }
-
-  // Input group
-elseif ($module=='poli' AND $act=='input'){
-
-  $id_module = $_POST['id_module'];
-
-
-   if($_POST['ID']){
-   mysql_query("UPDATE poli SET poli   = '$_POST[poli]'
+  <?php
+    }
+
+    // Input group
+    elseif ($module == 'poli' and $act == 'input') {
+        $id_module = $_POST['id_module'];
+
+        if ($_POST['ID']) {
+            mysql_query("UPDATE poli SET poli   = '$_POST[poli]'
                     ,upddt   = '$datetime' 
                   ,updby   = '$userid' 
                   ,aktif     = '$_POST[aktif]'  
-                          WHERE id_poli    = '$_POST[ID]'");
-
-                           
-
-      
-   } else {
-   mysql_query("INSERT INTO poli(poli
+                          WHERE id_poli    = '$_POST[ID]'");
+        } else {
+            mysql_query("INSERT INTO poli(poli
                    ,crtdt
                    ,crtby
                    ,upddt
@@ -64,25 +54,17 @@ elseif ($module=='poli' AND $act=='input'){
                   ,'$userid'
                   ,'$datetime'
                   ,'$userid'
-                    ,'$_POST[aktif]')");
-  
-                
-   }
-   
-
-   //header('location:../../main.php?module='.$module.'&id_module='.$id_module);          
-
-  ?>
+                    ,'$_POST[aktif]')");
+        }
+
+        //header('location:../../main.php?module='.$module.'&id_module='.$id_module); ?>
    
   <script language="javascript">
-     window.parent.location.href = "<?php echo"./../../main.php?module=$module&id_module=$id_module";?>";  
+     window.parent.location.href = "<?php echo"./../../main.php?module=$module&id_module=$id_module"; ?>";  
      window.parent.tb_remove();
    </script>
   
-  <?php                               
- 
-
-}
-
-}
+  <?php
+    }
+}
 ?>
diff --git a/modul/mod_poli/form_poli.php b/modul/mod_poli/form_poli.php
index 879010aea793029a8fafb6845d7bf1c178a6034c..12fc6b7b71af0ed2cb9b5c34f1df85aa114c0d1b 100755
--- a/modul/mod_poli/form_poli.php
+++ b/modul/mod_poli/form_poli.php
@@ -1,10 +1,9 @@
-<?
-session_start();
-if (empty($_SESSION['username']) AND empty($_SESSION['password'])){
-  echo "<script>window.alert('Please login first.'); window.location=('../../index.php.php')</script>";
-} else{
-include "./../../config/koneksi.php";
-?>
+<?php
+session_start();
+if (empty($_SESSION['username']) and empty($_SESSION['password'])) {
+    echo "<script>window.alert('Please login first.'); window.location=('../../index.php.php')</script>";
+} else {
+    include './../../config/koneksi.php'; ?>
 <!doctype html>
 <html>
 <head>
@@ -32,41 +31,37 @@ include "./../../config/koneksi.php";
 </head>
 
 <body style='background-color:#fff;'>
-<?
-
-$modul = $_GET['module'];
-$title = $_GET['title'];
-
-$role   = $_SESSION['role'];
-
-$id_module = $_GET['id_module']; 
-
-  $id = isset($_GET['id_poli']) ? intval($_GET['id_poli']) : false;
-  
-  if($id){
-     $query = mysql_query('SELECT * FROM poli WHERE id_poli = "'.$id.'"');
-     if($query && mysql_num_rows($query) == 1){
-        $data = mysql_fetch_object($query);
-     }else 
-        die('Data modul tidak ditemukan');
-  }
-  
-if ($_GET['igroup']) {
-  $group  = $_GET['igroup'];
-} else {
-  $group  = $data->id_poli;
-  
-}
-
-if ($_GET['imenu']) {
-  $imenu  = $_GET['imenu'];
-} else {
-  $imenu  = $data->id_modul;  
-  
-}
-
-  
-?>
+<?php
+
+$modul = $_GET['module'];
+    $title = $_GET['title'];
+
+    $role = $_SESSION['role'];
+
+    $id_module = $_GET['id_module'];
+
+    $id = isset($_GET['id_poli']) ? intval($_GET['id_poli']) : false;
+
+    if ($id) {
+        $query = mysql_query('SELECT * FROM poli WHERE id_poli = "'.$id.'"');
+        if ($query && mysql_num_rows($query) == 1) {
+            $data = mysql_fetch_object($query);
+        } else {
+            die('Data modul tidak ditemukan');
+        }
+    }
+
+    if ($_GET['igroup']) {
+        $group = $_GET['igroup'];
+    } else {
+        $group = $data->id_poli;
+    }
+
+    if ($_GET['imenu']) {
+        $imenu = $_GET['imenu'];
+    } else {
+        $imenu = $data->id_modul;
+    } ?>
 
 
 <div class="ix_panel">
@@ -83,9 +78,11 @@ if ($_GET['imenu']) {
           </div>
 
         
-          <?php if ($id){ ?>  
+          <?php if ($id) {
+        ?>  
     
-            <?php if (@$data->aktif=='Y'){ ?>
+            <?php if (@$data->aktif == 'Y') {
+            ?>
               
                 <div class="form-group">
 	               <label class="control-label col-md-3 col-sm-3 col-xs-12" style='padding-top:10px;'>Aktif :</label>
@@ -94,7 +91,9 @@ if ($_GET['imenu']) {
                     <input type=radio name='aktif' value='N' class="flat"> T                
                   </div>
               </div>  
-            <?php   }else{ ?>  
+            <?php
+        } else {
+            ?>  
               
                 <div class="form-group">
 	               <label class="control-label col-md-3 col-sm-3 col-xs-12" style='padding-top:10px;'>Aktif :</label>
@@ -103,9 +102,12 @@ if ($_GET['imenu']) {
                     <input type=radio name='aktif' value='N' class="flat" checked> T          
                   </div>
               </div>  
-             <?php } ?>
+             <?php
+        } ?>
 
-        <?php   }else{ ?>  
+        <?php
+    } else {
+        ?>  
 
            
                 <div class="form-group">
@@ -116,7 +118,8 @@ if ($_GET['imenu']) {
                   </div>
               </div>  
 
-        <?php } ?>
+        <?php
+    } ?>
 
 
 
@@ -335,6 +338,6 @@ if ($_GET['imenu']) {
 
 </body>
 </html>
-<?
-}
+<?php
+}
 ?>
\ No newline at end of file
diff --git a/modul/mod_rekam_medis/aksi_rekam_medis.php b/modul/mod_rekam_medis/aksi_rekam_medis.php
index df8b129b885ea37a428391d011dd5b9cb7c4c5a4..0aab202f160404bffa9b041ac7c9db813971fa1a 100755
--- a/modul/mod_rekam_medis/aksi_rekam_medis.php
+++ b/modul/mod_rekam_medis/aksi_rekam_medis.php
@@ -1,28 +1,25 @@
-<?php
-session_start();
-if (empty($_SESSION['username']) AND empty($_SESSION['password'])){
-  echo "<script>window.alert('Please login first.'); window.location=('../../index.php.php')</script>";
-} else{
-include "./../../config/koneksi.php";
-include "./../../config/fungsi_thumb.php";
-
-$module=$_GET[module];
-$act=$_GET[act];
-
-$date     = date("d/m/Y");  
-$idate    = date("Y-m-d");
-$hour = time() - (1 * 1 * 60 * 60);
-$datetime   = date("Y-m-d G:i:s", $hour);
-$userid   = $_SESSION['userid'];
-$business_type = $_SESSION['business_type']; 
-
-if ($module=='rekam_medis' AND $act=='update'){
-
-  $id_module = $_POST['id_module'];
-
-
-
-   mysql_query("UPDATE kunjungan_berobat SET keluhan   = '$_POST[keluhan]'
+<?php
+session_start();
+if (empty($_SESSION['username']) and empty($_SESSION['password'])) {
+    echo "<script>window.alert('Please login first.'); window.location=('../../index.php.php')</script>";
+} else {
+    include './../../config/koneksi.php';
+    include './../../config/fungsi_thumb.php';
+
+    $module = $_GET[module];
+    $act = $_GET[act];
+
+    $date = date('d/m/Y');
+    $idate = date('Y-m-d');
+    $hour = time() - (1 * 1 * 60 * 60);
+    $datetime = date('Y-m-d G:i:s', $hour);
+    $userid = $_SESSION['userid'];
+    $business_type = $_SESSION['business_type'];
+
+    if ($module == 'rekam_medis' and $act == 'update') {
+        $id_module = $_POST['id_module'];
+
+        mysql_query("UPDATE kunjungan_berobat SET keluhan   = '$_POST[keluhan]'
                     ,diagnosa   = '$_POST[diagnosa]'
                     ,pemeriksaan   = '$_POST[pemeriksaan]'    
                     ,tindakan   = '$_POST[tindakan]'    
@@ -30,23 +27,16 @@ if ($module=='rekam_medis' AND $act=='update'){
                     ,upddt   = '$datetime' 
                     ,updby   = '$userid' 
                     ,status     = '1'  
-                 WHERE id_kunjungan_berobat    = '$_POST[ID]'");
-                          
-
-   
-   //header('location:../../main.php?module='.$module.'&id_module='.$id_module);          
-
-  ?>
+                 WHERE id_kunjungan_berobat    = '$_POST[ID]'");
+
+        //header('location:../../main.php?module='.$module.'&id_module='.$id_module); ?>
    
   <script language="javascript">
-     window.parent.location.href = "<?php echo"./../../main.php?module=$module&id_module=$id_module";?>";  
+     window.parent.location.href = "<?php echo"./../../main.php?module=$module&id_module=$id_module"; ?>";  
      window.parent.tb_remove();
    </script>
   
-  <?php                               
- 
-
-}
-
-}
+  <?php
+    }
+}
 ?>
diff --git a/modul/mod_rekam_medis/form_rekam_medis.php b/modul/mod_rekam_medis/form_rekam_medis.php
index 6f36d32b3850c8d7d2a8fe7d4dffe6b87e14e783..b889c70476260d3db8bb35d5d52840c4579fdb4a 100755
--- a/modul/mod_rekam_medis/form_rekam_medis.php
+++ b/modul/mod_rekam_medis/form_rekam_medis.php
@@ -1,10 +1,9 @@
-<?
-session_start();
-if (empty($_SESSION['username']) AND empty($_SESSION['password'])){
-  echo "<script>window.alert('Please login first.'); window.location=('../../index.php.php')</script>";
-} else{
-include "./../../config/koneksi.php";
-?>
+<?php
+session_start();
+if (empty($_SESSION['username']) and empty($_SESSION['password'])) {
+    echo "<script>window.alert('Please login first.'); window.location=('../../index.php.php')</script>";
+} else {
+    include './../../config/koneksi.php'; ?>
 <!doctype html>
 <html>
 <head>
@@ -32,47 +31,43 @@ include "./../../config/koneksi.php";
 </head>
 
 <body style='background-color:#fff;'>
-<?
-
-$modul = $_GET['module'];
-$title = $_GET['title'];
-$business_type = $_SESSION['business_type']; 
-$role   = $_SESSION['role'];
-
-$id_module = $_GET['id_module']; 
-
-  $id = isset($_GET['id_kunjungan_berobat']) ? intval($_GET['id_kunjungan_berobat']) : false;
-  
-  if($id){
-     $query = mysql_query('SELECT * FROM kunjungan_berobat WHERE id_kunjungan_berobat = "'.$id.'"');
-     if($query && mysql_num_rows($query) == 1){
-        $data = mysql_fetch_object($query);
-     }else 
-        die('Data modul tidak ditemukan');
-  }
-  
-if ($_GET['igroup']) {
-  $group  = $_GET['igroup'];
-} else {
-  $group  = $data->id_kunjungan_berobat;
-  
-}
-
-if ($_GET['imenu']) {
-  $imenu  = $_GET['imenu'];
-} else {
-  $imenu  = $data->id_modul;  
-  
-}
-
-if ($data->tanggal) {
-  $tanggal = $data->tanggal;
-} else {
-  $tanggal = DATE('Y-m-d');
-}
-
-  
-?>
+<?php
+
+$modul = $_GET['module'];
+    $title = $_GET['title'];
+    $business_type = $_SESSION['business_type'];
+    $role = $_SESSION['role'];
+
+    $id_module = $_GET['id_module'];
+
+    $id = isset($_GET['id_kunjungan_berobat']) ? intval($_GET['id_kunjungan_berobat']) : false;
+
+    if ($id) {
+        $query = mysql_query('SELECT * FROM kunjungan_berobat WHERE id_kunjungan_berobat = "'.$id.'"');
+        if ($query && mysql_num_rows($query) == 1) {
+            $data = mysql_fetch_object($query);
+        } else {
+            die('Data modul tidak ditemukan');
+        }
+    }
+
+    if ($_GET['igroup']) {
+        $group = $_GET['igroup'];
+    } else {
+        $group = $data->id_kunjungan_berobat;
+    }
+
+    if ($_GET['imenu']) {
+        $imenu = $_GET['imenu'];
+    } else {
+        $imenu = $data->id_modul;
+    }
+
+    if ($data->tanggal) {
+        $tanggal = $data->tanggal;
+    } else {
+        $tanggal = date('Y-m-d');
+    } ?>
 
 
 <div class="ix_panel">
@@ -95,19 +90,19 @@ if ($data->tanggal) {
               <div class="col-md-6 col-sm-6 col-xs-12" >
                  <select required name="pasien" class="form-control" disabled>
                  <option>--Pilih Pasien--</option>                
-                    <?
-                      $query = mysql_query('SELECT * FROM pasien ORDER BY nama');
-                       if($query && mysql_num_rows($query) > 0){
-                          while($row = mysql_fetch_object($query)){
-
-                            $pasien = $row->ktp.'-'.$row->nama;
-
-                             echo '<option value="'.$row->id_pasien.'"';
-                             if($row->id_pasien == @$data->id_pasien) echo ' selected';
-                             echo '>'.$pasien.'</option>';
-                          }
-                       }        
-                    ?>
+                    <?php
+                      $query = mysql_query('SELECT * FROM pasien ORDER BY nama');
+    if ($query && mysql_num_rows($query) > 0) {
+        while ($row = mysql_fetch_object($query)) {
+            $pasien = $row->ktp.'-'.$row->nama;
+
+            echo '<option value="'.$row->id_pasien.'"';
+            if ($row->id_pasien == @$data->id_pasien) {
+                echo ' selected';
+            }
+            echo '>'.$pasien.'</option>';
+        }
+    } ?>
                     </select>
               </div>
 
@@ -116,16 +111,17 @@ if ($data->tanggal) {
               <div class="col-md-6 col-sm-6 col-xs-12" >
                  <select name="poli" class="form-control" disabled>     
                  <option>--Pilih Poliklinik --</option>                          
-                    <?
-                      $query = mysql_query('SELECT * FROM poli ORDER BY poli');
-                       if($query && mysql_num_rows($query) > 0){
-                          while($row = mysql_fetch_object($query)){
-                             echo '<option value="'.$row->id_poli.'"';
-                             if($row->id_poli == @$data->id_poli) echo ' selected';
-                             echo '>'.$row->poli.'</option>';
-                          }
-                       }        
-                    ?>
+                    <?php
+                      $query = mysql_query('SELECT * FROM poli ORDER BY poli');
+    if ($query && mysql_num_rows($query) > 0) {
+        while ($row = mysql_fetch_object($query)) {
+            echo '<option value="'.$row->id_poli.'"';
+            if ($row->id_poli == @$data->id_poli) {
+                echo ' selected';
+            }
+            echo '>'.$row->poli.'</option>';
+        }
+    } ?>
                     </select>
               </div>
 
@@ -155,7 +151,8 @@ if ($data->tanggal) {
 
 
  
-                  <?php if (@$data->rujukan=='Y'){ ?>
+                  <?php if (@$data->rujukan == 'Y') {
+        ?>
               
                     <div class="form-group">
                      <label class="control-label col-md-3 col-sm-3 col-xs-12" style='padding-top:10px;'>Rujukan :</label>
@@ -164,7 +161,9 @@ if ($data->tanggal) {
                         <input type=radio name='rujukan' value='N' class="flat"> T                
                       </div>
                   </div>  
-                <?php   }else{ ?>  
+                <?php
+    } else {
+        ?>  
                   
                     <div class="form-group">
                      <label class="control-label col-md-3 col-sm-3 col-xs-12" style='padding-top:10px;'>Rujukan :</label>
@@ -173,7 +172,8 @@ if ($data->tanggal) {
                         <input type=radio name='rujukan' value='N' class="flat" checked> T          
                       </div>
                   </div>  
-                 <?php } ?>
+                 <?php
+    } ?>
 
 
 
@@ -394,6 +394,6 @@ if ($data->tanggal) {
 
 </body>
 </html>
-<?
-}
+<?php
+}
 ?>
\ No newline at end of file
diff --git a/modul/mod_report_kunjungan_pasien/print_report_kunjungan_pasien.php b/modul/mod_report_kunjungan_pasien/print_report_kunjungan_pasien.php
index 6ef83e890ca519fd63f81e4e9b91a63dc8377094..023b5e49eeb72fbacb101fd78b2ef03da767b861 100755
--- a/modul/mod_report_kunjungan_pasien/print_report_kunjungan_pasien.php
+++ b/modul/mod_report_kunjungan_pasien/print_report_kunjungan_pasien.php
@@ -1,30 +1,29 @@
-<?php
-include "./../../config/koneksi.php";
-include "./../../config/fungsi_indobulan.php";
-
-$tampil=mysql_query("SELECT * FROM modul WHERE id_modul ='".$_GET[report_id]."'");
-            
-$r=mysql_fetch_array($tampil);
-
-$module   = $_GET['module'];
-$imodule  = ucwords($r['nama_modul']);
-$nmmodule   = ucwords($r['nama_modul']);
-$id       = $r['id_modul'];
-$fa_icon    = $r['fa_icon'];
-
-if($r[orientation] == 'P') {
-  $orientation = 'portrait';
-} else {
-  $orientation = 'landscape';
-}
-
-
-$fdate = $_GET['fdate'];
-$ldate = $_GET['ldate'];
-
-$ftgl = DATE('d/m/Y',strtotime($_GET['fdate']));
-$ltgl = DATE('d/m/Y',strtotime($_GET['ldate']));
-                
+<?php
+include './../../config/koneksi.php';
+include './../../config/fungsi_indobulan.php';
+
+$tampil = mysql_query("SELECT * FROM modul WHERE id_modul ='".$_GET[report_id]."'");
+
+$r = mysql_fetch_array($tampil);
+
+$module = $_GET['module'];
+$imodule = ucwords($r['nama_modul']);
+$nmmodule = ucwords($r['nama_modul']);
+$id = $r['id_modul'];
+$fa_icon = $r['fa_icon'];
+
+if ($r[orientation] == 'P') {
+    $orientation = 'portrait';
+} else {
+    $orientation = 'landscape';
+}
+
+$fdate = $_GET['fdate'];
+$ldate = $_GET['ldate'];
+
+$ftgl = date('d/m/Y', strtotime($_GET['fdate']));
+$ltgl = date('d/m/Y', strtotime($_GET['ldate']));
+
 ?>
 
 <!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
@@ -140,11 +139,15 @@ function icetak(){
 
 <!--<body onload="cetakspk()">-->
 
-<? if ($_GET['printto'] == '2') { ?>
+<?php if ($_GET['printto'] == '2') {
+    ?>
 <body onload="icetak()">
-<? } else { ?>
+<?php
+} else {
+        ?>
 <body>
-<? } ?>
+<?php
+    } ?>
 
 
    <div class="noprint themeborderleft themeborderright themebordertop themeborderbottom"  >
@@ -161,28 +164,28 @@ function icetak(){
 </div>
 
 
-<?
-$gtampil=mysql_query("SELECT * FROM informasi_perusahaan where id_informasi_perusahaan = '1'");
- $g=mysql_fetch_array($gtampil);
-
-if ($g['pict']) {
-  $pict = $g['pict'];
-} else {
-  $pict = '';
-}
-
-$company = ucwords($g['company']);
+<?php
+$gtampil = mysql_query("SELECT * FROM informasi_perusahaan where id_informasi_perusahaan = '1'");
+ $g = mysql_fetch_array($gtampil);
+
+if ($g['pict']) {
+    $pict = $g['pict'];
+} else {
+    $pict = '';
+}
+
+$company = ucwords($g['company']);
 ?>
 
  <table width='100%' style="padding-top:10px;">
 <tr>
 <td width='10%'>
-<!-- <img src="../../images/logo/<?=$pict;?>" width=100px> -->
+<!-- <img src="../../images/logo/<?=$pict; ?>" width=100px> -->
 </td>
 <td style="text-align:center;" width='80%'>
-<span class='h1'><?=$nmmodule;?></span>
-<? echo "<span class='h2'>".$g['company']."</span><br>"; ?>
-<br>Periode : <?=$ftgl;?> - <?=$ltgl;?>
+<span class='h1'><?=$nmmodule; ?></span>
+<?php echo "<span class='h2'>".$g['company'].'</span><br>'; ?>
+<br>Periode : <?=$ftgl; ?> - <?=$ltgl; ?>
 </td>
 <td width='10%'>
 &nbsp
@@ -201,22 +204,22 @@ $company = ucwords($g['company']);
                                 <th><h3 style='font-size:12px;'>Nama Pasien</h3></th>
                                 <th><h3 style='font-size:12px;'>Kategori</h3></th>   
 
-                                <?
-                                $tampil=mysql_query("SELECT * FROM poli ORDER BY id_poli");     
-                                 while ($r=mysql_fetch_array($tampil)){  
-                                ?>  
-                                <th><h3 style='font-size:12px;'><?=$r[poli];?></h3></th>   
-                                <?
-                                }
+                                <?php
+                                $tampil = mysql_query('SELECT * FROM poli ORDER BY id_poli');
+                                 while ($r = mysql_fetch_array($tampil)) {
+                                     ?>  
+                                <th><h3 style='font-size:12px;'><?=$r[poli]; ?></h3></th>   
+                                <?php
+                                 }
                                 ?>
 
                             </tr>
                         </thead>
                         <tbody>
                             
-                         <?
-                        
-             $tampil=mysql_query("SELECT DISTINCT b.id_pasien,b.ktp,b.nama,d.kategori 
+                         <?php
+
+             $tampil = mysql_query("SELECT DISTINCT b.id_pasien,b.ktp,b.nama,d.kategori 
                                 FROM kunjungan_berobat a left join pasien b 
                                  ON a.id_pasien = b.id_pasien
                                  left join poli c 
@@ -226,27 +229,22 @@ $company = ucwords($g['company']);
                                  WHERE a.tanggal >= '$fdate'
                                  AND a.tanggal <= '$ldate'
                                  AND a.status = '1'
-                                 ");
-
-            
-            $no = 1;
-            
-            while ($r=mysql_fetch_array($tampil)){  
-
-            $tgl       = DATE('d/m/Y',strtotime($r[tanggal]));
-
-            $id_pasien    = $r[id_pasien];
-
-
-            echo"<tr>";
-            echo"<td style='text-align:center;'>$no</td>";
-            echo"<td>$r[ktp]</td>";
-            echo"<td>$r[nama]</td>";            
-            echo"<td>$r[kategori]</td>";
-              
-
-
-            $dtampil=mysql_query("SELECT a.poli,COUNT(b.id_pasien) as jml 
+                                 ");
+
+            $no = 1;
+
+            while ($r = mysql_fetch_array($tampil)) {
+                $tgl = date('d/m/Y', strtotime($r[tanggal]));
+
+                $id_pasien = $r[id_pasien];
+
+                echo'<tr>';
+                echo"<td style='text-align:center;'>$no</td>";
+                echo"<td>$r[ktp]</td>";
+                echo"<td>$r[nama]</td>";
+                echo"<td>$r[kategori]</td>";
+
+                $dtampil = mysql_query("SELECT a.poli,COUNT(b.id_pasien) as jml 
                                   FROM poli a LEFT JOIN kunjungan_berobat b
                                   ON a.id_poli = b.id_poli
                                   AND b.tanggal >= '$fdate'
@@ -255,27 +253,23 @@ $company = ucwords($g['company']);
                                   AND b.id_pasien = '$id_pasien'
                                   GROUP by a.poli
                                   ORDER BY a.id_poli
-                                 ");  
-
-
-            while ($d=mysql_fetch_array($dtampil)){  
-
-            echo"<td>$d[jml]</td>";           
-             
-            }
-              
-            echo"</tr>";
-            $no++;
-                                
-             }
+                                 ");
+
+                while ($d = mysql_fetch_array($dtampil)) {
+                    echo"<td>$d[jml]</td>";
+                }
+
+                echo'</tr>';
+                $no++;
+            }
             ?>
 
             <tfoot>
                             <tr>                               
                                 <th colspan= '4'>TOTAL KUNJUNGAN</th>
 
-                                <?
-                                $dtampil=mysql_query("SELECT a.poli,COUNT(b.id_pasien) as jml 
+                                <?php
+                                $dtampil = mysql_query("SELECT a.poli,COUNT(b.id_pasien) as jml 
                                   FROM poli a LEFT JOIN kunjungan_berobat b
                                   ON a.id_poli = b.id_poli
                                   AND b.tanggal >= '$fdate'
@@ -283,14 +277,11 @@ $company = ucwords($g['company']);
                                   AND b.status = '1'
                                   GROUP by a.poli
                                   ORDER BY a.id_poli
-                                 ");  
-
-
-                                while ($d=mysql_fetch_array($dtampil)){  
-
-                                echo"<td>$d[jml]</td>";           
-                                 
-                                }
+                                 ");
+
+                                while ($d = mysql_fetch_array($dtampil)) {
+                                    echo"<td>$d[jml]</td>";
+                                }
                                 ?>
 
                             </tr>
diff --git a/modul/mod_report_list_pasien/print_report_list_pasien.php b/modul/mod_report_list_pasien/print_report_list_pasien.php
index d1faab1dc2173c94c0c1fd56a0a6c432911e1b4d..01f6f83d6c0c1b73065d8820cb1d8cf05178402c 100755
--- a/modul/mod_report_list_pasien/print_report_list_pasien.php
+++ b/modul/mod_report_list_pasien/print_report_list_pasien.php
@@ -1,27 +1,25 @@
-<?php
-include "./../../config/koneksi.php";
-include "./../../config/fungsi_indobulan.php";
-
-$tampil=mysql_query("SELECT * FROM modul WHERE id_modul ='".$_GET[report_id]."'");
-						
-$r=mysql_fetch_array($tampil);
-
-$module 	= $_GET['module'];
-$imodule 	= ucwords($r['nama_modul']);
-$nmmodule 	= ucwords($r['nama_modul']);
-$id     	= $r['id_modul'];
-$fa_icon   	= $r['fa_icon'];
-
-if($r[orientation] == 'P') {
-	$orientation = 'portrait';
-} else {
-	$orientation = 'landscape';
-}
-
-
-$tipe = $_GET['tipe'];
-
-								
+<?php
+include './../../config/koneksi.php';
+include './../../config/fungsi_indobulan.php';
+
+$tampil = mysql_query("SELECT * FROM modul WHERE id_modul ='".$_GET[report_id]."'");
+
+$r = mysql_fetch_array($tampil);
+
+$module = $_GET['module'];
+$imodule = ucwords($r['nama_modul']);
+$nmmodule = ucwords($r['nama_modul']);
+$id = $r['id_modul'];
+$fa_icon = $r['fa_icon'];
+
+if ($r[orientation] == 'P') {
+    $orientation = 'portrait';
+} else {
+    $orientation = 'landscape';
+}
+
+$tipe = $_GET['tipe'];
+
 ?>
 
 <!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
@@ -137,11 +135,15 @@ function icetak(){
 
 <!--<body onload="cetakspk()">-->
 
-<? if ($_GET['printto'] == '2') { ?>
+<?php if ($_GET['printto'] == '2') {
+    ?>
 <body onload="icetak()">
-<? } else { ?>
+<?php
+} else {
+        ?>
 <body>
-<? } ?>
+<?php
+    } ?>
 
 
    <div class="noprint themeborderleft themeborderright themebordertop themeborderbottom"  >
@@ -158,29 +160,28 @@ function icetak(){
 </div>
 
 
-<?
-$gtampil=mysql_query("SELECT * FROM informasi_perusahaan where id_informasi_perusahaan = '1'");
- $g=mysql_fetch_array($gtampil);
-
-if ($g['pict']) {
-	$pict = $g['pict'];
-} else {
-	$pict = '';
-}
-
-$company = ucwords($g['company']);
-
-
+<?php
+$gtampil = mysql_query("SELECT * FROM informasi_perusahaan where id_informasi_perusahaan = '1'");
+ $g = mysql_fetch_array($gtampil);
+
+if ($g['pict']) {
+    $pict = $g['pict'];
+} else {
+    $pict = '';
+}
+
+$company = ucwords($g['company']);
+
  ?>
 
  <table width='100%' style="padding-top:10px;">
 <tr>
 <td width='10%'>
-<!-- <img src="../../images/logo/<?=$pict;?>" width=100px> -->
+<!-- <img src="../../images/logo/<?=$pict; ?>" width=100px> -->
 </td>
 <td style="text-align:center;" width='80%'>
-<span class='h1'><?=$nmmodule;?></span>
-<? echo "<span class='h2'>".$g['company']."</span><br>"; ?>
+<span class='h1'><?=$nmmodule; ?></span>
+<?php echo "<span class='h2'>".$g['company'].'</span><br>'; ?>
 </td>
 <td width='10%'>
 &nbsp
@@ -210,49 +211,43 @@ $company = ucwords($g['company']);
                         </thead>
                         <tbody>
                             
-                         <?
-                                       
-
-                            $tampil=mysql_query("SELECT a.*,b.agama,c.kategori
+                         <?php
+
+
+                            $tampil = mysql_query('SELECT a.*,b.agama,c.kategori
                                                 FROM pasien a left join agama b 
                                                  ON a.id_agama = b.id_agama
                                                  left join kategori c
                                                  ON a.id_kategori = c.id_kategori
-                                                 ORDER BY a.nama ");
-                            
-                            $no = 1;
-                            
-                            while ($r=mysql_fetch_array($tampil)){  
-
-                                $tgl_lahir = DATE('d/m/Y',strtotime($r[tgl_lahir]));
-
-                                if ($r['gender'] == 'L') {
-                                    $gender    = 'Laki-laki';
-                                } else {
-                                    $gender    = 'Perempuan';
-                                }
-                                
-                            
-                            echo"<tr>";
-                            echo"<td>$r[nama]</td>";
-                            echo"<td>$r[ktp]</td>";
-                            echo"<td>$tgl_lahir</td>";
-                            echo"<td>$gender</td>";
-                            echo"<td>$r[agama]</td>";
-                            echo"<td>$r[kategori]</td>";
-                            echo"<td>$r[telp]</td>";
-                            echo"<td>$r[alamat]</td>";
-                            echo"<td style='text-align:center;'>$r[aktif]</td>";
-
-
-                                echo"</tr>";
-
-                                $no++;
-
-                                
-
-                                }
-
+                                                 ORDER BY a.nama ');
+
+                            $no = 1;
+
+                            while ($r = mysql_fetch_array($tampil)) {
+                                $tgl_lahir = date('d/m/Y', strtotime($r[tgl_lahir]));
+
+                                if ($r['gender'] == 'L') {
+                                    $gender = 'Laki-laki';
+                                } else {
+                                    $gender = 'Perempuan';
+                                }
+
+                                echo'<tr>';
+                                echo"<td>$r[nama]</td>";
+                                echo"<td>$r[ktp]</td>";
+                                echo"<td>$tgl_lahir</td>";
+                                echo"<td>$gender</td>";
+                                echo"<td>$r[agama]</td>";
+                                echo"<td>$r[kategori]</td>";
+                                echo"<td>$r[telp]</td>";
+                                echo"<td>$r[alamat]</td>";
+                                echo"<td style='text-align:center;'>$r[aktif]</td>";
+
+                                echo'</tr>';
+
+                                $no++;
+                            }
+
                                 ?>
 
                          </tbody>
diff --git a/modul/mod_report_pengeluaran_obat/print_report_pengeluaran_obat.php b/modul/mod_report_pengeluaran_obat/print_report_pengeluaran_obat.php
index 8983ede212dd09ec95c6d9a82b6186d81a19d9f4..86418932262a793047e5ebf8c97fcc1202a75b1e 100755
--- a/modul/mod_report_pengeluaran_obat/print_report_pengeluaran_obat.php
+++ b/modul/mod_report_pengeluaran_obat/print_report_pengeluaran_obat.php
@@ -1,30 +1,29 @@
-<?php
-include "./../../config/koneksi.php";
-include "./../../config/fungsi_indobulan.php";
-
-$tampil=mysql_query("SELECT * FROM modul WHERE id_modul ='".$_GET[report_id]."'");
-            
-$r=mysql_fetch_array($tampil);
-
-$module   = $_GET['module'];
-$imodule  = ucwords($r['nama_modul']);
-$nmmodule   = ucwords($r['nama_modul']);
-$id       = $r['id_modul'];
-$fa_icon    = $r['fa_icon'];
-
-if($r[orientation] == 'P') {
-  $orientation = 'portrait';
-} else {
-  $orientation = 'landscape';
-}
-
-
-$fdate = $_GET['fdate'];
-$ldate = $_GET['ldate'];
-
-$ftgl = DATE('d/m/Y',strtotime($_GET['fdate']));
-$ltgl = DATE('d/m/Y',strtotime($_GET['ldate']));
-                
+<?php
+include './../../config/koneksi.php';
+include './../../config/fungsi_indobulan.php';
+
+$tampil = mysql_query("SELECT * FROM modul WHERE id_modul ='".$_GET[report_id]."'");
+
+$r = mysql_fetch_array($tampil);
+
+$module = $_GET['module'];
+$imodule = ucwords($r['nama_modul']);
+$nmmodule = ucwords($r['nama_modul']);
+$id = $r['id_modul'];
+$fa_icon = $r['fa_icon'];
+
+if ($r[orientation] == 'P') {
+    $orientation = 'portrait';
+} else {
+    $orientation = 'landscape';
+}
+
+$fdate = $_GET['fdate'];
+$ldate = $_GET['ldate'];
+
+$ftgl = date('d/m/Y', strtotime($_GET['fdate']));
+$ltgl = date('d/m/Y', strtotime($_GET['ldate']));
+
 ?>
 
 <!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
@@ -140,11 +139,15 @@ function icetak(){
 
 <!--<body onload="cetakspk()">-->
 
-<? if ($_GET['printto'] == '2') { ?>
+<?php if ($_GET['printto'] == '2') {
+    ?>
 <body onload="icetak()">
-<? } else { ?>
+<?php
+} else {
+        ?>
 <body>
-<? } ?>
+<?php
+    } ?>
 
 
    <div class="noprint themeborderleft themeborderright themebordertop themeborderbottom"  >
@@ -161,28 +164,28 @@ function icetak(){
 </div>
 
 
-<?
-$gtampil=mysql_query("SELECT * FROM informasi_perusahaan where id_informasi_perusahaan = '1'");
- $g=mysql_fetch_array($gtampil);
-
-if ($g['pict']) {
-  $pict = $g['pict'];
-} else {
-  $pict = '';
-}
-
-$company = ucwords($g['company']);
+<?php
+$gtampil = mysql_query("SELECT * FROM informasi_perusahaan where id_informasi_perusahaan = '1'");
+ $g = mysql_fetch_array($gtampil);
+
+if ($g['pict']) {
+    $pict = $g['pict'];
+} else {
+    $pict = '';
+}
+
+$company = ucwords($g['company']);
 ?>
 
  <table width='100%' style="padding-top:10px;">
 <tr>
 <td width='10%'>
-<!-- <img src="../../images/logo/<?=$pict;?>" width=100px> -->
+<!-- <img src="../../images/logo/<?=$pict; ?>" width=100px> -->
 </td>
 <td style="text-align:center;" width='80%'>
-<span class='h1'><?=$nmmodule;?></span>
-<? echo "<span class='h2'>".$g['company']."</span><br>"; ?>
-<br>Periode : <?=$ftgl;?> - <?=$ltgl;?>
+<span class='h1'><?=$nmmodule; ?></span>
+<?php echo "<span class='h2'>".$g['company'].'</span><br>'; ?>
+<br>Periode : <?=$ftgl; ?> - <?=$ltgl; ?>
 </td>
 <td width='10%'>
 &nbsp
@@ -205,9 +208,9 @@ $company = ucwords($g['company']);
                         </thead>
                         <tbody>
                             
-                         <?
-                        
-             $tampil=mysql_query("SELECT b.obat
+                         <?php
+
+             $tampil = mysql_query("SELECT b.obat
                                   , c.satuan
                                   , sum(a.qty) as jumlah
                                 FROM kunjungan_berobat h inner join kunjungan_berobat_detail  a 
@@ -222,37 +225,31 @@ $company = ucwords($g['company']);
                                  GROUP BY a.id_obat
                                   , c.satuan
                                 order by b.id_obat  
-                                 ");
-
-
-
-            
-            $no = 1;
-            
-            while ($r=mysql_fetch_array($tampil)){  
-
-            $tgl       = DATE('d/m/Y',strtotime($r[tanggal]));
-
-            $id_pasien    = $r[id_pasien];
-
-
-            echo"<tr>";
-            echo"<td style='text-align:center;'>$no</td>";
-            echo"<td>$r[obat]</td>";
-            echo"<td>$r[satuan]</td>";            
-            echo"<td>$r[jumlah]</td>";
-            echo"</tr>";
-            $no++;
-                                
-             }
+                                 ");
+
+            $no = 1;
+
+            while ($r = mysql_fetch_array($tampil)) {
+                $tgl = date('d/m/Y', strtotime($r[tanggal]));
+
+                $id_pasien = $r[id_pasien];
+
+                echo'<tr>';
+                echo"<td style='text-align:center;'>$no</td>";
+                echo"<td>$r[obat]</td>";
+                echo"<td>$r[satuan]</td>";
+                echo"<td>$r[jumlah]</td>";
+                echo'</tr>';
+                $no++;
+            }
             ?>
 
             <tfoot>
                             <tr>                               
                                 <th colspan= '3'>TOTAL</th>
 
-                                <?
-                                $dtampil=mysql_query("SELECT sum(a.qty) as jumlah
+                                <?php
+                                $dtampil = mysql_query("SELECT sum(a.qty) as jumlah
                                 FROM kunjungan_berobat h inner join kunjungan_berobat_detail  a 
                                 ON a.id_kunjungan_berobat = h.id_kunjungan_berobat
                                 LEFT JOIN obat b
@@ -262,14 +259,12 @@ $company = ucwords($g['company']);
                                  WHERE h.tanggal >= '$fdate'
                                  AND h.tanggal <= '$ldate'
                                  AND h.status = '1'
-                                 ");  
-
-
-                                $d=mysql_fetch_array($dtampil);
-
-                                echo"<td>$d[jumlah]</td>";           
-                                 
-                          
+                                 ");
+
+                                $d = mysql_fetch_array($dtampil);
+
+                                echo"<td>$d[jumlah]</td>";
+
                                 ?>
 
                             </tr>
diff --git a/modul/mod_report_rekam_medis/print_report_rekam_medis.php b/modul/mod_report_rekam_medis/print_report_rekam_medis.php
index f2b1e90473ae7d4ac0a538d4a70a3f2e8fe58fec..9d88e4e3d68cbd4f713fe01b029b23fca8fdbc07 100755
--- a/modul/mod_report_rekam_medis/print_report_rekam_medis.php
+++ b/modul/mod_report_rekam_medis/print_report_rekam_medis.php
@@ -1,31 +1,30 @@
-<?php
-include "./../../config/koneksi.php";
-include "./../../config/fungsi_indobulan.php";
-
-$tampil=mysql_query("SELECT * FROM modul WHERE id_modul ='".$_GET[report_id]."'");
-
-$r=mysql_fetch_array($tampil);
-
-$module   = $_GET['module'];
-$imodule  = ucwords($r['nama_modul']);
-$nmmodule   = ucwords($r['nama_modul']);
-$id       = $r['id_modul'];
-$fa_icon    = $r['fa_icon'];
-
-if($r[orientation] == 'P') {
-  $orientation = 'portrait';
-} else {
-  $orientation = 'landscape';
-}
-
-
-$pasien = $_GET['pasien'];
-$ldate = $_GET['ldate'];
-$ldate = $_GET['ldate'];
-
-$ftgl = DATE('d/m/Y',strtotime($_GET['fdate']));
-$ltgl = DATE('d/m/Y',strtotime($_GET['ldate']));
-    
+<?php
+include './../../config/koneksi.php';
+include './../../config/fungsi_indobulan.php';
+
+$tampil = mysql_query("SELECT * FROM modul WHERE id_modul ='".$_GET[report_id]."'");
+
+$r = mysql_fetch_array($tampil);
+
+$module = $_GET['module'];
+$imodule = ucwords($r['nama_modul']);
+$nmmodule = ucwords($r['nama_modul']);
+$id = $r['id_modul'];
+$fa_icon = $r['fa_icon'];
+
+if ($r[orientation] == 'P') {
+    $orientation = 'portrait';
+} else {
+    $orientation = 'landscape';
+}
+
+$pasien = $_GET['pasien'];
+$ldate = $_GET['ldate'];
+$ldate = $_GET['ldate'];
+
+$ftgl = date('d/m/Y', strtotime($_GET['fdate']));
+$ltgl = date('d/m/Y', strtotime($_GET['ldate']));
+
 ?>
 
 <!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
@@ -141,11 +140,15 @@ function icetak(){
 
 <!--<body onload="cetakspk()">-->
 
-<? if ($_GET['printto'] == '2') { ?>
+<?php if ($_GET['printto'] == '2') {
+    ?>
 <body onload="icetak()">
-<? } else { ?>
+<?php
+} else {
+        ?>
 <body>
-<? } ?>
+<?php
+    } ?>
 
 
    <div class="noprint themeborderleft themeborderright themebordertop themeborderbottom"  >
@@ -162,28 +165,28 @@ function icetak(){
 </div>
 
 
-<?
-$gtampil=mysql_query("SELECT * FROM informasi_perusahaan where id_informasi_perusahaan = '1'");
- $g=mysql_fetch_array($gtampil);
-
-if ($g['pict']) {
-  $pict = $g['pict'];
-} else {
-  $pict = '';
-}
-
-$company = ucwords($g['company']);
+<?php
+$gtampil = mysql_query("SELECT * FROM informasi_perusahaan where id_informasi_perusahaan = '1'");
+ $g = mysql_fetch_array($gtampil);
+
+if ($g['pict']) {
+    $pict = $g['pict'];
+} else {
+    $pict = '';
+}
+
+$company = ucwords($g['company']);
 ?>
 
  <table width='100%' style="padding-top:10px;">
 <tr>
 <td width='10%'>
-<!-- <img src="../../images/logo/<?=$pict;?>" width=100px> -->
+<!-- <img src="../../images/logo/<?=$pict; ?>" width=100px> -->
 </td>
 <td style="text-align:center;" width='80%'>
-<span class='h1'><?=$nmmodule;?></span><br>
-<? echo "<span class='h2'>".$g['company']."</span><br>"; ?>
-<br>Periode : <?=$ftgl;?> - <?=$ltgl;?>
+<span class='h1'><?=$nmmodule; ?></span><br>
+<?php echo "<span class='h2'>".$g['company'].'</span><br>'; ?>
+<br>Periode : <?=$ftgl; ?> - <?=$ltgl; ?>
 </td>
 <td width='10%'>
 &nbsp
@@ -192,30 +195,30 @@ $company = ucwords($g['company']);
 </table>
 <hr>
 
-<?
- $tampil=mysql_query("SELECT a.*,b.agama,c.kategori
+<?php
+ $tampil = mysql_query("SELECT a.*,b.agama,c.kategori
           FROM pasien a left join agama b 
            ON a.id_agama = b.id_agama
            left join kategori c
            ON a.id_kategori = c.id_kategori
-           WHERE a.id_pasien = '$pasien' ");
-  
-$r=mysql_fetch_array($tampil); 
-
-$tgl_lahir = DATE('d/m/Y',strtotime($r[tgl_lahir]));
-
-if ($r['gender'] == 'L') {
-    $gender    = 'Laki-laki';
-} else {
-     $gender    = 'Perempuan';
-}
+           WHERE a.id_pasien = '$pasien' ");
+
+$r = mysql_fetch_array($tampil);
+
+$tgl_lahir = date('d/m/Y', strtotime($r[tgl_lahir]));
+
+if ($r['gender'] == 'L') {
+    $gender = 'Laki-laki';
+} else {
+    $gender = 'Perempuan';
+}
 ?>      
 
 <table style="width: 100%;">
-<tr><td style="width: 20%;">NIP</td><td style="width: 1%;">:</td><td><?=$r[ktp];?></td></tr>
-<tr><td style="width: 20%;">Nama Pasien</td><td style="width: 1%;">:</td><td><?=$r[nama];?></td></tr>
-<tr><td style="width: 20%;">Jenis Kelamin</td><td style="width: 1%;">:</td><td><?=$gender;?></td></tr>
-<tr><td style="width: 20%;">Tanggal Lahir</td><td style="width: 1%;">:</td><td><?=$tgl_lahir;?></td></tr>
+<tr><td style="width: 20%;">NIP</td><td style="width: 1%;">:</td><td><?=$r[ktp]; ?></td></tr>
+<tr><td style="width: 20%;">Nama Pasien</td><td style="width: 1%;">:</td><td><?=$r[nama]; ?></td></tr>
+<tr><td style="width: 20%;">Jenis Kelamin</td><td style="width: 1%;">:</td><td><?=$gender; ?></td></tr>
+<tr><td style="width: 20%;">Tanggal Lahir</td><td style="width: 1%;">:</td><td><?=$tgl_lahir; ?></td></tr>
 </table> 
 <br>
 <table style="width: 100%;" border='1'>
@@ -227,36 +230,30 @@ if ($r['gender'] == 'L') {
     <td>Tindakan</td>
   </tr>
 
-    <?
-
-$tampil=mysql_query("SELECT a.*,b.nama,b.tgl_lahir,b.ktp,c.poli,d.kategori          
+    <?php
+
+$tampil = mysql_query("SELECT a.*,b.nama,b.tgl_lahir,b.ktp,c.poli,d.kategori          
         FROM kunjungan_berobat a left join pasien b 
          ON a.id_pasien = b.id_pasien
          left join poli c 
          ON a.id_poli = c.id_poli
          left join kategori d
          ON b.id_kategori = d.id_kategori        
-         WHERE a.id_pasien = '$pasien'");
-
-     
-
-while ($r=mysql_fetch_array($tampil)){  
-
-$tgl       = DATE('d/m/Y',strtotime($r[tanggal]));
-
-echo"<tr>";
-echo"<td>$tgl</td>";
-echo"<td>$r[keluhan]</td>";
-echo"<td>$r[diagnosa]</td>";
-echo"<td>$r[pemeriksaan]</td>";
-echo"<td>$r[tindakan]</td>";
-   
-   
-echo"</td>";  
-echo"</tr>";
-     
-        
-}
+         WHERE a.id_pasien = '$pasien'");
+
+while ($r = mysql_fetch_array($tampil)) {
+    $tgl = date('d/m/Y', strtotime($r[tanggal]));
+
+    echo'<tr>';
+    echo"<td>$tgl</td>";
+    echo"<td>$r[keluhan]</td>";
+    echo"<td>$r[diagnosa]</td>";
+    echo"<td>$r[pemeriksaan]</td>";
+    echo"<td>$r[tindakan]</td>";
+
+    echo'</td>';
+    echo'</tr>';
+}
 ?>
 
  
diff --git a/modul/mod_report_rekap_harian/eprint_report_rekap_harian.php b/modul/mod_report_rekap_harian/eprint_report_rekap_harian.php
index 8b507e65674ccf208aa59273c459d7792382b792..4c45dcc1bf546db1df07228fbd001b5d10f9ef18 100755
--- a/modul/mod_report_rekap_harian/eprint_report_rekap_harian.php
+++ b/modul/mod_report_rekap_harian/eprint_report_rekap_harian.php
@@ -1,130 +1,122 @@
-<?php
-include "./../../config/koneksi.php";
-//include "./../../config/fungsi_indobulan.php";
-
-function getBulan1($bln1){
-
-				switch ($bln1){
-
-					case 1: 
-
-						return "Januari";
-
-						break;
-
-					case 2:
-
-						return "Februari";
-
-						break;
-
-					case 3:
-
-						return "Maret";
-
-						break;
-
-					case 4:
-
-						return "April";
-
-						break;
-
-					case 5:
-
-						return "Mei";
-
-						break;
-
-					case 6:
-
-						return "Juni";
-
-						break;
-
-					case 7:
-
-						return "Juli";
-
-						break;
-
-					case 8:
-
-						return "Agustus";
-
-						break;
-
-					case 9:
-
-						return "September";
-
-						break;
-
-					case 10:
-
-						return "Oktober";
-
-						break;
-
-					case 11:
-
-						return "November";
-
-						break;
-
-					case 12:
-
-						return "Desember";
-
-						break;
-
-				}
-
-			} 
-
-		
-
-$report_id = $_GET[report_id];
-$tampil=mysql_query("SELECT * FROM modul WHERE id_modul ='".$report_id."'");
-
-            
-
-$r=mysql_fetch_array($tampil);
-
-//module=$module&report_id=$report_id&k_ID=$k_ID
-
-$module   = $_GET['module'];
-
-$imodule  = ucwords($r['nama_modul']);
-
-$nmmodule   = ucwords($r['nama_modul']);
-
-$id       = $r['id_modul'];
-
-$fa_icon    = $r['fa_icon'];
-
-
-$prd  = $_GET['prd'];
-
-$iprd  = $_GET['prd'].'-01';
-
-$nm_month = DATE('F Y',strtotime($iprd));
-
-$year = DATE('Y',strtotime($iprd));
-$month = DATE('m',strtotime($iprd))*1;
-
-$nprd = getBulan1($month).' '.$year;
-
-
-
-$id_jenis_transaksi  = $_GET['jenis_transaksi'];
-$jenis_transaksi  = $_GET['jenis_transaksi'];
- 
-header("Content-Type: application/octet-stream");
-header("Content-Type: application/download");
-header("Content-Type: application/vnd.ms-excel");
-header("Content-Disposition: attachment;filename=rekap_harian_pendapatan_$nprd.xls "); 
-header("Content-Transfer-Encoding: binary ");	
+<?php
+include './../../config/koneksi.php';
+//include "./../../config/fungsi_indobulan.php";
+
+function getBulan1($bln1)
+{
+    switch ($bln1) {
+
+                    case 1:
+
+                        return 'Januari';
+
+                        break;
+
+                    case 2:
+
+                        return 'Februari';
+
+                        break;
+
+                    case 3:
+
+                        return 'Maret';
+
+                        break;
+
+                    case 4:
+
+                        return 'April';
+
+                        break;
+
+                    case 5:
+
+                        return 'Mei';
+
+                        break;
+
+                    case 6:
+
+                        return 'Juni';
+
+                        break;
+
+                    case 7:
+
+                        return 'Juli';
+
+                        break;
+
+                    case 8:
+
+                        return 'Agustus';
+
+                        break;
+
+                    case 9:
+
+                        return 'September';
+
+                        break;
+
+                    case 10:
+
+                        return 'Oktober';
+
+                        break;
+
+                    case 11:
+
+                        return 'November';
+
+                        break;
+
+                    case 12:
+
+                        return 'Desember';
+
+                        break;
+
+                }
+}
+
+$report_id = $_GET[report_id];
+$tampil = mysql_query("SELECT * FROM modul WHERE id_modul ='".$report_id."'");
+
+$r = mysql_fetch_array($tampil);
+
+//module=$module&report_id=$report_id&k_ID=$k_ID
+
+$module = $_GET['module'];
+
+$imodule = ucwords($r['nama_modul']);
+
+$nmmodule = ucwords($r['nama_modul']);
+
+$id = $r['id_modul'];
+
+$fa_icon = $r['fa_icon'];
+
+$prd = $_GET['prd'];
+
+$iprd = $_GET['prd'].'-01';
+
+$nm_month = date('F Y', strtotime($iprd));
+
+$year = date('Y', strtotime($iprd));
+$month = date('m', strtotime($iprd)) * 1;
+
+$nprd = getBulan1($month).' '.$year;
+
+$id_jenis_transaksi = $_GET['jenis_transaksi'];
+$jenis_transaksi = $_GET['jenis_transaksi'];
+
+header('Content-Type: application/octet-stream');
+header('Content-Type: application/download');
+header('Content-Type: application/vnd.ms-excel');
+header("Content-Disposition: attachment;filename=rekap_harian_pendapatan_$nprd.xls ");
+header('Content-Transfer-Encoding: binary ');
 ?>
 
 <!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
@@ -132,7 +124,7 @@ header("Content-Transfer-Encoding: binary ");
 <meta charset="utf-8">
 <meta http-equiv="X-UA-Compatible" content="IE=edge">
 <link rel="shortcut icon" type="image/x-icon" href="../images/favicon.png">
-<title><?php echo $imodule ;?> (<?php echo $nprd;?>)</title>
+<title><?php echo $imodule; ?> (<?php echo $nprd; ?>)</title>
 
 <!-- Tell the browser to be responsive to screen width -->
 <meta content="width=device-width, initial-scale=1, maximum-scale=1, user-scalable=no" name="viewport">
@@ -145,71 +137,58 @@ header("Content-Transfer-Encoding: binary ");
 
 
 
-      <?
-
-       $gtampil=mysql_query("SELECT * FROM informasi_perusahaan where id_informasi_perusahaan = '1'");
-
-       $g=mysql_fetch_array($gtampil);
-
-
-
-      if ($g['pict']) {
-
-        $pict = $g['pict'];
-
-      } else {
-
-        $pict = '';
-
-      }
-
-
-      $company = ucwords($g['company']);
-
-      $jsql   = mysql_query("SELECT * FROM jenis_transaksi
+      <?php
+
+       $gtampil = mysql_query("SELECT * FROM informasi_perusahaan where id_informasi_perusahaan = '1'");
+
+       $g = mysql_fetch_array($gtampil);
+
+      if ($g['pict']) {
+          $pict = $g['pict'];
+      } else {
+          $pict = '';
+      }
+
+      $company = ucwords($g['company']);
+
+      $jsql = mysql_query("SELECT * FROM jenis_transaksi
                             WHERE id_jenis_transaksi = '$jenis_transaksi' 
 
-                           ");
-
-
-
-      $j     = mysql_fetch_array($jsql); 
-
-      $jenis_transaksi   = $j['jenis_transaksi'];  
-
-
-      $sql   = mysql_query("SELECT a.*,b.shift FROM kasir  a LEFT JOIN shift b 
+                           ");
+
+      $j = mysql_fetch_array($jsql);
+
+      $jenis_transaksi = $j['jenis_transaksi'];
+
+      $sql = mysql_query("SELECT a.*,b.shift FROM kasir  a LEFT JOIN shift b 
                             ON a.id_shift = b.id_shift
                             WHERE a.id_kasir = '$k_ID' 
 
-                           ");
-
-
-
-      $r     = mysql_fetch_array($sql); 
-
-
-      $penjualan_barang   = $r['id_kasir'];  
-
-      $shift   = $r['shift'];  
-
-      $petugas   = $r['petugas'];  
-
-      $status   = $r['status']; 
-
-      $tanggal   = DATE('d/m/Y',strtotime($r['tanggal']));  
-
+                           ");
+
+      $r = mysql_fetch_array($sql);
+
+      $penjualan_barang = $r['id_kasir'];
+
+      $shift = $r['shift'];
+
+      $petugas = $r['petugas'];
+
+      $status = $r['status'];
+
+      $tanggal = date('d/m/Y', strtotime($r['tanggal']));
+
       ?>
 
       <table width="100%">
       <tr>
       <td style="text-align: center;" colspan="26">
       <center>
-      <h4 ><?=$company;?>
+      <h4 ><?=$company; ?>
       <br>
-      <?=$nmmodule;?>
+      <?=$nmmodule; ?>
       <br>
-      <?=$jenis_transaksi;?> PER : <?php echo $nprd;?>
+      <?=$jenis_transaksi; ?> PER : <?php echo $nprd; ?>
       </h4>
       </center>
       </td>
@@ -223,18 +202,16 @@ header("Content-Transfer-Encoding: binary ");
             <tr>
                <th rowspan="2" >TGL</th>  
 
-               <?
-
-                $htampil=mysql_query("SELECT * FROM penjamin where aktif = 'Y' ORDER BY id_penjamin");
-
-                $hjml = mysql_num_rows($htampil);
-          
-                while ($h=mysql_fetch_array($htampil)){  
-
-                	echo "<th colspan='2'>".$h['penjamin']."</th>";
-
-                } 	
-
+               <?php
+
+                $htampil = mysql_query("SELECT * FROM penjamin where aktif = 'Y' ORDER BY id_penjamin");
+
+                $hjml = mysql_num_rows($htampil);
+
+                while ($h = mysql_fetch_array($htampil)) {
+                    echo "<th colspan='2'>".$h['penjamin'].'</th>';
+                }
+
                ?> 	
 
                <th colspan ="4" >UMUM</th>  
@@ -249,14 +226,11 @@ header("Content-Transfer-Encoding: binary ");
 
             <tr>
 
-               <? 
-               	for($j = 1; $j <= $hjml; $j++)  { 
-
-               		echo "<th>JML</th>";  
-               		echo "<th>RUPIAH</th>";  
-
-
-               	 }	
+               <?php 
+                   for ($j = 1; $j <= $hjml; $j++) {
+                       echo '<th>JML</th>';
+                       echo '<th>RUPIAH</th>';
+                   }
                ?>	
 
 
@@ -278,20 +252,19 @@ header("Content-Transfer-Encoding: binary ");
 
       	<tbody>
 
-      	  <? for($i = 1; $i <= 31; $i++)  { 
-
-      	  	 echo"<tr>";
-
-             echo"<td style='text-align:center;'>$i</td>"; 
-
-             if (strlen($i) == '1') {
-             	$tgl = $prd.'-0'.$i;
-             } else {
-             	$tgl = $prd.'-'.$i;
-             }
-
-             //transaksi asuransi
-             $dtampil1=mysql_query("SELECT a.id_penjamin
+      	  <?php for ($i = 1; $i <= 31; $i++) {
+                   echo'<tr>';
+
+                   echo"<td style='text-align:center;'>$i</td>";
+
+                   if (strlen($i) == '1') {
+                       $tgl = $prd.'-0'.$i;
+                   } else {
+                       $tgl = $prd.'-'.$i;
+                   }
+
+                   //transaksi asuransi
+                   $dtampil1 = mysql_query("SELECT a.id_penjamin
 										,	COUNT(c.jumlah) as jml 
 										,	IFNULL(SUM(c.jumlah),0) as rp  
 									FROM penjamin a LEFT JOIN kasir b
@@ -305,18 +278,15 @@ header("Content-Transfer-Encoding: binary ");
                   AND c.id_jenis_transaksi = '$id_jenis_transaksi'
 									WHERE a.aktif = 'Y'
 									GROUP BY a.id_penjamin
-									ORDER BY a.id_penjamin");
-                       
-             while ($d1=mysql_fetch_array($dtampil1)){  
-
-
-              	echo "<th>".$d1['jml']."</th>";
-              	echo "<th style='text-align:right;'>".number_format($d1['rp'], 0, ".", ",")."</th>";
-
-             } 	
-
-              //transaksi umum tunai
-              $dtampil2=mysql_query("SELECT COUNT(c.jumlah) as jml 
+									ORDER BY a.id_penjamin");
+
+                   while ($d1 = mysql_fetch_array($dtampil1)) {
+                       echo '<th>'.$d1['jml'].'</th>';
+                       echo "<th style='text-align:right;'>".number_format($d1['rp'], 0, '.', ',').'</th>';
+                   }
+
+                   //transaksi umum tunai
+                   $dtampil2 = mysql_query("SELECT COUNT(c.jumlah) as jml 
 										,	IFNULL(SUM(c.jumlah),0) as rp  
 									FROM kasir b LEFT JOIN kasir_detail c
 									ON  b.id_kasir = c.id_kasir
@@ -324,17 +294,15 @@ header("Content-Transfer-Encoding: binary ");
 									AND c.id_jenis_pembayaran = '1'
                   AND c.id_jenis_transaksi = '$id_jenis_transaksi'
 									WHERE b.tanggal = '$tgl'
-									AND b.status != '4'");
-                       
-             $d2=mysql_fetch_array($dtampil2);
-
-
-             echo "<th>".$d2['jml']."</th>";
-             echo "<th style='text-align:right;'>".number_format($d2['rp'], 0, ".", ",")."</th>";
-
-
-              //transaksi umum tunai
-              $dtampil3=mysql_query("SELECT COUNT(c.jumlah) as jml 
+									AND b.status != '4'");
+
+                   $d2 = mysql_fetch_array($dtampil2);
+
+                   echo '<th>'.$d2['jml'].'</th>';
+                   echo "<th style='text-align:right;'>".number_format($d2['rp'], 0, '.', ',').'</th>';
+
+                   //transaksi umum tunai
+                   $dtampil3 = mysql_query("SELECT COUNT(c.jumlah) as jml 
 										,	IFNULL(SUM(c.jumlah),0) as rp  
 									FROM kasir b LEFT JOIN kasir_detail c
 									ON  b.id_kasir = c.id_kasir
@@ -342,38 +310,36 @@ header("Content-Transfer-Encoding: binary ");
 									AND c.id_jenis_pembayaran = '2'
                   AND c.id_jenis_transaksi = '$id_jenis_transaksi'
 									WHERE b.tanggal = '$tgl'
-									AND b.status != '4'");
-                       
-             $d3=mysql_fetch_array($dtampil3);
-
-
-             echo "<th>".$d3['jml']."</th>";
-             echo "<th style='text-align:right;'>".number_format($d3['rp'], 0, ".", ",")."</th>";
-
-             echo "<th></th>";          	
-             echo "<th></th>";
-             echo "<th></th>";
-
-             echo "<th></th>";          	
-             echo "<th></th>";
-             echo "<th></th>";
-
-             //total jml
-              $dtampil4=mysql_query("SELECT COUNT(c.jumlah) as jml 
+									AND b.status != '4'");
+
+                   $d3 = mysql_fetch_array($dtampil3);
+
+                   echo '<th>'.$d3['jml'].'</th>';
+                   echo "<th style='text-align:right;'>".number_format($d3['rp'], 0, '.', ',').'</th>';
+
+                   echo '<th></th>';
+                   echo '<th></th>';
+                   echo '<th></th>';
+
+                   echo '<th></th>';
+                   echo '<th></th>';
+                   echo '<th></th>';
+
+                   //total jml
+                   $dtampil4 = mysql_query("SELECT COUNT(c.jumlah) as jml 
 									FROM kasir b LEFT JOIN kasir_detail c
 									ON  b.id_kasir = c.id_kasir
 									AND c.status != '4'
                   AND c.id_jenis_transaksi = '$id_jenis_transaksi'
 									WHERE b.tanggal = '$tgl'
-									AND b.status != '4'");
-                       
-             $d4=mysql_fetch_array($dtampil4);
-
-
-             echo "<th>".$d4['jml']."</th>";
-
-             //total pembayaran
-             $dtampil5=mysql_query("SELECT a.groups
+									AND b.status != '4'");
+
+                   $d4 = mysql_fetch_array($dtampil4);
+
+                   echo '<th>'.$d4['jml'].'</th>';
+
+                   //total pembayaran
+                   $dtampil5 = mysql_query("SELECT a.groups
 										,	IFNULL(SUM(c.jumlah),0) as rp  
 									FROM jenis_pembayaran a LEFT JOIN kasir b
 									ON  b.tanggal = '$tgl'
@@ -384,35 +350,25 @@ header("Content-Transfer-Encoding: binary ");
 									AND a.id_jenis_pembayaran = c.id_jenis_pembayaran
                   AND c.id_jenis_transaksi = '$id_jenis_transaksi'
 									GROUP BY a.groups
-									ORDER BY a.groups");
-                       
-             while ($d5=mysql_fetch_array($dtampil5)){  
-
-
-              	echo "<th style='text-align:right;'>".number_format($d5['rp'], 0, ".", ",")."</th>";
-
-             } 	
-
-
-
-
-             echo"</tr>";
-
-
-      	  } ?>
+									ORDER BY a.groups");
+
+                   while ($d5 = mysql_fetch_array($dtampil5)) {
+                       echo "<th style='text-align:right;'>".number_format($d5['rp'], 0, '.', ',').'</th>';
+                   }
+
+                   echo'</tr>';
+               } ?>
 
       	</tbody>
 
-      	<? 
-
-      	  	 echo"<tr>";
-
-             echo"<th style='text-align:center;'>TOTAL</th>"; 
-
-      
-
-             //transaksi asuransi
-             $dtampil1=mysql_query("SELECT a.id_penjamin
+      	<?php 
+
+               echo'<tr>';
+
+             echo"<th style='text-align:center;'>TOTAL</th>";
+
+             //transaksi asuransi
+             $dtampil1 = mysql_query("SELECT a.id_penjamin
 										,	COUNT(c.jumlah) as jml 
 										,	IFNULL(SUM(c.jumlah),0) as rp  
 									FROM penjamin a LEFT JOIN kasir b
@@ -426,18 +382,15 @@ header("Content-Transfer-Encoding: binary ");
                   AND c.id_jenis_transaksi = '$id_jenis_transaksi'
 									WHERE a.aktif = 'Y'
 									GROUP BY a.id_penjamin
-									ORDER BY a.id_penjamin");
-                       
-             while ($d1=mysql_fetch_array($dtampil1)){  
-
-
-              	echo "<th>".$d1['jml']."</th>";
-              	echo "<th style='text-align:right;'>".number_format($d1['rp'], 0, ".", ",")."</th>";
-
-             } 	
-
-              //transaksi umum tunai
-              $dtampil2=mysql_query("SELECT COUNT(c.jumlah) as jml 
+									ORDER BY a.id_penjamin");
+
+             while ($d1 = mysql_fetch_array($dtampil1)) {
+                 echo '<th>'.$d1['jml'].'</th>';
+                 echo "<th style='text-align:right;'>".number_format($d1['rp'], 0, '.', ',').'</th>';
+             }
+
+              //transaksi umum tunai
+              $dtampil2 = mysql_query("SELECT COUNT(c.jumlah) as jml 
 										,	IFNULL(SUM(c.jumlah),0) as rp  
 									FROM kasir b LEFT JOIN kasir_detail c
 									ON  b.id_kasir = c.id_kasir
@@ -445,17 +398,15 @@ header("Content-Transfer-Encoding: binary ");
 									AND c.id_jenis_pembayaran = '1'
                   AND c.id_jenis_transaksi = '$id_jenis_transaksi'
 									AND  b.tanggal LIKE '$prd%'
-									AND b.status != '4'");
-                       
-             $d2=mysql_fetch_array($dtampil2);
-
-
-             echo "<th>".$d2['jml']."</th>";
-             echo "<th style='text-align:right;'>".number_format($d2['rp'], 0, ".", ",")."</th>";
-
-
-              //transaksi umum tunai
-              $dtampil3=mysql_query("SELECT COUNT(c.jumlah) as jml 
+									AND b.status != '4'");
+
+             $d2 = mysql_fetch_array($dtampil2);
+
+             echo '<th>'.$d2['jml'].'</th>';
+             echo "<th style='text-align:right;'>".number_format($d2['rp'], 0, '.', ',').'</th>';
+
+              //transaksi umum tunai
+              $dtampil3 = mysql_query("SELECT COUNT(c.jumlah) as jml 
 										,	IFNULL(SUM(c.jumlah),0) as rp  
 									FROM kasir b LEFT JOIN kasir_detail c
 									ON  b.id_kasir = c.id_kasir
@@ -463,37 +414,35 @@ header("Content-Transfer-Encoding: binary ");
 									AND c.id_jenis_pembayaran = '2'
                   AND c.id_jenis_transaksi = '$id_jenis_transaksi'
 									WHERE b.tanggal LIKE '$prd%'
-									AND b.status != '4'");
-                       
-             $d3=mysql_fetch_array($dtampil3);
-
-
-             echo "<th>".$d3['jml']."</th>";
-             echo "<th style='text-align:right;'>".number_format($d3['rp'], 0, ".", ",")."</th>";
-
-             echo "<th></th>";          	
-             echo "<th></th>";
-             echo "<th></th>";
-
-             echo "<th></th>";          	
-             echo "<th></th>";
-             echo "<th></th>";
-
-             //total jml
-              $dtampil4=mysql_query("SELECT COUNT(c.jumlah) as jml 
+									AND b.status != '4'");
+
+             $d3 = mysql_fetch_array($dtampil3);
+
+             echo '<th>'.$d3['jml'].'</th>';
+             echo "<th style='text-align:right;'>".number_format($d3['rp'], 0, '.', ',').'</th>';
+
+             echo '<th></th>';
+             echo '<th></th>';
+             echo '<th></th>';
+
+             echo '<th></th>';
+             echo '<th></th>';
+             echo '<th></th>';
+
+             //total jml
+              $dtampil4 = mysql_query("SELECT COUNT(c.jumlah) as jml 
 									FROM kasir b LEFT JOIN kasir_detail c
 									ON  b.id_kasir = c.id_kasir
 									AND c.status != '4'
 									WHERE b.tanggal LIKE '$prd%'
-									AND b.status != '4'");
-                       
-             $d4=mysql_fetch_array($dtampil4);
-
-
-             echo "<th>".$d4['jml']."</th>";
-
-             //total pembayaran
-             $dtampil5=mysql_query("SELECT a.groups
+									AND b.status != '4'");
+
+             $d4 = mysql_fetch_array($dtampil4);
+
+             echo '<th>'.$d4['jml'].'</th>';
+
+             //total pembayaran
+             $dtampil5 = mysql_query("SELECT a.groups
 										,	IFNULL(SUM(c.jumlah),0) as rp  
 									FROM jenis_pembayaran a LEFT JOIN kasir b
 									ON  b.tanggal LIKE '$prd%'
@@ -504,76 +453,66 @@ header("Content-Transfer-Encoding: binary ");
 									AND a.id_jenis_pembayaran = c.id_jenis_pembayaran
                   AND c.id_jenis_transaksi = '$id_jenis_transaksi'
 									GROUP BY a.groups
-									ORDER BY a.groups");
-                       
-             while ($d5=mysql_fetch_array($dtampil5)){  
-
-
-              	echo "<th style='text-align:right;'>".number_format($d5['rp'], 0, ".", ",")."</th>";
-
-             } 	
-
-
-
-
-             echo"</tr>";
-
-             echo"<tr>";
-
-             echo"<th style='text-align:center;' colspan='23'>TOTAL REVENUE</th>"; 
-
-             //total jml
-              $dtampil4=mysql_query("SELECT COUNT(c.jumlah) as jml 
+									ORDER BY a.groups");
+
+             while ($d5 = mysql_fetch_array($dtampil5)) {
+                 echo "<th style='text-align:right;'>".number_format($d5['rp'], 0, '.', ',').'</th>';
+             }
+
+             echo'</tr>';
+
+             echo'<tr>';
+
+             echo"<th style='text-align:center;' colspan='23'>TOTAL REVENUE</th>";
+
+             //total jml
+              $dtampil4 = mysql_query("SELECT COUNT(c.jumlah) as jml 
 									FROM kasir b LEFT JOIN kasir_detail c
 									ON  b.id_kasir = c.id_kasir
 									AND c.status != '4'
                   AND c.id_jenis_transaksi = '$id_jenis_transaksi'
 									WHERE b.tanggal LIKE '$prd%'
-									AND b.status != '4'");
-                       
-             $d4=mysql_fetch_array($dtampil4);
-
-
-             echo "<th>".$d4['jml']."</th>";
-
-             //total pembayaran
-             $dtampil5=mysql_query("SELECT IFNULL(SUM(c.jumlah),0) as rp  
+									AND b.status != '4'");
+
+             $d4 = mysql_fetch_array($dtampil4);
+
+             echo '<th>'.$d4['jml'].'</th>';
+
+             //total pembayaran
+             $dtampil5 = mysql_query("SELECT IFNULL(SUM(c.jumlah),0) as rp  
 									FROM  kasir b LEFT JOIN kasir_detail c
 									ON  b.id_kasir = c.id_kasir
 									AND c.status != '4'
                   AND c.id_jenis_transaksi = '$id_jenis_transaksi'
 									WHERE b.tanggal LIKE '$prd%'
-									AND b.status != '4'");
-                       
-             $d5=mysql_fetch_array($dtampil5);
-
-
-              	echo "<th style='text-align:right;' colspan='2'>".number_format($d5['rp'], 0, ".", ",")."</th>";
-
-            	
-
-      	  ?>
+									AND b.status != '4'");
+
+             $d5 = mysql_fetch_array($dtampil5);
+
+                  echo "<th style='text-align:right;' colspan='2'>".number_format($d5['rp'], 0, '.', ',').'</th>';
+
+            ?>
 
 
 
     </table> 	
 
-    <? 
-
-    $lastday = DATE('t',strtotime($iprd));
-
-    $year = DATE('Y',strtotime($iprd));
-
-    $month = DATE('m',strtotime($iprd))*1;
-
-    if ($month == '1') {
-    	$imonth = 12;
-    } else {
-    	$imonth = $month-1;
-    }
-
-	$nprd = $lastday.' '.getBulan1($imonth).' '.$year;
-	?>
+    <?php 
+
+    $lastday = date('t', strtotime($iprd));
+
+    $year = date('Y', strtotime($iprd));
+
+    $month = date('m', strtotime($iprd)) * 1;
+
+    if ($month == '1') {
+        $imonth = 12;
+    } else {
+        $imonth = $month - 1;
+    }
+
+    $nprd = $lastday.' '.getBulan1($imonth).' '.$year;
+    ?>
 
     <table width="100%">
     	<tr><td colspan="26"><br></td></tr>
diff --git a/modul/mod_report_rekap_harian/print_report_rekap_harian.php b/modul/mod_report_rekap_harian/print_report_rekap_harian.php
index 1d126d6562ecfc94f4d90adee309d8cf0c5cd107..bc819c4d6c6ee2c141969e0c4da1903dbfe17582 100755
--- a/modul/mod_report_rekap_harian/print_report_rekap_harian.php
+++ b/modul/mod_report_rekap_harian/print_report_rekap_harian.php
@@ -1,134 +1,124 @@
-<?php
-
-if (substr_count($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip')) {
-ob_start("ob_gzhandler");
-}
-else {
-ob_start();
-}
-
-
-include "./../../config/koneksi.php";
-//include "./../../config/fungsi_indobulan.php";
-
-function getBulan1($bln1){
-
-				switch ($bln1){
-
-					case 1: 
-
-						return "Januari";
-
-						break;
-
-					case 2:
-
-						return "Februari";
-
-						break;
-
-					case 3:
-
-						return "Maret";
-
-						break;
-
-					case 4:
-
-						return "April";
-
-						break;
-
-					case 5:
-
-						return "Mei";
-
-						break;
-
-					case 6:
-
-						return "Juni";
-
-						break;
-
-					case 7:
-
-						return "Juli";
-
-						break;
-
-					case 8:
-
-						return "Agustus";
-
-						break;
-
-					case 9:
-
-						return "September";
-
-						break;
-
-					case 10:
-
-						return "Oktober";
-
-						break;
-
-					case 11:
-
-						return "November";
-
-						break;
-
-					case 12:
-
-						return "Desember";
-
-						break;
-
-				}
-
-			} 
-
-$report_id = $_GET[report_id];
-$tampil=mysql_query("SELECT * FROM modul WHERE id_modul ='".$report_id."'");
-
-            
-
-$r=mysql_fetch_array($tampil);
-
-//module=$module&report_id=$report_id&k_ID=$k_ID
-
-$module   = $_GET['module'];
-
-$imodule  = ucwords($r['nama_modul']);
-
-$nmmodule   = ucwords($r['nama_modul']);
-
-$id       = $r['id_modul'];
-
-$fa_icon    = $r['fa_icon'];
-
-
-$prd  = $_GET['prd'];
-
-$iprd  = $_GET['prd'].'-01';
-
-$nm_month = DATE('F Y',strtotime($iprd));
-
-$year = DATE('Y',strtotime($iprd));
-$month = DATE('m',strtotime($iprd))*1;
-
-$nprd = getBulan1($month).' '.$year;
-
-
-
-
-
-$id_jenis_transaksi  = $_GET['jenis_transaksi'];
-$jenis_transaksi  = $_GET['jenis_transaksi'];
- 
+<?php
+
+if (substr_count($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip')) {
+    ob_start('ob_gzhandler');
+} else {
+    ob_start();
+}
+
+include './../../config/koneksi.php';
+//include "./../../config/fungsi_indobulan.php";
+
+function getBulan1($bln1)
+{
+    switch ($bln1) {
+
+                    case 1:
+
+                        return 'Januari';
+
+                        break;
+
+                    case 2:
+
+                        return 'Februari';
+
+                        break;
+
+                    case 3:
+
+                        return 'Maret';
+
+                        break;
+
+                    case 4:
+
+                        return 'April';
+
+                        break;
+
+                    case 5:
+
+                        return 'Mei';
+
+                        break;
+
+                    case 6:
+
+                        return 'Juni';
+
+                        break;
+
+                    case 7:
+
+                        return 'Juli';
+
+                        break;
+
+                    case 8:
+
+                        return 'Agustus';
+
+                        break;
+
+                    case 9:
+
+                        return 'September';
+
+                        break;
+
+                    case 10:
+
+                        return 'Oktober';
+
+                        break;
+
+                    case 11:
+
+                        return 'November';
+
+                        break;
+
+                    case 12:
+
+                        return 'Desember';
+
+                        break;
+
+                }
+}
+
+$report_id = $_GET[report_id];
+$tampil = mysql_query("SELECT * FROM modul WHERE id_modul ='".$report_id."'");
+
+$r = mysql_fetch_array($tampil);
+
+//module=$module&report_id=$report_id&k_ID=$k_ID
+
+$module = $_GET['module'];
+
+$imodule = ucwords($r['nama_modul']);
+
+$nmmodule = ucwords($r['nama_modul']);
+
+$id = $r['id_modul'];
+
+$fa_icon = $r['fa_icon'];
+
+$prd = $_GET['prd'];
+
+$iprd = $_GET['prd'].'-01';
+
+$nm_month = date('F Y', strtotime($iprd));
+
+$year = date('Y', strtotime($iprd));
+$month = date('m', strtotime($iprd)) * 1;
+
+$nprd = getBulan1($month).' '.$year;
+
+$id_jenis_transaksi = $_GET['jenis_transaksi'];
+$jenis_transaksi = $_GET['jenis_transaksi'];
+
 ?>
 
 <!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
@@ -136,7 +126,7 @@ $jenis_transaksi  = $_GET['jenis_transaksi'];
 <meta charset="utf-8">
 <meta http-equiv="X-UA-Compatible" content="IE=edge">
 <link rel="shortcut icon" type="image/x-icon" href="../images/favicon.png">
-<title><?php echo $imodule ;?> (<?php echo $nprd;?>)</title>
+<title><?php echo $imodule; ?> (<?php echo $nprd; ?>)</title>
 
 <!-- Tell the browser to be responsive to screen width -->
 <meta content="width=device-width, initial-scale=1, maximum-scale=1, user-scalable=no" name="viewport">
@@ -243,73 +233,60 @@ function idownload(){
       <div class="noprint"  >
         <button class='print pull-right' onclick="javascript:window.close()"><i class="fa fa-lg fa-close"></i> Close</button>
         <button class='print pull-right' onclick="icetak()"><i class="fa fa-lg fa-print"></i> Print</button>
-        <button class='print pull-right' onclick="window.open('eprint_report_rekap_harian.php?prd=<?=$prd;?>&jenis_transaksi=<?=$id_jenis_transaksi;?>&report_id=<?=$report_id;?>', '_blank')"><i class="fa fa-lg fa-file-excel-o"></i> Excel</button>
+        <button class='print pull-right' onclick="window.open('eprint_report_rekap_harian.php?prd=<?=$prd; ?>&jenis_transaksi=<?=$id_jenis_transaksi; ?>&report_id=<?=$report_id; ?>', '_blank')"><i class="fa fa-lg fa-file-excel-o"></i> Excel</button>
       </div>   
 
-      <?
-
-       $gtampil=mysql_query("SELECT * FROM informasi_perusahaan where id_informasi_perusahaan = '1'");
-
-       $g=mysql_fetch_array($gtampil);
-
-
-
-      if ($g['pict']) {
-
-        $pict = $g['pict'];
-
-      } else {
-
-        $pict = '';
-
-      }
-
-
-      $company = ucwords($g['company']);
-
-      $jsql   = mysql_query("SELECT * FROM jenis_transaksi
+      <?php
+
+       $gtampil = mysql_query("SELECT * FROM informasi_perusahaan where id_informasi_perusahaan = '1'");
+
+       $g = mysql_fetch_array($gtampil);
+
+      if ($g['pict']) {
+          $pict = $g['pict'];
+      } else {
+          $pict = '';
+      }
+
+      $company = ucwords($g['company']);
+
+      $jsql = mysql_query("SELECT * FROM jenis_transaksi
                             WHERE id_jenis_transaksi = '$jenis_transaksi' 
 
-                           ");
-
-
-
-      $j     = mysql_fetch_array($jsql); 
-
-      $jenis_transaksi   = $j['jenis_transaksi'];  
-
-
-      $sql   = mysql_query("SELECT a.*,b.shift FROM kasir  a LEFT JOIN shift b 
+                           ");
+
+      $j = mysql_fetch_array($jsql);
+
+      $jenis_transaksi = $j['jenis_transaksi'];
+
+      $sql = mysql_query("SELECT a.*,b.shift FROM kasir  a LEFT JOIN shift b 
                             ON a.id_shift = b.id_shift
                             WHERE a.id_kasir = '$k_ID' 
 
-                           ");
-
-
-
-      $r     = mysql_fetch_array($sql); 
-
-
-      $penjualan_barang   = $r['id_kasir'];  
-
-      $shift   = $r['shift'];  
-
-      $petugas   = $r['petugas'];  
-
-      $status   = $r['status']; 
-
-      $tanggal   = DATE('d/m/Y',strtotime($r['tanggal']));  
-
+                           ");
+
+      $r = mysql_fetch_array($sql);
+
+      $penjualan_barang = $r['id_kasir'];
+
+      $shift = $r['shift'];
+
+      $petugas = $r['petugas'];
+
+      $status = $r['status'];
+
+      $tanggal = date('d/m/Y', strtotime($r['tanggal']));
+
       ?>
 
       <table width="100%">
       <tr>
       <td style="text-align: center;" colspan="3">
-      <h4 ><?=$company;?>
+      <h4 ><?=$company; ?>
       <br>
-      <?=$nmmodule;?>
+      <?=$nmmodule; ?>
       <br>
-      <?=$jenis_transaksi;?> PER : <?php echo $nprd;?>
+      <?=$jenis_transaksi; ?> PER : <?php echo $nprd; ?>
       </h4></td>
       </tr>      
       </table>
@@ -321,18 +298,16 @@ function idownload(){
             <tr>
                <th rowspan="2" >TGL</th>  
 
-               <?
-
-                $htampil=mysql_query("SELECT * FROM penjamin where aktif = 'Y' ORDER BY id_penjamin");
-
-                $hjml = mysql_num_rows($htampil);
-          
-                while ($h=mysql_fetch_array($htampil)){  
-
-                	echo "<th colspan='2'>".$h['penjamin']."</th>";
-
-                } 	
-
+               <?php
+
+                $htampil = mysql_query("SELECT * FROM penjamin where aktif = 'Y' ORDER BY id_penjamin");
+
+                $hjml = mysql_num_rows($htampil);
+
+                while ($h = mysql_fetch_array($htampil)) {
+                    echo "<th colspan='2'>".$h['penjamin'].'</th>';
+                }
+
                ?> 	
 
                <th colspan ="4" >UMUM</th>  
@@ -347,14 +322,11 @@ function idownload(){
 
             <tr>
 
-               <? 
-               	for($j = 1; $j <= $hjml; $j++)  { 
-
-               		echo "<th>JML</th>";  
-               		echo "<th>RUPIAH</th>";  
-
-
-               	 }	
+               <?php 
+                   for ($j = 1; $j <= $hjml; $j++) {
+                       echo '<th>JML</th>';
+                       echo '<th>RUPIAH</th>';
+                   }
                ?>	
 
 
@@ -376,20 +348,19 @@ function idownload(){
 
       	<tbody>
 
-      	  <? for($i = 1; $i <= 31; $i++)  { 
-
-      	  	 echo"<tr>";
-
-             echo"<td style='text-align:center;'>$i</td>"; 
-
-             if (strlen($i) == '1') {
-             	$tgl = $prd.'-0'.$i;
-             } else {
-             	$tgl = $prd.'-'.$i;
-             }
-
-             //transaksi asuransi
-             $dtampil1=mysql_query("SELECT a.id_penjamin
+      	  <?php for ($i = 1; $i <= 31; $i++) {
+                   echo'<tr>';
+
+                   echo"<td style='text-align:center;'>$i</td>";
+
+                   if (strlen($i) == '1') {
+                       $tgl = $prd.'-0'.$i;
+                   } else {
+                       $tgl = $prd.'-'.$i;
+                   }
+
+                   //transaksi asuransi
+                   $dtampil1 = mysql_query("SELECT a.id_penjamin
 										,	COUNT(c.jumlah) as jml 
 										,	IFNULL(SUM(c.jumlah),0) as rp  
 									FROM penjamin a LEFT JOIN kasir b
@@ -403,19 +374,15 @@ function idownload(){
                   AND c.id_jenis_transaksi = '$id_jenis_transaksi'
 									WHERE a.aktif = 'Y'                  
 									GROUP BY a.id_penjamin
-									ORDER BY a.id_penjamin");
-
-          
-             while ($d1=mysql_fetch_array($dtampil1)){  
-
-
-              	echo "<th>".$d1['jml']."</th>";
-              	echo "<th style='text-align:right;'>".number_format($d1['rp'], 0, ".", ",")."</th>";
-
-             } 	
-
-              //transaksi umum tunai
-              $dtampil2=mysql_query("SELECT COUNT(c.jumlah) as jml 
+									ORDER BY a.id_penjamin");
+
+                   while ($d1 = mysql_fetch_array($dtampil1)) {
+                       echo '<th>'.$d1['jml'].'</th>';
+                       echo "<th style='text-align:right;'>".number_format($d1['rp'], 0, '.', ',').'</th>';
+                   }
+
+                   //transaksi umum tunai
+                   $dtampil2 = mysql_query("SELECT COUNT(c.jumlah) as jml 
 										,	IFNULL(SUM(c.jumlah),0) as rp  
 									FROM kasir b LEFT JOIN kasir_detail c
 									ON  b.id_kasir = c.id_kasir
@@ -423,17 +390,15 @@ function idownload(){
 									AND c.id_jenis_pembayaran = '1'
                   AND c.id_jenis_transaksi = '$id_jenis_transaksi'
 									WHERE b.tanggal = '$tgl'
-									AND b.status != '4'");
-                       
-             $d2=mysql_fetch_array($dtampil2);
-
-
-             echo "<th>".$d2['jml']."</th>";
-             echo "<th style='text-align:right;'>".number_format($d2['rp'], 0, ".", ",")."</th>";
-
-
-              //transaksi umum tunai
-              $dtampil3=mysql_query("SELECT COUNT(c.jumlah) as jml 
+									AND b.status != '4'");
+
+                   $d2 = mysql_fetch_array($dtampil2);
+
+                   echo '<th>'.$d2['jml'].'</th>';
+                   echo "<th style='text-align:right;'>".number_format($d2['rp'], 0, '.', ',').'</th>';
+
+                   //transaksi umum tunai
+                   $dtampil3 = mysql_query("SELECT COUNT(c.jumlah) as jml 
 										,	IFNULL(SUM(c.jumlah),0) as rp  
 									FROM kasir b LEFT JOIN kasir_detail c
 									ON  b.id_kasir = c.id_kasir
@@ -441,38 +406,36 @@ function idownload(){
 									AND c.id_jenis_pembayaran = '2'
                   AND c.id_jenis_transaksi = '$id_jenis_transaksi'
 									WHERE b.tanggal = '$tgl'
-									AND b.status != '4'");
-                       
-             $d3=mysql_fetch_array($dtampil3);
-
-
-             echo "<th>".$d3['jml']."</th>";
-             echo "<th style='text-align:right;'>".number_format($d3['rp'], 0, ".", ",")."</th>";
-
-             echo "<th></th>";          	
-             echo "<th></th>";
-             echo "<th></th>";
-
-             echo "<th></th>";          	
-             echo "<th></th>";
-             echo "<th></th>";
-
-             //total jml
-              $dtampil4=mysql_query("SELECT COUNT(c.jumlah) as jml 
+									AND b.status != '4'");
+
+                   $d3 = mysql_fetch_array($dtampil3);
+
+                   echo '<th>'.$d3['jml'].'</th>';
+                   echo "<th style='text-align:right;'>".number_format($d3['rp'], 0, '.', ',').'</th>';
+
+                   echo '<th></th>';
+                   echo '<th></th>';
+                   echo '<th></th>';
+
+                   echo '<th></th>';
+                   echo '<th></th>';
+                   echo '<th></th>';
+
+                   //total jml
+                   $dtampil4 = mysql_query("SELECT COUNT(c.jumlah) as jml 
 									FROM kasir b LEFT JOIN kasir_detail c
 									ON  b.id_kasir = c.id_kasir
 									AND c.status != '4'
                   AND c.id_jenis_transaksi = '$id_jenis_transaksi'
 									WHERE b.tanggal = '$tgl'
-									AND b.status != '4'");
-                       
-             $d4=mysql_fetch_array($dtampil4);
-
-
-             echo "<th>".$d4['jml']."</th>";
-
-             //total pembayaran
-             $dtampil5=mysql_query("SELECT a.groups
+									AND b.status != '4'");
+
+                   $d4 = mysql_fetch_array($dtampil4);
+
+                   echo '<th>'.$d4['jml'].'</th>';
+
+                   //total pembayaran
+                   $dtampil5 = mysql_query("SELECT a.groups
 										,	IFNULL(SUM(c.jumlah),0) as rp  
 									FROM jenis_pembayaran a LEFT JOIN kasir b
 									ON  b.tanggal = '$tgl'
@@ -483,35 +446,25 @@ function idownload(){
 									AND a.id_jenis_pembayaran = c.id_jenis_pembayaran
                   AND c.id_jenis_transaksi = '$id_jenis_transaksi'
 									GROUP BY a.groups
-									ORDER BY a.groups");
-                       
-             while ($d5=mysql_fetch_array($dtampil5)){  
-
-
-              	echo "<th style='text-align:right;'>".number_format($d5['rp'], 0, ".", ",")."</th>";
-
-             } 	
-
-
-
-
-             echo"</tr>";
-
-
-      	  } ?>
+									ORDER BY a.groups");
+
+                   while ($d5 = mysql_fetch_array($dtampil5)) {
+                       echo "<th style='text-align:right;'>".number_format($d5['rp'], 0, '.', ',').'</th>';
+                   }
+
+                   echo'</tr>';
+               } ?>
 
       	</tbody>
 
-      	<? 
-
-      	  	 echo"<tr>";
-
-             echo"<th style='text-align:center;'>TOTAL</th>"; 
-
-      
-
-             //transaksi asuransi
-             $dtampil1=mysql_query("SELECT a.id_penjamin
+      	<?php 
+
+               echo'<tr>';
+
+             echo"<th style='text-align:center;'>TOTAL</th>";
+
+             //transaksi asuransi
+             $dtampil1 = mysql_query("SELECT a.id_penjamin
 										,	COUNT(c.jumlah) as jml 
 										,	IFNULL(SUM(c.jumlah),0) as rp  
 									FROM penjamin a LEFT JOIN kasir b
@@ -525,18 +478,15 @@ function idownload(){
                   AND c.id_jenis_transaksi = '$id_jenis_transaksi'
 									WHERE a.aktif = 'Y'
 									GROUP BY a.id_penjamin
-									ORDER BY a.id_penjamin");
-                       
-             while ($d1=mysql_fetch_array($dtampil1)){  
-
-
-              	echo "<th>".$d1['jml']."</th>";
-              	echo "<th style='text-align:right;'>".number_format($d1['rp'], 0, ".", ",")."</th>";
-
-             } 	
-
-              //transaksi umum tunai
-              $dtampil2=mysql_query("SELECT COUNT(c.jumlah) as jml 
+									ORDER BY a.id_penjamin");
+
+             while ($d1 = mysql_fetch_array($dtampil1)) {
+                 echo '<th>'.$d1['jml'].'</th>';
+                 echo "<th style='text-align:right;'>".number_format($d1['rp'], 0, '.', ',').'</th>';
+             }
+
+              //transaksi umum tunai
+              $dtampil2 = mysql_query("SELECT COUNT(c.jumlah) as jml 
 										,	IFNULL(SUM(c.jumlah),0) as rp  
 									FROM kasir b LEFT JOIN kasir_detail c
 									ON  b.id_kasir = c.id_kasir
@@ -544,17 +494,15 @@ function idownload(){
 									AND c.id_jenis_pembayaran = '1'
                   AND c.id_jenis_transaksi = '$id_jenis_transaksi'
 									AND  b.tanggal LIKE '$prd%'
-									AND b.status != '4'");
-                       
-             $d2=mysql_fetch_array($dtampil2);
-
-
-             echo "<th>".$d2['jml']."</th>";
-             echo "<th style='text-align:right;'>".number_format($d2['rp'], 0, ".", ",")."</th>";
-
-
-              //transaksi umum tunai
-              $dtampil3=mysql_query("SELECT COUNT(c.jumlah) as jml 
+									AND b.status != '4'");
+
+             $d2 = mysql_fetch_array($dtampil2);
+
+             echo '<th>'.$d2['jml'].'</th>';
+             echo "<th style='text-align:right;'>".number_format($d2['rp'], 0, '.', ',').'</th>';
+
+              //transaksi umum tunai
+              $dtampil3 = mysql_query("SELECT COUNT(c.jumlah) as jml 
 										,	IFNULL(SUM(c.jumlah),0) as rp  
 									FROM kasir b LEFT JOIN kasir_detail c
 									ON  b.id_kasir = c.id_kasir
@@ -562,38 +510,36 @@ function idownload(){
 									AND c.id_jenis_pembayaran = '2'
                   AND c.id_jenis_transaksi = '$id_jenis_transaksi'
 									WHERE b.tanggal LIKE '$prd%'
-									AND b.status != '4'");
-                       
-             $d3=mysql_fetch_array($dtampil3);
-
-
-             echo "<th>".$d3['jml']."</th>";
-             echo "<th style='text-align:right;'>".number_format($d3['rp'], 0, ".", ",")."</th>";
-
-             echo "<th></th>";          	
-             echo "<th></th>";
-             echo "<th></th>";
-
-             echo "<th></th>";          	
-             echo "<th></th>";
-             echo "<th></th>";
-
-             //total jml
-              $dtampil4=mysql_query("SELECT COUNT(c.jumlah) as jml 
+									AND b.status != '4'");
+
+             $d3 = mysql_fetch_array($dtampil3);
+
+             echo '<th>'.$d3['jml'].'</th>';
+             echo "<th style='text-align:right;'>".number_format($d3['rp'], 0, '.', ',').'</th>';
+
+             echo '<th></th>';
+             echo '<th></th>';
+             echo '<th></th>';
+
+             echo '<th></th>';
+             echo '<th></th>';
+             echo '<th></th>';
+
+             //total jml
+              $dtampil4 = mysql_query("SELECT COUNT(c.jumlah) as jml 
 									FROM kasir b LEFT JOIN kasir_detail c
 									ON  b.id_kasir = c.id_kasir
 									AND c.status != '4'
                   AND c.id_jenis_transaksi = '$id_jenis_transaksi'
 									WHERE b.tanggal LIKE '$prd%'
-									AND b.status != '4'");
-                       
-             $d4=mysql_fetch_array($dtampil4);
-
-
-             echo "<th>".$d4['jml']."</th>";
-
-             //total pembayaran
-             $dtampil5=mysql_query("SELECT a.groups
+									AND b.status != '4'");
+
+             $d4 = mysql_fetch_array($dtampil4);
+
+             echo '<th>'.$d4['jml'].'</th>';
+
+             //total pembayaran
+             $dtampil5 = mysql_query("SELECT a.groups
 										,	IFNULL(SUM(c.jumlah),0) as rp  
 									FROM jenis_pembayaran a LEFT JOIN kasir b
 									ON  b.tanggal LIKE '$prd%'
@@ -604,76 +550,66 @@ function idownload(){
 									AND a.id_jenis_pembayaran = c.id_jenis_pembayaran
                   AND c.id_jenis_transaksi = '$id_jenis_transaksi'
 									GROUP BY a.groups
-									ORDER BY a.groups");
-                       
-             while ($d5=mysql_fetch_array($dtampil5)){  
-
-
-              	echo "<th style='text-align:right;'>".number_format($d5['rp'], 0, ".", ",")."</th>";
-
-             } 	
-
-
-
-
-             echo"</tr>";
-
-             echo"<tr>";
-
-             echo"<th style='text-align:center;' colspan='23'>TOTAL REVENUE</th>"; 
-
-             //total jml
-              $dtampil4=mysql_query("SELECT COUNT(c.jumlah) as jml 
+									ORDER BY a.groups");
+
+             while ($d5 = mysql_fetch_array($dtampil5)) {
+                 echo "<th style='text-align:right;'>".number_format($d5['rp'], 0, '.', ',').'</th>';
+             }
+
+             echo'</tr>';
+
+             echo'<tr>';
+
+             echo"<th style='text-align:center;' colspan='23'>TOTAL REVENUE</th>";
+
+             //total jml
+              $dtampil4 = mysql_query("SELECT COUNT(c.jumlah) as jml 
 									FROM kasir b LEFT JOIN kasir_detail c
 									ON  b.id_kasir = c.id_kasir
 									AND c.status != '4'
                   AND c.id_jenis_transaksi = '$id_jenis_transaksi'
 									WHERE b.tanggal LIKE '$prd%'
-									AND b.status != '4'");
-                       
-             $d4=mysql_fetch_array($dtampil4);
-
-
-             echo "<th>".$d4['jml']."</th>";
-
-             //total pembayaran
-             $dtampil5=mysql_query("SELECT IFNULL(SUM(c.jumlah),0) as rp  
+									AND b.status != '4'");
+
+             $d4 = mysql_fetch_array($dtampil4);
+
+             echo '<th>'.$d4['jml'].'</th>';
+
+             //total pembayaran
+             $dtampil5 = mysql_query("SELECT IFNULL(SUM(c.jumlah),0) as rp  
 									FROM  kasir b LEFT JOIN kasir_detail c
 									ON  b.id_kasir = c.id_kasir
 									AND c.status != '4'
                   AND c.id_jenis_transaksi = '$id_jenis_transaksi'
 									WHERE b.tanggal LIKE '$prd%'
-									AND b.status != '4'");
-                       
-             $d5=mysql_fetch_array($dtampil5);
-
-
-              	echo "<th style='text-align:right;' colspan='2'>".number_format($d5['rp'], 0, ".", ",")."</th>";
-
-            	
-
-      	  ?>
+									AND b.status != '4'");
+
+             $d5 = mysql_fetch_array($dtampil5);
+
+                  echo "<th style='text-align:right;' colspan='2'>".number_format($d5['rp'], 0, '.', ',').'</th>';
+
+            ?>
 
 
 
     </table> 	
 
-    <? 
-
-    $lastday = DATE('t',strtotime($iprd));
-
-    $year = DATE('Y',strtotime($iprd));
-
-    $month = DATE('m',strtotime($iprd))*1;
-
-    if ($month == '1') {
-    	$imonth = 12;
-    } else {
-    	$imonth = $month-1;
-    }
-
-	$nprd = $lastday.' '.getBulan1($imonth).' '.$year;
-	?>
+    <?php 
+
+    $lastday = date('t', strtotime($iprd));
+
+    $year = date('Y', strtotime($iprd));
+
+    $month = date('m', strtotime($iprd)) * 1;
+
+    if ($month == '1') {
+        $imonth = 12;
+    } else {
+        $imonth = $month - 1;
+    }
+
+    $nprd = $lastday.' '.getBulan1($imonth).' '.$year;
+    ?>
 
     <table width="100%">
     	<tr>
diff --git a/modul/mod_report_revenue/eprint_report_revenue.php b/modul/mod_report_revenue/eprint_report_revenue.php
index f036339f66c7662d8d8e494f2a43af995ef83e88..e9632c9293e9d0b1f60539764f19186539a625e2 100755
--- a/modul/mod_report_revenue/eprint_report_revenue.php
+++ b/modul/mod_report_revenue/eprint_report_revenue.php
@@ -1,141 +1,129 @@
-<?php
-
-
-
-
-
-include "./../../config/koneksi.php";
-//include "./../../config/fungsi_indobulan.php";
-
-function getBulan1($bln1){
-
-				switch ($bln1){
-
-					case 1: 
-
-						return "Januari";
-
-						break;
-
-					case 2:
-
-						return "Februari";
-
-						break;
-
-					case 3:
-
-						return "Maret";
-
-						break;
-
-					case 4:
-
-						return "April";
-
-						break;
-
-					case 5:
-
-						return "Mei";
-
-						break;
-
-					case 6:
-
-						return "Juni";
-
-						break;
-
-					case 7:
-
-						return "Juli";
-
-						break;
-
-					case 8:
-
-						return "Agustus";
-
-						break;
-
-					case 9:
-
-						return "September";
-
-						break;
-
-					case 10:
-
-						return "Oktober";
-
-						break;
-
-					case 11:
-
-						return "November";
-
-						break;
-
-					case 12:
-
-						return "Desember";
-
-						break;
-
-				}
-
-			} 
-
-		
-
-$report_id = $_GET[report_id];
-$tampil=mysql_query("SELECT * FROM modul WHERE id_modul ='".$report_id."'");
-
-            
-
-$r=mysql_fetch_array($tampil);
-
-//module=$module&report_id=$report_id&k_ID=$k_ID
-
-$module   = $_GET['module'];
-
-$imodule  = ucwords($r['nama_modul']);
-
-$nmmodule   = ucwords($r['nama_modul']);
-
-$id       = $r['id_modul'];
-
-$fa_icon    = $r['fa_icon'];
-
-
-$prd  = $_GET['prd'];
-$tipe  = $_GET['tipe'];
-
-$iprd  = $_GET['prd'].'-01';
-
-$nm_month = DATE('F Y',strtotime($iprd));
-
-$year = DATE('Y',strtotime($iprd));
-$month = DATE('m',strtotime($iprd))*1;
-
-$nprd = getBulan1($month).' '.$year;
-
-
-
-
-$jenis_transaksi  = $_GET['jenis_transaksi'];
- 
-header("Content-Type: application/octet-stream");
-header("Content-Type: application/download");
-header("Content-Type: application/vnd.ms-excel");
-
-if ($tipe == 'R') {
-  header("Content-Disposition: attachment;filename=rekap_revenue_$nprd.xls "); 
-} else {
-  header("Content-Disposition: attachment;filename=detail_rekap_$nprd.xls "); 
-}
-header("Content-Transfer-Encoding: binary ");	
+<?php
+
+
+include './../../config/koneksi.php';
+//include "./../../config/fungsi_indobulan.php";
+
+function getBulan1($bln1)
+{
+    switch ($bln1) {
+
+                    case 1:
+
+                        return 'Januari';
+
+                        break;
+
+                    case 2:
+
+                        return 'Februari';
+
+                        break;
+
+                    case 3:
+
+                        return 'Maret';
+
+                        break;
+
+                    case 4:
+
+                        return 'April';
+
+                        break;
+
+                    case 5:
+
+                        return 'Mei';
+
+                        break;
+
+                    case 6:
+
+                        return 'Juni';
+
+                        break;
+
+                    case 7:
+
+                        return 'Juli';
+
+                        break;
+
+                    case 8:
+
+                        return 'Agustus';
+
+                        break;
+
+                    case 9:
+
+                        return 'September';
+
+                        break;
+
+                    case 10:
+
+                        return 'Oktober';
+
+                        break;
+
+                    case 11:
+
+                        return 'November';
+
+                        break;
+
+                    case 12:
+
+                        return 'Desember';
+
+                        break;
+
+                }
+}
+
+$report_id = $_GET[report_id];
+$tampil = mysql_query("SELECT * FROM modul WHERE id_modul ='".$report_id."'");
+
+$r = mysql_fetch_array($tampil);
+
+//module=$module&report_id=$report_id&k_ID=$k_ID
+
+$module = $_GET['module'];
+
+$imodule = ucwords($r['nama_modul']);
+
+$nmmodule = ucwords($r['nama_modul']);
+
+$id = $r['id_modul'];
+
+$fa_icon = $r['fa_icon'];
+
+$prd = $_GET['prd'];
+$tipe = $_GET['tipe'];
+
+$iprd = $_GET['prd'].'-01';
+
+$nm_month = date('F Y', strtotime($iprd));
+
+$year = date('Y', strtotime($iprd));
+$month = date('m', strtotime($iprd)) * 1;
+
+$nprd = getBulan1($month).' '.$year;
+
+$jenis_transaksi = $_GET['jenis_transaksi'];
+
+header('Content-Type: application/octet-stream');
+header('Content-Type: application/download');
+header('Content-Type: application/vnd.ms-excel');
+
+if ($tipe == 'R') {
+    header("Content-Disposition: attachment;filename=rekap_revenue_$nprd.xls ");
+} else {
+    header("Content-Disposition: attachment;filename=detail_rekap_$nprd.xls ");
+}
+header('Content-Transfer-Encoding: binary ');
 ?>
 
 <!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
@@ -143,7 +131,7 @@ header("Content-Transfer-Encoding: binary ");
 <meta charset="utf-8">
 <meta http-equiv="X-UA-Compatible" content="IE=edge">
 <link rel="shortcut icon" type="image/x-icon" href="../images/favicon.png">
-<title><?php echo $imodule ;?> (<?php echo $nprd;?>)</title>
+<title><?php echo $imodule; ?> (<?php echo $nprd; ?>)</title>
 
 <!-- Tell the browser to be responsive to screen width -->
 <meta content="width=device-width, initial-scale=1, maximum-scale=1, user-scalable=no" name="viewport">
@@ -156,71 +144,59 @@ header("Content-Transfer-Encoding: binary ");
 
 
 
-      <?
-
-       $gtampil=mysql_query("SELECT * FROM informasi_perusahaan where id_informasi_perusahaan = '1'");
-
-       $g=mysql_fetch_array($gtampil);
-
-
-
-      if ($g['pict']) {
-
-        $pict = $g['pict'];
-
-      } else {
-
-        $pict = '';
-
-      }
-
-
-      $company = ucwords($g['company']);
-
-      $jsql   = mysql_query("SELECT * FROM jenis_transaksi
+      <?php
+
+       $gtampil = mysql_query("SELECT * FROM informasi_perusahaan where id_informasi_perusahaan = '1'");
+
+       $g = mysql_fetch_array($gtampil);
+
+      if ($g['pict']) {
+          $pict = $g['pict'];
+      } else {
+          $pict = '';
+      }
+
+      $company = ucwords($g['company']);
+
+      $jsql = mysql_query("SELECT * FROM jenis_transaksi
                             WHERE id_jenis_transaksi = '$jenis_transaksi' 
 
-                           ");
-
-
-
-      $j     = mysql_fetch_array($jsql); 
-
-      $jenis_transaksi   = $j['jenis_transaksi'];  
-
-
-      $sql   = mysql_query("SELECT a.*,b.shift FROM kasir  a LEFT JOIN shift b 
+                           ");
+
+      $j = mysql_fetch_array($jsql);
+
+      $jenis_transaksi = $j['jenis_transaksi'];
+
+      $sql = mysql_query("SELECT a.*,b.shift FROM kasir  a LEFT JOIN shift b 
                             ON a.id_shift = b.id_shift
                             WHERE a.id_kasir = '$k_ID' 
 
-                           ");
-
-
-
-      $r     = mysql_fetch_array($sql); 
-
-
-      $penjualan_barang   = $r['id_kasir'];  
-
-      $shift   = $r['shift'];  
-
-      $petugas   = $r['petugas'];  
-
-      $status   = $r['status']; 
-
-      $tanggal   = DATE('d/m/Y',strtotime($r['tanggal']));  
-
+                           ");
+
+      $r = mysql_fetch_array($sql);
+
+      $penjualan_barang = $r['id_kasir'];
+
+      $shift = $r['shift'];
+
+      $petugas = $r['petugas'];
+
+      $status = $r['status'];
+
+      $tanggal = date('d/m/Y', strtotime($r['tanggal']));
+
       ?>
 
-      <? if ($tipe =='R') { ?>
+      <?php if ($tipe == 'R') {
+          ?>
 
 
         <table width="100%">
           <tr>
           <td style="text-align: center;" colspan="3">
-          <center><h4 >REVENUE <?=$company;?>         
+          <center><h4 >REVENUE <?=$company; ?>         
           <BR>
-          PER : <?php echo $nprd;?>
+          PER : <?php echo $nprd; ?>
           </h4></center>
           </td>
           </tr>      
@@ -235,56 +211,49 @@ header("Content-Transfer-Encoding: binary ");
 
 
 
-            <?
-            $htampil=mysql_query("SELECT * FROM jenis_transaksi where aktif = 'Y' ORDER BY id_jenis_transaksi");
-
-                    $hjml = mysql_num_rows($htampil);
-              
-                    while ($h=mysql_fetch_array($htampil)){  
-
-                      echo "<tr>";
-                      echo "<td>".$h['jenis_transaksi']."</td>";
-                      
-                      //transaksi umum tunai
-                      $dtampil=mysql_query("SELECT COUNT(c.jumlah) as jml 
+            <?php
+            $htampil = mysql_query("SELECT * FROM jenis_transaksi where aktif = 'Y' ORDER BY id_jenis_transaksi");
+
+          $hjml = mysql_num_rows($htampil);
+
+          while ($h = mysql_fetch_array($htampil)) {
+              echo '<tr>';
+              echo '<td>'.$h['jenis_transaksi'].'</td>';
+
+              //transaksi umum tunai
+              $dtampil = mysql_query("SELECT COUNT(c.jumlah) as jml 
                             , IFNULL(SUM(c.jumlah),0) as rp  
                           FROM kasir b LEFT JOIN kasir_detail c
                           ON  b.id_kasir = c.id_kasir
                           AND c.status != '4'                          
                           WHERE b.tanggal like '$prd%'
                           AND c.id_jenis_transaksi = '".$h['id_jenis_transaksi']."'
-                          AND b.status != '4'");
-                               
-                     $d=mysql_fetch_array($dtampil);
-
-
-                     echo "<th>".$d['jml']."</th>";
-                     echo "<th style='text-align:right;'>".number_format($d['rp'], 0, ".", ",")."</th>";
-
-                     echo "</tr>";
-                    }   
-
-            ?>        
+                          AND b.status != '4'");
+
+              $d = mysql_fetch_array($dtampil);
+
+              echo '<th>'.$d['jml'].'</th>';
+              echo "<th style='text-align:right;'>".number_format($d['rp'], 0, '.', ',').'</th>';
+
+              echo '</tr>';
+          } ?>        
 
 
              <tr>
                 <th>TOTAL</th>  
-                 <?
-                    $dtampil=mysql_query("SELECT COUNT(c.jumlah) as jml 
+                 <?php
+                    $dtampil = mysql_query("SELECT COUNT(c.jumlah) as jml 
                                   , IFNULL(SUM(c.jumlah),0) as rp  
                                 FROM kasir b LEFT JOIN kasir_detail c
                                 ON  b.id_kasir = c.id_kasir
                                 AND c.status != '4'                          
                                 WHERE b.tanggal like '$prd%'
-                                AND b.status != '4'");
-                                     
-                    $d=mysql_fetch_array($dtampil);
-
-                    echo "<th>".$d['jml']."</th>";
-                    echo "<th style='text-align:right;'>".number_format($d['rp'], 0, ".", ",")."</th>";                   
-                             
-
-                  ?>        
+                                AND b.status != '4'");
+
+          $d = mysql_fetch_array($dtampil);
+
+          echo '<th>'.$d['jml'].'</th>';
+          echo "<th style='text-align:right;'>".number_format($d['rp'], 0, '.', ',').'</th>'; ?>        
 
               </tr>  
 
@@ -321,14 +290,16 @@ header("Content-Transfer-Encoding: binary ");
 
 
 
-      <? } else { ?>
+      <?php
+      } else {
+          ?>
 
           <table width="100%">
           <tr>
           <td style="text-align: center;" colspan="14">
-          <center><h4 >REVENUE <?=$company;?>         
+          <center><h4 >REVENUE <?=$company; ?>         
           <BR>
-          PER : <?php echo $nprd;?>
+          PER : <?php echo $nprd; ?>
           </h4></center></td>
           </tr>    
            
@@ -348,19 +319,15 @@ header("Content-Transfer-Encoding: binary ");
                 <tr>
                    <th rowspan="3" >POLY</th>  
 
-                   <?
-
-                    $htampil=mysql_query("SELECT * FROM penjamin where aktif = 'Y' ORDER BY id_penjamin");
-
-                    $hjml = mysql_num_rows($htampil);
-              
-                    while ($h=mysql_fetch_array($htampil)){  
-
-                      echo "<th colspan='2' rowspan='2'>".$h['penjamin']."</th>";
-
-                    }   
-
-                   ?>   
+                   <?php
+
+                    $htampil = mysql_query("SELECT * FROM penjamin where aktif = 'Y' ORDER BY id_penjamin");
+
+          $hjml = mysql_num_rows($htampil);
+
+          while ($h = mysql_fetch_array($htampil)) {
+              echo "<th colspan='2' rowspan='2'>".$h['penjamin'].'</th>';
+          } ?>   
                  
                    <th colspan ="4" >UMUM</th>  
                    <th colspan ="2" rowspan='2'>TOTAL</th>  
@@ -376,15 +343,11 @@ header("Content-Transfer-Encoding: binary ");
 
 
 
-                   <? 
-                    for($j = 1; $j <= $hjml; $j++)  { 
-
-                      echo "<th>KUNJ</th>";  
-                      echo "<th>REV</th>";  
-
-
-                     }  
-                   ?> 
+                   <?php 
+                    for ($j = 1; $j <= $hjml; $j++) {
+                        echo '<th>KUNJ</th>';
+                        echo '<th>REV</th>';
+                    } ?> 
 
 
                    <th>KUNJ</th>  
@@ -400,22 +363,19 @@ header("Content-Transfer-Encoding: binary ");
 
             <tbody>
 
-              <? 
-
-                $htampil=mysql_query("SELECT * FROM jenis_transaksi where aktif = 'Y' ORDER BY id_jenis_transaksi");
-
-                $hjml = mysql_num_rows($htampil);
-              
-                while ($h=mysql_fetch_array($htampil)){  
-
-
-                 echo"<tr>";
-
-                 echo"<td>".$h['jenis_transaksi']."</td>"; 
-
-
-                  //transaksi asuransi
-                   $dtampil1=mysql_query("SELECT a.id_penjamin
+              <?php 
+
+                $htampil = mysql_query("SELECT * FROM jenis_transaksi where aktif = 'Y' ORDER BY id_jenis_transaksi");
+
+          $hjml = mysql_num_rows($htampil);
+
+          while ($h = mysql_fetch_array($htampil)) {
+              echo'<tr>';
+
+              echo'<td>'.$h['jenis_transaksi'].'</td>';
+
+              //transaksi asuransi
+              $dtampil1 = mysql_query("SELECT a.id_penjamin
                           , COUNT(c.jumlah) as jml 
                           , IFNULL(SUM(c.jumlah),0) as rp  
                         FROM penjamin a LEFT JOIN kasir b
@@ -429,19 +389,14 @@ header("Content-Transfer-Encoding: binary ");
                         AND c.id_jenis_transaksi = '".$h['id_jenis_transaksi']."'
                         WHERE a.aktif = 'Y'
                         GROUP BY a.id_penjamin
-                        ORDER BY a.id_penjamin");
-                             
-                   while ($d1=mysql_fetch_array($dtampil1)){  
-
-
-                      echo "<td style='text-align:center;'>".$d1['jml']."</td>";
-                      echo "<td style='text-align:right;'>".number_format($d1['rp'], 0, ".", ",")."</td>";
-
-                   }  
-
-
-   
-                  $dtampil2=mysql_query("SELECT COUNT(c.jumlah) as jml 
+                        ORDER BY a.id_penjamin");
+
+              while ($d1 = mysql_fetch_array($dtampil1)) {
+                  echo "<td style='text-align:center;'>".$d1['jml'].'</td>';
+                  echo "<td style='text-align:right;'>".number_format($d1['rp'], 0, '.', ',').'</td>';
+              }
+
+              $dtampil2 = mysql_query("SELECT COUNT(c.jumlah) as jml 
                                             ,   IFNULL(SUM(c.jumlah),0) as rp  
                                         FROM kasir b LEFT JOIN kasir_detail c
                                         ON  b.id_kasir = c.id_kasir
@@ -449,15 +404,14 @@ header("Content-Transfer-Encoding: binary ");
                                         AND c.id_jenis_pembayaran = '1'
                                         WHERE b.tanggal LIKE '$prd%'
                       AND c.id_jenis_transaksi = '".$h['id_jenis_transaksi']."'
-                                        AND b.status != '4'");
-                           
-                 $d2=mysql_fetch_array($dtampil2);
-
-
-                 echo "<td style='text-align:center;'>".$d2['jml']."</td>";
-                 echo "<td style='text-align:right;'>".number_format($d2['rp'], 0, ".", ",")."</td>";
-
-                 $dtampil3=mysql_query("SELECT COUNT(c.jumlah) as jml 
+                                        AND b.status != '4'");
+
+              $d2 = mysql_fetch_array($dtampil2);
+
+              echo "<td style='text-align:center;'>".$d2['jml'].'</td>';
+              echo "<td style='text-align:right;'>".number_format($d2['rp'], 0, '.', ',').'</td>';
+
+              $dtampil3 = mysql_query("SELECT COUNT(c.jumlah) as jml 
                         , IFNULL(SUM(c.jumlah),0) as rp  
                       FROM kasir b LEFT JOIN kasir_detail c
                       ON  b.id_kasir = c.id_kasir
@@ -465,50 +419,42 @@ header("Content-Transfer-Encoding: binary ");
                       AND c.id_jenis_pembayaran = '2'
                       WHERE b.tanggal LIKE '$prd%'
                       AND c.id_jenis_transaksi = '".$h['id_jenis_transaksi']."'
-                      AND b.status != '4'");
-                           
-                 $d3=mysql_fetch_array($dtampil3);
-
-
-                 echo "<td style='text-align:center;'>".$d3['jml']."</td>";
-                 echo "<td style='text-align:right;'>".number_format($d3['rp'], 0, ".", ",")."</td>";
-
-
-          
-                 $dtampil=mysql_query("SELECT COUNT(c.jumlah) as jml 
+                      AND b.status != '4'");
+
+              $d3 = mysql_fetch_array($dtampil3);
+
+              echo "<td style='text-align:center;'>".$d3['jml'].'</td>';
+              echo "<td style='text-align:right;'>".number_format($d3['rp'], 0, '.', ',').'</td>';
+
+              $dtampil = mysql_query("SELECT COUNT(c.jumlah) as jml 
                             , IFNULL(SUM(c.jumlah),0) as rp  
                           FROM kasir b LEFT JOIN kasir_detail c
                           ON  b.id_kasir = c.id_kasir
                           AND c.status != '4'                          
                           WHERE b.tanggal like '$prd%'
                           AND c.id_jenis_transaksi = '".$h['id_jenis_transaksi']."'
-                          AND b.status != '4'");
-                               
-                     $d=mysql_fetch_array($dtampil);
-
-
-                echo "<td style='text-align:center;'>".$d['jml']."</td>";
-                echo "<td style='text-align:right;'>".number_format($d['rp'], 0, ".", ",")."</td>";
-
-                 echo"</tr>";
-
-
-              } ?>
+                          AND b.status != '4'");
+
+              $d = mysql_fetch_array($dtampil);
+
+              echo "<td style='text-align:center;'>".$d['jml'].'</td>';
+              echo "<td style='text-align:right;'>".number_format($d['rp'], 0, '.', ',').'</td>';
+
+              echo'</tr>';
+          } ?>
 
             </tbody>
 
 
 
-              <?            
-
-
-                 echo"<tr>";
-
-                 echo"<th>TOTAL</th>"; 
-
-
-                  //transaksi asuransi
-                   $dtampil1=mysql_query("SELECT a.id_penjamin
+              <?php 
+
+                 echo'<tr>';
+
+          echo'<th>TOTAL</th>';
+
+          //transaksi asuransi
+          $dtampil1 = mysql_query("SELECT a.id_penjamin
                           , COUNT(c.jumlah) as jml 
                           , IFNULL(SUM(c.jumlah),0) as rp  
                         FROM penjamin a LEFT JOIN kasir b
@@ -521,68 +467,55 @@ header("Content-Transfer-Encoding: binary ");
                         AND c.id_jenis_pembayaran = '3'
                         WHERE a.aktif = 'Y'
                         GROUP BY a.id_penjamin
-                        ORDER BY a.id_penjamin");
-                             
-                   while ($d1=mysql_fetch_array($dtampil1)){  
-
-
-                      echo "<th>".$d1['jml']."</th>";
-                      echo "<th style='text-align:right;'>".number_format($d1['rp'], 0, ".", ",")."</th>";
-
-                   }  
-
-
-   
-                  $dtampil2=mysql_query("SELECT COUNT(c.jumlah) as jml 
+                        ORDER BY a.id_penjamin");
+
+          while ($d1 = mysql_fetch_array($dtampil1)) {
+              echo '<th>'.$d1['jml'].'</th>';
+              echo "<th style='text-align:right;'>".number_format($d1['rp'], 0, '.', ',').'</th>';
+          }
+
+          $dtampil2 = mysql_query("SELECT COUNT(c.jumlah) as jml 
                                             ,   IFNULL(SUM(c.jumlah),0) as rp  
                                         FROM kasir b LEFT JOIN kasir_detail c
                                         ON  b.id_kasir = c.id_kasir
                                         AND c.status != '4'
                                         AND c.id_jenis_pembayaran = '1'
                                         WHERE b.tanggal LIKE '$prd%'
-                                        AND b.status != '4'");
-                           
-                 $d2=mysql_fetch_array($dtampil2);
-
-
-                 echo "<th>".$d2['jml']."</th>";
-                 echo "<th style='text-align:right;'>".number_format($d2['rp'], 0, ".", ",")."</th>";
-
-                 $dtampil3=mysql_query("SELECT COUNT(c.jumlah) as jml 
+                                        AND b.status != '4'");
+
+          $d2 = mysql_fetch_array($dtampil2);
+
+          echo '<th>'.$d2['jml'].'</th>';
+          echo "<th style='text-align:right;'>".number_format($d2['rp'], 0, '.', ',').'</th>';
+
+          $dtampil3 = mysql_query("SELECT COUNT(c.jumlah) as jml 
                         , IFNULL(SUM(c.jumlah),0) as rp  
                       FROM kasir b LEFT JOIN kasir_detail c
                       ON  b.id_kasir = c.id_kasir
                       AND c.status != '4'
                       AND c.id_jenis_pembayaran = '2'
                       WHERE b.tanggal LIKE '$prd%'
-                      AND b.status != '4'");
-                           
-                 $d3=mysql_fetch_array($dtampil3);
-
-
-                 echo "<th>".$d3['jml']."</th>";
-                 echo "<th style='text-align:right;'>".number_format($d3['rp'], 0, ".", ",")."</th>";
-
-
-          
-                 $dtampil=mysql_query("SELECT COUNT(c.jumlah) as jml 
+                      AND b.status != '4'");
+
+          $d3 = mysql_fetch_array($dtampil3);
+
+          echo '<th>'.$d3['jml'].'</th>';
+          echo "<th style='text-align:right;'>".number_format($d3['rp'], 0, '.', ',').'</th>';
+
+          $dtampil = mysql_query("SELECT COUNT(c.jumlah) as jml 
                             , IFNULL(SUM(c.jumlah),0) as rp  
                           FROM kasir b LEFT JOIN kasir_detail c
                           ON  b.id_kasir = c.id_kasir
                           AND c.status != '4'                          
                           WHERE b.tanggal like '$prd%'
-                          AND b.status != '4'");
-                               
-                     $d=mysql_fetch_array($dtampil);
-
-
-                echo "<th>".$d['jml']."</th>";
-                echo "<th style='text-align:right;'>".number_format($d['rp'], 0, ".", ",")."</th>";
-
-                 echo"</tr>";
-
-
-             ?>
+                          AND b.status != '4'");
+
+          $d = mysql_fetch_array($dtampil);
+
+          echo '<th>'.$d['jml'].'</th>';
+          echo "<th style='text-align:right;'>".number_format($d['rp'], 0, '.', ',').'</th>';
+
+          echo'</tr>'; ?>
 
       
 
@@ -592,22 +525,21 @@ header("Content-Transfer-Encoding: binary ");
 
         </table>  
 
-        <? 
-
-        $lastday = DATE('t',strtotime($iprd));
-
-        $year = DATE('Y',strtotime($iprd));
-
-        $month = DATE('m',strtotime($iprd))*1;
-
-        if ($month == '1') {
-          $imonth = 12;
-        } else {
-          $imonth = $month-1;
-        }
-
-      $nprd = $lastday.' '.getBulan1($imonth).' '.$year;
-      ?>
+        <?php 
+
+        $lastday = date('t', strtotime($iprd));
+
+          $year = date('Y', strtotime($iprd));
+
+          $month = date('m', strtotime($iprd)) * 1;
+
+          if ($month == '1') {
+              $imonth = 12;
+          } else {
+              $imonth = $month - 1;
+          }
+
+          $nprd = $lastday.' '.getBulan1($imonth).' '.$year; ?>
 
       <table width="100%">
           <tr>
@@ -637,7 +569,8 @@ header("Content-Transfer-Encoding: binary ");
 
        
 
-    <? } ?>
+    <?php
+      } ?>
 
 
 
diff --git a/modul/mod_report_revenue/print_report_revenue.php b/modul/mod_report_revenue/print_report_revenue.php
index 5d884a7c33d64dd13aee17aa18f8775ffcbf8b09..ddeab8ef797131ff704d54db4af5a7078eca5850 100755
--- a/modul/mod_report_revenue/print_report_revenue.php
+++ b/modul/mod_report_revenue/print_report_revenue.php
@@ -1,136 +1,130 @@
-<?php
-
-if (substr_count($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip')) {
-ob_start("ob_gzhandler");
-}
-else {
-ob_start();
-}
-
-
-include "./../../config/koneksi.php";
-//include "./../../config/fungsi_indobulan.php";
-
-function getBulan1($bln1){
-
-				switch ($bln1){
-
-					case 1: 
-
-						return "Januari";
-
-						break;
-
-					case 2:
-
-						return "Februari";
-
-						break;
-
-					case 3:
-
-						return "Maret";
-
-						break;
-
-					case 4:
-
-						return "April";
-
-						break;
-
-					case 5:
-
-						return "Mei";
-
-						break;
-
-					case 6:
-
-						return "Juni";
-
-						break;
-
-					case 7:
-
-						return "Juli";
-
-						break;
-
-					case 8:
-
-						return "Agustus";
-
-						break;
-
-					case 9:
-
-						return "September";
-
-						break;
-
-					case 10:
-
-						return "Oktober";
-
-						break;
-
-					case 11:
-
-						return "November";
-
-						break;
-
-					case 12:
-
-						return "Desember";
-
-						break;
-
-				}
-
-			} 
-
-$report_id = $_GET[report_id];
-$tampil=mysql_query("SELECT * FROM modul WHERE id_modul ='".$report_id."'");
-
-            
-
-$r=mysql_fetch_array($tampil);
-
-//module=$module&report_id=$report_id&k_ID=$k_ID
-
-$module   = $_GET['module'];
-
-$imodule  = ucwords($r['nama_modul']);
-
-$nmmodule   = ucwords($r['nama_modul']);
-
-$id       = $r['id_modul'];
-
-$fa_icon    = $r['fa_icon'];
-
-
-$prd  = $_GET['prd'];
-
-$tipe  = $_GET['tipe'];
-
-$iprd  = $_GET['prd'].'-01';
-
-$nm_month = DATE('F Y',strtotime($iprd));
-
-$year = DATE('Y',strtotime($iprd));
-$month = DATE('m',strtotime($iprd))*1;
-
-$nprd = getBulan1($month).' '.$year;
-
-$jenis_transaksi  = $_GET['jenis_transaksi'];
-
-if ($tipe == 'R') {
-  $kertas = 'portrait';
-}  else {
-  $kertas = 'landscape';
-}
+<?php
+
+if (substr_count($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip')) {
+    ob_start('ob_gzhandler');
+} else {
+    ob_start();
+}
+
+include './../../config/koneksi.php';
+//include "./../../config/fungsi_indobulan.php";
+
+function getBulan1($bln1)
+{
+    switch ($bln1) {
+
+                    case 1:
+
+                        return 'Januari';
+
+                        break;
+
+                    case 2:
+
+                        return 'Februari';
+
+                        break;
+
+                    case 3:
+
+                        return 'Maret';
+
+                        break;
+
+                    case 4:
+
+                        return 'April';
+
+                        break;
+
+                    case 5:
+
+                        return 'Mei';
+
+                        break;
+
+                    case 6:
+
+                        return 'Juni';
+
+                        break;
+
+                    case 7:
+
+                        return 'Juli';
+
+                        break;
+
+                    case 8:
+
+                        return 'Agustus';
+
+                        break;
+
+                    case 9:
+
+                        return 'September';
+
+                        break;
+
+                    case 10:
+
+                        return 'Oktober';
+
+                        break;
+
+                    case 11:
+
+                        return 'November';
+
+                        break;
+
+                    case 12:
+
+                        return 'Desember';
+
+                        break;
+
+                }
+}
+
+$report_id = $_GET[report_id];
+$tampil = mysql_query("SELECT * FROM modul WHERE id_modul ='".$report_id."'");
+
+$r = mysql_fetch_array($tampil);
+
+//module=$module&report_id=$report_id&k_ID=$k_ID
+
+$module = $_GET['module'];
+
+$imodule = ucwords($r['nama_modul']);
+
+$nmmodule = ucwords($r['nama_modul']);
+
+$id = $r['id_modul'];
+
+$fa_icon = $r['fa_icon'];
+
+$prd = $_GET['prd'];
+
+$tipe = $_GET['tipe'];
+
+$iprd = $_GET['prd'].'-01';
+
+$nm_month = date('F Y', strtotime($iprd));
+
+$year = date('Y', strtotime($iprd));
+$month = date('m', strtotime($iprd)) * 1;
+
+$nprd = getBulan1($month).' '.$year;
+
+$jenis_transaksi = $_GET['jenis_transaksi'];
+
+if ($tipe == 'R') {
+    $kertas = 'portrait';
+} else {
+    $kertas = 'landscape';
+}
 ?>
 
 <!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
@@ -138,7 +132,7 @@ if ($tipe == 'R') {
 <meta charset="utf-8">
 <meta http-equiv="X-UA-Compatible" content="IE=edge">
 <link rel="shortcut icon" type="image/x-icon" href="../images/favicon.png">
-<title><?php echo $imodule ;?> (<?php echo $nprd;?>)</title>
+<title><?php echo $imodule; ?> (<?php echo $nprd; ?>)</title>
 
 <!-- Tell the browser to be responsive to screen width -->
 <meta content="width=device-width, initial-scale=1, maximum-scale=1, user-scalable=no" name="viewport">
@@ -180,7 +174,7 @@ if ($tipe == 'R') {
   }*/
 
   @media print {
-    @page { size: <?=$kertas;?> ; margin-top: 10px; margin-bottom: 0px; margin-left: 10px;}
+    @page { size: <?=$kertas; ?> ; margin-top: 10px; margin-bottom: 0px; margin-left: 10px;}
     body { margin-top: 10px; margin-bottom: 0px;margin-left: 10px;}
     .dataTables_wrapper .dt-buttons{display:none}
     .print{display:none}
@@ -245,75 +239,63 @@ function idownload(){
       <div class="noprint"  >
         <button class='print pull-right' onclick="javascript:window.close()"><i class="fa fa-lg fa-close"></i> Close</button>
         <button class='print pull-right' onclick="icetak()"><i class="fa fa-lg fa-print"></i> Print</button>
-        <button class='print pull-right' onclick="window.open('eprint_report_revenue.php?prd=<?=$prd;?>&report_id=<?=$report_id;?>&tipe=<?=$tipe;?>', '_blank')"><i class="fa fa-lg fa-file-excel-o"></i> Excel</button>
+        <button class='print pull-right' onclick="window.open('eprint_report_revenue.php?prd=<?=$prd; ?>&report_id=<?=$report_id; ?>&tipe=<?=$tipe; ?>', '_blank')"><i class="fa fa-lg fa-file-excel-o"></i> Excel</button>
       </div>   
 
-      <?
-
-       $gtampil=mysql_query("SELECT * FROM informasi_perusahaan where id_informasi_perusahaan = '1'");
-
-       $g=mysql_fetch_array($gtampil);
-
-
-
-      if ($g['pict']) {
-
-        $pict = $g['pict'];
-
-      } else {
-
-        $pict = '';
-
-      }
-
-
-      $company = ucwords($g['company']);
-
-      $jsql   = mysql_query("SELECT * FROM jenis_transaksi
+      <?php
+
+       $gtampil = mysql_query("SELECT * FROM informasi_perusahaan where id_informasi_perusahaan = '1'");
+
+       $g = mysql_fetch_array($gtampil);
+
+      if ($g['pict']) {
+          $pict = $g['pict'];
+      } else {
+          $pict = '';
+      }
+
+      $company = ucwords($g['company']);
+
+      $jsql = mysql_query("SELECT * FROM jenis_transaksi
                             WHERE id_jenis_transaksi = '$jenis_transaksi' 
 								
 
-                           ");
-
-
-
-      $j     = mysql_fetch_array($jsql); 
-
-      $jenis_transaksi   = $j['jenis_transaksi'];  
-
-
-      $sql   = mysql_query("SELECT a.*,b.shift FROM kasir  a LEFT JOIN shift b 
+                           ");
+
+      $j = mysql_fetch_array($jsql);
+
+      $jenis_transaksi = $j['jenis_transaksi'];
+
+      $sql = mysql_query("SELECT a.*,b.shift FROM kasir  a LEFT JOIN shift b 
                             ON a.id_shift = b.id_shift
                             WHERE a.id_kasir = '$k_ID' 
 
-                           ");
-
-
-
-      $r     = mysql_fetch_array($sql); 
-
-
-      $penjualan_barang   = $r['id_kasir'];  
-
-      $shift   = $r['shift'];  
-
-      $petugas   = $r['petugas'];  
-
-      $status   = $r['status']; 
-
-      $tanggal   = DATE('d/m/Y',strtotime($r['tanggal']));  
-
+                           ");
+
+      $r = mysql_fetch_array($sql);
+
+      $penjualan_barang = $r['id_kasir'];
+
+      $shift = $r['shift'];
+
+      $petugas = $r['petugas'];
+
+      $status = $r['status'];
+
+      $tanggal = date('d/m/Y', strtotime($r['tanggal']));
+
       ?>
 
-      <? if ($tipe =='R') { ?>
+      <?php if ($tipe == 'R') {
+          ?>
 
 
         <table width="100%">
           <tr>
           <td style="text-align: center;" colspan="3">
-          <h4 >REVENUE <?=$company;?>         
+          <h4 >REVENUE <?=$company; ?>         
           <BR>
-          PER : <?php echo $nprd;?>
+          PER : <?php echo $nprd; ?>
           </h4></td>
           </tr>      
         </table>
@@ -329,57 +311,50 @@ function idownload(){
 
             <tbody>
 
-            <?
-            $htampil=mysql_query("SELECT * FROM jenis_transaksi where aktif = 'Y' AND id_jenis_transaksi != '6' ORDER BY id_jenis_transaksi");
-
-                    $hjml = mysql_num_rows($htampil);
-              
-                    while ($h=mysql_fetch_array($htampil)){  
-
-                      echo "<tr>";
-                      echo "<td>".$h['jenis_transaksi']."</td>";
-                      
-                      //transaksi umum tunai
-                      $dtampil=mysql_query("SELECT COUNT(c.jumlah) as jml 
+            <?php
+            $htampil = mysql_query("SELECT * FROM jenis_transaksi where aktif = 'Y' AND id_jenis_transaksi != '6' ORDER BY id_jenis_transaksi");
+
+          $hjml = mysql_num_rows($htampil);
+
+          while ($h = mysql_fetch_array($htampil)) {
+              echo '<tr>';
+              echo '<td>'.$h['jenis_transaksi'].'</td>';
+
+              //transaksi umum tunai
+              $dtampil = mysql_query("SELECT COUNT(c.jumlah) as jml 
                             , IFNULL(SUM(c.jumlah),0) as rp  
                           FROM kasir b LEFT JOIN kasir_detail c
                           ON  b.id_kasir = c.id_kasir
                           AND c.status != '4'                          
                           WHERE b.tanggal like '$prd%'
                           AND c.id_jenis_transaksi = '".$h['id_jenis_transaksi']."'
-                          AND b.status != '4'");
-                               
-                     $d=mysql_fetch_array($dtampil);
-
-
-                     echo "<th>".$d['jml']."</th>";
-                     echo "<th style='text-align:right;'>".number_format($d['rp'], 0, ".", ",")."</th>";
-
-                     echo "</tr>";
-                    }   
-
-            ?>        
+                          AND b.status != '4'");
+
+              $d = mysql_fetch_array($dtampil);
+
+              echo '<th>'.$d['jml'].'</th>';
+              echo "<th style='text-align:right;'>".number_format($d['rp'], 0, '.', ',').'</th>';
+
+              echo '</tr>';
+          } ?>        
 
             </tbody>
 
              <tr>
                 <th>TOTAL</th>  
-                 <?
-                    $dtampil=mysql_query("SELECT COUNT(c.jumlah) as jml 
+                 <?php
+                    $dtampil = mysql_query("SELECT COUNT(c.jumlah) as jml 
                                   , IFNULL(SUM(c.jumlah),0) as rp  
                                 FROM kasir b LEFT JOIN kasir_detail c
                                 ON  b.id_kasir = c.id_kasir
                                 AND c.status != '4'                          
                                 WHERE b.tanggal like '$prd%'
-                                AND b.status != '4'");
-                                     
-                    $d=mysql_fetch_array($dtampil);
-
-                    echo "<th>".$d['jml']."</th>";
-                    echo "<th style='text-align:right;'>".number_format($d['rp'], 0, ".", ",")."</th>";                   
-                             
-
-                  ?>        
+                                AND b.status != '4'");
+
+          $d = mysql_fetch_array($dtampil);
+
+          echo '<th>'.$d['jml'].'</th>';
+          echo "<th style='text-align:right;'>".number_format($d['rp'], 0, '.', ',').'</th>'; ?>        
 
               </tr>  
 
@@ -406,14 +381,16 @@ function idownload(){
 
 
 
-      <? } else { ?>
+      <?php
+      } else {
+          ?>
 
           <table width="100%">
           <tr>
           <td style="text-align: center;" colspan="3">
-          <h4 >REVENUE <?=$company;?>         
+          <h4 >REVENUE <?=$company; ?>         
           <BR>
-          PER : <?php echo $nprd;?>
+          PER : <?php echo $nprd; ?>
           </h4></td>
           </tr>      
         </table>
@@ -423,19 +400,15 @@ function idownload(){
                 <tr>
                    <th rowspan="3" >POLY</th>  
 
-                   <?
-
-                    $htampil=mysql_query("SELECT * FROM penjamin where aktif = 'Y' ORDER BY id_penjamin");
-
-                    $hjml = mysql_num_rows($htampil);
-              
-                    while ($h=mysql_fetch_array($htampil)){  
-
-                    	echo "<th colspan='2' rowspan='2'>".$h['penjamin']."</th>";
-
-                    } 	
-
-                   ?> 	
+                   <?php
+
+                    $htampil = mysql_query("SELECT * FROM penjamin where aktif = 'Y' ORDER BY id_penjamin");
+
+          $hjml = mysql_num_rows($htampil);
+
+          while ($h = mysql_fetch_array($htampil)) {
+              echo "<th colspan='2' rowspan='2'>".$h['penjamin'].'</th>';
+          } ?> 	
                  
                    <th colspan ="4" >UMUM</th>  
                    <th colspan ="2" rowspan='2'>TOTAL</th>  
@@ -451,15 +424,11 @@ function idownload(){
 
 
 
-                   <? 
-                   	for($j = 1; $j <= $hjml; $j++)  { 
-
-                   		echo "<th>KUNJ</th>";  
-                   		echo "<th>REV</th>";  
-
-
-                   	 }	
-                   ?>	
+                   <?php 
+                       for ($j = 1; $j <= $hjml; $j++) {
+                           echo '<th>KUNJ</th>';
+                           echo '<th>REV</th>';
+                       } ?>	
 
 
                    <th>KUNJ</th>  
@@ -475,22 +444,19 @@ function idownload(){
 
           	<tbody>
 
-              <? 
-
-                $htampil=mysql_query("SELECT * FROM jenis_transaksi where aktif = 'Y' ORDER BY id_jenis_transaksi");
-
-                $hjml = mysql_num_rows($htampil);
-              
-                while ($h=mysql_fetch_array($htampil)){  
-
-
-                 echo"<tr>";
-
-                 echo"<td>".$h['jenis_transaksi']."</td>"; 
-
-
-                  //transaksi asuransi
-                   $dtampil1=mysql_query("SELECT a.id_penjamin
+              <?php 
+
+                $htampil = mysql_query("SELECT * FROM jenis_transaksi where aktif = 'Y' ORDER BY id_jenis_transaksi");
+
+          $hjml = mysql_num_rows($htampil);
+
+          while ($h = mysql_fetch_array($htampil)) {
+              echo'<tr>';
+
+              echo'<td>'.$h['jenis_transaksi'].'</td>';
+
+              //transaksi asuransi
+              $dtampil1 = mysql_query("SELECT a.id_penjamin
                           , COUNT(c.jumlah) as jml 
                           , IFNULL(SUM(c.jumlah),0) as rp  
                         FROM penjamin a LEFT JOIN kasir b
@@ -504,19 +470,14 @@ function idownload(){
                         AND c.id_jenis_transaksi = '".$h['id_jenis_transaksi']."'
                         WHERE a.aktif = 'Y'
                         GROUP BY a.id_penjamin
-                        ORDER BY a.id_penjamin");
-                             
-                   while ($d1=mysql_fetch_array($dtampil1)){  
-
-
-                      echo "<td style='text-align:center;'>".$d1['jml']."</td>";
-                      echo "<td style='text-align:right;'>".number_format($d1['rp'], 0, ".", ",")."</td>";
-
-                   }  
-
-
-   
-                  $dtampil2=mysql_query("SELECT COUNT(c.jumlah) as jml 
+                        ORDER BY a.id_penjamin");
+
+              while ($d1 = mysql_fetch_array($dtampil1)) {
+                  echo "<td style='text-align:center;'>".$d1['jml'].'</td>';
+                  echo "<td style='text-align:right;'>".number_format($d1['rp'], 0, '.', ',').'</td>';
+              }
+
+              $dtampil2 = mysql_query("SELECT COUNT(c.jumlah) as jml 
                                             ,   IFNULL(SUM(c.jumlah),0) as rp  
                                         FROM kasir b LEFT JOIN kasir_detail c
                                         ON  b.id_kasir = c.id_kasir
@@ -524,15 +485,14 @@ function idownload(){
                                         AND c.id_jenis_pembayaran = '1'
                                         WHERE b.tanggal LIKE '$prd%'
                       AND c.id_jenis_transaksi = '".$h['id_jenis_transaksi']."'
-                                        AND b.status != '4'");
-                           
-                 $d2=mysql_fetch_array($dtampil2);
-
-
-                 echo "<td style='text-align:center;'>".$d2['jml']."</td>";
-                 echo "<td style='text-align:right;'>".number_format($d2['rp'], 0, ".", ",")."</td>";
-
-                 $dtampil3=mysql_query("SELECT COUNT(c.jumlah) as jml 
+                                        AND b.status != '4'");
+
+              $d2 = mysql_fetch_array($dtampil2);
+
+              echo "<td style='text-align:center;'>".$d2['jml'].'</td>';
+              echo "<td style='text-align:right;'>".number_format($d2['rp'], 0, '.', ',').'</td>';
+
+              $dtampil3 = mysql_query("SELECT COUNT(c.jumlah) as jml 
                         , IFNULL(SUM(c.jumlah),0) as rp  
                       FROM kasir b LEFT JOIN kasir_detail c
                       ON  b.id_kasir = c.id_kasir
@@ -540,50 +500,42 @@ function idownload(){
                       AND c.id_jenis_pembayaran = '2'
                       WHERE b.tanggal LIKE '$prd%'
                       AND c.id_jenis_transaksi = '".$h['id_jenis_transaksi']."'
-                      AND b.status != '4'");
-                           
-                 $d3=mysql_fetch_array($dtampil3);
-
-
-                 echo "<td style='text-align:center;'>".$d3['jml']."</td>";
-                 echo "<td style='text-align:right;'>".number_format($d3['rp'], 0, ".", ",")."</td>";
-
-
-          
-                 $dtampil=mysql_query("SELECT COUNT(c.jumlah) as jml 
+                      AND b.status != '4'");
+
+              $d3 = mysql_fetch_array($dtampil3);
+
+              echo "<td style='text-align:center;'>".$d3['jml'].'</td>';
+              echo "<td style='text-align:right;'>".number_format($d3['rp'], 0, '.', ',').'</td>';
+
+              $dtampil = mysql_query("SELECT COUNT(c.jumlah) as jml 
                             , IFNULL(SUM(c.jumlah),0) as rp  
                           FROM kasir b LEFT JOIN kasir_detail c
                           ON  b.id_kasir = c.id_kasir
                           AND c.status != '4'                          
                           WHERE b.tanggal like '$prd%'
                           AND c.id_jenis_transaksi = '".$h['id_jenis_transaksi']."'
-                          AND b.status != '4'");
-                               
-                     $d=mysql_fetch_array($dtampil);
-
-
-                echo "<td style='text-align:center;'>".$d['jml']."</td>";
-                echo "<td style='text-align:right;'>".number_format($d['rp'], 0, ".", ",")."</td>";
-
-                 echo"</tr>";
-
-
-              } ?>
+                          AND b.status != '4'");
+
+              $d = mysql_fetch_array($dtampil);
+
+              echo "<td style='text-align:center;'>".$d['jml'].'</td>';
+              echo "<td style='text-align:right;'>".number_format($d['rp'], 0, '.', ',').'</td>';
+
+              echo'</tr>';
+          } ?>
 
             </tbody>
 
 
 
-              <?            
-
-
-                 echo"<tr>";
-
-                 echo"<th>TOTAL</th>"; 
-
-
-                  //transaksi asuransi
-                   $dtampil1=mysql_query("SELECT a.id_penjamin
+              <?php 
+
+                 echo'<tr>';
+
+          echo'<th>TOTAL</th>';
+
+          //transaksi asuransi
+          $dtampil1 = mysql_query("SELECT a.id_penjamin
                           , COUNT(c.jumlah) as jml 
                           , IFNULL(SUM(c.jumlah),0) as rp  
                         FROM penjamin a LEFT JOIN kasir b
@@ -596,68 +548,55 @@ function idownload(){
                         AND c.id_jenis_pembayaran = '3'
                         WHERE a.aktif = 'Y'
                         GROUP BY a.id_penjamin
-                        ORDER BY a.id_penjamin");
-                             
-                   while ($d1=mysql_fetch_array($dtampil1)){  
-
-
-                      echo "<th>".$d1['jml']."</th>";
-                      echo "<th style='text-align:right;'>".number_format($d1['rp'], 0, ".", ",")."</th>";
-
-                   }  
-
-
-   
-                  $dtampil2=mysql_query("SELECT COUNT(c.jumlah) as jml 
+                        ORDER BY a.id_penjamin");
+
+          while ($d1 = mysql_fetch_array($dtampil1)) {
+              echo '<th>'.$d1['jml'].'</th>';
+              echo "<th style='text-align:right;'>".number_format($d1['rp'], 0, '.', ',').'</th>';
+          }
+
+          $dtampil2 = mysql_query("SELECT COUNT(c.jumlah) as jml 
                                             ,   IFNULL(SUM(c.jumlah),0) as rp  
                                         FROM kasir b LEFT JOIN kasir_detail c
                                         ON  b.id_kasir = c.id_kasir
                                         AND c.status != '4'
                                         AND c.id_jenis_pembayaran = '1'
                                         WHERE b.tanggal LIKE '$prd%'
-                                        AND b.status != '4'");
-                           
-                 $d2=mysql_fetch_array($dtampil2);
-
-
-                 echo "<th>".$d2['jml']."</th>";
-                 echo "<th style='text-align:right;'>".number_format($d2['rp'], 0, ".", ",")."</th>";
-
-                 $dtampil3=mysql_query("SELECT COUNT(c.jumlah) as jml 
+                                        AND b.status != '4'");
+
+          $d2 = mysql_fetch_array($dtampil2);
+
+          echo '<th>'.$d2['jml'].'</th>';
+          echo "<th style='text-align:right;'>".number_format($d2['rp'], 0, '.', ',').'</th>';
+
+          $dtampil3 = mysql_query("SELECT COUNT(c.jumlah) as jml 
                         , IFNULL(SUM(c.jumlah),0) as rp  
                       FROM kasir b LEFT JOIN kasir_detail c
                       ON  b.id_kasir = c.id_kasir
                       AND c.status != '4'
                       AND c.id_jenis_pembayaran = '2'
                       WHERE b.tanggal LIKE '$prd%'
-                      AND b.status != '4'");
-                           
-                 $d3=mysql_fetch_array($dtampil3);
-
-
-                 echo "<th>".$d3['jml']."</th>";
-                 echo "<th style='text-align:right;'>".number_format($d3['rp'], 0, ".", ",")."</th>";
-
-
-          
-                 $dtampil=mysql_query("SELECT COUNT(c.jumlah) as jml 
+                      AND b.status != '4'");
+
+          $d3 = mysql_fetch_array($dtampil3);
+
+          echo '<th>'.$d3['jml'].'</th>';
+          echo "<th style='text-align:right;'>".number_format($d3['rp'], 0, '.', ',').'</th>';
+
+          $dtampil = mysql_query("SELECT COUNT(c.jumlah) as jml 
                             , IFNULL(SUM(c.jumlah),0) as rp  
                           FROM kasir b LEFT JOIN kasir_detail c
                           ON  b.id_kasir = c.id_kasir
                           AND c.status != '4'                          
                           WHERE b.tanggal like '$prd%'
-                          AND b.status != '4'");
-                               
-                     $d=mysql_fetch_array($dtampil);
-
-
-                echo "<th>".$d['jml']."</th>";
-                echo "<th style='text-align:right;'>".number_format($d['rp'], 0, ".", ",")."</th>";
-
-                 echo"</tr>";
-
-
-             ?>
+                          AND b.status != '4'");
+
+          $d = mysql_fetch_array($dtampil);
+
+          echo '<th>'.$d['jml'].'</th>';
+          echo "<th style='text-align:right;'>".number_format($d['rp'], 0, '.', ',').'</th>';
+
+          echo'</tr>'; ?>
 
       
 
@@ -667,22 +606,21 @@ function idownload(){
 
         </table> 	
 
-        <? 
-
-        $lastday = DATE('t',strtotime($iprd));
-
-        $year = DATE('Y',strtotime($iprd));
-
-        $month = DATE('m',strtotime($iprd))*1;
-
-        if ($month == '1') {
-        	$imonth = 12;
-        } else {
-        	$imonth = $month-1;
-        }
-
-    	$nprd = $lastday.' '.getBulan1($imonth).' '.$year;
-    	?>
+        <?php 
+
+        $lastday = date('t', strtotime($iprd));
+
+          $year = date('Y', strtotime($iprd));
+
+          $month = date('m', strtotime($iprd)) * 1;
+
+          if ($month == '1') {
+              $imonth = 12;
+          } else {
+              $imonth = $month - 1;
+          }
+
+          $nprd = $lastday.' '.getBulan1($imonth).' '.$year; ?>
 
       <table width="100%">
 
@@ -704,7 +642,8 @@ function idownload(){
 
        
 
-    <? } ?>
+    <?php
+      } ?>
 
 </body>
 
diff --git a/modul/mod_report_rujukan_pasien/print_report_rujukan_pasien.php b/modul/mod_report_rujukan_pasien/print_report_rujukan_pasien.php
index de00e57b326f31979984af396284e0fef66fe5cd..52c3af18d79a8d877056dd705e7bc4dbbf86fd07 100755
--- a/modul/mod_report_rujukan_pasien/print_report_rujukan_pasien.php
+++ b/modul/mod_report_rujukan_pasien/print_report_rujukan_pasien.php
@@ -1,30 +1,29 @@
-<?php
-include "./../../config/koneksi.php";
-include "./../../config/fungsi_indobulan.php";
-
-$tampil=mysql_query("SELECT * FROM modul WHERE id_modul ='".$_GET[report_id]."'");
-            
-$r=mysql_fetch_array($tampil);
-
-$module   = $_GET['module'];
-$imodule  = ucwords($r['nama_modul']);
-$nmmodule   = ucwords($r['nama_modul']);
-$id       = $r['id_modul'];
-$fa_icon    = $r['fa_icon'];
-
-if($r[orientation] == 'P') {
-  $orientation = 'portrait';
-} else {
-  $orientation = 'landscape';
-}
-
-
-$fdate = $_GET['fdate'];
-$ldate = $_GET['ldate'];
-
-$ftgl = DATE('d/m/Y',strtotime($_GET['fdate']));
-$ltgl = DATE('d/m/Y',strtotime($_GET['ldate']));
-                
+<?php
+include './../../config/koneksi.php';
+include './../../config/fungsi_indobulan.php';
+
+$tampil = mysql_query("SELECT * FROM modul WHERE id_modul ='".$_GET[report_id]."'");
+
+$r = mysql_fetch_array($tampil);
+
+$module = $_GET['module'];
+$imodule = ucwords($r['nama_modul']);
+$nmmodule = ucwords($r['nama_modul']);
+$id = $r['id_modul'];
+$fa_icon = $r['fa_icon'];
+
+if ($r[orientation] == 'P') {
+    $orientation = 'portrait';
+} else {
+    $orientation = 'landscape';
+}
+
+$fdate = $_GET['fdate'];
+$ldate = $_GET['ldate'];
+
+$ftgl = date('d/m/Y', strtotime($_GET['fdate']));
+$ltgl = date('d/m/Y', strtotime($_GET['ldate']));
+
 ?>
 
 <!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
@@ -140,11 +139,15 @@ function icetak(){
 
 <!--<body onload="cetakspk()">-->
 
-<? if ($_GET['printto'] == '2') { ?>
+<?php if ($_GET['printto'] == '2') {
+    ?>
 <body onload="icetak()">
-<? } else { ?>
+<?php
+} else {
+        ?>
 <body>
-<? } ?>
+<?php
+    } ?>
 
 
    <div class="noprint themeborderleft themeborderright themebordertop themeborderbottom"  >
@@ -161,28 +164,28 @@ function icetak(){
 </div>
 
 
-<?
-$gtampil=mysql_query("SELECT * FROM informasi_perusahaan where id_informasi_perusahaan = '1'");
- $g=mysql_fetch_array($gtampil);
-
-if ($g['pict']) {
-  $pict = $g['pict'];
-} else {
-  $pict = '';
-}
-
-$company = ucwords($g['company']);
+<?php
+$gtampil = mysql_query("SELECT * FROM informasi_perusahaan where id_informasi_perusahaan = '1'");
+ $g = mysql_fetch_array($gtampil);
+
+if ($g['pict']) {
+    $pict = $g['pict'];
+} else {
+    $pict = '';
+}
+
+$company = ucwords($g['company']);
 ?>
 
  <table width='100%' style="padding-top:10px;">
 <tr>
 <td width='10%'>
-<!-- <img src="../../images/logo/<?=$pict;?>" width=100px> -->
+<!-- <img src="../../images/logo/<?=$pict; ?>" width=100px> -->
 </td>
 <td style="text-align:center;" width='80%'>
-<span class='h1'><?=$nmmodule;?></span>
-<? echo "<span class='h2'>".$g['company']."</span><br>"; ?>
-<br>Periode : <?=$ftgl;?> - <?=$ltgl;?>
+<span class='h1'><?=$nmmodule; ?></span>
+<?php echo "<span class='h2'>".$g['company'].'</span><br>'; ?>
+<br>Periode : <?=$ftgl; ?> - <?=$ltgl; ?>
 </td>
 <td width='10%'>
 &nbsp
@@ -207,10 +210,10 @@ $company = ucwords($g['company']);
                         </thead>
                         <tbody>
                             
-                         <?
-            
-
-                         $tampil=mysql_query("SELECT a.*,b.nama,b.tgl_lahir,b.ktp,c.poli,d.kategori    
+                         <?php
+
+
+                         $tampil = mysql_query("SELECT a.*,b.nama,b.tgl_lahir,b.ktp,c.poli,d.kategori    
                                                 ,e.rujukan as rujukan_rs
                                                 ,f.rujukan as rujukan_lab                              
                                             FROM kunjungan_berobat a left join pasien b 
@@ -227,28 +230,25 @@ $company = ucwords($g['company']);
                                              AND a.tanggal <= '$ldate'
                                              AND a.status = '1'
                                              AND a.rujukan = 'Y'                    
-                                             ORDER BY a.tanggal,a.id_poli,a.no_urut ASC");
-                        
-                        
-                        $no = 1;
-                        
-                        while ($r=mysql_fetch_array($tampil)){  
-
-                        $tgl       = DATE('d/m/Y',strtotime($r[tanggal]));
-                        $tgl_lahir = DATE('d/m/Y',strtotime($r[tgl_lahir]));
-
-                        echo"<tr>";
-                        echo"<td>$tgl</td>";
-                        echo"<td>$r[poli]</td>";        
-                        echo"<td>$r[nama]</td>";
-                        echo"<td>$r[kategori]</td>";
-                        echo"<td>$r[rujukan_rs]</td>";
-                        echo"<td>$r[rujukan_lab]</td>";
-                                      
-                        echo"</tr>";
-                        $no++;
-                                            
-                         }
+                                             ORDER BY a.tanggal,a.id_poli,a.no_urut ASC");
+
+                        $no = 1;
+
+                        while ($r = mysql_fetch_array($tampil)) {
+                            $tgl = date('d/m/Y', strtotime($r[tanggal]));
+                            $tgl_lahir = date('d/m/Y', strtotime($r[tgl_lahir]));
+
+                            echo'<tr>';
+                            echo"<td>$tgl</td>";
+                            echo"<td>$r[poli]</td>";
+                            echo"<td>$r[nama]</td>";
+                            echo"<td>$r[kategori]</td>";
+                            echo"<td>$r[rujukan_rs]</td>";
+                            echo"<td>$r[rujukan_lab]</td>";
+
+                            echo'</tr>';
+                            $no++;
+                        }
                         ?>
 
                       
diff --git a/modul/mod_report_stok/print_report_stok.php b/modul/mod_report_stok/print_report_stok.php
index 522f84cf5ec83c5382f83a7eb1b91c9a13f46a85..b8ff0d4c0fa1361864696e3251ec8b97e1f4b9b3 100755
--- a/modul/mod_report_stok/print_report_stok.php
+++ b/modul/mod_report_stok/print_report_stok.php
@@ -1,30 +1,29 @@
-<?php
-include "./../../config/koneksi.php";
-include "./../../config/fungsi_indobulan.php";
-
-$tampil=mysql_query("SELECT * FROM modul WHERE id_modul ='".$_GET[report_id]."'");
-            
-$r=mysql_fetch_array($tampil);
-
-$module   = $_GET['module'];
-$imodule  = ucwords($r['nama_modul']);
-$nmmodule   = ucwords($r['nama_modul']);
-$id       = $r['id_modul'];
-$fa_icon    = $r['fa_icon'];
-
-if($r[orientation] == 'P') {
-  $orientation = 'portrait';
-} else {
-  $orientation = 'landscape';
-}
-
-
-$fdate = $_GET['fdate'];
-$ldate = $_GET['ldate'];
-
-$ftgl = DATE('d/m/Y',strtotime($_GET['fdate']));
-$ltgl = DATE('d/m/Y',strtotime($_GET['ldate']));
-                
+<?php
+include './../../config/koneksi.php';
+include './../../config/fungsi_indobulan.php';
+
+$tampil = mysql_query("SELECT * FROM modul WHERE id_modul ='".$_GET[report_id]."'");
+
+$r = mysql_fetch_array($tampil);
+
+$module = $_GET['module'];
+$imodule = ucwords($r['nama_modul']);
+$nmmodule = ucwords($r['nama_modul']);
+$id = $r['id_modul'];
+$fa_icon = $r['fa_icon'];
+
+if ($r[orientation] == 'P') {
+    $orientation = 'portrait';
+} else {
+    $orientation = 'landscape';
+}
+
+$fdate = $_GET['fdate'];
+$ldate = $_GET['ldate'];
+
+$ftgl = date('d/m/Y', strtotime($_GET['fdate']));
+$ltgl = date('d/m/Y', strtotime($_GET['ldate']));
+
 ?>
 
 <!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
@@ -140,11 +139,15 @@ function icetak(){
 
 <!--<body onload="cetakspk()">-->
 
-<? if ($_GET['printto'] == '2') { ?>
+<?php if ($_GET['printto'] == '2') {
+    ?>
 <body onload="icetak()">
-<? } else { ?>
+<?php
+} else {
+        ?>
 <body>
-<? } ?>
+<?php
+    } ?>
 
 
    <div class="noprint themeborderleft themeborderright themebordertop themeborderbottom"  >
@@ -161,28 +164,28 @@ function icetak(){
 </div>
 
 
-<?
-$gtampil=mysql_query("SELECT * FROM informasi_perusahaan where id_informasi_perusahaan = '1'");
- $g=mysql_fetch_array($gtampil);
-
-if ($g['pict']) {
-  $pict = $g['pict'];
-} else {
-  $pict = '';
-}
-
-$company = ucwords($g['company']);
+<?php
+$gtampil = mysql_query("SELECT * FROM informasi_perusahaan where id_informasi_perusahaan = '1'");
+ $g = mysql_fetch_array($gtampil);
+
+if ($g['pict']) {
+    $pict = $g['pict'];
+} else {
+    $pict = '';
+}
+
+$company = ucwords($g['company']);
 ?>
 
  <table width='100%' style="padding-top:10px;">
 <tr>
 <td width='10%'>
-<!-- <img src="../../images/logo/<?=$pict;?>" width=100px> -->
+<!-- <img src="../../images/logo/<?=$pict; ?>" width=100px> -->
 </td>
 <td style="text-align:center;" width='80%'>
-<span class='h1'><?=$nmmodule;?></span>
-<? echo "<span class='h2'>".$g['company']."</span><br>"; ?>
-<br>Periode : <?=$ftgl;?> - <?=$ltgl;?>
+<span class='h1'><?=$nmmodule; ?></span>
+<?php echo "<span class='h2'>".$g['company'].'</span><br>'; ?>
+<br>Periode : <?=$ftgl; ?> - <?=$ltgl; ?>
 </td>
 <td width='10%'>
 &nbsp
@@ -207,9 +210,9 @@ $company = ucwords($g['company']);
                         </thead>
                         <tbody>
                             
-                         <?
-                        
-             $tampil=mysql_query("SELECT a.obat,b.satuan,a.jumlah,ifnull(sum(d.qty),0) as keluar
+                         <?php
+
+             $tampil = mysql_query("SELECT a.obat,b.satuan,a.jumlah,ifnull(sum(d.qty),0) as keluar
                                 FROM obat a left join satuan b 
                                  ON a.id_satuan = b.id_satuan
                                  left join kunjungan_berobat c 
@@ -219,37 +222,35 @@ $company = ucwords($g['company']);
                                  LEFT JOIN kunjungan_berobat_detail  d 
                                  ON c.id_kunjungan_berobat = d.id_kunjungan_berobat
                                  AND a.id_obat = d.id_obat
-                                 GROUP BY a.obat,b.satuan,a.jumlah ");
-
-            $no = 1;
-            
-            while ($r=mysql_fetch_array($tampil)){  
-
-            $tgl       = DATE('d/m/Y',strtotime($r[tanggal]));
-
-            $id_pasien    = $r[id_pasien];
-
-            $stok = $r[jumlah]+$r[keluar];
-
-            echo"<tr>";
-            echo"<td style='text-align:center;'>$no</td>";
-            echo"<td>$r[obat]</td>";
-            echo"<td>$r[satuan]</td>";           
-            echo"<td style='text-align:right;'>$stok</td>";
-            echo"<td style='text-align:right;'>$r[keluar]</td>"; 
-            echo"<td style='text-align:right;'>$r[jumlah]</td>";
-            echo"</tr>";
-            $no++;
-                                
-             }
+                                 GROUP BY a.obat,b.satuan,a.jumlah ");
+
+            $no = 1;
+
+            while ($r = mysql_fetch_array($tampil)) {
+                $tgl = date('d/m/Y', strtotime($r[tanggal]));
+
+                $id_pasien = $r[id_pasien];
+
+                $stok = $r[jumlah] + $r[keluar];
+
+                echo'<tr>';
+                echo"<td style='text-align:center;'>$no</td>";
+                echo"<td>$r[obat]</td>";
+                echo"<td>$r[satuan]</td>";
+                echo"<td style='text-align:right;'>$stok</td>";
+                echo"<td style='text-align:right;'>$r[keluar]</td>";
+                echo"<td style='text-align:right;'>$r[jumlah]</td>";
+                echo'</tr>';
+                $no++;
+            }
             ?>
 
             <tfoot>
                             <tr>                               
                                 <th colspan= '3'>TOTAL</th>
 
-                                <?
-                                $dtampil=mysql_query("SELECT sum(a.jumlah) as jumlah,ifnull(sum(d.qty),0) as keluar
+                                <?php
+                                $dtampil = mysql_query("SELECT sum(a.jumlah) as jumlah,ifnull(sum(d.qty),0) as keluar
                                 FROM obat a left join satuan b 
                                  ON a.id_satuan = b.id_satuan
                                  left join kunjungan_berobat c 
@@ -258,18 +259,17 @@ $company = ucwords($g['company']);
                                  AND c.status = '1'
                                  LEFT JOIN kunjungan_berobat_detail  d 
                                  ON c.id_kunjungan_berobat = d.id_kunjungan_berobat
-                                 AND a.id_obat = d.id_obat");  
-
-
-                                $d=mysql_fetch_array($dtampil);
-
-                                $tstok = $d[jumlah]+$d[keluar];
-
-                                echo"<td style='text-align:right;'>$tstok</td>";     
-                                echo"<td style='text-align:right;'>$d[keluar]</td>";     
-                                echo"<td style='text-align:right;'>$d[jumlah]</td>";           
-                                 
-                                //}
+                                 AND a.id_obat = d.id_obat");
+
+                                $d = mysql_fetch_array($dtampil);
+
+                                $tstok = $d[jumlah] + $d[keluar];
+
+                                echo"<td style='text-align:right;'>$tstok</td>";
+                                echo"<td style='text-align:right;'>$d[keluar]</td>";
+                                echo"<td style='text-align:right;'>$d[jumlah]</td>";
+
+                                //}
                                 ?>
 
                             </tr>
diff --git a/modul/mod_resep_obat/form_resep_obat.php b/modul/mod_resep_obat/form_resep_obat.php
index 49f3aad10c35b6fcfd00d9f87627c15698da4c0e..a8c2035ad5b1c66593a30a26d92316d6cf877a66 100755
--- a/modul/mod_resep_obat/form_resep_obat.php
+++ b/modul/mod_resep_obat/form_resep_obat.php
@@ -1,10 +1,9 @@
-<?
-session_start();
-if (empty($_SESSION['username']) AND empty($_SESSION['password'])){
-  echo "<script>window.alert('Please login first.'); window.location=('../../index.php.php')</script>";
-} else{
-include "./../../config/koneksi.php";
-?>
+<?php
+session_start();
+if (empty($_SESSION['username']) and empty($_SESSION['password'])) {
+    echo "<script>window.alert('Please login first.'); window.location=('../../index.php.php')</script>";
+} else {
+    include './../../config/koneksi.php'; ?>
 <!doctype html>
 <html>
 <head>
@@ -32,47 +31,43 @@ include "./../../config/koneksi.php";
 </head>
 
 <body style='background-color:#fff;'>
-<?
-
-$modul = $_GET['module'];
-$title = $_GET['title'];
-$business_type = $_SESSION['business_type']; 
-$role   = $_SESSION['role'];
-
-$id_module = $_GET['id_module']; 
-
-  $id = isset($_GET['id_kunjungan_berobat']) ? intval($_GET['id_kunjungan_berobat']) : false;
-  
-  if($id){
-     $query = mysql_query('SELECT * FROM kunjungan_berobat WHERE id_kunjungan_berobat = "'.$id.'"');
-     if($query && mysql_num_rows($query) == 1){
-        $data = mysql_fetch_object($query);
-     }else 
-        die('Data modul tidak ditemukan');
-  }
-  
-if ($_GET['igroup']) {
-  $group  = $_GET['igroup'];
-} else {
-  $group  = $data->id_kunjungan_berobat;
-  
-}
-
-if ($_GET['imenu']) {
-  $imenu  = $_GET['imenu'];
-} else {
-  $imenu  = $data->id_modul;  
-  
-}
-
-if ($data->tanggal) {
-  $tanggal = $data->tanggal;
-} else {
-  $tanggal = DATE('Y-m-d');
-}
-
-  
-?>
+<?php
+
+$modul = $_GET['module'];
+    $title = $_GET['title'];
+    $business_type = $_SESSION['business_type'];
+    $role = $_SESSION['role'];
+
+    $id_module = $_GET['id_module'];
+
+    $id = isset($_GET['id_kunjungan_berobat']) ? intval($_GET['id_kunjungan_berobat']) : false;
+
+    if ($id) {
+        $query = mysql_query('SELECT * FROM kunjungan_berobat WHERE id_kunjungan_berobat = "'.$id.'"');
+        if ($query && mysql_num_rows($query) == 1) {
+            $data = mysql_fetch_object($query);
+        } else {
+            die('Data modul tidak ditemukan');
+        }
+    }
+
+    if ($_GET['igroup']) {
+        $group = $_GET['igroup'];
+    } else {
+        $group = $data->id_kunjungan_berobat;
+    }
+
+    if ($_GET['imenu']) {
+        $imenu = $_GET['imenu'];
+    } else {
+        $imenu = $data->id_modul;
+    }
+
+    if ($data->tanggal) {
+        $tanggal = $data->tanggal;
+    } else {
+        $tanggal = date('Y-m-d');
+    } ?>
 
 <div class="ix_panel">
 
@@ -104,19 +99,19 @@ if ($data->tanggal) {
               <div class="col-md-6 col-sm-6 col-xs-12" >
                  <select required name="pasien" class="form-control" disabled>
                  <option>--Pilih Pasien--</option>                
-                    <?
-                      $query = mysql_query('SELECT * FROM pasien ORDER BY nama');
-                       if($query && mysql_num_rows($query) > 0){
-                          while($row = mysql_fetch_object($query)){
-
-                            $pasien = $row->ktp.'-'.$row->nama;
-
-                             echo '<option value="'.$row->id_pasien.'"';
-                             if($row->id_pasien == @$data->id_pasien) echo ' selected';
-                             echo '>'.$pasien.'</option>';
-                          }
-                       }        
-                    ?>
+                    <?php
+                      $query = mysql_query('SELECT * FROM pasien ORDER BY nama');
+    if ($query && mysql_num_rows($query) > 0) {
+        while ($row = mysql_fetch_object($query)) {
+            $pasien = $row->ktp.'-'.$row->nama;
+
+            echo '<option value="'.$row->id_pasien.'"';
+            if ($row->id_pasien == @$data->id_pasien) {
+                echo ' selected';
+            }
+            echo '>'.$pasien.'</option>';
+        }
+    } ?>
                     </select>
               </div>
 
@@ -131,16 +126,17 @@ if ($data->tanggal) {
               <div class="col-md-6 col-sm-6 col-xs-12" >
                  <select name="poli" class="form-control" disabled>     
                  <option>--Pilih Poliklinik --</option>                          
-                    <?
-                      $query = mysql_query('SELECT * FROM poli ORDER BY poli');
-                       if($query && mysql_num_rows($query) > 0){
-                          while($row = mysql_fetch_object($query)){
-                             echo '<option value="'.$row->id_poli.'"';
-                             if($row->id_poli == @$data->id_poli) echo ' selected';
-                             echo '>'.$row->poli.'</option>';
-                          }
-                       }        
-                    ?>
+                    <?php
+                      $query = mysql_query('SELECT * FROM poli ORDER BY poli');
+    if ($query && mysql_num_rows($query) > 0) {
+        while ($row = mysql_fetch_object($query)) {
+            echo '<option value="'.$row->id_poli.'"';
+            if ($row->id_poli == @$data->id_poli) {
+                echo ' selected';
+            }
+            echo '>'.$row->poli.'</option>';
+        }
+    } ?>
                     </select>
               </div> -->
 
@@ -193,16 +189,17 @@ if ($data->tanggal) {
                                      <td>                                         
                                           <select name="obat" id="obat" class="form-control" required>
                                          <option value='0'></option>
-                                            <?
-                                              $query = mysql_query('SELECT * FROM obat ORDER BY obat');
-                                               if($query && mysql_num_rows($query) > 0){
-                                                  while($row = mysql_fetch_object($query)){
-                                                     echo '<option value="'.$row->id_obat.'"';
-                                                     if($row->id_obat == @$r['id_obat']) echo ' selected';
-                                                     echo '>'.$row->obat.'</option>';
-                                                  }
-                                               }        
-                                            ?>
+                                            <?php
+                                              $query = mysql_query('SELECT * FROM obat ORDER BY obat');
+    if ($query && mysql_num_rows($query) > 0) {
+        while ($row = mysql_fetch_object($query)) {
+            echo '<option value="'.$row->id_obat.'"';
+            if ($row->id_obat == @$r['id_obat']) {
+                echo ' selected';
+            }
+            echo '>'.$row->obat.'</option>';
+        }
+    } ?>
                                             </select> 
                             
                                      </td>
@@ -218,48 +215,42 @@ if ($data->tanggal) {
                                        </td>
 
                                  
-                                    <?php   
-                                    echo" <td  style='text-align:right;'>";     
-                                    ?>                               
-                                    <button type="submit" <?php if(!$id) { echo 'disabled';} ?>  class="btn btn-success btn-sm">
+                                    <?php 
+                                    echo" <td  style='text-align:right;'>"; ?>                               
+                                    <button type="submit" <?php if (!$id) {
+                                        echo 'disabled';
+                                    } ?>  class="btn btn-success btn-sm">
                                                   <span class="glyphicon glyphicon-plus" aria-hidden="true"></span>
                                     </button>
-                                    <?php            
-                                    echo"</td>";              
-                                    echo"</tr>";
-                                $no++;
-                                ?>
+                                    <?php 
+                                    echo'</td>';
+    echo'</tr>';
+    $no++; ?>
 
                                   <input type="hidden" name="id_module" value="<?php echo $id_module?>" /> 
                                   <input type="hidden" name="imodule" value="<?php echo $imodule?>" /> 
 
-                                <?
-                               echo"</form>";
-                                ?>
-
-                                  <?
+                                <?php
+                               echo'</form>'; ?>
 
+                                  <?php
+
                                    $SQL = "SELECT a.*,b.obat
                                              FROM kunjungan_berobat_detail  a LEFT JOIN obat b
                                             ON a.id_obat = b.id_obat  
                                             WHERE a.id_kunjungan_berobat = '$id' 
-                                            order by a.id_kunjungan_berobat_detail";
-
-
-
-                                  $tampil=mysql_query($SQL);
-
-                                  $jml = mysql_num_rows($tampil);
-                                    
-                                  $no = 1;
-            
-                                    while ($r=mysql_fetch_array($tampil)){  
-
-                                    $ID = $r['id_kunjungan_berobat'];                                       
-                                    
-                                    echo"<tr>";
-
-                                    ?>
+                                            order by a.id_kunjungan_berobat_detail";
+
+    $tampil = mysql_query($SQL);
+
+    $jml = mysql_num_rows($tampil);
+
+    $no = 1;
+
+    while ($r = mysql_fetch_array($tampil)) {
+        $ID = $r['id_kunjungan_berobat'];
+
+        echo'<tr>'; ?>
 
                                      <form action="<?php echo"../../modul/mod_$modul/aksi_$modul.php?module=$modul&act=input"; ?>" method="post" name="formData" enctype="multipart/form-data"  > 
                                                             
@@ -268,58 +259,64 @@ if ($data->tanggal) {
                                         <input type="hidden" name="ID" value="<?php echo @$ID?>" />
                             
                                      <td>
-                                        <select name="obat" id="obat<?php echo $no;?>" class="form-control" required>
+                                        <select name="obat" id="obat<?php echo $no; ?>" class="form-control" required>
                                          <option value='0'></option>
-                                            <?
-                                              $query = mysql_query('SELECT * FROM obat ORDER BY obat');
-                                               if($query && mysql_num_rows($query) > 0){
-                                                  while($row = mysql_fetch_object($query)){
-                                                     echo '<option value="'.$row->id_obat.'"';
-                                                     if($row->id_obat == @$r['id_obat']) echo ' selected';
-                                                     echo '>'.$row->obat.'</option>';
-                                                  }
-                                               }        
-                                            ?>
+                                            <?php
+                                              $query = mysql_query('SELECT * FROM obat ORDER BY obat');
+        if ($query && mysql_num_rows($query) > 0) {
+            while ($row = mysql_fetch_object($query)) {
+                echo '<option value="'.$row->id_obat.'"';
+                if ($row->id_obat == @$r['id_obat']) {
+                    echo ' selected';
+                }
+                echo '>'.$row->obat.'</option>';
+            }
+        } ?>
                                             </select> 
                                        </td>
 
                                       <td>
-                                          <input type="number" required name='qty' id='iqty<?php echo $no;?>' min = '0' value="<?php if ($jml > 0) { echo number_format($r['qty'], 0, ".", ""); } else { echo 1; } ?>" style='text-align:right;' class="form-control col-md-7 col-xs-12">  
-                                          <input type="hidden" name='eqty' id='eiqty<?php echo $no;?>' min = '0' value="<?php if ($jml > 0) { echo number_format($r['qty'], 0, ".", ""); } else { echo 1; } ?>" style='text-align:right;' class="form-control col-md-7 col-xs-12">    
+                                          <input type="number" required name='qty' id='iqty<?php echo $no; ?>' min = '0' value="<?php if ($jml > 0) {
+            echo number_format($r['qty'], 0, '.', '');
+        } else {
+            echo 1;
+        } ?>" style='text-align:right;' class="form-control col-md-7 col-xs-12">  
+                                          <input type="hidden" name='eqty' id='eiqty<?php echo $no; ?>' min = '0' value="<?php if ($jml > 0) {
+            echo number_format($r['qty'], 0, '.', '');
+        } else {
+            echo 1;
+        } ?>" style='text-align:right;' class="form-control col-md-7 col-xs-12">    
 
                                        </td>
 
                                        <td>
-                                          <input type="text" name='descr' id='descr' value="<?=$r['descr'];?>" class="form-control col-md-7 col-xs-12">                                              
+                                          <input type="text" name='descr' id='descr' value="<?=$r['descr']; ?>" class="form-control col-md-7 col-xs-12">                                              
 
                                        </td>
                                                                               
 
                                  
-                                    <?php   
-                                    echo" <td  style='text-align:right;'>";     
-                                    ?>                               
-                                    <button type="submit" <?php if(!$id) { echo 'disabled';} ?>  class="btn btn-primary btn-sm">
+                                    <?php 
+                                    echo" <td  style='text-align:right;'>"; ?>                               
+                                    <button type="submit" <?php if (!$id) {
+                                        echo 'disabled';
+                                    } ?>  class="btn btn-primary btn-sm">
                                         <span class="glyphicon glyphicon-floppy-disk" aria-hidden="true"></span>
                                     </button>
-                                    <?php      
-                                    echo"<a href='../../modul/mod_$modul/aksi_$modul.php?module=$modul&act=dhapus&id=$r[id_kunjungan_berobat_detail]&id_kunjungan_berobat=$r[id_kunjungan_berobat]&obat=$r[id_obat]&qty=$r[qty]&id_module=$id_module' onClick=\"return confirm('Hapus data ?')\" title='Hapus $nmmodule'><span class='btn btn-danger btn-sm '><i class='glyphicon glyphicon-trash'></i></span></a>";      
-                                    echo"</td>";              
-                                    echo"</tr>";
-
-                                $no++;
-                                ?>
+                                    <?php 
+                                    echo"<a href='../../modul/mod_$modul/aksi_$modul.php?module=$modul&act=dhapus&id=$r[id_kunjungan_berobat_detail]&id_kunjungan_berobat=$r[id_kunjungan_berobat]&obat=$r[id_obat]&qty=$r[qty]&id_module=$id_module' onClick=\"return confirm('Hapus data ?')\" title='Hapus $nmmodule'><span class='btn btn-danger btn-sm '><i class='glyphicon glyphicon-trash'></i></span></a>";
+        echo'</td>';
+        echo'</tr>';
+
+        $no++; ?>
 
                                   <input type="hidden" name="ID" value="<?php echo $r['id_kunjungan_berobat_detail']?>" />
                                   <input type="hidden" name="id_module" value="<?php echo $id_module?>" /> 
                                   <input type="hidden" name="imodule" value="<?php echo $imodule?>" /> 
 
-                                <?
-                               echo"</form>";
-                                
-                               }
-
-                                  ?>  
+                                <?php
+                               echo'</form>';
+    } ?>  
 
 
 
@@ -534,6 +531,6 @@ if ($data->tanggal) {
 
 </body>
 </html>
-<?
-}
+<?php
+}
 ?>
\ No newline at end of file
diff --git a/modul/mod_rujukan/aksi_rujukan.php b/modul/mod_rujukan/aksi_rujukan.php
index 9f40c304dd0ae9fde0205790af9a4ee6dab97077..d7a5c30d365c77c49adb2672236680adf1f7e94c 100755
--- a/modul/mod_rujukan/aksi_rujukan.php
+++ b/modul/mod_rujukan/aksi_rujukan.php
@@ -1,60 +1,50 @@
-<?php
-session_start();
-if (empty($_SESSION['username']) AND empty($_SESSION['password'])){
-  echo "<script>window.alert('Please login first.'); window.location=('../../index.php.php')</script>";
-} else{
-include "./../../config/koneksi.php";
-include "./../../config/fungsi_thumb.php";
-
-$module=$_GET[module];
-$act=$_GET[act];
-
-$date     = date("d/m/Y");  
-$idate    = date("Y-m-d");
-$hour = time() - (1 * 1 * 60 * 60);
-$datetime   = date("Y-m-d G:i:s", $hour);
-$userid   = $_SESSION['userid'];
-
-
-// Hapus modul
-if ($module=='rujukan' AND $act=='hapus'){
-  $id = $_GET['id'];
-  $id_module = $_GET['id_module'];
-   
-  mysql_query("DELETE FROM ".$module." WHERE id_".$module." = $id");
-
-   //header('location:../../main.php?module='.$module.'&id_module='.$id_module);          
-
-  ?>
+<?php
+session_start();
+if (empty($_SESSION['username']) and empty($_SESSION['password'])) {
+    echo "<script>window.alert('Please login first.'); window.location=('../../index.php.php')</script>";
+} else {
+    include './../../config/koneksi.php';
+    include './../../config/fungsi_thumb.php';
+
+    $module = $_GET[module];
+    $act = $_GET[act];
+
+    $date = date('d/m/Y');
+    $idate = date('Y-m-d');
+    $hour = time() - (1 * 1 * 60 * 60);
+    $datetime = date('Y-m-d G:i:s', $hour);
+    $userid = $_SESSION['userid'];
+
+    // Hapus modul
+    if ($module == 'rujukan' and $act == 'hapus') {
+        $id = $_GET['id'];
+        $id_module = $_GET['id_module'];
+
+        mysql_query('DELETE FROM '.$module.' WHERE id_'.$module." = $id");
+
+        //header('location:../../main.php?module='.$module.'&id_module='.$id_module); ?>
    
   <script language="javascript">
-     window.parent.location.href = "<?php echo"./../../main.php?module=$module&id_module=$id_module";?>";  
+     window.parent.location.href = "<?php echo"./../../main.php?module=$module&id_module=$id_module"; ?>";  
      window.parent.tb_remove();
    </script>
   
-  <?php                 
-   
- }
-
-  // Input group
-elseif ($module=='rujukan' AND $act=='input'){
-
-  $id_module = $_POST['id_module'];
-
-
-   if($_POST['ID']){
-   mysql_query("UPDATE rujukan SET tipe   = '$_POST[tipe]'
+  <?php
+    }
+
+    // Input group
+    elseif ($module == 'rujukan' and $act == 'input') {
+        $id_module = $_POST['id_module'];
+
+        if ($_POST['ID']) {
+            mysql_query("UPDATE rujukan SET tipe   = '$_POST[tipe]'
                     ,rujukan   = '$_POST[rujukan]'
                     ,upddt   = '$datetime' 
                   ,updby   = '$userid' 
                   ,aktif     = '$_POST[aktif]'  
-                          WHERE id_rujukan    = '$_POST[ID]'");
-
-                           
-
-      
-   } else {
-   mysql_query("INSERT INTO rujukan(tipe
+                          WHERE id_rujukan    = '$_POST[ID]'");
+        } else {
+            mysql_query("INSERT INTO rujukan(tipe
                    ,rujukan 
                    ,crtdt
                    ,crtby
@@ -67,25 +57,17 @@ elseif ($module=='rujukan' AND $act=='input'){
                   ,'$userid'
                   ,'$datetime'
                   ,'$userid'
-                    ,'$_POST[aktif]')");
-  
-                
-   }
-   
-
-   //header('location:../../main.php?module='.$module.'&id_module='.$id_module);          
-
-  ?>
+                    ,'$_POST[aktif]')");
+        }
+
+        //header('location:../../main.php?module='.$module.'&id_module='.$id_module); ?>
    
   <script language="javascript">
-     window.parent.location.href = "<?php echo"./../../main.php?module=$module&id_module=$id_module";?>";  
+     window.parent.location.href = "<?php echo"./../../main.php?module=$module&id_module=$id_module"; ?>";  
      window.parent.tb_remove();
    </script>
   
-  <?php                               
- 
-
-}
-
-}
+  <?php
+    }
+}
 ?>
diff --git a/modul/mod_rujukan/form_rujukan.php b/modul/mod_rujukan/form_rujukan.php
index 80d042408843c50b6844258dfbe24c398375fae8..a701a3639581ea431320df9a3cdf3c21389694fe 100755
--- a/modul/mod_rujukan/form_rujukan.php
+++ b/modul/mod_rujukan/form_rujukan.php
@@ -1,10 +1,9 @@
-<?
-session_start();
-if (empty($_SESSION['username']) AND empty($_SESSION['password'])){
-  echo "<script>window.alert('Please login first.'); window.location=('../../index.php.php')</script>";
-} else{
-include "./../../config/koneksi.php";
-?>
+<?php
+session_start();
+if (empty($_SESSION['username']) and empty($_SESSION['password'])) {
+    echo "<script>window.alert('Please login first.'); window.location=('../../index.php.php')</script>";
+} else {
+    include './../../config/koneksi.php'; ?>
 <!doctype html>
 <html>
 <head>
@@ -32,41 +31,37 @@ include "./../../config/koneksi.php";
 </head>
 
 <body style='background-color:#fff;'>
-<?
-
-$modul = $_GET['module'];
-$title = $_GET['title'];
-
-$role   = $_SESSION['role'];
-
-$id_module = $_GET['id_module']; 
-
-  $id = isset($_GET['id_rujukan']) ? intval($_GET['id_rujukan']) : false;
-  
-  if($id){
-     $query = mysql_query('SELECT * FROM rujukan WHERE id_rujukan = "'.$id.'"');
-     if($query && mysql_num_rows($query) == 1){
-        $data = mysql_fetch_object($query);
-     }else 
-        die('Data modul tidak ditemukan');
-  }
-  
-if ($_GET['igroup']) {
-  $group  = $_GET['igroup'];
-} else {
-  $group  = $data->id_rujukan;
-  
-}
-
-if ($_GET['imenu']) {
-  $imenu  = $_GET['imenu'];
-} else {
-  $imenu  = $data->id_modul;  
-  
-}
-
-  
-?>
+<?php
+
+$modul = $_GET['module'];
+    $title = $_GET['title'];
+
+    $role = $_SESSION['role'];
+
+    $id_module = $_GET['id_module'];
+
+    $id = isset($_GET['id_rujukan']) ? intval($_GET['id_rujukan']) : false;
+
+    if ($id) {
+        $query = mysql_query('SELECT * FROM rujukan WHERE id_rujukan = "'.$id.'"');
+        if ($query && mysql_num_rows($query) == 1) {
+            $data = mysql_fetch_object($query);
+        } else {
+            die('Data modul tidak ditemukan');
+        }
+    }
+
+    if ($_GET['igroup']) {
+        $group = $_GET['igroup'];
+    } else {
+        $group = $data->id_rujukan;
+    }
+
+    if ($_GET['imenu']) {
+        $imenu = $_GET['imenu'];
+    } else {
+        $imenu = $data->id_modul;
+    } ?>
 
 
 <div class="ix_panel">
@@ -75,9 +70,11 @@ if ($_GET['imenu']) {
      <form action="<?php echo"../../modul/mod_$modul/aksi_$modul.php?module=$modul&act=input"; ?>" method="post" name="formData" enctype="multipart/form-data"  > 
      
           
-           <?php if ($id){ ?>  
+           <?php if ($id) {
+        ?>  
     
-            <?php if (@$data->tipe=='R'){ ?>
+            <?php if (@$data->tipe == 'R') {
+            ?>
               
                 <div class="form-group">
                    <label class="control-label col-md-3 col-sm-3 col-xs-12" style='padding-top:10px;'>Tipe :</label>
@@ -86,7 +83,9 @@ if ($_GET['imenu']) {
                     <input type=radio name='tipe' value='L' class="flat"> Lab                
                   </div>
               </div>  
-            <?php   }else{ ?>  
+            <?php
+        } else {
+            ?>  
               
                 <div class="form-group">
                    <label class="control-label col-md-3 col-sm-3 col-xs-12" style='padding-top:10px;'>Tipe :</label>
@@ -95,9 +94,12 @@ if ($_GET['imenu']) {
                     <input type=radio name='tipe' value='L' class="flat" checked> Lab          
                   </div>
               </div>  
-             <?php } ?>
+             <?php
+        } ?>
 
-        <?php   }else{ ?>  
+        <?php
+    } else {
+        ?>  
 
            
                 <div class="form-group">
@@ -108,7 +110,8 @@ if ($_GET['imenu']) {
                   </div>
               </div>  
 
-        <?php } ?>
+        <?php
+    } ?>
 
 
             <div class="form-group">
@@ -119,9 +122,11 @@ if ($_GET['imenu']) {
           </div>
 
         
-          <?php if ($id){ ?>  
+          <?php if ($id) {
+        ?>  
     
-            <?php if (@$data->aktif=='Y'){ ?>
+            <?php if (@$data->aktif == 'Y') {
+            ?>
               
                 <div class="form-group">
 	               <label class="control-label col-md-3 col-sm-3 col-xs-12" style='padding-top:10px;'>Aktif :</label>
@@ -130,7 +135,9 @@ if ($_GET['imenu']) {
                     <input type=radio name='aktif' value='N' class="flat"> T                
                   </div>
               </div>  
-            <?php   }else{ ?>  
+            <?php
+        } else {
+            ?>  
               
                 <div class="form-group">
 	               <label class="control-label col-md-3 col-sm-3 col-xs-12" style='padding-top:10px;'>Aktif :</label>
@@ -139,9 +146,12 @@ if ($_GET['imenu']) {
                     <input type=radio name='aktif' value='N' class="flat" checked> T          
                   </div>
               </div>  
-             <?php } ?>
+             <?php
+        } ?>
 
-        <?php   }else{ ?>  
+        <?php
+    } else {
+        ?>  
 
            
                 <div class="form-group">
@@ -152,7 +162,8 @@ if ($_GET['imenu']) {
                   </div>
               </div>  
 
-        <?php } ?>
+        <?php
+    } ?>
 
 
 
@@ -371,6 +382,6 @@ if ($_GET['imenu']) {
 
 </body>
 </html>
-<?
-}
+<?php
+}
 ?>
\ No newline at end of file
diff --git a/modul/mod_rujukan_pasien/aksi_rujukan_pasien.php b/modul/mod_rujukan_pasien/aksi_rujukan_pasien.php
index 4c07b0cbabbf8ac13b16b65a88d5e67b1c3c2fd1..9a1a7ccec68417806e64790ce416fd8b70d6c5fc 100755
--- a/modul/mod_rujukan_pasien/aksi_rujukan_pasien.php
+++ b/modul/mod_rujukan_pasien/aksi_rujukan_pasien.php
@@ -1,49 +1,39 @@
-<?php
-session_start();
-if (empty($_SESSION['username']) AND empty($_SESSION['password'])){
-  echo "<script>window.alert('Please login first.'); window.location=('../../index.php.php')</script>";
-} else{
-include "./../../config/koneksi.php";
-include "./../../config/fungsi_thumb.php";
-
-$module=$_GET[module];
-$act=$_GET[act];
-
-$date     = date("d/m/Y");  
-$idate    = date("Y-m-d");
-$hour = time() - (1 * 1 * 60 * 60);
-$datetime   = date("Y-m-d G:i:s", $hour);
-$userid   = $_SESSION['userid'];
-$business_type = $_SESSION['business_type']; 
-
-if ($module=='rujukan_pasien' AND $act=='update'){
-
-  $id_module = $_POST['id_module'];
-
-
-
-   mysql_query("UPDATE kunjungan_berobat SET id_rujukan_rs   = '$_POST[rujukan_rs]'
+<?php
+session_start();
+if (empty($_SESSION['username']) and empty($_SESSION['password'])) {
+    echo "<script>window.alert('Please login first.'); window.location=('../../index.php.php')</script>";
+} else {
+    include './../../config/koneksi.php';
+    include './../../config/fungsi_thumb.php';
+
+    $module = $_GET[module];
+    $act = $_GET[act];
+
+    $date = date('d/m/Y');
+    $idate = date('Y-m-d');
+    $hour = time() - (1 * 1 * 60 * 60);
+    $datetime = date('Y-m-d G:i:s', $hour);
+    $userid = $_SESSION['userid'];
+    $business_type = $_SESSION['business_type'];
+
+    if ($module == 'rujukan_pasien' and $act == 'update') {
+        $id_module = $_POST['id_module'];
+
+        mysql_query("UPDATE kunjungan_berobat SET id_rujukan_rs   = '$_POST[rujukan_rs]'
                     ,id_rujukan_lab   = '$_POST[rujukan_lab]'
                     ,upddt   = '$datetime' 
                     ,updby   = '$userid' 
                     ,status     = '1'  
-                 WHERE id_kunjungan_berobat    = '$_POST[ID]'");
-                          
-
-   
-   //header('location:../../main.php?module='.$module.'&id_module='.$id_module);          
-
-  ?>
+                 WHERE id_kunjungan_berobat    = '$_POST[ID]'");
+
+        //header('location:../../main.php?module='.$module.'&id_module='.$id_module); ?>
    
   <script language="javascript">
-     window.parent.location.href = "<?php echo"./../../main.php?module=$module&id_module=$id_module";?>";  
+     window.parent.location.href = "<?php echo"./../../main.php?module=$module&id_module=$id_module"; ?>";  
      window.parent.tb_remove();
    </script>
   
-  <?php                               
- 
-
-}
-
-}
+  <?php
+    }
+}
 ?>
diff --git a/modul/mod_rujukan_pasien/form_rujukan_pasien.php b/modul/mod_rujukan_pasien/form_rujukan_pasien.php
index 787986d70554bb5e7a43e7e258489e816d730526..23cba5283f935d843840f2d8bc1707d3bc3911ab 100755
--- a/modul/mod_rujukan_pasien/form_rujukan_pasien.php
+++ b/modul/mod_rujukan_pasien/form_rujukan_pasien.php
@@ -1,10 +1,9 @@
-<?
-session_start();
-if (empty($_SESSION['username']) AND empty($_SESSION['password'])){
-  echo "<script>window.alert('Please login first.'); window.location=('../../index.php.php')</script>";
-} else{
-include "./../../config/koneksi.php";
-?>
+<?php
+session_start();
+if (empty($_SESSION['username']) and empty($_SESSION['password'])) {
+    echo "<script>window.alert('Please login first.'); window.location=('../../index.php.php')</script>";
+} else {
+    include './../../config/koneksi.php'; ?>
 <!doctype html>
 <html>
 <head>
@@ -32,47 +31,43 @@ include "./../../config/koneksi.php";
 </head>
 
 <body style='background-color:#fff;'>
-<?
-
-$modul = $_GET['module'];
-$title = $_GET['title'];
-$business_type = $_SESSION['business_type']; 
-$role   = $_SESSION['role'];
-
-$id_module = $_GET['id_module']; 
-
-  $id = isset($_GET['id_kunjungan_berobat']) ? intval($_GET['id_kunjungan_berobat']) : false;
-  
-  if($id){
-     $query = mysql_query('SELECT * FROM kunjungan_berobat WHERE id_kunjungan_berobat = "'.$id.'"');
-     if($query && mysql_num_rows($query) == 1){
-        $data = mysql_fetch_object($query);
-     }else 
-        die('Data modul tidak ditemukan');
-  }
-  
-if ($_GET['igroup']) {
-  $group  = $_GET['igroup'];
-} else {
-  $group  = $data->id_kunjungan_berobat;
-  
-}
-
-if ($_GET['imenu']) {
-  $imenu  = $_GET['imenu'];
-} else {
-  $imenu  = $data->id_modul;  
-  
-}
-
-if ($data->tanggal) {
-  $tanggal = $data->tanggal;
-} else {
-  $tanggal = DATE('Y-m-d');
-}
-
-  
-?>
+<?php
+
+$modul = $_GET['module'];
+    $title = $_GET['title'];
+    $business_type = $_SESSION['business_type'];
+    $role = $_SESSION['role'];
+
+    $id_module = $_GET['id_module'];
+
+    $id = isset($_GET['id_kunjungan_berobat']) ? intval($_GET['id_kunjungan_berobat']) : false;
+
+    if ($id) {
+        $query = mysql_query('SELECT * FROM kunjungan_berobat WHERE id_kunjungan_berobat = "'.$id.'"');
+        if ($query && mysql_num_rows($query) == 1) {
+            $data = mysql_fetch_object($query);
+        } else {
+            die('Data modul tidak ditemukan');
+        }
+    }
+
+    if ($_GET['igroup']) {
+        $group = $_GET['igroup'];
+    } else {
+        $group = $data->id_kunjungan_berobat;
+    }
+
+    if ($_GET['imenu']) {
+        $imenu = $_GET['imenu'];
+    } else {
+        $imenu = $data->id_modul;
+    }
+
+    if ($data->tanggal) {
+        $tanggal = $data->tanggal;
+    } else {
+        $tanggal = date('Y-m-d');
+    } ?>
 
 
 <div class="ix_panel">
@@ -95,19 +90,19 @@ if ($data->tanggal) {
               <div class="col-md-6 col-sm-6 col-xs-12" >
                  <select required name="pasien" class="form-control" disabled>
                  <option>--Pilih Pasien--</option>                
-                    <?
-                      $query = mysql_query('SELECT * FROM pasien ORDER BY nama');
-                       if($query && mysql_num_rows($query) > 0){
-                          while($row = mysql_fetch_object($query)){
-
-                            $pasien = $row->ktp.'-'.$row->nama;
-
-                             echo '<option value="'.$row->id_pasien.'"';
-                             if($row->id_pasien == @$data->id_pasien) echo ' selected';
-                             echo '>'.$pasien.'</option>';
-                          }
-                       }        
-                    ?>
+                    <?php
+                      $query = mysql_query('SELECT * FROM pasien ORDER BY nama');
+    if ($query && mysql_num_rows($query) > 0) {
+        while ($row = mysql_fetch_object($query)) {
+            $pasien = $row->ktp.'-'.$row->nama;
+
+            echo '<option value="'.$row->id_pasien.'"';
+            if ($row->id_pasien == @$data->id_pasien) {
+                echo ' selected';
+            }
+            echo '>'.$pasien.'</option>';
+        }
+    } ?>
                     </select>
               </div>
 
@@ -116,16 +111,17 @@ if ($data->tanggal) {
               <div class="col-md-6 col-sm-6 col-xs-12" >
                  <select name="poli" class="form-control" disabled>     
                  <option>--Pilih Poliklinik --</option>                          
-                    <?
-                      $query = mysql_query('SELECT * FROM poli ORDER BY poli');
-                       if($query && mysql_num_rows($query) > 0){
-                          while($row = mysql_fetch_object($query)){
-                             echo '<option value="'.$row->id_poli.'"';
-                             if($row->id_poli == @$data->id_poli) echo ' selected';
-                             echo '>'.$row->poli.'</option>';
-                          }
-                       }        
-                    ?>
+                    <?php
+                      $query = mysql_query('SELECT * FROM poli ORDER BY poli');
+    if ($query && mysql_num_rows($query) > 0) {
+        while ($row = mysql_fetch_object($query)) {
+            echo '<option value="'.$row->id_poli.'"';
+            if ($row->id_poli == @$data->id_poli) {
+                echo ' selected';
+            }
+            echo '>'.$row->poli.'</option>';
+        }
+    } ?>
                     </select>
               </div>
 
@@ -134,16 +130,17 @@ if ($data->tanggal) {
               <div class="col-md-6 col-sm-6 col-xs-12" >
                  <select name="rujukan_rs" class="form-control">     
                  <option>--Pilih Rujukan RS --</option>                          
-                    <?
-                      $query = mysql_query('SELECT * FROM rujukan WHERE tipe = "R" ORDER BY rujukan');
-                       if($query && mysql_num_rows($query) > 0){
-                          while($row = mysql_fetch_object($query)){
-                             echo '<option value="'.$row->id_rujukan.'"';
-                             if($row->id_rujukan == @$data->id_rujukan_rs) echo ' selected';
-                             echo '>'.$row->rujukan.'</option>';
-                          }
-                       }        
-                    ?>
+                    <?php
+                      $query = mysql_query('SELECT * FROM rujukan WHERE tipe = "R" ORDER BY rujukan');
+    if ($query && mysql_num_rows($query) > 0) {
+        while ($row = mysql_fetch_object($query)) {
+            echo '<option value="'.$row->id_rujukan.'"';
+            if ($row->id_rujukan == @$data->id_rujukan_rs) {
+                echo ' selected';
+            }
+            echo '>'.$row->rujukan.'</option>';
+        }
+    } ?>
                     </select>
               </div>
 
@@ -152,16 +149,17 @@ if ($data->tanggal) {
               <div class="col-md-6 col-sm-6 col-xs-12" >
                  <select name="rujukan_lab" class="form-control">     
                  <option>--Pilih Rujukan Lab --</option>                          
-                    <?
-                      $query = mysql_query('SELECT * FROM rujukan WHERE tipe = "L" ORDER BY rujukan');
-                       if($query && mysql_num_rows($query) > 0){
-                          while($row = mysql_fetch_object($query)){
-                             echo '<option value="'.$row->id_rujukan.'"';
-                             if($row->id_rujukan == @$data->id_rujukan_lab) echo ' selected';
-                             echo '>'.$row->rujukan.'</option>';
-                          }
-                       }        
-                    ?>
+                    <?php
+                      $query = mysql_query('SELECT * FROM rujukan WHERE tipe = "L" ORDER BY rujukan');
+    if ($query && mysql_num_rows($query) > 0) {
+        while ($row = mysql_fetch_object($query)) {
+            echo '<option value="'.$row->id_rujukan.'"';
+            if ($row->id_rujukan == @$data->id_rujukan_lab) {
+                echo ' selected';
+            }
+            echo '>'.$row->rujukan.'</option>';
+        }
+    } ?>
                     </select>
               </div>
 
@@ -381,6 +379,6 @@ if ($data->tanggal) {
 
 </body>
 </html>
-<?
-}
+<?php
+}
 ?>
\ No newline at end of file
diff --git a/modul/mod_satuan/aksi_satuan.php b/modul/mod_satuan/aksi_satuan.php
index 9274d8b547e5d9f69d7ab4e38011322c1ac25787..67795d473a1264e33047a9f876a2174e7db12007 100755
--- a/modul/mod_satuan/aksi_satuan.php
+++ b/modul/mod_satuan/aksi_satuan.php
@@ -1,59 +1,49 @@
-<?php
-session_start();
-if (empty($_SESSION['username']) AND empty($_SESSION['password'])){
-  echo "<script>window.alert('Please login first.'); window.location=('../../index.php.php')</script>";
-} else{
-include "./../../config/koneksi.php";
-include "./../../config/fungsi_thumb.php";
-
-$module=$_GET[module];
-$act=$_GET[act];
-
-$date     = date("d/m/Y");  
-$idate    = date("Y-m-d");
-$hour = time() - (1 * 1 * 60 * 60);
-$datetime   = date("Y-m-d G:i:s", $hour);
-$userid   = $_SESSION['userid'];
-
-
-// Hapus modul
-if ($module=='satuan' AND $act=='hapus'){
-  $id = $_GET['id'];
-  $id_module = $_GET['id_module'];
-   
-  mysql_query("DELETE FROM ".$module." WHERE id_".$module." = $id");
-
-   //header('location:../../main.php?module='.$module.'&id_module='.$id_module);          
-
-  ?>
+<?php
+session_start();
+if (empty($_SESSION['username']) and empty($_SESSION['password'])) {
+    echo "<script>window.alert('Please login first.'); window.location=('../../index.php.php')</script>";
+} else {
+    include './../../config/koneksi.php';
+    include './../../config/fungsi_thumb.php';
+
+    $module = $_GET[module];
+    $act = $_GET[act];
+
+    $date = date('d/m/Y');
+    $idate = date('Y-m-d');
+    $hour = time() - (1 * 1 * 60 * 60);
+    $datetime = date('Y-m-d G:i:s', $hour);
+    $userid = $_SESSION['userid'];
+
+    // Hapus modul
+    if ($module == 'satuan' and $act == 'hapus') {
+        $id = $_GET['id'];
+        $id_module = $_GET['id_module'];
+
+        mysql_query('DELETE FROM '.$module.' WHERE id_'.$module." = $id");
+
+        //header('location:../../main.php?module='.$module.'&id_module='.$id_module); ?>
    
   <script language="javascript">
-     window.parent.location.href = "<?php echo"./../../main.php?module=$module&id_module=$id_module";?>";  
+     window.parent.location.href = "<?php echo"./../../main.php?module=$module&id_module=$id_module"; ?>";  
      window.parent.tb_remove();
    </script>
   
-  <?php                 
-   
- }
-
-  // Input group
-elseif ($module=='satuan' AND $act=='input'){
-
-  $id_module = $_POST['id_module'];
-
-
-   if($_POST['ID']){
-   mysql_query("UPDATE satuan SET satuan   = '$_POST[satuan]'
+  <?php
+    }
+
+    // Input group
+    elseif ($module == 'satuan' and $act == 'input') {
+        $id_module = $_POST['id_module'];
+
+        if ($_POST['ID']) {
+            mysql_query("UPDATE satuan SET satuan   = '$_POST[satuan]'
                     ,upddt   = '$datetime' 
                   ,updby   = '$userid' 
                   ,aktif     = '$_POST[aktif]'  
-                          WHERE id_satuan    = '$_POST[ID]'");
-
-                           
-
-      
-   } else {
-   mysql_query("INSERT INTO satuan(satuan
+                          WHERE id_satuan    = '$_POST[ID]'");
+        } else {
+            mysql_query("INSERT INTO satuan(satuan
                    ,crtdt
                    ,crtby
                    ,upddt
@@ -64,25 +54,17 @@ elseif ($module=='satuan' AND $act=='input'){
                   ,'$userid'
                   ,'$datetime'
                   ,'$userid'
-                    ,'$_POST[aktif]')");
-  
-                
-   }
-   
-
-   //header('location:../../main.php?module='.$module.'&id_module='.$id_module);          
-
-  ?>
+                    ,'$_POST[aktif]')");
+        }
+
+        //header('location:../../main.php?module='.$module.'&id_module='.$id_module); ?>
    
   <script language="javascript">
-     window.parent.location.href = "<?php echo"./../../main.php?module=$module&id_module=$id_module";?>";  
+     window.parent.location.href = "<?php echo"./../../main.php?module=$module&id_module=$id_module"; ?>";  
      window.parent.tb_remove();
    </script>
   
-  <?php                               
- 
-
-}
-
-}
+  <?php
+    }
+}
 ?>
diff --git a/modul/mod_satuan/form_satuan.php b/modul/mod_satuan/form_satuan.php
index ea6640d07d769582714e30a6801e7cf8c8640234..a9768584a543811474f8620ebc8584c363a14a9b 100755
--- a/modul/mod_satuan/form_satuan.php
+++ b/modul/mod_satuan/form_satuan.php
@@ -1,10 +1,9 @@
-<?
-session_start();
-if (empty($_SESSION['username']) AND empty($_SESSION['password'])){
-  echo "<script>window.alert('Please login first.'); window.location=('../../index.php.php')</script>";
-} else{
-include "./../../config/koneksi.php";
-?>
+<?php
+session_start();
+if (empty($_SESSION['username']) and empty($_SESSION['password'])) {
+    echo "<script>window.alert('Please login first.'); window.location=('../../index.php.php')</script>";
+} else {
+    include './../../config/koneksi.php'; ?>
 <!doctype html>
 <html>
 <head>
@@ -32,41 +31,37 @@ include "./../../config/koneksi.php";
 </head>
 
 <body style='background-color:#fff;'>
-<?
-
-$modul = $_GET['module'];
-$title = $_GET['title'];
-
-$role   = $_SESSION['role'];
-
-$id_module = $_GET['id_module']; 
-
-  $id = isset($_GET['id_satuan']) ? intval($_GET['id_satuan']) : false;
-  
-  if($id){
-     $query = mysql_query('SELECT * FROM satuan WHERE id_satuan = "'.$id.'"');
-     if($query && mysql_num_rows($query) == 1){
-        $data = mysql_fetch_object($query);
-     }else 
-        die('Data modul tidak ditemukan');
-  }
-  
-if ($_GET['igroup']) {
-  $group  = $_GET['igroup'];
-} else {
-  $group  = $data->id_satuan;
-  
-}
-
-if ($_GET['imenu']) {
-  $imenu  = $_GET['imenu'];
-} else {
-  $imenu  = $data->id_modul;  
-  
-}
-
-  
-?>
+<?php
+
+$modul = $_GET['module'];
+    $title = $_GET['title'];
+
+    $role = $_SESSION['role'];
+
+    $id_module = $_GET['id_module'];
+
+    $id = isset($_GET['id_satuan']) ? intval($_GET['id_satuan']) : false;
+
+    if ($id) {
+        $query = mysql_query('SELECT * FROM satuan WHERE id_satuan = "'.$id.'"');
+        if ($query && mysql_num_rows($query) == 1) {
+            $data = mysql_fetch_object($query);
+        } else {
+            die('Data modul tidak ditemukan');
+        }
+    }
+
+    if ($_GET['igroup']) {
+        $group = $_GET['igroup'];
+    } else {
+        $group = $data->id_satuan;
+    }
+
+    if ($_GET['imenu']) {
+        $imenu = $_GET['imenu'];
+    } else {
+        $imenu = $data->id_modul;
+    } ?>
 
 
 <div class="ix_panel">
@@ -83,9 +78,11 @@ if ($_GET['imenu']) {
           </div>
 
         
-          <?php if ($id){ ?>  
+          <?php if ($id) {
+        ?>  
     
-            <?php if (@$data->aktif=='Y'){ ?>
+            <?php if (@$data->aktif == 'Y') {
+            ?>
               
                 <div class="form-group">
 	               <label class="control-label col-md-3 col-sm-3 col-xs-12" style='padding-top:10px;'>Aktif :</label>
@@ -94,7 +91,9 @@ if ($_GET['imenu']) {
                     <input type=radio name='aktif' value='N' class="flat"> T                
                   </div>
               </div>  
-            <?php   }else{ ?>  
+            <?php
+        } else {
+            ?>  
               
                 <div class="form-group">
 	               <label class="control-label col-md-3 col-sm-3 col-xs-12" style='padding-top:10px;'>Aktif :</label>
@@ -103,9 +102,12 @@ if ($_GET['imenu']) {
                     <input type=radio name='aktif' value='N' class="flat" checked> T          
                   </div>
               </div>  
-             <?php } ?>
+             <?php
+        } ?>
 
-        <?php   }else{ ?>  
+        <?php
+    } else {
+        ?>  
 
            
                 <div class="form-group">
@@ -116,7 +118,8 @@ if ($_GET['imenu']) {
                   </div>
               </div>  
 
-        <?php } ?>
+        <?php
+    } ?>
 
 
 
@@ -335,6 +338,6 @@ if ($_GET['imenu']) {
 
 </body>
 </html>
-<?
-}
+<?php
+}
 ?>
\ No newline at end of file
diff --git a/modul/mod_user/aksi_user.php b/modul/mod_user/aksi_user.php
index 588b74d2d5b4dbc6af65bbadc62b3fcf2dcaa993..a20da1e02ea16907489946d521f1e85099ec2971 100755
--- a/modul/mod_user/aksi_user.php
+++ b/modul/mod_user/aksi_user.php
@@ -1,79 +1,70 @@
-<?php
-session_start();
-if (empty($_SESSION['username']) AND empty($_SESSION['password'])){
-  echo "<script>window.alert('Please login first.'); window.location=('../../index.php.php')</script>";
-} else{
-include "./../../config/koneksi.php";
-include "./../../config/fungsi_thumb.php";
-
-$module=$_GET[module];
-$act=$_GET[act];
-
-$date     = date("d/m/Y");  
-$idate    = date("Y-m-d");
-$hour = time() - (1 * 1 * 60 * 60);
-$datetime   = date("Y-m-d G:i:s", $hour);
-$userid   = $_SESSION['userid'];
-
-
-// Hapus modul
-if ($module=='user' AND $act=='hapus'){
-  $id = $_GET['id'];
-  $id_module = $_GET['id_module'];
-   
-  mysql_query("DELETE FROM ".$module." WHERE id_".$module." = '$id'");
-
-  header('location:../../main.php?module='.$module.'&id_module='.$id_module);          
-
-   
- }
-
-  // Input group
-elseif ($module=='user' AND $act=='input'){
-
-  $id_module = $_POST['id_module'];
-
-  $lokasi_file    = $_FILES['fupload']['tmp_name'];
-  $tipe_file      = $_FILES['fupload']['type'];
-  $nama_file      = $_FILES['fupload']['name'];
-  $acak           = rand(1,99);
-  $nama_file_unik = $acak.$nama_file; 
-
-
-  $pass=$_POST[password];
-    
-    
-  if($_POST['r_input'] == 'Y') {
-    $r_input =  'Y';
-  } else {
-    $r_input =  'N';
-  } 
-    
-  if($_POST['r_edit'] == 'Y') {
-    $r_edit = 'Y';
-  } else {
-    $r_edit = 'N';
-  }
-  
-  if($_POST['r_delete'] == 'Y') {
-    $r_delete = 'Y';
-  } else {
-    $r_delete = 'N';
-  }     
-
-  if($_POST['r_admin'] == 'Y') {
-    $r_admin = 'Y';
-  } else {
-    $r_admin = 'N';
-  }           
-                      
-   if($_POST['ID']){
-
-    if (empty($_POST['password'])) {
-                         
-      if (empty($lokasi_file)){
-                         
-        mysql_query("UPDATE user SET  username      = '$_POST[username]'
+<?php
+session_start();
+if (empty($_SESSION['username']) and empty($_SESSION['password'])) {
+    echo "<script>window.alert('Please login first.'); window.location=('../../index.php.php')</script>";
+} else {
+    include './../../config/koneksi.php';
+    include './../../config/fungsi_thumb.php';
+
+    $module = $_GET[module];
+    $act = $_GET[act];
+
+    $date = date('d/m/Y');
+    $idate = date('Y-m-d');
+    $hour = time() - (1 * 1 * 60 * 60);
+    $datetime = date('Y-m-d G:i:s', $hour);
+    $userid = $_SESSION['userid'];
+
+    // Hapus modul
+    if ($module == 'user' and $act == 'hapus') {
+        $id = $_GET['id'];
+        $id_module = $_GET['id_module'];
+
+        mysql_query('DELETE FROM '.$module.' WHERE id_'.$module." = '$id'");
+
+        header('location:../../main.php?module='.$module.'&id_module='.$id_module);
+    }
+
+    // Input group
+    elseif ($module == 'user' and $act == 'input') {
+        $id_module = $_POST['id_module'];
+
+        $lokasi_file = $_FILES['fupload']['tmp_name'];
+        $tipe_file = $_FILES['fupload']['type'];
+        $nama_file = $_FILES['fupload']['name'];
+        $acak = rand(1, 99);
+        $nama_file_unik = $acak.$nama_file;
+
+        $pass = $_POST[password];
+
+        if ($_POST['r_input'] == 'Y') {
+            $r_input = 'Y';
+        } else {
+            $r_input = 'N';
+        }
+
+        if ($_POST['r_edit'] == 'Y') {
+            $r_edit = 'Y';
+        } else {
+            $r_edit = 'N';
+        }
+
+        if ($_POST['r_delete'] == 'Y') {
+            $r_delete = 'Y';
+        } else {
+            $r_delete = 'N';
+        }
+
+        if ($_POST['r_admin'] == 'Y') {
+            $r_admin = 'Y';
+        } else {
+            $r_admin = 'N';
+        }
+
+        if ($_POST['ID']) {
+            if (empty($_POST['password'])) {
+                if (empty($lokasi_file)) {
+                    mysql_query("UPDATE user SET  username      = '$_POST[username]'
                        ,id_groups     = '$_POST[groups]'  
                        ,nik           = '$_POST[nik]'  
                        ,r_input     = '$r_input'  
@@ -83,11 +74,10 @@ elseif ($module=='user' AND $act=='input'){
                        ,upddt       = '$datetime' 
                        ,updby       = '$userid' 
                        ,aktif         = '$_POST[aktif]'
-                     WHERE id_user        = '$_POST[ID]'");
-      } else {
-
-           ProfileImage($nama_file_unik);
-           mysql_query("UPDATE user SET  username      = '$_POST[username]'
+                     WHERE id_user        = '$_POST[ID]'");
+                } else {
+                    ProfileImage($nama_file_unik);
+                    mysql_query("UPDATE user SET  username      = '$_POST[username]'
                        ,id_groups     = '$_POST[groups]'  
                        ,nik           = '$_POST[nik]'  
                        ,r_input     = '$r_input'  
@@ -98,20 +88,17 @@ elseif ($module=='user' AND $act=='input'){
                        ,upddt       = '$datetime' 
                          ,updby       = '$userid' 
                          ,aktif         = '$_POST[aktif]'
-                     WHERE id_user        = '$_POST[ID]'");
-
-      }  
-  
-    }
-    // Apabila password diubah
-    else{
-      
-    //$pass=md5($_POST[password]);
-    $pass=$_POST[password];
-    
-    
-      if (empty($lokasi_file)){
-          mysql_query("UPDATE user SET password     = '$pass'
+                     WHERE id_user        = '$_POST[ID]'");
+                }
+            }
+            // Apabila password diubah
+            else {
+
+    //$pass=md5($_POST[password]);
+                $pass = $_POST[password];
+
+                if (empty($lokasi_file)) {
+                    mysql_query("UPDATE user SET password     = '$pass'
                          ,username    = '$_POST[username]'
                          ,id_groups   = '$_POST[groups]'  
                          ,nik           = '$_POST[nik]'  
@@ -122,11 +109,10 @@ elseif ($module=='user' AND $act=='input'){
                          ,upddt     = '$datetime' 
                          ,updby     = '$userid' 
                          ,aktif       = '$_POST[aktif]'      
-                       WHERE id_user      = '$_POST[ID]'");
-       } else {
-
-           ProfileImage($nama_file_unik);
-           mysql_query("UPDATE user SET password     = '$pass'
+                       WHERE id_user      = '$_POST[ID]'");
+                } else {
+                    ProfileImage($nama_file_unik);
+                    mysql_query("UPDATE user SET password     = '$pass'
                          ,username    = '$_POST[username]'
                          ,id_groups   = '$_POST[groups]'  
                          ,nik           = '$_POST[nik]'  
@@ -138,19 +124,14 @@ elseif ($module=='user' AND $act=='input'){
                          ,upddt     = '$datetime' 
                          ,updby     = '$userid' 
                          ,aktif       = '$_POST[aktif]'      
-                       WHERE id_user      = '$_POST[ID]'");
-
-       }   
-  
-    }
-     
-   } else {
-
-  if (!empty($lokasi_file)){
-
-        ProfileImage($nama_file_unik);
-
-        mysql_query("INSERT INTO user (id_user
+                       WHERE id_user      = '$_POST[ID]'");
+                }
+            }
+        } else {
+            if (!empty($lokasi_file)) {
+                ProfileImage($nama_file_unik);
+
+                mysql_query("INSERT INTO user (id_user
                         ,username
                         ,password      
                         ,nik
@@ -179,11 +160,9 @@ elseif ($module=='user' AND $act=='input'){
                        ,'$userid'
                        ,'$datetime'
                        ,'$userid'
-                       ,'$_POST[aktif]')"); 
-
-  } else {  
-
-       mysql_query("INSERT INTO user (id_user
+                       ,'$_POST[aktif]')");
+            } else {
+                mysql_query("INSERT INTO user (id_user
                         ,username
                         ,password     
                         ,nik 
@@ -212,25 +191,18 @@ elseif ($module=='user' AND $act=='input'){
                        ,'$userid'
                        ,'$datetime'
                        ,'$userid'
-                       ,'$_POST[aktif]')"); 
-
-      }                               
-                      
-  }
-
-   //header('location:../../main.php?module='.$module.'&id_module='.$id_module);          
-
-  ?>
+                       ,'$_POST[aktif]')");
+            }
+        }
+
+        //header('location:../../main.php?module='.$module.'&id_module='.$id_module); ?>
    
   <script language="javascript">
-     window.parent.location.href = "<?php echo"./../../main.php?module=$module&id_module=$id_module";?>";  
+     window.parent.location.href = "<?php echo"./../../main.php?module=$module&id_module=$id_module"; ?>";  
      window.parent.tb_remove();
    </script>
   
-  <?php                               
- 
-
-}
-
-}
+  <?php
+    }
+}
 ?>
diff --git a/modul/mod_user/form_user.php b/modul/mod_user/form_user.php
index f359cfbfad46a1fc10edaed766f7d60871d01ec9..fa3bf0e320f17b4759464b5b88cb45799481d566 100755
--- a/modul/mod_user/form_user.php
+++ b/modul/mod_user/form_user.php
@@ -1,13 +1,12 @@
-<?
-session_start();
-if (empty($_SESSION['username']) AND empty($_SESSION['password'])){
-  echo "<script>window.alert('Please login first.'); window.location=('../../index.php.php')</script>";
-} else{
-include "./../../config/koneksi.php";
-include "./../../config/fungsi_thumb.php";
-
-$df_outlet   = $_SESSION['outlet'];  
-?>
+<?php
+session_start();
+if (empty($_SESSION['username']) and empty($_SESSION['password'])) {
+    echo "<script>window.alert('Please login first.'); window.location=('../../index.php.php')</script>";
+} else {
+    include './../../config/koneksi.php';
+    include './../../config/fungsi_thumb.php';
+
+    $df_outlet = $_SESSION['outlet']; ?>
 <!doctype html>
 <html>
 <head>
@@ -68,43 +67,39 @@ $df_outlet   = $_SESSION['outlet'];
 </head>
 
 <body style='background-color:#fff;'>
-<?
-
-$modul = $_GET['module'];
-$title = $_GET['title'];
-
-$role   = $_SESSION['role'];
-
-$id_module = $_GET['id_module']; 
-
-  $id = $_GET['id_user']; // isset($_GET['id_user']) ? intval($_GET['id_user']) : false;
-    
-    if($id){
-       $query = mysql_query('SELECT * FROM user WHERE id_user = "'.$id.'"');
-       if($query && mysql_num_rows($query) == 1){
-          $data = mysql_fetch_object($query);
-       }else 
-          die('Data user tidak ditemukan');
-    }
-  
-if ($_GET['igroup']) {
-  $group  = $_GET['igroup'];
-} else {
-  $group  = $data->id_groups;
-  
-}
-
-if ($_GET['imenu']) {
-  $imenu  = $_GET['imenu'];
-} else {
-  $imenu  = $data->id_modul;  
-  
-}
-
-$pict  = $data->pict;
-
-  
-?>
+<?php
+
+$modul = $_GET['module'];
+    $title = $_GET['title'];
+
+    $role = $_SESSION['role'];
+
+    $id_module = $_GET['id_module'];
+
+    $id = $_GET['id_user']; // isset($_GET['id_user']) ? intval($_GET['id_user']) : false;
+
+    if ($id) {
+        $query = mysql_query('SELECT * FROM user WHERE id_user = "'.$id.'"');
+        if ($query && mysql_num_rows($query) == 1) {
+            $data = mysql_fetch_object($query);
+        } else {
+            die('Data user tidak ditemukan');
+        }
+    }
+
+    if ($_GET['igroup']) {
+        $group = $_GET['igroup'];
+    } else {
+        $group = $data->id_groups;
+    }
+
+    if ($_GET['imenu']) {
+        $imenu = $_GET['imenu'];
+    } else {
+        $imenu = $data->id_modul;
+    }
+
+    $pict = $data->pict; ?>
 
 
 <div class="ix_panel">
@@ -125,11 +120,15 @@ $pict  = $data->pict;
           <div class="form-group">
             <label class="control-label col-md-3 col-sm-3 col-xs-12" style='padding-top:10px;'>Pengguna :</label>
               <div class="col-md-6 col-sm-6 col-xs-12" >
-                 <?php if($data->id_user)  { ?>
+                 <?php if ($data->id_user) {
+        ?>
                     <input type="text" name="id_user" value="<?php echo @$data->id_user?>" autofocus readonly required="required" class="form-control">                    
-                   <?php } else { ?>
+                   <?php
+    } else {
+        ?>
                     <input type="text" name="id_user" value="<?php echo @$data->id_user?>" autofocus required="required" class="form-control"> 
-                    <?php }  ?>
+                    <?php
+    } ?>
               </div>
           </div>
 
@@ -160,16 +159,17 @@ $pict  = $data->pict;
               <div class="col-md-6 col-sm-6 col-xs-12" >
                  <select name="groups" class="form-control" required >
                           <option value=''></option>
-                    <?
-                      $query = mysql_query('SELECT * FROM groups ORDER BY groups');
-                       if($query && mysql_num_rows($query) > 0){
-                          while($row = mysql_fetch_object($query)){
-                             echo '<option value="'.$row->id_groups.'"';
-                             if($row->id_groups == @$data->id_groups) echo ' selected';
-                             echo '>'.$row->groups.'</option>';
-                          }
-                       }        
-                    ?>
+                    <?php
+                      $query = mysql_query('SELECT * FROM groups ORDER BY groups');
+    if ($query && mysql_num_rows($query) > 0) {
+        while ($row = mysql_fetch_object($query)) {
+            echo '<option value="'.$row->id_groups.'"';
+            if ($row->id_groups == @$data->id_groups) {
+                echo ' selected';
+            }
+            echo '>'.$row->groups.'</option>';
+        }
+    } ?>
                     </select>
               </div>
   
@@ -178,45 +178,67 @@ $pict  = $data->pict;
             <label class="control-label col-md-3 col-sm-3 col-xs-12" style='padding-top:10px;'>Role :</label>
               <div class="col-md-6 col-sm-6 col-xs-12" >
 
-                <?php if($data->id_user)  { ?>
+                <?php if ($data->id_user) {
+        ?>
 
-                    <?php if($data->r_input == 'Y')  { ?>  
+                    <?php if ($data->r_input == 'Y') {
+            ?>  
                         <input checked type='checkbox' class='flat' value='Y' name='r_input' >&nbsp;<label>Input</label>  &nbsp; 
-                    <?php } else  { ?>  
+                    <?php
+        } else {
+            ?>  
                         <input  type='checkbox'  class='flat'value='Y' name='r_input' >&nbsp;<label>Input</label>  &nbsp; 
-                    <?php } ?>  
+                    <?php
+        } ?>  
                     
-                    <?php if($data->r_edit == 'Y')  { ?>  
+                    <?php if ($data->r_edit == 'Y') {
+            ?>  
                         <input checked type='checkbox' class='flat' value='Y' name='r_edit' >&nbsp;<label>Ubah</label>  &nbsp; 
-                    <?php } else  { ?>  
+                    <?php
+        } else {
+            ?>  
                         <input  type='checkbox' class='flat' value='Y' name='r_edit' >&nbsp;<label>Ubah</label>  &nbsp; 
-                    <?php } ?>         
+                    <?php
+        } ?>         
                     
-                    <?php if($data->r_delete == 'Y')  { ?>  
+                    <?php if ($data->r_delete == 'Y') {
+            ?>  
                         <input checked type='checkbox' class='flat' value='Y' name='r_delete' >&nbsp;<label>Hapus</label>   &nbsp; 
-                    <?php } else  { ?>  
+                    <?php
+        } else {
+            ?>  
                         <input  type='checkbox' class='flat' value='Y' name='r_delete' >&nbsp;<label>Hapus</label>   &nbsp; 
-                    <?php } ?> 
+                    <?php
+        } ?> 
 
-                     <?php if($data->r_admin == 'Y')  { ?>  
+                     <?php if ($data->r_admin == 'Y') {
+            ?>  
                         <input checked type='checkbox' class='flat' value='Y' name='r_admin' >&nbsp;<label>Grup Admin</label>   &nbsp; 
-                    <?php } else  { ?>  
+                    <?php
+        } else {
+            ?>  
                         <input  type='checkbox' class='flat' value='Y' name='r_admin' >&nbsp;<label>Grup Admin</label>   &nbsp; 
-                    <?php } ?> 
+                    <?php
+        } ?> 
 
-                  <?php } else { ?>
+                  <?php
+    } else {
+        ?>
                     
                     <input checked type='checkbox' value='Y' name='r_input' class="flat">&nbsp;<label>Input</label>  &nbsp; 
                     <input checked type='checkbox' value='Y' name='r_edit' class="flat">&nbsp;<label>Ubah</label>  &nbsp; 
                     <input checked type='checkbox' value='Y' name='r_delete' class="flat">&nbsp;<label>Hapus</label>  &nbsp;   
                     <input type = 'hidden' type='checkbox' value='N' name='r_admin' class="flat"> 
-                  <?php } ?>   
+                  <?php
+    } ?>   
                 </div>
 
         
-          <?php if ($id){ ?>  
+          <?php if ($id) {
+        ?>  
     
-            <?php if (@$data->aktif=='Y'){ ?>
+            <?php if (@$data->aktif == 'Y') {
+            ?>
           
                 <label class="control-label col-md-3 col-sm-3 col-xs-12" style='padding-top:10px;'>Aktif :</label>
                   <div class="col-md-6 col-sm-6 col-xs-12">
@@ -224,7 +246,9 @@ $pict  = $data->pict;
                     <input type=radio name='aktif' value='N' class="flat"> T                
                   </div>
               
-            <?php   }else{ ?>  
+            <?php
+        } else {
+            ?>  
              
                 <label class="control-label col-md-3 col-sm-3 col-xs-12" style='padding-top:10px;'>Aktif :</label>
                   <div class="col-md-6 col-sm-6 col-xs-12">
@@ -232,9 +256,12 @@ $pict  = $data->pict;
                     <input type=radio name='aktif' value='N' class="flat" checked> T          
                   </div>
           
-             <?php } ?>
+             <?php
+        } ?>
 
-        <?php   }else{ ?>  
+        <?php
+    } else {
+        ?>  
 
           
                 <label class="control-label col-md-3 col-sm-3 col-xs-12" style='padding-top:10px;'>Aktif :</label>
@@ -244,7 +271,8 @@ $pict  = $data->pict;
                   </div>
            
 
-        <?php } ?>
+        <?php
+    } ?>
 
 
         </div>        
@@ -463,13 +491,12 @@ $pict  = $data->pict;
         </script>
         <!-- /editor -->
 
-         <?php 
-         if(empty($pict)) { 
-            $ipict = 'male.png';
-           } else { 
-            $ipict = $pict;
-           } 
-           ?>
+         <?php 
+         if (empty($pict)) {
+             $ipict = 'male.png';
+         } else {
+             $ipict = $pict;
+         } ?>
 
         <script>
           var btnCust = '<button type="button" class="btn btn-default" title="Add picture tags" ' + 
@@ -488,7 +515,7 @@ $pict  = $data->pict;
               removeTitle: 'Cancel or reset changes',
               elErrorContainer: '#kv-avatar-errors',
               msgErrorClass: 'alert alert-block alert-danger',
-              defaultPreviewContent: '<img src="../../images/profile/<?php echo $ipict;?>" alt="Your Avatar" style="width:160px">',
+              defaultPreviewContent: '<img src="../../images/profile/<?php echo $ipict; ?>" alt="Your Avatar" style="width:160px">',
               layoutTemplates: {main2: '{preview} ' + ' {remove} {browse}'},
               allowedFileExtensions: ["jpg"]
           });
@@ -496,6 +523,6 @@ $pict  = $data->pict;
 
 </body>
 </html>
-<?
-}
+<?php
+}
 ?>
\ No newline at end of file
diff --git a/modul/mod_user/xform_user.php b/modul/mod_user/xform_user.php
index d76310ffd5edce659fa65047f8bb6766592afee8..53dafe4011da59c4dd47cbca67880f64a01456e9 100755
--- a/modul/mod_user/xform_user.php
+++ b/modul/mod_user/xform_user.php
@@ -1,10 +1,9 @@
-<?
-session_start();
-if (empty($_SESSION['username']) AND empty($_SESSION['password'])){
-  echo "<script>window.alert('Please login first.'); window.location=('../../index.php.php')</script>";
-} else{
-include "./../../config/koneksi.php";
-?>
+<?php
+session_start();
+if (empty($_SESSION['username']) and empty($_SESSION['password'])) {
+    echo "<script>window.alert('Please login first.'); window.location=('../../index.php.php')</script>";
+} else {
+    include './../../config/koneksi.php'; ?>
 <!doctype html>
 <html>
 <head>
@@ -49,41 +48,37 @@ include "./../../config/koneksi.php";
 </head>
 
 <body style='background-color:#fff;'>
-<?
-
-$modul = $_GET['module'];
-$title = $_GET['title'];
-
-$role   = $_SESSION['role'];
-
-$id_module = $_GET['id_module']; 
-
-  $id = $_GET['id_user']; // isset($_GET['id_user']) ? intval($_GET['id_user']) : false;
-    
-    if($id){
-       $query = mysql_query('SELECT * FROM user WHERE id_user = "'.$id.'"');
-       if($query && mysql_num_rows($query) == 1){
-          $data = mysql_fetch_object($query);
-       }else 
-          die('Data user tidak ditemukan');
-    }
-  
-if ($_GET['igroup']) {
-  $group  = $_GET['igroup'];
-} else {
-  $group  = $data->id_groups;
-  
-}
-
-if ($_GET['imenu']) {
-  $imenu  = $_GET['imenu'];
-} else {
-  $imenu  = $data->id_modul;  
-  
-}
-
-  
-?>
+<?php
+
+$modul = $_GET['module'];
+    $title = $_GET['title'];
+
+    $role = $_SESSION['role'];
+
+    $id_module = $_GET['id_module'];
+
+    $id = $_GET['id_user']; // isset($_GET['id_user']) ? intval($_GET['id_user']) : false;
+
+    if ($id) {
+        $query = mysql_query('SELECT * FROM user WHERE id_user = "'.$id.'"');
+        if ($query && mysql_num_rows($query) == 1) {
+            $data = mysql_fetch_object($query);
+        } else {
+            die('Data user tidak ditemukan');
+        }
+    }
+
+    if ($_GET['igroup']) {
+        $group = $_GET['igroup'];
+    } else {
+        $group = $data->id_groups;
+    }
+
+    if ($_GET['imenu']) {
+        $imenu = $_GET['imenu'];
+    } else {
+        $imenu = $data->id_modul;
+    } ?>
 
 
 <div class="ix_panel">
@@ -94,11 +89,15 @@ if ($_GET['imenu']) {
           
             <label class="control-label col-md-3 col-sm-3 col-xs-12" style='padding-top:10px;'>User ID :</label>
               <div class="col-md-6 col-sm-6 col-xs-12" >
-                 <?php if($data->id_user)  { ?>
+                 <?php if ($data->id_user) {
+        ?>
                     <input type="text" name="id_user" value="<?php echo @$data->id_user?>" autofocus readonly required="required" class="form-control col-md-7 col-xs-12">                    
-                   <?php } else { ?>
+                   <?php
+    } else {
+        ?>
                     <input type="text" name="id_user" value="<?php echo @$data->id_user?>" autofocus required="required" class="form-control col-md-7 col-xs-12"> 
-                    <?php }  ?>
+                    <?php
+    } ?>
               </div>
           </div>
 
@@ -121,16 +120,17 @@ if ($_GET['imenu']) {
               <div class="col-md-6 col-sm-6 col-xs-12" >
                  <select name="groups" class="form-control" required >
                           <option value=''></option>
-                    <?
-                      $query = mysql_query('SELECT * FROM groups ORDER BY groups');
-                       if($query && mysql_num_rows($query) > 0){
-                          while($row = mysql_fetch_object($query)){
-                             echo '<option value="'.$row->id_groups.'"';
-                             if($row->id_groups == @$data->id_groups) echo ' selected';
-                             echo '>'.$row->groups.'</option>';
-                          }
-                       }        
-                    ?>
+                    <?php
+                      $query = mysql_query('SELECT * FROM groups ORDER BY groups');
+    if ($query && mysql_num_rows($query) > 0) {
+        while ($row = mysql_fetch_object($query)) {
+            echo '<option value="'.$row->id_groups.'"';
+            if ($row->id_groups == @$data->id_groups) {
+                echo ' selected';
+            }
+            echo '>'.$row->groups.'</option>';
+        }
+    } ?>
                     </select>
               </div>
   
@@ -139,38 +139,56 @@ if ($_GET['imenu']) {
             <label class="control-label col-md-3 col-sm-3 col-xs-12" style='padding-top:10px;'>Role :</label>
               <div class="col-md-6 col-sm-6 col-xs-12" >
 
-                <?php if($data->id_user)  { ?>
+                <?php if ($data->id_user) {
+        ?>
 
-                    <?php if($data->r_input == 'Y')  { ?>  
+                    <?php if ($data->r_input == 'Y') {
+            ?>  
                         <input checked type='checkbox' class='flat' value='Y' name='r_input' >&nbsp;<label>Input</label>  &nbsp; 
-                    <?php } else  { ?>  
+                    <?php
+        } else {
+            ?>  
                         <input  type='checkbox'  class='flat'value='Y' name='r_input' >&nbsp;<label>Input</label>  &nbsp; 
-                    <?php } ?>  
+                    <?php
+        } ?>  
                     
-                    <?php if($data->r_edit == 'Y')  { ?>  
+                    <?php if ($data->r_edit == 'Y') {
+            ?>  
                         <input checked type='checkbox' class='flat' value='Y' name='r_edit' >&nbsp;<label>Edit</label>  &nbsp; 
-                    <?php } else  { ?>  
+                    <?php
+        } else {
+            ?>  
                         <input  type='checkbox' class='flat' value='Y' name='r_edit' >&nbsp;<label>Edit</label>  &nbsp; 
-                    <?php } ?>         
+                    <?php
+        } ?>         
                     
-                    <?php if($data->r_delete == 'Y')  { ?>  
+                    <?php if ($data->r_delete == 'Y') {
+            ?>  
                         <input checked type='checkbox' class='flat' value='Y' name='r_delete' >&nbsp;<label>Delete</label>  &nbsp; 
-                    <?php } else  { ?>  
+                    <?php
+        } else {
+            ?>  
                         <input  type='checkbox' class='flat' value='Y' name='r_delete' >&nbsp;<label>Delete</label>  &nbsp; 
-                    <?php } ?> 
-                  <?php } else { ?>
+                    <?php
+        } ?> 
+                  <?php
+    } else {
+        ?>
                     
                     <input checked type='checkbox' value='Y' name='r_input' class="flat">&nbsp;<label>Input</label>  &nbsp; 
                      <input checked type='checkbox' value='Y' name='r_edit' class="flat">&nbsp;<label>Edit</label>  &nbsp; 
                      <input checked type='checkbox' value='Y' name='r_delete' class="flat">&nbsp;<label>Delete</label>  &nbsp;   
 
-                  <?php } ?>   
+                  <?php
+    } ?>   
                 </div>
 
         
-          <?php if ($id){ ?>  
+          <?php if ($id) {
+        ?>  
     
-            <?php if (@$data->aktif=='Y'){ ?>
+            <?php if (@$data->aktif == 'Y') {
+            ?>
           
                 <label class="control-label col-md-3 col-sm-3 col-xs-12" style='padding-top:10px;'>Aktif :</label>
                   <div class="col-md-6 col-sm-6 col-xs-12">
@@ -178,7 +196,9 @@ if ($_GET['imenu']) {
                     <input type=radio name='aktif' value='N' class="flat"> T                
                   </div>
               
-            <?php   }else{ ?>  
+            <?php
+        } else {
+            ?>  
              
                 <label class="control-label col-md-3 col-sm-3 col-xs-12" style='padding-top:10px;'>Aktif :</label>
                   <div class="col-md-6 col-sm-6 col-xs-12">
@@ -186,9 +206,12 @@ if ($_GET['imenu']) {
                     <input type=radio name='aktif' value='N' class="flat" checked> T          
                   </div>
           
-             <?php } ?>
+             <?php
+        } ?>
 
-        <?php   }else{ ?>  
+        <?php
+    } else {
+        ?>  
 
           
                 <label class="control-label col-md-3 col-sm-3 col-xs-12" style='padding-top:10px;'>Aktif :</label>
@@ -198,7 +221,8 @@ if ($_GET['imenu']) {
                   </div>
            
 
-        <?php } ?>
+        <?php
+    } ?>
 
 
         </div>        
@@ -429,6 +453,6 @@ if ($_GET['imenu']) {
 
 </body>
 </html>
-<?
-}
+<?php
+}
 ?>
\ No newline at end of file
diff --git a/modul/modul/mod_approval_diskon_penjualan_barang/aksi_approval_diskon_penjualan_barang.php b/modul/modul/mod_approval_diskon_penjualan_barang/aksi_approval_diskon_penjualan_barang.php
index 592a731a2deb18a56a752dcfda403c0c8c8ccee2..41a6f95eb03d1969212b186b5312abf7618dca0a 100755
--- a/modul/modul/mod_approval_diskon_penjualan_barang/aksi_approval_diskon_penjualan_barang.php
+++ b/modul/modul/mod_approval_diskon_penjualan_barang/aksi_approval_diskon_penjualan_barang.php
@@ -1,63 +1,57 @@
-<?php
-session_start();
-if (empty($_SESSION['username']) AND empty($_SESSION['password'])){
-  echo "<script>window.alert('Please login first.'); window.location=('../../index.php.php')</script>";
-} else{
-include "./../../config/koneksi.php";
-include "./../../config/fungsi_thumb.php";
-
-$module=$_GET[module];
-$act=$_GET[act];
-
-$date     = date("d/m/Y");  
-$idate    = date("Y-m-d");
-$hour = time() - (1 * 1 * 60 * 60);
-$datetime   = date("Y-m-d G:i:s", $hour);
-$userid   = $_SESSION['userid'];
-
-
-if ($module=='approval_diskon_penjualan_barang' AND $act=='approve'){
-
- $id_module = $_POST['id_module'];
-
- $jum = $_POST['jum']-1;
- 
-  
-  for($i = 1; $i <= $jum; $i++)
-  {
-    
-  $id = $_POST['id'.$i];
-  $p_status = $_POST['p_status'.$i];
-  $status = $_POST['status'.$i];
-  $prd   = $_POST['prd'.$i];
-
-   $kode      = 'PJ';
-   $notrans   = $_POST['notrans'.$i];
-   $outlet    = $_POST['outlet'.$i];
-
-   if ($p_status == '1') {
-
-     mysql_query("UPDATE penjualan_barang_detail
+<?php
+session_start();
+if (empty($_SESSION['username']) and empty($_SESSION['password'])) {
+    echo "<script>window.alert('Please login first.'); window.location=('../../index.php.php')</script>";
+} else {
+    include './../../config/koneksi.php';
+    include './../../config/fungsi_thumb.php';
+
+    $module = $_GET[module];
+    $act = $_GET[act];
+
+    $date = date('d/m/Y');
+    $idate = date('Y-m-d');
+    $hour = time() - (1 * 1 * 60 * 60);
+    $datetime = date('Y-m-d G:i:s', $hour);
+    $userid = $_SESSION['userid'];
+
+    if ($module == 'approval_diskon_penjualan_barang' and $act == 'approve') {
+        $id_module = $_POST['id_module'];
+
+        $jum = $_POST['jum'] - 1;
+
+        for ($i = 1; $i <= $jum; $i++) {
+            $id = $_POST['id'.$i];
+            $p_status = $_POST['p_status'.$i];
+            $status = $_POST['status'.$i];
+            $prd = $_POST['prd'.$i];
+
+            $kode = 'PJ';
+            $notrans = $_POST['notrans'.$i];
+            $outlet = $_POST['outlet'.$i];
+
+            if ($p_status == '1') {
+                mysql_query("UPDATE penjualan_barang_detail
                     SET disc       = disc1
                       , disc_value = disc_value1      
                       ,tax_value    = ((total - (total*disc1)/100)*tax)/100      
                     WHERE id_penjualan_barang_detail = '$id'
-                    ");  
-
-     mysql_query("UPDATE penjualan_barang_detail
+                    ");
+
+                mysql_query("UPDATE penjualan_barang_detail
                     SET disc1       = 0
                       , disc_value1 = 0
                       , status_diskon =  '$p_status'            
                     WHERE id_penjualan_barang_detail = '$id'
-                    ");  
-
-      mysql_query("UPDATE penjualan_barang_detail SET gtotal   = total-disc_value+tax_value
+                    ");
+
+                mysql_query("UPDATE penjualan_barang_detail SET gtotal   = total-disc_value+tax_value
                                 ,upddt   = '$datetime' 
                                 ,updby   = '$userid' 
                             WHERE id_penjualan_barang_detail = '$id'
-                              ");  
-
-      mysql_query("UPDATE penjualan_barang as a 
+                              ");
+
+                mysql_query("UPDATE penjualan_barang as a 
                                 left join
                                   (SELECT  prd
                                     , notrans
@@ -91,40 +85,25 @@ if ($module=='approval_diskon_penjualan_barang' AND $act=='approve'){
                                 AND a.kode = '$kode' 
                                 AND a.id_outlet = '$outlet'  
                                 AND a.status = '0' 
-                          ");       
-
-
-  } else {
-     mysql_query("UPDATE penjualan_barang_detail
+                          ");
+            } else {
+                mysql_query("UPDATE penjualan_barang_detail
                     SET status_diskon =  '$p_status'            
                     WHERE id_penjualan_barang_detail = '$id'
-                    ");  
-
-  }
-
- 
-
-
-
- }
- 
-  $istatus = $_POST['istatus'];
- $prd = $_POST['prd'];
- $outlet = $_POST['outlet'];
-
-
-
-  ?>
+                    ");
+            }
+        }
+
+        $istatus = $_POST['istatus'];
+        $prd = $_POST['prd'];
+        $outlet = $_POST['outlet']; ?>
    
   <script language="javascript">
-     window.parent.location.href = "<?php echo"./../../main.php?module=$module&id_module=$id_module&outlet=$outlet&prd=$prd&istatus=$istatus";?>";  
+     window.parent.location.href = "<?php echo"./../../main.php?module=$module&id_module=$id_module&outlet=$outlet&prd=$prd&istatus=$istatus"; ?>";  
      window.parent.tb_remove();
    </script>
   
-  <?php                               
- 
-
-} 
-
-}
+  <?php
+    }
+}
 ?>
diff --git a/topmenu.php b/topmenu.php
index 6321a442b9524cf685fb0e3ee74a38fe1c685bdc..be82d3e3f50b4a1a38140140a6a97a26df5c5682 100755
--- a/topmenu.php
+++ b/topmenu.php
@@ -1,70 +1,61 @@
 
-<?php
-include "config/koneksi.php";
-
-
-$imodule = $_GET['module'];
-$imenu  = $_GET['menu'];
-$isub   = $_GET['sub'];
-
+<?php
+include 'config/koneksi.php';
+
+$imodule = $_GET['module'];
+$imenu = $_GET['menu'];
+$isub = $_GET['sub'];
+
 ?>
 
 
 <table cellpadding='0' cellspacing='0' width='100%'>
 
 <tr>
-<?
-$SQL=	"SELECT * FROM general_setting ";	
-
-		$tampil=mysql_query($SQL);
-								 
-		$r=mysql_fetch_array($tampil);
-
-		$nm_hotel = $r[hotel_name];
+<?php
+$SQL = 'SELECT * FROM general_setting ';
+
+        $tampil = mysql_query($SQL);
+
+        $r = mysql_fetch_array($tampil);
+
+        $nm_hotel = $r[hotel_name];
 ?>
 <td width='90%'>
 <div id='cssmenu'>
 
 <ul>
-	<li class='Aktif' style='font-weight:bold;color:#2969FF'><?php echo " .: ".$nm_hotel." :. " ?> &nbsp</li>
-
-	
-   <?php
+	<li class='Aktif' style='font-weight:bold;color:#2969FF'><?php echo ' .: '.$nm_hotel.' :. ' ?> &nbsp</li>
 
-   	$user = $_SESSION['userid'];
-
-
-		  $sql=mysql_query("select * from modul where aktif='Y' order by urutan");
-
-		 
-	while ($r=mysql_fetch_array($sql)){  
-	
-	 if ($r[status_menu] == 'M' and !empty($r[link])) {  
-		 echo "<li class='Aktif'><a href='$r[link]&menu=$r[nama_modul]'>$r[nama_modul]</a>";	    
-	   
-	  } else if ($r[status_menu] == 'M' and empty($r[link])) {  	
-	  echo "<li class='Aktif'><a href='#'>$r[nama_modul]</a>";
-	  
-	  }
 	
-	echo"<ul>";
-	
-			$detil=mysql_query("select * from modul where parentid='$r[id_modul]' and status_menu='C' and aktif='Y' order by urutan"); 
-		
-		while ($d=mysql_fetch_array($detil)){  
-
-		if ($d[is_form] == 'Y')	{
-			echo"<li><a href='form/form_$d[link].php?width=850&height=600&module=$d[link]&imodule=$imodule&imenu=$imenu&isub=$isub&TB_iframe=true' title='$d[nama_modul]' class='thickbox' >$d[nama_modul]</a></li>"; 	 						
-		} else {
-			echo"<li><a href='$d[link]&menu=$r[nama_modul]&sub=$d[nama_modul]'>$d[nama_modul]</a></li>";
-			
-		}
-		
-		}
-		
-	echo"</ul>";	
-	}  
-  
+   <?php
+
+    $user = $_SESSION['userid'];
+
+          $sql = mysql_query("select * from modul where aktif='Y' order by urutan");
+
+    while ($r = mysql_fetch_array($sql)) {
+        if ($r[status_menu] == 'M' and !empty($r[link])) {
+            echo "<li class='Aktif'><a href='$r[link]&menu=$r[nama_modul]'>$r[nama_modul]</a>";
+        } elseif ($r[status_menu] == 'M' and empty($r[link])) {
+            echo "<li class='Aktif'><a href='#'>$r[nama_modul]</a>";
+        }
+
+        echo'<ul>';
+
+        $detil = mysql_query("select * from modul where parentid='$r[id_modul]' and status_menu='C' and aktif='Y' order by urutan");
+
+        while ($d = mysql_fetch_array($detil)) {
+            if ($d[is_form] == 'Y') {
+                echo"<li><a href='form/form_$d[link].php?width=850&height=600&module=$d[link]&imodule=$imodule&imenu=$imenu&isub=$isub&TB_iframe=true' title='$d[nama_modul]' class='thickbox' >$d[nama_modul]</a></li>";
+            } else {
+                echo"<li><a href='$d[link]&menu=$r[nama_modul]&sub=$d[nama_modul]'>$d[nama_modul]</a></li>";
+            }
+        }
+
+        echo'</ul>';
+    }
+
   ?>
   
   
